{"version":3,"sources":["webpack://phenix/webpack/universalModuleDefinition","webpack://phenix/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://phenix/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://phenix/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://phenix/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://phenix/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://phenix/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://phenix/./node_modules/@babel/runtime/helpers/createClass.js","webpack://phenix/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://phenix/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://phenix/./node_modules/@babel/runtime/helpers/inherits.js","webpack://phenix/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://phenix/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://phenix/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://phenix/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://phenix/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://phenix/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://phenix/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://phenix/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://phenix/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://phenix/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://phenix/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://phenix/./node_modules/@babel/runtime/helpers/typeof.js","webpack://phenix/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://phenix/./node_modules/@babel/runtime/regenerator/index.js","webpack://phenix/./src/promise/PromiseHandler.ts","webpack://phenix/./src/promise/Promise.ts","webpack://phenix/./src/logger/Logger.ts","webpack://phenix/./src/logger/Appenders.ts","webpack://phenix/./src/dom/PrivacyMode.ts","webpack://phenix/./src/logger/LoggerDefaults.ts","webpack://phenix/./src/logger/LoggingThreshold.ts","webpack://phenix/./src/logger/ConsoleAppender.ts","webpack://phenix/./src/sdk/version/VersionManager.ts","webpack://phenix/./src/telemetry/TelemetryService.ts","webpack://phenix/./src/metrics/MetricsConfiguration.ts","webpack://phenix/./src/telemetry/TelemetryApender.ts","webpack://phenix/./src/telemetry/TelemetryConfiguration.ts","webpack://phenix/./src/metrics/TelemetryDefault.ts","webpack://phenix/./src/lang/assertUnreachable.ts","webpack://phenix/./src/metrics/TelemetricLevelMapping.ts","webpack://phenix/./src/logger/LoggingLevelMapping.ts","webpack://phenix/./src/dom/ConfigurationParameterReader.ts","webpack://phenix/./src/logger/LoggerFactory.ts","webpack://phenix/./src/lang/Strings.ts","webpack://phenix/./src/lang/Disposable.ts","webpack://phenix/./src/rx/Subject.ts","webpack://phenix/./src/rx/ReadOnlySubject.ts","webpack://phenix/./src/dom/BrowserDetector.ts","webpack://phenix/./src/sdk/feature/FeatureEnablement.ts","webpack://phenix/./src/rtc/VanillaPeerConnection.ts","webpack://phenix/./src/rtc/VanillaPeerConnectionFactory.ts","webpack://phenix/./src/sdk/edgeAuth/EdgeAuth.ts","webpack://phenix/./src/metrics/MetricsType.ts","webpack://phenix/./src/lang/DisposableList.ts","webpack://phenix/./src/dom/ApplicationActivityMonitor.ts","webpack://phenix/./src/sdk/TelemetryUrl.ts","webpack://phenix/./src/sdk/Environment.ts","webpack://phenix/./src/sdk/discovery/DiscoveryUri.ts","webpack://phenix/./src/sdk/defaults.ts","webpack://phenix/./src/metrics/MetricType.ts","webpack://phenix/./src/metrics/MetricsService.ts","webpack://phenix/./src/metrics/MetricsFactory.ts","webpack://phenix/./src/sdk/SDK.ts","webpack://phenix/./src/sdk/publish/PublisherState.ts","webpack://phenix/./src/time/Duration.ts","webpack://phenix/./src/dom/StreamSetupListener.ts","webpack://phenix/./src/dom/NetworkMonitor.ts","webpack://phenix/./src/video/SessionTelemetry.ts","webpack://phenix/./src/context/TokenContext.ts","webpack://phenix/./src/sdk/publish/PublisherContext.ts","webpack://phenix/./src/context/PeerConnectionContext.ts","webpack://phenix/./src/context/StateContext.ts","webpack://phenix/./src/rtc/PeerConnectionService.ts","webpack://phenix/./src/sdk/api/SetTemporaryMaximalBitrate.ts","webpack://phenix/./src/sdk/discovery/BitrateModeMapping.ts","webpack://phenix/./src/sdk/discovery/BitrateStateMapping.ts","webpack://phenix/./src/sdk/discovery/EndPoint.ts","webpack://phenix/./src/sdk/discovery/DiscoveryService.ts","webpack://phenix/./src/sdk/discovery/Discovery.ts","webpack://phenix/./src/rtc/SdpParser.ts","webpack://phenix/./src/rtc/RtcPublishMonitor.ts","webpack://phenix/./src/rtc/RtcConfigurationManager.ts","webpack://phenix/./src/sdk/publish/RealTimePublisher.ts","webpack://phenix/./src/sdk/publish/Publisher.ts","webpack://phenix/./src/sdk/publish/Publishers.ts","webpack://phenix/./src/sdk/publish/index.ts","webpack://phenix/webpack/bootstrap","webpack://phenix/webpack/startup","webpack://phenix/webpack/runtime/compat get default export","webpack://phenix/webpack/runtime/define property getters","webpack://phenix/webpack/runtime/hasOwnProperty shorthand","webpack://phenix/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","self","arr","len","length","i","arr2","Array","__esModule","isArray","arrayLikeToArray","ReferenceError","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","this","args","arguments","apply","err","undefined","instance","Constructor","TypeError","toPropertyKey","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","prototype","obj","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","bind","__proto__","subClass","superClass","create","constructor","iter","Symbol","iterator","from","_i","_s","_e","_x","_r","_arr","_n","_d","call","next","push","_typeof","assertThisInitialized","_regeneratorRuntime","Op","hasOwn","hasOwnProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","Error","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","displayName","isGeneratorFunction","genFun","ctor","name","mark","awrap","async","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_setPrototypeOf","p","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","input","hint","prim","toPrimitive","res","String","Number","minLen","n","toString","test","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","PromiseHandler","onFulfilled","onRejected","promise","callback","_state","_handled","_value","_deferreds","doResolve","promiseResolve","reason","promiseReject","newValue","finale","e","_immediate","_unhandledRejection","deferred","remaining","manageResponse","_","setTimeout","console","warn","LoggingLevel","Logger","category","appenders","threshold","_category","_appenders","_threshold","Trace","log","Debug","Info","Warn","Fatal","level","date","Date","message","replacePlaceholders","appender","replacePlaceholdersString","index","indexOf","substring","replaceArgument","splice","stringify","reduce","accumulator","currentValue","array","stack","cache","JSON","includes","argument","data","toStringStr","Appenders","items","item","PrivacyMode","_isPrivate","__PRIVACY_MODE__","applyIsPrivate","LoggerDefaults","isPrivate","Off","All","LoggingThreshold","defaultLoggingLevel","ConsoleAppender","logLevel","fullMessage","toISOString","VersionManager","__SDKVERSION__","_defaultVersion","TelemetryLevel","TelemetryService","telemetryConfiguration","location","hostname","_telemetryConfiguration","timestamp","logRecord","tenancy","sessionId","version","sdkVersion","environment","fullQualifiedName","_domain","_logs","unshift","sendLogsIfAble","logMessages","formData","FormData","append","records","fetch","url","body","_isSending","numberOfLogsToSend","sizeOfLogsToSend","getLogSize","sum","sendLogs","response","catch","TelemetryAppender","_tenancy","_sessionId","_telemetryService","TelemetryConfiguration","defaultTelemetryLoggingLevel","_url","telemetryUrl","URL","pathname","_environment","MetricsConfiguration","TelemetryDefault","defaultTelemetryLevel","metricsUrl","Essential","x","TelemetryLevelMapping","telemetryLevel","assertUnreachable","telemetryLevelType","LoggingLevelMapping","loggingLevel","loggingLevelType","ConfigurationParameterReader","readConfigurationParameterValue","readConfigurationParameterURIValue","defaultStringValue","defaultBooleanValue","convertTelemetryLevelToTelemetryLevelType","convertLoggingLevelToLoggingLevelType","defaultConsoleLoggingLevel","metaValue","document","querySelector","getAttribute","valueURIParameterName","URLSearchParams","search","get","LoggerFactory","_loggers","applyLoggingLevel","applyAppenderLoggingLevel","applyConsoleLogger","applyTelemetryLogger","parameterValue","_configurationParameterReader","getStringValue","setThreshold","applyAppender","add","applyLoggerConfigFromParameterConfiguration","Strings","loops","Math","ceil","fill","random","string","func","Disposable","disposable","_disposed","_disposable","DisposableListener","listeners","listener","idx","Subject","_listeners","changed","comparable","equals","ReadOnlySubject","subject","_subject","subscribe","BrowserDetector","_browserNameAndVersion","_browserName","_browserMajorVersion","_isChrome69","_isChrome70","_isChrome71","_isChrome72","_isChrome74","_isChrome75","_isChrome76","_isChrome77","navigator","userAgent","browserNameAndVersion","match","_browserNameAndVersionRegex","parseBrowserNameAndVersionForIE","browserNameList","split","browserVersionList","fullVersion","msie","parseInt","parseBrowserNameAndVersion","parseBrowserName","parseBrowserMajorVersion","FeatureEnablement","isChrome74","isChrome75","isChrome76","isChrome77","isChrome69","isChrome70","isChrome71","isChrome72","browserName","browserMajorVersion","VanillaPeerConnection","configuration","getLogger","webkitRTCPeerConnectionEnabled","_peerConnection","webkitRTCPeerConnection","RTCPeerConnection","currentLocalDescription","currentRemoteDescription","iceConnectionState","getConfiguration","setConfiguration","addTranceiverDisabled","addTransceiver","options","promiseBasedPCMethodsDisabled","createOffer","createAnswer","description","setLocalDescription","RTCSessionDescription","sdp","_logger","setRemoteDescription","getSenders","selector","getStats","addEventListener","removeEventListener","mediaStream","getTracks","track","addTrack","ontrack","handler","onicecandidate","oniceconnectionstatechange","close","VanillaPeerConnectionFactory","edgeAuthTokenPrefix","EdgeAuth","token","isValidToken","encodedEdgeAuthToken","atob","substr","edgeAuthToken","parse","parsedToken","uri","applicationId","startsWith","MetricsType","DisposableList","_list","dispose","ApplicationActivityMonitor","now","_isForeground","_readOnlyIsForeground","detectTabFocusChange","_timeOfLastTabFocusChange","_disposables","hidden","visibilityChange","msHidden","webkitHidden","handleVisibilityChange","isForeground","setFocusState","listenForDocumentFocus","_documentFocusInterval","window","setInterval","hasFocus","clearInterval","TelemetryUrl","baseURL","segments","protocol","endsWith","join","origin","Environment","DiscoveryUri","_discoveryUri","MetricType","metrics","_metrics","MetricsService","metricsConfiguration","_metricsConfiguration","metric","streamId","previousValue","resource","kind","metricType","getTelemetryLevel","metricRecord","getName","sendMetricsIfAble","metricsMessages","sendMetrics","MetricsFactory","metricsServices","_metricsServices","SDK","clientSessionId","getTelemetryUrl","getEnvironmentFromUrl","convertTelemetryLevelTypeToTelemetryLevel","metricsService","PublisherState","pageLoadTime","_sendLocalCandidates","_clientSessionId","_loadedTimestamp","_readOnlyInitialized","_readOnlyDiscoveryUri","_readOnlyPeerConnectionFactory","_automaticallyRetryOnFailure","_automaticallyReconnectPeerConnection","_automaticallyPlayMediaStream","_automaticallyMuteVideoOnPlayFailure","_webPlayerLoader","_shakaPlayerLoader","_hlsJsLoader","_metricsService","_applicationActivityMonitor","_telemetryUrl","_maximalNumberOfPeerConnectionReconnectAttempts","retriesAmount","_telemetryLevel","telemetryAppender","find","remove","getMetricsService","setTelemetryLevel","getBooleanValue","discoveryUri","channelToken","parseToken","getTenancy","getUri","uriValue","baseURIValue","_initialized","peerConnectionFactory","_peerConnectionFactory","convertLoggingLevelTypeToLoggingLevel","consoleLoggingLevel","consoleAppender","automaticallyPlayMediaStream","automaticallyMuteVideoOnPlayFailure","webPlayerLoader","shakaPlayerLoader","hlsJsLoader","applyDiscoveryUriDefaultFromParameterConfiguration","applyMetricsConfiguration","applyTelemetryConfiguration","applyAutomaticallyRetryOnFailureFromParameterConfiguration","applyAutomaticallyReconnectPeerConnectionFromParameterConfiguration","init","Durations","duration","_duration","isNegative","abs","offset","floor","milliseconds","seconds","minutes","hours","parts","padStart","targetLength","padString","repeat","StreamSetupListener","_startTime","_pageLoadTime","recordStreamMetric","_metricSubmitted","setupTime","metricName","uint64","toIsoString","NetworkMonitor","isSupported","setupNetworkChangeListeners","updateStatistics","_isSupported","_rtt","_effectiveType","_downlinkThroughputCapacity","downlink","downlinkMax","effectiveType","rtt","getRoundTripTime","getEffectiveType","getDownlinkThroughputCapacity","SessionTelemetry","applicationActivityMonitor","_networkMonitor","recordForegroundChange","recordNetworkRTTUpdate","recordNetworkTypeChangeUpdate","downlinkThroughputCapacity","recordNetworkDownlinkThroughputCapacityUpdate","timeSinceLastChange","getTimeSinceLastChange","newRTT","oldRtt","_lastNetworkStatistics","newNetworkType","oldNetworkType","newCapacity","oldCapacity","float","TokenContext","tokenExpiring","PublisherContext","disposables","publisherDisposables","publisherInitialization","authorized","online","loading","publishing","standby","stopped","failureCount","endPoint","stream","rtcStatistics","generateScreenName","status","PeerConnectionContext","peerConnection","peerConnectionReconnectAttempts","StateContext","isStarting","isDisposed","PeerConnectionService","isPrecachingEnabled","precacheCreatePeerConnectionOffer","_cached","direction","createPeerConnectionOffer","createPeerConnection","supportsAddTransceiver","audioTransceiver","videoTransceiver","localOffer","offerToReceiveAudio","offerToReceiveVideo","initiateInitialPrecaching","BitrateState","BitrateMode","BitrateModeMapping","bitrateMode","Normal","Force","Reset","BitrateStateMapping","bitrateState","Keep","apiVersion","EndPoint","timeout","_uri","_timeout","_roundTripTime","buildPingUrl","start","race","finished","ok","localSessionDescription","buildUrl","clientVersion","bodyWithOffer","httpRoundTripTime","sessionDescription","convertRTCSdpTypeToSdpType","createAnswerDescription","bodyWithoutOffer","createOfferDescription","finally","clearTimeout","httpResponse","mapHttpStatusToSubscribeStatus","convertHttpResponseToSubscribeResponse","subscribeResponse","debug","mapHttpStatusToPublishStatus","convertHttpResponseToPublishResponse","sharedSecret","mapHttpStatusToSetRemoteDescriptionStatus","convertHttpResponseToSetRemoteDescriptionResponse","setRemoteDescriptionResponse","elapsedInMilliseconds","bitrateInBitsPerSecond","convertBitrateStateToBitrateStateType","convertBitrateModeToBitrateModeType","mapHttpStatusToSetTemporaryMaximalBitrateStatus","candidates","discoveryCompleted","mapHttpStatusToAddIceCandidatesStatus","convertHttpResponseToAddIceCandidatesResponse","addIceCandidatesResponse","mapHttpStatusToSetDestroyStreamStatus","convertHttpResponseToDestroyStreamResponse","destroyStreamResponse","path","pathAsArray","concat","json","lag","rtcConfiguration","convertIRtcConfigurationToRTCConfiguration","convertISessionDescriptionToRTCSessionDescription","createAnswerDescriptionResponse","createOfferDescriptionResponse","publishResponse","bundlePolicy","iceCandidatePoolSize","iceServers","urls","username","credential","iceTransportPolicy","peerIdentity","rtcpMuxPolicy","rtcSessionDescription","destroyStream","defaultTimeout","DiscoveryService","text","asString","endPoints","map","buildDiscoveryUrl","discoverNearbyEndPoints","neverResolve","ping","time","Discovery","discoverClosestEndPointWithCaching","_cache","discoveryService","cachedValue","discoverClosestEndPoint","precacheClosestEndPointDiscovery","SdpParser","_sdp","sdpSplitByLines","sdpSplitByTracks","_audioCodec","applyCodec","_videoCodec","_isAudioTrackEnabled","isTrackByTypeEnabled","_isVideoTrackEnabled","sdpSectionForType","sdpTrack","sdpLine","RtcPublishMonitor","estimatedRoundTripTime","_estimatedRoundTripTime","parsedLocalDescription","parsedRemoteDescription","_estimatedAudioCodec","audioCodec","_estimatedVideoCodec","videoCodec","_availableTracks","audio","isAudioTrackEnabled","video","isVideoTrackEnabled","updateStatistic","_rtcStatistic","_isMonitorRunning","_updateTimeOut","getStatsPromiseBasedDisabled","getKindForSafari11","id","stats","lastPacketSentTimestamp","roundTripTime","report","currentRoundTripTime","mediaType","codec","codecId","mimeType","bytesDelta","bytesSent","timeDelta","bitrate","ssrc","packetsSent","retransmittedBytesSent","getCodecByType","firCount","frameHeight","frameWidth","framesEncoded","framesSent","headerBytesSent","hugeFramesSent","pliCount","qpSum","totalEncodeTime","totalEncodedBytesTarget","fps","round","RtcConfigurationManager","RealTimePublisher","publisherContext","peerConnectionContext","handleStreamFailure","_publisherContext","_peerConnectionContext","_handleStreamFailure","listenOnStreamSetup","all","clientOfferDisabled","supportsSetConfiguration","supportsGetConfiguration","publish","mapPublishStatusToPublisherStatus","applyStatus","applyRtcConfiguration","submitCandidatesTimeout","cancelDiscovery","addStream","sendLocalCandidates","candidate","addIceCandidates","retryCallback","onLine","reconnectPeerConnection","answer","mapSetRemoteDescriptionStatusToPublisherStatus","success","rtcPublishMonitor","rtcStatistic","statistics","rtcVideoStatistic","rtcAudioStatistic","audioTrackFailed","videoTrackFailed","optionalPeerConnection","truncateIceServers","newRtcConfiguration","maximalNumberOfPeerConnectionReconnectAttempts","automaticallyReconnectPeerConnection","iceRestart","offer","defaultStreamTerminationReason","failureCountCleanUpIntervalInMilliseconds","Publisher","_tokenContext","_stateContext","_publisherStartTime","_readOnlyToken","_readOnlyPeerConnection","_readOnlyState","_readOnlyTokenExpiring","_readOnlyAuthorized","_readOnlyOnline","_readOnlyLoading","_readOnlyPublishing","_readOnlyStandby","_readOnlyStopped","_readOnlyFailureCount","_readOnlyEndPoint","_readOnlyStream","_readOnlyRtcStatistics","_readOnlyMediaStream","_sessionTelemetry","clearFailureCountTimeout","destroyStreamOnUnmount","processStop","cleanUpResources","processStart","mediaTrack","sender","replaceTrack","handleStreamFailureCallback","streamPublisher","fail","automaticRetryOnFailure","timeoutId","getRetryInterval","min","pow","max","Publishers","initialized","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","d","a","definition","prop","r"],"mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAgB,OAAID,IAEpBD,EAAa,OAAIC,GAClB,CATD,CASGK,MAAM,WACT,M,sBCLAH,EAAOD,QALP,SAA2BK,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAC/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAAKC,EAAKD,GAAKH,EAAIG,GACnE,OAAOC,CACT,EACoCR,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,WCFzGC,EAAOD,QAHP,SAAyBK,GACvB,GAAIK,MAAME,QAAQP,GAAM,OAAOA,CACjC,EACkCJ,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,iBCHvG,IAAIa,EAAmB,EAAQ,MAI/BZ,EAAOD,QAHP,SAA4BK,GAC1B,GAAIK,MAAME,QAAQP,GAAM,OAAOQ,EAAiBR,EAClD,EACqCJ,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,WCE1GC,EAAOD,QANP,SAAgCI,GAC9B,QAAa,IAATA,EACF,MAAM,IAAIU,eAAe,6DAE3B,OAAOV,CACT,EACyCH,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,sCCN9G,SAASe,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,EAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAiBAnB,EAAOD,QAhBP,SAA2B6B,GACzB,OAAO,WACL,IAAIzB,EAAO0B,KACTC,EAAOC,UACT,OAAO,IAAIL,GAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGI,MAAM7B,EAAM2B,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,EACoClC,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,WCzBzGC,EAAOD,QALP,SAAyBoC,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,oCAExB,EACkCrC,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,iBCLvG,IAAIuC,EAAgB,EAAQ,MAC5B,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIlC,EAAI,EAAGA,EAAIkC,EAAMnC,OAAQC,IAAK,CACrC,IAAImC,EAAaD,EAAMlC,GACvBmC,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeP,EAAQF,EAAcI,EAAWtB,KAAMsB,EAC/D,CACF,CASA1C,EAAOD,QARP,SAAsBqC,EAAaY,EAAYC,GAM7C,OALID,GAAYT,EAAkBH,EAAYc,UAAWF,GACrDC,GAAaV,EAAkBH,EAAaa,GAChDH,OAAOC,eAAeX,EAAa,YAAa,CAC9CS,UAAU,IAELT,CACT,EAC+BpC,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,iBClBpG,IAAIuC,EAAgB,EAAQ,MAe5BtC,EAAOD,QAdP,SAAyBoD,EAAK/B,EAAKG,GAYjC,OAXAH,EAAMkB,EAAclB,MACT+B,EACTL,OAAOC,eAAeI,EAAK/B,EAAK,CAC9BG,MAAOA,EACPoB,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZM,EAAI/B,GAAOG,EAEN4B,CACT,EACkCnD,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,WCfvG,SAASqD,EAAgBC,GAIvB,OAHArD,EAAOD,QAAUqD,EAAkBN,OAAOQ,eAAiBR,OAAOS,eAAeC,OAAS,SAAyBH,GACjH,OAAOA,EAAEI,WAAaX,OAAOS,eAAeF,EAC9C,EAAGrD,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,QACjEqD,EAAgBC,EACzB,CACArD,EAAOD,QAAUqD,EAAiBpD,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,iBCNvG,IAAIuD,EAAiB,EAAQ,MAiB7BtD,EAAOD,QAhBP,SAAmB2D,EAAUC,GAC3B,GAA0B,mBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAItB,UAAU,sDAEtBqB,EAASR,UAAYJ,OAAOc,OAAOD,GAAcA,EAAWT,UAAW,CACrEW,YAAa,CACXtC,MAAOmC,EACPb,UAAU,EACVD,cAAc,KAGlBE,OAAOC,eAAeW,EAAU,YAAa,CAC3Cb,UAAU,IAERc,GAAYL,EAAeI,EAAUC,EAC3C,EAC4B3D,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,WCdjGC,EAAOD,QAHP,SAA0B+D,GACxB,GAAsB,oBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOrD,MAAMwD,KAAKH,EACtH,EACmC9D,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,WCwBxGC,EAAOD,QA3BP,SAA+BK,EAAKG,GAClC,IAAI2D,EAAK,MAAQ9D,EAAM,KAAO,oBAAsB2D,QAAU3D,EAAI2D,OAAOC,WAAa5D,EAAI,cAC1F,GAAI,MAAQ8D,EAAI,CACd,IAAIC,EACFC,EACAC,EACAC,EACAC,EAAO,GACPC,GAAK,EACLC,GAAK,EACP,IACE,GAAIJ,GAAMH,EAAKA,EAAGQ,KAAKtE,IAAMuE,KAAM,IAAMpE,EAAG,CAC1C,GAAIuC,OAAOoB,KAAQA,EAAI,OACvBM,GAAK,CACP,MAAO,OAASA,GAAML,EAAKE,EAAGK,KAAKR,IAAKzC,QAAU8C,EAAKK,KAAKT,EAAG5C,OAAQgD,EAAKjE,SAAWC,GAAIiE,GAAK,GASlG,CARE,MAAOvC,GACPwC,GAAK,EAAIL,EAAKnC,CAChB,CAAE,QACA,IACE,IAAKuC,GAAM,MAAQN,EAAW,SAAMI,EAAKJ,EAAW,SAAKpB,OAAOwB,KAAQA,GAAK,MAG/E,CAFE,QACA,GAAIG,EAAI,MAAML,CAChB,CACF,CACA,OAAOG,CACT,CACF,EACwCvE,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,UCxB7GC,EAAOD,QAHP,WACE,MAAM,IAAIsC,UAAU,4IACtB,EACmCrC,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,WCAxGC,EAAOD,QAHP,WACE,MAAM,IAAIsC,UAAU,uIACtB,EACqCrC,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,iBCH1G,IAAI8E,EAAU,aACVC,EAAwB,EAAQ,MASpC9E,EAAOD,QARP,SAAoCI,EAAMuE,GACxC,GAAIA,IAA2B,WAAlBG,EAAQH,IAAsC,mBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAIrC,UAAU,4DAEtB,OAAOyC,EAAsB3E,EAC/B,EAC6CH,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,sCCV9G8E,EAAU,aACd,SAASE,IACP,aACA/E,EAAOD,QAAUgF,EAAsB,WACrC,OAAOhF,CACT,EAAGC,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,QACxE,IAAIA,EAAU,CAAC,EACbiF,EAAKlC,OAAOI,UACZ+B,EAASD,EAAGE,eACZnC,EAAiBD,OAAOC,gBAAkB,SAAUI,EAAK/B,EAAK+D,GAC5DhC,EAAI/B,GAAO+D,EAAK5D,KAClB,EACA6D,EAAU,mBAAqBrB,OAASA,OAAS,CAAC,EAClDsB,EAAiBD,EAAQpB,UAAY,aACrCsB,EAAsBF,EAAQG,eAAiB,kBAC/CC,EAAoBJ,EAAQK,aAAe,gBAC7C,SAASxF,EAAOkD,EAAK/B,EAAKG,GACxB,OAAOuB,OAAOC,eAAeI,EAAK/B,EAAK,CACrCG,MAAOA,EACPoB,YAAY,EACZC,cAAc,EACdC,UAAU,IACRM,EAAI/B,EACV,CACA,IACEnB,EAAO,CAAC,EAAG,GAKb,CAJE,MAAOgC,GACPhC,EAAS,SAAgBkD,EAAK/B,EAAKG,GACjC,OAAO4B,EAAI/B,GAAOG,CACpB,CACF,CACA,SAASmE,EAAKC,EAASC,EAASzF,EAAM0F,GACpC,IAAIC,EAAiBF,GAAWA,EAAQ1C,qBAAqB6C,EAAYH,EAAUG,EACjFC,EAAYlD,OAAOc,OAAOkC,EAAe5C,WACzC+C,EAAU,IAAIC,EAAQL,GAAe,IACvC,OAAO9C,EAAeiD,EAAW,UAAW,CAC1CzE,MAAO4E,EAAiBR,EAASxF,EAAM8F,KACrCD,CACN,CACA,SAASI,EAASxE,EAAIuB,EAAK9B,GACzB,IACE,MAAO,CACLgF,KAAM,SACNhF,IAAKO,EAAG8C,KAAKvB,EAAK9B,GAOtB,CALE,MAAOY,GACP,MAAO,CACLoE,KAAM,QACNhF,IAAKY,EAET,CACF,CACAlC,EAAQ2F,KAAOA,EACf,IAAIY,EAAmB,CAAC,EACxB,SAASP,IAAa,CACtB,SAASQ,IAAqB,CAC9B,SAASC,IAA8B,CACvC,IAAIC,EAAoB,CAAC,EACzBxG,EAAOwG,EAAmBpB,GAAgB,WACxC,OAAOxD,IACT,IACA,IAAI6E,EAAW5D,OAAOS,eACpBoD,EAA0BD,GAAYA,EAASA,EAASE,EAAO,MACjED,GAA2BA,IAA4B3B,GAAMC,EAAOP,KAAKiC,EAAyBtB,KAAoBoB,EAAoBE,GAC1I,IAAIE,EAAKL,EAA2BtD,UAAY6C,EAAU7C,UAAYJ,OAAOc,OAAO6C,GACpF,SAASK,EAAsB5D,GAC7B,CAAC,OAAQ,QAAS,UAAU6D,SAAQ,SAAUC,GAC5C/G,EAAOiD,EAAW8D,GAAQ,SAAU3F,GAClC,OAAOQ,KAAKoF,QAAQD,EAAQ3F,EAC9B,GACF,GACF,CACA,SAAS6F,EAAclB,EAAWmB,GAChC,SAASC,EAAOJ,EAAQ3F,EAAKL,EAASC,GACpC,IAAIoG,EAASjB,EAASJ,EAAUgB,GAAShB,EAAW3E,GACpD,GAAI,UAAYgG,EAAOhB,KAAM,CAC3B,IAAIiB,EAASD,EAAOhG,IAClBE,EAAQ+F,EAAO/F,MACjB,OAAOA,GAAS,UAAYsD,EAAQtD,IAAU0D,EAAOP,KAAKnD,EAAO,WAAa4F,EAAYnG,QAAQO,EAAMgG,SAAS5F,MAAK,SAAUJ,GAC9H6F,EAAO,OAAQ7F,EAAOP,EAASC,EACjC,IAAG,SAAUgB,GACXmF,EAAO,QAASnF,EAAKjB,EAASC,EAChC,IAAKkG,EAAYnG,QAAQO,GAAOI,MAAK,SAAU6F,GAC7CF,EAAO/F,MAAQiG,EAAWxG,EAAQsG,EACpC,IAAG,SAAU9F,GACX,OAAO4F,EAAO,QAAS5F,EAAOR,EAASC,EACzC,GACF,CACAA,EAAOoG,EAAOhG,IAChB,CACA,IAAIoG,EACJ1E,EAAelB,KAAM,UAAW,CAC9BN,MAAO,SAAeyF,EAAQ3F,GAC5B,SAASqG,IACP,OAAO,IAAIP,GAAY,SAAUnG,EAASC,GACxCmG,EAAOJ,EAAQ3F,EAAKL,EAASC,EAC/B,GACF,CACA,OAAOwG,EAAkBA,EAAkBA,EAAgB9F,KAAK+F,EAA4BA,GAA8BA,GAC5H,GAEJ,CACA,SAASvB,EAAiBR,EAASxF,EAAM8F,GACvC,IAAI0B,EAAQ,iBACZ,OAAO,SAAUX,EAAQ3F,GACvB,GAAI,cAAgBsG,EAAO,MAAM,IAAIC,MAAM,gCAC3C,GAAI,cAAgBD,EAAO,CACzB,GAAI,UAAYX,EAAQ,MAAM3F,EAC9B,MAuEG,CACLE,WAAOW,EACPT,MAAM,EAxEN,CACA,IAAKwE,EAAQe,OAASA,EAAQf,EAAQ5E,IAAMA,IAAO,CACjD,IAAIwG,EAAW5B,EAAQ4B,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAU5B,GACnD,GAAI6B,EAAgB,CAClB,GAAIA,IAAmBxB,EAAkB,SACzC,OAAOwB,CACT,CACF,CACA,GAAI,SAAW7B,EAAQe,OAAQf,EAAQ+B,KAAO/B,EAAQgC,MAAQhC,EAAQ5E,SAAS,GAAI,UAAY4E,EAAQe,OAAQ,CAC7G,GAAI,mBAAqBW,EAAO,MAAMA,EAAQ,YAAa1B,EAAQ5E,IACnE4E,EAAQiC,kBAAkBjC,EAAQ5E,IACpC,KAAO,WAAa4E,EAAQe,QAAUf,EAAQkC,OAAO,SAAUlC,EAAQ5E,KACvEsG,EAAQ,YACR,IAAIN,EAASjB,EAAST,EAASxF,EAAM8F,GACrC,GAAI,WAAaoB,EAAOhB,KAAM,CAC5B,GAAIsB,EAAQ1B,EAAQxE,KAAO,YAAc,iBAAkB4F,EAAOhG,MAAQiF,EAAkB,SAC5F,MAAO,CACL/E,MAAO8F,EAAOhG,IACdI,KAAMwE,EAAQxE,KAElB,CACA,UAAY4F,EAAOhB,OAASsB,EAAQ,YAAa1B,EAAQe,OAAS,QAASf,EAAQ5E,IAAMgG,EAAOhG,IAClG,CACF,CACF,CACA,SAAS0G,EAAoBF,EAAU5B,GACrC,IAAImC,EAAanC,EAAQe,OACvBA,EAASa,EAAS7D,SAASoE,GAC7B,QAAIlG,IAAc8E,EAAQ,OAAOf,EAAQ4B,SAAW,KAAM,UAAYO,GAAcP,EAAS7D,SAAiB,SAAMiC,EAAQe,OAAS,SAAUf,EAAQ5E,SAAMa,EAAW6F,EAAoBF,EAAU5B,GAAU,UAAYA,EAAQe,SAAW,WAAaoB,IAAenC,EAAQe,OAAS,QAASf,EAAQ5E,IAAM,IAAIgB,UAAU,oCAAsC+F,EAAa,aAAc9B,EAClY,IAAIe,EAASjB,EAASY,EAAQa,EAAS7D,SAAUiC,EAAQ5E,KACzD,GAAI,UAAYgG,EAAOhB,KAAM,OAAOJ,EAAQe,OAAS,QAASf,EAAQ5E,IAAMgG,EAAOhG,IAAK4E,EAAQ4B,SAAW,KAAMvB,EACjH,IAAIhF,EAAO+F,EAAOhG,IAClB,OAAOC,EAAOA,EAAKG,MAAQwE,EAAQ4B,EAASQ,YAAc/G,EAAKC,MAAO0E,EAAQtB,KAAOkD,EAASS,QAAS,WAAarC,EAAQe,SAAWf,EAAQe,OAAS,OAAQf,EAAQ5E,SAAMa,GAAY+D,EAAQ4B,SAAW,KAAMvB,GAAoBhF,GAAQ2E,EAAQe,OAAS,QAASf,EAAQ5E,IAAM,IAAIgB,UAAU,oCAAqC4D,EAAQ4B,SAAW,KAAMvB,EACrW,CACA,SAASiC,EAAaC,GACpB,IAAIC,EAAQ,CACVC,OAAQF,EAAK,IAEf,KAAKA,IAASC,EAAME,SAAWH,EAAK,IAAK,KAAKA,IAASC,EAAMG,WAAaJ,EAAK,GAAIC,EAAMI,SAAWL,EAAK,IAAK3G,KAAKiH,WAAWlE,KAAK6D,EACrI,CACA,SAASM,EAAcN,GACrB,IAAIpB,EAASoB,EAAMO,YAAc,CAAC,EAClC3B,EAAOhB,KAAO,gBAAiBgB,EAAOhG,IAAKoH,EAAMO,WAAa3B,CAChE,CACA,SAASnB,EAAQL,GACfhE,KAAKiH,WAAa,CAAC,CACjBJ,OAAQ,SACN7C,EAAYkB,QAAQwB,EAAc1G,MAAOA,KAAKoH,OAAM,EAC1D,CACA,SAASrC,EAAOsC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAS7D,GAC9B,GAAI8D,EAAgB,OAAOA,EAAezE,KAAKwE,GAC/C,GAAI,mBAAqBA,EAASvE,KAAM,OAAOuE,EAC/C,IAAKE,MAAMF,EAAS5I,QAAS,CAC3B,IAAIC,GAAK,EACPoE,EAAO,SAASA,IACd,OAASpE,EAAI2I,EAAS5I,QAAS,GAAI2E,EAAOP,KAAKwE,EAAU3I,GAAI,OAAOoE,EAAKpD,MAAQ2H,EAAS3I,GAAIoE,EAAKlD,MAAO,EAAIkD,EAC9G,OAAOA,EAAKpD,WAAQW,EAAWyC,EAAKlD,MAAO,EAAIkD,CACjD,EACF,OAAOA,EAAKA,KAAOA,CACrB,CACF,CACA,MAAO,CACLA,KAAM0E,EAEV,CACA,SAASA,IACP,MAAO,CACL9H,WAAOW,EACPT,MAAM,EAEV,CACA,OAAO8E,EAAkBrD,UAAYsD,EAA4BzD,EAAe8D,EAAI,cAAe,CACjGtF,MAAOiF,EACP5D,cAAc,IACZG,EAAeyD,EAA4B,cAAe,CAC5DjF,MAAOgF,EACP3D,cAAc,IACZ2D,EAAkB+C,YAAcrJ,EAAOuG,EAA4BhB,EAAmB,qBAAsBzF,EAAQwJ,oBAAsB,SAAUC,GACtJ,IAAIC,EAAO,mBAAqBD,GAAUA,EAAO3F,YACjD,QAAS4F,IAASA,IAASlD,GAAqB,uBAAyBkD,EAAKH,aAAeG,EAAKC,MACpG,EAAG3J,EAAQ4J,KAAO,SAAUH,GAC1B,OAAO1G,OAAOQ,eAAiBR,OAAOQ,eAAekG,EAAQhD,IAA+BgD,EAAO/F,UAAY+C,EAA4BvG,EAAOuJ,EAAQhE,EAAmB,sBAAuBgE,EAAOtG,UAAYJ,OAAOc,OAAOiD,GAAK2C,CAC5O,EAAGzJ,EAAQ6J,MAAQ,SAAUvI,GAC3B,MAAO,CACLkG,QAASlG,EAEb,EAAGyF,EAAsBI,EAAchE,WAAYjD,EAAOiH,EAAchE,UAAWoC,GAAqB,WACtG,OAAOzD,IACT,IAAI9B,EAAQmH,cAAgBA,EAAenH,EAAQ8J,MAAQ,SAAUlE,EAASC,EAASzF,EAAM0F,EAAasB,QACxG,IAAWA,IAAgBA,EAAczF,GACzC,IAAIoC,EAAO,IAAIoD,EAAcxB,EAAKC,EAASC,EAASzF,EAAM0F,GAAcsB,GACxE,OAAOpH,EAAQwJ,oBAAoB3D,GAAW9B,EAAOA,EAAKa,OAAOhD,MAAK,SAAU2F,GAC9E,OAAOA,EAAO7F,KAAO6F,EAAO/F,MAAQuC,EAAKa,MAC3C,GACF,EAAGmC,EAAsBD,GAAK5G,EAAO4G,EAAIrB,EAAmB,aAAcvF,EAAO4G,EAAIxB,GAAgB,WACnG,OAAOxD,IACT,IAAI5B,EAAO4G,EAAI,YAAY,WACzB,MAAO,oBACT,IAAI9G,EAAQ+J,KAAO,SAAUC,GAC3B,IAAIC,EAASlH,OAAOiH,GAClBD,EAAO,GACT,IAAK,IAAI1I,KAAO4I,EAAQF,EAAKlF,KAAKxD,GAClC,OAAO0I,EAAKG,UAAW,SAAStF,IAC9B,KAAOmF,EAAKxJ,QAAS,CACnB,IAAIc,EAAM0I,EAAKI,MACf,GAAI9I,KAAO4I,EAAQ,OAAOrF,EAAKpD,MAAQH,EAAKuD,EAAKlD,MAAO,EAAIkD,CAC9D,CACA,OAAOA,EAAKlD,MAAO,EAAIkD,CACzB,CACF,EAAG5E,EAAQ6G,OAASA,EAAQV,EAAQhD,UAAY,CAC9CW,YAAaqC,EACb+C,MAAO,SAAekB,GACpB,GAAItI,KAAKuI,KAAO,EAAGvI,KAAK8C,KAAO,EAAG9C,KAAKmG,KAAOnG,KAAKoG,WAAQ/F,EAAWL,KAAKJ,MAAO,EAAII,KAAKgG,SAAW,KAAMhG,KAAKmF,OAAS,OAAQnF,KAAKR,SAAMa,EAAWL,KAAKiH,WAAW/B,QAAQgC,IAAiBoB,EAAe,IAAK,IAAIT,KAAQ7H,KAAM,MAAQ6H,EAAKW,OAAO,IAAMpF,EAAOP,KAAK7C,KAAM6H,KAAUN,OAAOM,EAAKY,MAAM,MAAQzI,KAAK6H,QAAQxH,EACtU,EACAqI,KAAM,WACJ1I,KAAKJ,MAAO,EACZ,IAAI+I,EAAa3I,KAAKiH,WAAW,GAAGE,WACpC,GAAI,UAAYwB,EAAWnE,KAAM,MAAMmE,EAAWnJ,IAClD,OAAOQ,KAAK4I,IACd,EACAvC,kBAAmB,SAA2BwC,GAC5C,GAAI7I,KAAKJ,KAAM,MAAMiJ,EACrB,IAAIzE,EAAUpE,KACd,SAAS8I,EAAOC,EAAKC,GACnB,OAAOxD,EAAOhB,KAAO,QAASgB,EAAOhG,IAAMqJ,EAAWzE,EAAQtB,KAAOiG,EAAKC,IAAW5E,EAAQe,OAAS,OAAQf,EAAQ5E,SAAMa,KAAc2I,CAC5I,CACA,IAAK,IAAItK,EAAIsB,KAAKiH,WAAWxI,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIkI,EAAQ5G,KAAKiH,WAAWvI,GAC1B8G,EAASoB,EAAMO,WACjB,GAAI,SAAWP,EAAMC,OAAQ,OAAOiC,EAAO,OAC3C,GAAIlC,EAAMC,QAAU7G,KAAKuI,KAAM,CAC7B,IAAIU,EAAW7F,EAAOP,KAAK+D,EAAO,YAChCsC,EAAa9F,EAAOP,KAAK+D,EAAO,cAClC,GAAIqC,GAAYC,EAAY,CAC1B,GAAIlJ,KAAKuI,KAAO3B,EAAME,SAAU,OAAOgC,EAAOlC,EAAME,UAAU,GAC9D,GAAI9G,KAAKuI,KAAO3B,EAAMG,WAAY,OAAO+B,EAAOlC,EAAMG,WACxD,MAAO,GAAIkC,GACT,GAAIjJ,KAAKuI,KAAO3B,EAAME,SAAU,OAAOgC,EAAOlC,EAAME,UAAU,OACzD,CACL,IAAKoC,EAAY,MAAM,IAAInD,MAAM,0CACjC,GAAI/F,KAAKuI,KAAO3B,EAAMG,WAAY,OAAO+B,EAAOlC,EAAMG,WACxD,CACF,CACF,CACF,EACAT,OAAQ,SAAgB9B,EAAMhF,GAC5B,IAAK,IAAId,EAAIsB,KAAKiH,WAAWxI,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIkI,EAAQ5G,KAAKiH,WAAWvI,GAC5B,GAAIkI,EAAMC,QAAU7G,KAAKuI,MAAQnF,EAAOP,KAAK+D,EAAO,eAAiB5G,KAAKuI,KAAO3B,EAAMG,WAAY,CACjG,IAAIoC,EAAevC,EACnB,KACF,CACF,CACAuC,IAAiB,UAAY3E,GAAQ,aAAeA,IAAS2E,EAAatC,QAAUrH,GAAOA,GAAO2J,EAAapC,aAAeoC,EAAe,MAC7I,IAAI3D,EAAS2D,EAAeA,EAAahC,WAAa,CAAC,EACvD,OAAO3B,EAAOhB,KAAOA,EAAMgB,EAAOhG,IAAMA,EAAK2J,GAAgBnJ,KAAKmF,OAAS,OAAQnF,KAAK8C,KAAOqG,EAAapC,WAAYtC,GAAoBzE,KAAKoJ,SAAS5D,EAC5J,EACA4D,SAAU,SAAkB5D,EAAQwB,GAClC,GAAI,UAAYxB,EAAOhB,KAAM,MAAMgB,EAAOhG,IAC1C,MAAO,UAAYgG,EAAOhB,MAAQ,aAAegB,EAAOhB,KAAOxE,KAAK8C,KAAO0C,EAAOhG,IAAM,WAAagG,EAAOhB,MAAQxE,KAAK4I,KAAO5I,KAAKR,IAAMgG,EAAOhG,IAAKQ,KAAKmF,OAAS,SAAUnF,KAAK8C,KAAO,OAAS,WAAa0C,EAAOhB,MAAQwC,IAAahH,KAAK8C,KAAOkE,GAAWvC,CACtQ,EACA4E,OAAQ,SAAgBtC,GACtB,IAAK,IAAIrI,EAAIsB,KAAKiH,WAAWxI,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIkI,EAAQ5G,KAAKiH,WAAWvI,GAC5B,GAAIkI,EAAMG,aAAeA,EAAY,OAAO/G,KAAKoJ,SAASxC,EAAMO,WAAYP,EAAMI,UAAWE,EAAcN,GAAQnC,CACrH,CACF,EACA,MAAS,SAAgBoC,GACvB,IAAK,IAAInI,EAAIsB,KAAKiH,WAAWxI,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIkI,EAAQ5G,KAAKiH,WAAWvI,GAC5B,GAAIkI,EAAMC,SAAWA,EAAQ,CAC3B,IAAIrB,EAASoB,EAAMO,WACnB,GAAI,UAAY3B,EAAOhB,KAAM,CAC3B,IAAI8E,EAAS9D,EAAOhG,IACpB0H,EAAcN,EAChB,CACA,OAAO0C,CACT,CACF,CACA,MAAM,IAAIvD,MAAM,wBAClB,EACAwD,cAAe,SAAuBlC,EAAUb,EAAYC,GAC1D,OAAOzG,KAAKgG,SAAW,CACrB7D,SAAU4C,EAAOsC,GACjBb,WAAYA,EACZC,QAASA,GACR,SAAWzG,KAAKmF,SAAWnF,KAAKR,SAAMa,GAAYoE,CACvD,GACCvG,CACL,CACAC,EAAOD,QAAUgF,EAAqB/E,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,WC/S3G,SAASsL,EAAgBhI,EAAGiI,GAK1B,OAJAtL,EAAOD,QAAUsL,EAAkBvI,OAAOQ,eAAiBR,OAAOQ,eAAeE,OAAS,SAAyBH,EAAGiI,GAEpH,OADAjI,EAAEI,UAAY6H,EACPjI,CACT,EAAGrD,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,QACjEsL,EAAgBhI,EAAGiI,EAC5B,CACAtL,EAAOD,QAAUsL,EAAiBrL,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,iBCPvG,IAAIwL,EAAiB,EAAQ,MACzBC,EAAuB,EAAQ,MAC/BC,EAA6B,EAAQ,KACrCC,EAAkB,EAAQ,KAI9B1L,EAAOD,QAHP,SAAwBK,EAAKG,GAC3B,OAAOgL,EAAenL,IAAQoL,EAAqBpL,EAAKG,IAAMkL,EAA2BrL,EAAKG,IAAMmL,GACtG,EACiC1L,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,gBCPtG,IAAI4L,EAAoB,EAAQ,MAC5BC,EAAkB,EAAQ,MAC1BH,EAA6B,EAAQ,KACrCI,EAAoB,EAAQ,MAIhC7L,EAAOD,QAHP,SAA4BK,GAC1B,OAAOuL,EAAkBvL,IAAQwL,EAAgBxL,IAAQqL,EAA2BrL,IAAQyL,GAC9F,EACqC7L,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,iBCP1G,IAAI8E,EAAU,aAWd7E,EAAOD,QAVP,SAAsB+L,EAAOC,GAC3B,GAAuB,WAAnBlH,EAAQiH,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAIE,EAAOF,EAAM/H,OAAOkI,aACxB,QAAa/J,IAAT8J,EAAoB,CACtB,IAAIE,EAAMF,EAAKtH,KAAKoH,EAAOC,GAAQ,WACnC,GAAqB,WAAjBlH,EAAQqH,GAAmB,OAAOA,EACtC,MAAM,IAAI7J,UAAU,+CACtB,CACA,OAAiB,WAAT0J,EAAoBI,OAASC,QAAQN,EAC/C,EAC+B9L,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,iBCXpG,IAAI8E,EAAU,aACVoH,EAAc,EAAQ,MAK1BjM,EAAOD,QAJP,SAAwBsB,GACtB,IAAID,EAAM6K,EAAY5K,EAAK,UAC3B,MAAwB,WAAjBwD,EAAQzD,GAAoBA,EAAM+K,OAAO/K,EAClD,EACiCpB,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,QCNtG,SAAS8E,EAAQ1B,GAGf,OAAQnD,EAAOD,QAAU8E,EAAU,mBAAqBd,QAAU,iBAAmBA,OAAOC,SAAW,SAAUb,GAC/G,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqBY,QAAUZ,EAAIU,cAAgBE,QAAUZ,IAAQY,OAAOb,UAAY,gBAAkBC,CAC1H,EAAGnD,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,QAAU8E,EAAQ1B,EAC5F,CACAnD,EAAOD,QAAU8E,EAAS7E,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,gBCT/F,IAAIa,EAAmB,EAAQ,MAS/BZ,EAAOD,QARP,SAAqCsD,EAAGgJ,GACtC,GAAKhJ,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOzC,EAAiByC,EAAGgJ,GACtD,IAAIC,EAAIxJ,OAAOI,UAAUqJ,SAAS7H,KAAKrB,GAAGiH,MAAM,GAAI,GAEpD,MADU,WAANgC,GAAkBjJ,EAAEQ,cAAayI,EAAIjJ,EAAEQ,YAAY6F,MAC7C,QAAN4C,GAAqB,QAANA,EAAoB7L,MAAMwD,KAAKZ,GACxC,cAANiJ,GAAqB,2CAA2CE,KAAKF,GAAW1L,EAAiByC,EAAGgJ,QAAxG,CALc,CAMhB,EAC8CrM,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAP,QAA4BC,EAAOD,O,iBCPnH,IAAI0M,EAAU,EAAQ,KAAR,GACdzM,EAAOD,QAAU0M,EAGjB,IACEC,mBAAqBD,CAOvB,CANE,MAAOE,GACmB,iBAAfC,WACTA,WAAWF,mBAAqBD,EAEhCI,SAAS,IAAK,yBAAdA,CAAwCJ,EAE5C,C,wICTqBK,EAAc,KAKjC,WAAYC,EAAaC,EAAYC,GAAS,oGAC5CpL,KAAKkL,YAAqC,mBAAhBA,EAA6BA,EAAc,KACrElL,KAAKmL,WAAmC,mBAAfA,EAA4BA,EAAa,KAClEnL,KAAKoL,QAAUA,CACjB,ICTIvL,EAAO,WASX,WAAYwL,GACV,GADoB,4HACdrL,gBAAgBH,GACpB,MAAM,IAAIW,UAAU,wCAGtB,GAAwB,mBAAb6K,EACT,MAAM,IAAI7K,UAAU,kBAGtBR,KAAKsL,OAAS,EACdtL,KAAKuL,UAAW,EAChBvL,KAAKwL,YAASnL,EACdL,KAAKyL,WAAa,GAElBzL,KAAK0L,UAAUL,EACjB,CAkNC,OAlNA,8BAED,SAAUA,GAA0B,WAC9BzL,GAAO,EAEX,IACEyL,GACE,SAAA3L,GACME,IAIJA,GAAO,EACP,EAAK+L,eAAejM,GACtB,IACA,SAAAkM,GACMhM,IAIJA,GAAO,EACP,EAAKiM,cAAcD,GACrB,GASJ,CAPE,MAAOjM,GACP,GAAIC,EACF,OAGFA,GAAO,EACPI,KAAK6L,cAAclM,EACrB,CACF,GAAC,4BAED,SAAemM,GACb,IAAMV,EAAUpL,KAEhB,IAEE,GAAI8L,IAAaV,EACf,MAAM,IAAI5K,UAAU,8CAGtB,GAAIsL,IAAiC,WAApB,IAAOA,IAA6C,mBAAbA,GAA0B,CAChF,IAAMhM,EAAOgM,EAAShM,KAEtB,GAAIgM,aAAoBjM,EAKtB,OAJAuL,EAAQE,OAAS,EACjBF,EAAQI,OAASM,OACjBV,EAAQW,SAGH,GAAoB,mBAATjM,EAMhB,YALAsL,EAAQM,WAAU,WAEhB5L,EAAKK,MAAM2L,EAAU5L,UACvB,GAIJ,CAEAkL,EAAQE,OAAS,EACjBF,EAAQI,OAASM,EACjBV,EAAQW,QAGV,CAFE,MAAOC,GACPZ,EAAQS,cAAcG,EACxB,CACF,GAAC,2BAED,SAAcF,GACZ9L,KAAKsL,OAAS,EACdtL,KAAKwL,OAASM,EACd9L,KAAK+L,QACP,GAAC,oBAED,WAAe,WACO,IAAhB/L,KAAKsL,QAA2C,IAA3BtL,KAAKyL,WAAWhN,QACvCoB,EAAQoM,YAAW,WACZ,EAAKV,UACR1L,EAAQqM,oBAAoB,EAAKV,OAErC,IAGF,IAAK,IAAI9M,EAAI,EAAGF,EAAMwB,KAAKyL,WAAWhN,OAAQC,EAAIF,EAAKE,IACrDsB,KAAK8I,OAAO9I,KAAKyL,WAAW/M,IAG9BsB,KAAKyL,WAAa,IACpB,GAAC,oBAED,SAAOU,GAGL,IAFA,IAAIf,EAAUpL,KAEY,IAAnBoL,EAAQE,QACbF,EAAUA,EAAQI,OAGG,IAAnBJ,EAAQE,QAMZF,EAAQG,UAAW,EACnB1L,EAAQoM,YAAW,WACjB,IAAMZ,EAA8B,IAAnBD,EAAQE,OAAea,EAASjB,YAAciB,EAAShB,WAExE,GAAiB,OAAbE,EAAJ,CAUA,IAAI5F,EAEJ,IACEA,EAAS4F,EAASD,EAAQI,OAK5B,CAJE,MAAOQ,GAGP,YAFAG,EAASf,QAAQS,cAAcG,EAGjC,CAEAG,EAASf,QAAQO,eAAelG,EAZhC,MAPyB,IAAnB2F,EAAQE,OACVa,EAASf,QAAQO,eAAeP,EAAQI,QAExCW,EAASf,QAAQS,cAAcT,EAAQI,OAiB7C,KA9BEJ,EAAQK,WAAW1I,KAAKoJ,EA+B5B,IAAC,kBAED,SAAW5N,GACT,OAAO,IAAIsB,GAAQ,SAACV,EAASC,GAC3B,IAAKR,MAAME,QAAQP,GACjB,OAAOa,EAAO,IAAIoB,UAAU,iCAG9B,IAAMP,EAAOrB,MAAMyC,UAAUoH,MAAM5F,KAAKtE,GAExC,GAAoB,IAAhB0B,EAAKxB,OACP,OAAOU,EAAQ,IA8BjB,IA3BA,IAAIiN,EAAYnM,EAAKxB,OACf4N,EAAiB,SAAjBA,EAAkB3N,EAAGgB,GACzB,IACE,GAAIA,IAA2B,WAAjB,IAAOA,IAAuC,mBAAVA,GAAuB,CACvE,IAAMI,EAAOJ,EAAMI,KAEnB,GAAoB,mBAATA,EAOT,YANAA,EAAK+C,KACHnD,GACA,SAAAA,GAAK,OAAI2M,EAAe3N,EAAGgB,EAAM,GACjCN,EAKN,CAEAa,EAAKvB,GAAKgB,EAEU,KAAd0M,GACJjN,EAAQc,EAIZ,CAFE,MAAON,GACPP,EAAOO,EACT,CACF,EAESjB,EAAI,EAAGA,EAAIuB,EAAKxB,OAAQC,IAC/B2N,EAAe3N,EAAGuB,EAAKvB,GAE3B,GACF,GAAC,qBAED,SAAegB,GACb,OAAIA,GAA0B,WAAjB,IAAOA,IAAsBA,EAAMsC,cAAgBnC,EACvDH,EAGF,IAAIG,GAAQ,SAAAV,GAAO,OAAIA,EAAQO,EAAM,GAC9C,GAAC,oBAED,SAAcA,GACZ,OAAO,IAAIG,GAAQ,SAACyM,EAAGlN,GAAM,OAAKA,EAAOM,EAAM,GACjD,GAAC,kBAED,SAAYnB,GACV,OAAO,IAAIsB,GAAQ,SAACV,EAASC,GAC3B,IAAKR,MAAME,QAAQP,GACjB,OAAOa,EAAO,IAAIoB,UAAU,kCAG9B,IAAK,IAAI9B,EAAI,EAAGF,EAAMD,EAAIE,OAAQC,EAAIF,EAAKE,IACzCmB,EAAQV,QAAQZ,EAAIG,IAAIoB,KAAKX,EAASC,EAE1C,GACF,GAAC,wBAED,SAAkBiM,GACAkB,WAAWlB,EAAU,EACvC,GAAC,iCAED,SAA2B1L,GACF,oBAAZ6M,SAA2BA,SACpCA,QAAQC,KAAK,wCAAyC9M,EAE1D,KAAC,EA1OU,GA6ObE,EAAQwB,UAAiB,MAAI,SAAS8J,GACpC,OAAOnL,KAAKF,KAAK,KAAMqL,EACzB,EAEAtL,EAAQwB,UAAgB,KAAI,SAAS6J,EAAuBC,GAC1D,IAAMC,EAAU,IAAIpL,KAAKgC,aAAY,kBAAM,IAAI,IAI/C,OAFAhC,KAAK8I,OAAO,IAAImC,EAAeC,EAAaC,EAAYC,IAEjDA,CACT,EAEAvL,EAAQwB,UAAmB,QAAI,SAASgK,GACtC,IAAMrJ,EAAchC,KAAKgC,YAEzB,OAAOhC,KAAKF,MACV,SAAAJ,GAAK,OAAIsC,EAAY7C,QAAQkM,KAAYvL,MAAK,kBAAMJ,CAAK,GAAC,IAC1D,SAAAkM,GAAM,OAAI5J,EAAY7C,QAAQkM,KAAYvL,MAAK,kBAAMkC,EAAY5C,OAAOwM,EAAO,GAAC,GAEpF,EAEA,O,oHC/PYc,E,0DASX,SATWA,OAAY,cAAZA,IAAY,kBAAZA,IAAY,kBAAZA,IAAY,gBAAZA,IAAY,gBAAZA,IAAY,kBAAZA,IAAY,kBAAZA,IAAY,eASvB,CATWA,MAAY,SAaHC,EAAM,WA8LzB,WAAYC,EAAkBC,EAAsBC,GAA6B,qGAC/E9M,KAAK+M,UAAYH,EACjB5M,KAAKgN,WAAaH,EAClB7M,KAAKiN,WAAaH,CACpB,CANC,OAMA,2BA7LD,WACE,OAAO9M,KAAK+M,SACd,GAAC,qBAED,WACE,OAAO/M,KAAKgN,UACd,GAAC,qBAED,WACE,OAAOhN,KAAKiN,UACd,GAAC,mBAED,WACE,GAAKjN,KAAKiN,WAAWvN,SAASM,KAAKiN,WAAWvN,MAAQgN,EAAaQ,OAAnE,CAEC,2BAHMjN,EAAI,yBAAJA,EAAI,gBAKXD,KAAKmN,IAAIT,EAAaQ,MAAOjN,EAF7B,CAGF,GAAC,mBAED,WACE,GAAKD,KAAKiN,WAAWvN,SAASM,KAAKiN,WAAWvN,MAAQgN,EAAaU,OAAnE,CAEC,2BAHMnN,EAAI,yBAAJA,EAAI,gBAKXD,KAAKmN,IAAIT,EAAaU,MAAOnN,EAF7B,CAGF,GAAC,kBAED,WACE,GAAKD,KAAKiN,WAAWvN,SAASM,KAAKiN,WAAWvN,MAAQgN,EAAaW,MAAnE,CAEC,2BAHKpN,EAAI,yBAAJA,EAAI,gBAKVD,KAAKmN,IAAIT,EAAaW,KAAMpN,EAF5B,CAGF,GAAC,kBAED,WACE,GAAKD,KAAKiN,WAAWvN,SAASM,KAAKiN,WAAWvN,MAAQgN,EAAaY,MAAnE,CAEC,2BAHKrN,EAAI,yBAAJA,EAAI,gBAKVD,KAAKmN,IAAIT,EAAaY,KAAMrN,EAF5B,CAGF,GAAC,mBAED,WACE,GAAKD,KAAKiN,WAAWvN,SAASM,KAAKiN,WAAWvN,MAAQgN,EAAa3G,OAAnE,CAEC,2BAHM9F,EAAI,yBAAJA,EAAI,gBAKXD,KAAKmN,IAAIT,EAAa3G,MAAO9F,EAF7B,CAGF,GAAC,mBAED,WACE,GAAKD,KAAKiN,WAAWvN,SAASM,KAAKiN,WAAWvN,MAAQgN,EAAaa,OAAnE,CAEC,2BAHMtN,EAAI,yBAAJA,EAAI,gBAKXD,KAAKmN,IAAIT,EAAaa,MAAOtN,EAF7B,CAGF,GAAC,iBAED,SAAYuN,EAAevN,GAAiB,WACpCwN,EAAO,IAAIC,KACXC,EAAU3N,KAAK4N,oBAAoB3N,GAEzCD,KAAKgN,WAAWtN,MAAMwF,SAAQ,SAAC2I,GAC7BA,EAASV,IAAIK,EAAOG,EAAS,EAAKf,SAAUa,EAC9C,GACF,GAAC,iCAED,SAA4BxN,GAI1B,IAJ6C,WACzC6N,EAA4B7N,EAAK,GACjC8N,EAAQ,EAELD,EAA0BE,SAAW/N,EAAKxB,OAAS,GAAKsP,GAAS,GAGtE,IAFAA,EAAQD,EAA0BE,QAAQ,IAAKD,IAEnC,EAGV,OAFaD,EAA0BG,UAAUF,EAAQ,EAAGA,EAAQ,IAGlE,IAAK,IAEHD,EAA4BA,EAA0BG,UAAU,EAAGF,GAASD,EAA0BG,UAAUF,EAAQ,GACxHA,IAEA,MACF,IAAK,IACL,IAAK,IAEH9N,EAAK,GAAK6N,EAA4B9N,KAAKkO,gBACzClO,KAAK0K,SAASzK,EAAK,IACnB6N,EACAC,GAEF9N,EAAKkO,OAAO,EAAG,GAEf,MACF,IAAK,IAEHlO,EAAK,GAAK6N,EAA4B9N,KAAKkO,gBACzClO,KAAKoO,UAAUnO,EAAK,IACpB6N,EACAC,GAGF9N,EAAKkO,OAAO,EAAG,GAEf,MACF,QACE,OAAOlO,EAAKyK,WAepB,OAVIzK,EAAKxB,OAAS,IAChBwB,EAAOA,EAAKoO,QAAO,SAACC,EAAaC,EAAcR,EAAOS,GACpD,OAAIT,EAAQ,IAAMS,EAAM/P,QAAU8P,aAAwBxI,MACjDuI,EAAc,KAAO,EAAK5D,SAAS6D,EAAaE,OAGlDH,EAAc,IAAH,OAAO,EAAK5D,SAAS6D,GAAa,IACtD,KAGKtO,EAAKyK,UACd,GAAC,uBAED,SAAkBlL,GAChB,IAAMkP,EAAQ,GAEd,IACE,OAAOC,KAAKP,UACV5O,aAAeuG,MAAQ/F,KAAK0K,SAASlL,GAAOA,GAC5C,SAACD,EAAKG,GACJ,GAAMA,GAASA,aAAiBuB,OAAQ,CACtC,GAAIyN,EAAME,SAASlP,GACjB,MAAO,cAGTgP,EAAM3L,KAAKrD,EACb,CAEA,OAAOA,CACT,GACA,EAIJ,CAFE,MAAOsM,GACP,MAAO,iCACT,CACF,GAAC,6BAED,SAAwB6C,EAAef,EAAmCC,GACxE,OAAOD,EAA0BG,UAAU,EAAGF,GAAS/N,KAAK0K,SAASmE,GAAYf,EAA0BG,UAAUF,EAAQ,EAC/H,GAAC,sBAED,SAAiBe,GACf,GAAoB,iBAATA,EACT,OAAOA,EAGT,GAAoB,kBAATA,EACT,OAAOA,EAAO,OAAS,QAGzB,GAAoB,iBAATA,EACT,OAAOA,EAAKpE,WAGd,IAAIqE,EAAc,GAElB,GAAID,EACF,GAAoB,mBAATA,EACTC,EAAcD,EAAKpE,gBACd,GAAIoE,aAAgB7N,OACzB,IACE8N,EAAcD,EAAKpE,UAGrB,CAFE,MAAOsB,GACP+C,EAAc,6BAChB,CAIJ,OAAOA,CACT,KAAC,EA5LwB,GChBNC,EAAS,0DACW,GAAE,CAkBxC,OAlBwC,wBAEzC,WACE,OAAOhP,KAAKgN,UACd,GAAC,iBAED,SAAIa,GACF7N,KAAKgN,WAAWjK,KAAK8K,EACvB,GAAC,oBAED,SAAOA,GACL7N,KAAKgN,WAAahN,KAAKgN,WAAWqB,QAAO,SAACY,EAAOC,GAK/C,OAJMA,IAASrB,GACboB,EAAMlM,KAAKmM,GAGND,CACT,GAAG,GACL,KAAC,EAnB2B,GCATE,EAAW,oCAa7B,OAb6B,iCAG9B,WACE,OAAOnP,KAAKoP,UACd,GAAC,4BAED,WACE,IACEpP,KAAKoP,YAAaC,CAGpB,CAFE,MAAOrD,GACPhM,KAAKoP,YAAa,CACpB,CACF,KAAC,EAb6B,GAa7B,IAbkBD,EAAW,qBAgBhCA,EAAYG,iBCjBkC,IAEzBC,EAAc,oCAWhC,OAXgC,2CACjC,WACE,OAAOJ,EAAYK,UAAY9C,EAAa+C,IAAM/C,EAAagD,GACjE,GAAC,sCAED,WACE,OAAOP,EAAYK,UAAY9C,EAAa+C,IAAM/C,EAAagD,GACjE,GAAC,wCAED,WACE,OAAOhD,EAAaW,IACtB,KAAC,EAXgC,GCAdsC,EAAgB,0DACAJ,EAAeK,oBAAmB,CAQpE,OARoE,wBAErE,WACE,OAAO5P,KAAKiN,UACd,GAAC,0BAED,SAAaH,GACX9M,KAAKiN,WAAaH,CACpB,KAAC,EATkC,GCAhB+C,EAAe,WAmBlC,WAAY/C,GAAyB,0CACnC9M,KAAKiN,WAAaH,CACpB,CAJC,OAIA,wBAlBD,SAAIgD,EAAwBnC,EAAiBf,EAAkBa,GAC7D,KAAIqC,EAAW9P,KAAKiN,YAApB,CAIA,IAAM8C,EAAc,GAAH,OAAMtC,EAAKuC,cAAa,aAAKpD,EAAQ,cAAMF,EAAaoD,GAAS,aAAKnC,GAEnFmC,EAAWpD,EAAaY,KAC1Bd,QAAQW,IAAI4C,GAKdvD,QAAQ7M,MAAMoQ,EAVd,CAWF,KAAC,EAjBiC,G,sCCDfE,EAAc,oCAShC,OATgC,kCAGjC,WACE,IACE,MAAOC,qCAGT,CAFE,MAAOlE,GACP,OAAOhM,KAAKmQ,eACd,CACF,KAAC,EATgC,GAShC,IATkBF,EAAc,mBACA,IAAIvC,MAAOsC,eCC9C,ICFYI,EDgBSC,EAAgB,WAOnC,WAAYC,GAAgD,wEAJ3B,IAAE,iDAEjBC,SAASC,UAGzBxQ,KAAKyQ,wBAA0BH,CACjC,CAiCC,MAXA,EAoDA,OA1EA,yBAED,SAAKR,EAAwBnC,EAAiBf,EAAkB8D,GAC9D,IAAMC,EAAY,CAChBD,UAAWA,EAAUV,cACrBY,QAAS5Q,KAAKyQ,wBAAwBG,QACtCpD,MAAOd,EAAaoD,GACpBlD,WACAe,UACAkD,UAAW7Q,KAAKyQ,wBAAwBI,UACxCC,QAASb,EAAec,WACxBC,YAAahR,KAAKyQ,wBAAwBO,YAC1CC,kBAAmBjR,KAAKkR,SAGtBpB,EAAWpD,EAAa3G,MAC1B/F,KAAKmR,MAAMpO,KAAK4N,GAEhB3Q,KAAKmR,MAAMC,QAAQT,GAGL3Q,KAAKqR,gBACvB,GAAC,uCAED,WAAuBC,GAA4B,uEAGmB,OAF9DC,EAAW,IAAIC,UAEZC,OAAO,WAAY9C,KAAKP,UAAU,CAACsD,QAASJ,KAAe,SAEvDK,MAAM3R,KAAKyQ,wBAAwBmB,IAAK,CACnDzM,OAAQ,OACR0M,KAAMN,IACN,wFACH,2FAED,sGACMvR,KAAKmR,MAAM1S,QAAU,GAAKuB,KAAK8R,YAAU,iDAY7C,IARIC,EAAqB,EACrBC,EAAmB,EAEvBhS,KAAK8R,YAAa,EAEZG,EAAa,SAAC9E,GAAa,OAAalM,OAAO8D,OAAOoI,GACzDkB,QAAO,SAAC6D,EAAKhD,GAAI,OAAKgD,GAAOhD,EAAOA,EAAKzQ,OAAS,EAAE,GAAE,EAAE,EAEpDuB,KAAKmR,MAAM1S,OAASsT,GAAsBE,EAAWjS,KAAKmR,MAAMY,IAAuBC,EAvEzE,MAwEnBA,GAAoBC,EAAWjS,KAAKmR,MAAMY,IAC1CA,IAWgD,OAR7CA,IACH/R,KAAKmR,MAAMY,GAAoBpE,QAAU3N,KAAKmR,MAAMY,GAAoBpE,QAAQM,UAAU,EACxFgE,EAAWjS,KAAKmR,MAAMY,KA9EL,KA8EgDE,EAAWjS,KAAKmR,MAAMY,MACzFA,EAAqB,GAGjBT,EAActR,KAAKmR,MAAM1I,MAAM,EAAGsJ,GAExC/R,KAAKmR,MAAQnR,KAAKmR,MAAM1I,MAAMsJ,GAAoB,kBAE3C/R,KAAKmS,SAASb,GAAaxR,MAAK,SAAAsS,GAKrC,OAJA,EAAKN,YAAa,EAEF,EAAKT,iBAEde,CACT,IAAGC,OAAM,WACP,EAAKP,YAAa,EAEF,EAAKT,gBACvB,KAAE,iDACH,iDAnFkC,GEbhBiB,EAAiB,WAMpC,WAAYhC,GAAgD,yIAC1DtQ,KAAKuS,SAAWjC,EAAuBM,QACvC5Q,KAAKwS,WAAalC,EAAuBO,UACzC7Q,KAAKiN,WAAaqD,EAAuBxD,UACzC9M,KAAKyS,kBAAoB,IAAIpC,EAAiBC,EAChD,CAQC,OARA,wBAED,SAAIR,EAAwBnC,EAAiBf,EAAkBa,GACzDqC,EAAW9P,KAAKiN,YAIpBjN,KAAKyS,kBAAkB1P,KAAK+M,EAAUnC,EAASf,EAAUa,EAC3D,KAAC,EAnBmC,GCFjBiF,EAAsB,oDAC1B,kDAAgD,gHAI1CnD,EAAeoD,6BAA4B,CA4C/D,OA5C+D,sBAEhE,WACE,OAAO3S,KAAK4S,IACd,EAAC,IAED,SAAQhB,GACN,IAAMiB,EAAe,IAAIC,IAAIlB,GAE7BiB,EAAaE,SAAWF,EAAaE,SAAW,QAEhD/S,KAAK4S,KAAOC,EAAanI,UAC3B,GAAC,uBAED,WACE,OAAO1K,KAAKgT,YACd,EAAC,IAED,SAAgBhC,GACdhR,KAAKgT,aAAehC,CACtB,GAAC,mBAED,WACE,OAAOhR,KAAKuS,QACd,EAAC,IAED,SAAY3B,GACV5Q,KAAKuS,SAAW3B,CAClB,GAAC,qBAED,WACE,OAAO5Q,KAAKwS,UACd,EAAC,IAED,SAAc3B,GACZ7Q,KAAKwS,WAAa3B,CACpB,GAAC,qBAED,WACE,OAAO7Q,KAAKiN,UACd,EAAC,IAED,SAAcH,GACZ9M,KAAKiN,WAAaH,CACpB,KAAC,EAjDwC,IFG1C,SAJWsD,OAAc,eAAdA,IAAc,0BAAdA,IAAc,cAIzB,CAJWA,MAAc,SAQL6C,EAAoB,oDACxB,qDAAmD,gHAI7BC,EAAiBC,sBAAqB,CA4C1E,OA5C0E,sBAE3E,WACE,OAAOnT,KAAK4S,IACd,EAAC,IAED,SAAQhB,GACN,IAAMwB,EAAa,IAAIN,IAAIlB,GAE3BwB,EAAWL,SAAWK,EAAWL,SAAW,WAE5C/S,KAAK4S,KAAOQ,EAAW1I,UACzB,GAAC,uBAED,WACE,OAAO1K,KAAKgT,YACd,EAAC,IAED,SAAgBhC,GACdhR,KAAKgT,aAAehC,CACtB,GAAC,mBAED,WACE,OAAOhR,KAAKuS,QACd,EAAC,IAED,SAAY3B,GACV5Q,KAAKuS,SAAW3B,CAClB,GAAC,qBAED,WACE,OAAO5Q,KAAKwS,UACd,EAAC,IAED,SAAc3B,GACZ7Q,KAAKwS,WAAa3B,CACpB,GAAC,qBAED,WACE,OAAO7Q,KAAKiN,UACd,EAAC,IAED,SAAcH,GACZ9M,KAAKiN,WAAaH,CACpB,KAAC,EAjDsC,GGPpBoG,EAAgB,oCAGlC,OAHkC,6CACnC,WACE,OAAO/D,EAAYK,UAAYY,EAAeiD,UAAYjD,EAAeV,GAC3E,KAAC,EAHkC,GCCrC,EAJO,SAA2B4D,GAChC,MAAM,IAAIvN,MAAM,qBAAD,OAAsBuN,EAAC,mCACxC,ECCqBC,EAAqB,oCAyBvC,OAzBuC,mEACxC,SAAiDC,GAC/C,OAAQA,GACN,KAAKpD,EAAeX,IAClB,MAAO,MACT,KAAKW,EAAeiD,UAClB,MAAO,YACT,KAAKjD,EAAeV,IAClB,MAAO,MACT,QACE+D,EAAkBD,GAExB,GAAC,uDAED,SAAiDE,GAC/C,OAAQA,GACN,IAAK,MACH,OAAOtD,EAAeX,IACxB,IAAK,YACH,OAAOW,EAAeiD,UACxB,IAAK,MACH,OAAOjD,EAAeV,IACxB,QACE+D,EAAkBC,GAExB,KAAC,EAzBuC,GCArBC,EAAmB,oCA6CrC,OA7CqC,+DACtC,SAA6CC,GAC3C,OAAQA,GACN,KAAKlH,EAAa+C,IAChB,MAAO,MACT,KAAK/C,EAAaQ,MAChB,MAAO,QACT,KAAKR,EAAaU,MAChB,MAAO,QACT,KAAKV,EAAaW,KAChB,MAAO,QACT,KAAKX,EAAaY,KAChB,MAAO,OACT,KAAKZ,EAAa3G,MAChB,MAAO,QACT,KAAK2G,EAAaa,MAChB,MAAO,QACT,KAAKb,EAAagD,IAChB,MAAO,MACT,QACE+D,EAAkBG,GAExB,GAAC,mDAED,SAA6CC,GAC3C,OAAQA,GACN,IAAK,MACH,OAAOnH,EAAa+C,IACtB,IAAK,QACH,OAAO/C,EAAaQ,MACtB,IAAK,QACH,OAAOR,EAAaU,MACtB,IAAK,OACH,OAAOV,EAAaW,KACtB,IAAK,OACH,OAAOX,EAAaY,KACtB,IAAK,QACH,OAAOZ,EAAa3G,MACtB,IAAK,QACH,OAAO2G,EAAaa,MACtB,IAAK,MACH,OAAOb,EAAagD,IACtB,QACE+D,EAAkBI,GAExB,KAAC,EA7CqC,GCEnBC,EAA4B,oCAwE9C,OAxE8C,mCAC/C,SAAejM,GACb,OAAO7H,KAAK+T,gCAAgClM,IAC1C7H,KAAKgU,mCAAmC,GAAD,OAAInM,EAAI,yBAC/C7H,KAAKiU,mBAAmBpM,EAC5B,GAAC,6BAED,SAAgBA,GACd,IAAMnI,EAAQM,KAAK+T,gCAAgClM,GAEnD,OAAInI,GAIiBM,KAAKgU,mCAAmC,GAAD,OAAInM,EAAI,wBAHjD,SAAVnI,GAA8B,MAAVA,GAA2B,OAAVA,GASJ,IAAnCM,KAAKkU,oBAAoBrM,EAClC,GAAC,8BAED,WACE,MAAO,CACL,uBAAwB0L,EAAsBY,0CAA0CjB,EAAiBC,uBACzG,uBAAwBQ,EAAoBS,sCAAsC7E,EAAeK,qBACjG,+BAAgC+D,EAAoBS,sCAAsC7E,EAAe8E,4BACzG,iCAAkCV,EAAoBS,sCAAsC7E,EAAeoD,8BAC3G,uBAAwB,GACxB,aAAc,GACd,kBAAmB,GAEvB,GAAC,+BAED,WACE,MAAO,CACL,yCAAyC,EACzC,kDAAkD,EAEtD,GAAC,6CAED,SAAwC9K,GACtC,IAAMyM,EAAYC,SAASC,cAAc,cAAD,OAAe3M,EAAI,OAE3D,GAAKyM,EAAL,CAIA,IAAM5U,EAAQ4U,EAAUG,aAAa,SAErC,GAAK/U,EAIL,OAAOA,CARP,CASF,GAAC,gDAED,SAA2CmI,GACzC,IAAM6M,EAAwB1U,KAAK+T,gCAAgClM,GAEnE,GAAK6M,EAAL,CAIA,IAAMhV,EAAQ,IAAIiV,gBAAgBpE,SAASqE,QAAQC,IAAIH,SAA0BrU,EAEjF,GAAKX,EAIL,OAAOA,CARP,CASF,KAAC,EAxE8C,GCM5BoV,EAAa,WA6DhC,aACE,MADoB,YACd,IAAI/O,MAAM,+DAClB,CAJC,OAIA,8CAxDD,WACE,OAAO+O,EAAcrE,uBACvB,GAAC,uBAED,SAAiB7D,GAOf,MANwB,iBAAbA,IACTA,EAAW,OAGEkI,EAAcC,SAASnI,KAM/BkI,EAAcC,SAASnI,GAAY,IAAID,EAAOC,EAAU5M,KAAKgN,WAAYhN,KAAKiN,YACvF,GAAC,yDAED,WACE6H,EAAcE,oBACdF,EAAcG,0BAA0B,UAAWH,EAAcI,mBAAmBvT,KAAK3B,OACzF8U,EAAcG,0BAA0B,YAAaH,EAAcK,qBAAqBxT,KAAK3B,MAC/F,GAAC,+BAED,WACE,IAAMoV,EAAiBpV,KAAKqV,8BAA8BC,eAAe,wBAErE5I,EAAa0I,IACfpV,KAAKiN,WAAWsI,aAAa7I,EAAa0I,GAI9C,GAAC,uCAED,SAAyCvN,EAAc2N,GACrD,IAAMJ,EAAiBpV,KAAKqV,8BAA8BC,eAAe,UAAD,OAAWzN,EAAI,mBAEhE,QAAnBuN,GAIJI,EAAc9I,EAAa0I,GAC7B,GAAC,gCAED,SAAkC5H,GAChCxN,KAAKgN,WAAWyI,IAAI,IAAI5F,EAAgBrC,GAAS+B,EAAe8E,4BAClE,GAAC,kCAED,SAAoC7G,GAClCxN,KAAKyQ,wBAAwB3D,UAAYU,GAAS+B,EAAeoD,6BAEjE3S,KAAKgN,WAAWyI,IAAI,IAAInD,EAAkBtS,KAAKyQ,yBACjD,KAAC,EA3D+B,GA2D/B,IA3DkBqE,EAAa,gCAC8C,IAAIhB,GAA8B,IAD7FgB,EAAa,WAEyB,CAAC,GAAC,IAFxCA,EAAa,aAGO,IAAI9F,GAAW,IAHnC8F,EAAa,aAIc,IAAInF,GAAkB,IAJjDmF,EAAa,0BAKiC,IAAIpC,GA6DvEoC,EAAcY,8CChFd,IAGqBC,EAAO,WAa1B,aACE,MADoB,YACd,IAAI5P,MAAM,yDAClB,CAJC,OAIA,gCAdD,SAActH,GACZ,IAIMmX,EAAgBC,KAAKC,KAAKrX,EAAS,IAEzC,OAAO,IAAIG,MAAMgX,GAAOG,MANG,WACzB,OAAOF,KAAKG,SAAStL,SAAS,IAAIuD,UAAU,EAAG,GACjD,IAIiDI,QAAO,SAAC4H,EAAQC,GAC/D,OAAOD,EAASC,GAClB,GAAG,IAAIjI,UAAU,EAAGxP,EACtB,KAAC,EAXyB,G,yDCEP0X,EAAU,WAI7B,WAAYC,GAAwB,wEAClCpW,KAAKqW,WAAY,EACjBrW,KAAKsW,YAAcF,CACrB,CAUC,OAVA,4BAED,WACE,IAAIpW,KAAKqW,UAMT,OAFArW,KAAKqW,WAAY,EAEVrW,KAAKsW,YAAYzT,KAAK7C,KAC/B,KAAC,EAjB4B,GCAa,IAGtCuW,EAAkB,yB,IAAA,G,EAAA,E,qZACtB,WAAYC,EAAqBC,GAAa,gCACtC,WACJ,IAAMC,EAAMF,EAAUxI,QAAQyI,GAE1BC,GAAO,GACTF,EAAUrI,OAAOuI,EAAK,EAE1B,GACF,CAAC,cATqB,CAAYP,GAYfQ,EAAO,WAI1B,WAAYjX,GAAU,oEACpBM,KAAK4W,WAAa,GAClB5W,KAAKwL,OAAS9L,CAChB,CAkCC,OAlCA,wBAwBD,WACE,OAAOM,KAAKwL,MACd,EAAC,IAxBD,SAAU9L,GACR,IAAImX,EAAU7W,KAAKwL,SAAW9L,EAE9B,GAAImX,GAAWnX,EAAO,CACpB,IAAMoX,EAAapX,EAEc,mBAAtBoX,EAAWC,SACpBF,GAAWC,EAAWC,OAAO/W,KAAKwL,QAEtC,CAEKqL,IAIL7W,KAAKwL,OAAS9L,EAEdM,KAAK4W,WAAW1R,SAAQ,SAAAuR,GACtBA,EAAS/W,EACX,IACF,GAAC,uBAMD,SAAU+W,GAKR,OAJAzW,KAAK4W,WAAW7T,KAAK0T,GAErBA,EAASzW,KAAKwL,QAEP,IAAI+K,EAAgCvW,KAAK4W,WAAYH,EAC9D,KAAC,EAzCyB,GCbPO,EAAe,WAGlC,WAAYC,GAAqB,wCAC/BjX,KAAKkX,SAAWD,CAClB,CAQC,OARA,wBAED,WACE,OAAOjX,KAAKkX,SAASxX,KACvB,GAAC,uBAED,SAAU+W,GACR,OAAOzW,KAAKkX,SAASC,UAAUV,EACjC,KAAC,EAbiC,GCJfW,EAAe,oCAkIjC,OAlIiC,6CAelC,WACE,OAAOA,EAAgBC,sBACzB,GAAC,uBAED,WACE,OAAOrX,KAAKsX,YACd,GAAC,+BAED,WACE,OAAOtX,KAAKuX,oBACd,GAAC,sBAED,WACE,OAAOH,EAAgBI,WACzB,GAAC,sBAED,WACE,OAAOJ,EAAgBK,WACzB,GAAC,sBAED,WACE,OAAOL,EAAgBM,WACzB,GAAC,sBAED,WACE,OAAON,EAAgBO,WACzB,GAAC,sBAED,WACE,OAAOP,EAAgBQ,WACzB,GAAC,sBAED,WACE,OAAOR,EAAgBS,WACzB,GAAC,sBAED,WACE,OAAOT,EAAgBU,WACzB,GAAC,sBAED,WACE,OAAOV,EAAgBW,WACzB,GAAC,wCAED,WACE,IAAKC,YAAcA,UAAUC,UAC3B,MAAO,GAGT,IAAMC,EAAwBF,UAAUC,UAAUE,MAAMf,EAAgBgB,6BAExE,OAAIF,GAAyBA,EAAsB,GAC1CA,EAAsB,GAGxBd,EAAgBiB,iCACzB,GAAC,8BAED,WACE,IAAKjB,EAAgBC,uBACnB,MAAO,GAGT,IAAMiB,EAAkBlB,EAAgBC,uBAAuBkB,MAAM,KAErE,OAAKD,GAAoBA,EAAgB,GAIlCA,EAAgB,GAHd,EAIX,GAAC,sCAED,WACE,IAAKlB,EAAgBC,uBACnB,OAAO,EAGT,IAAMmB,EAAqBpB,EAAgBC,uBAAuBkB,MAAM,KAExE,IAAKC,IAAuBA,EAAmB,GAC7C,OAAO,EAGT,IAAMC,EAAcD,EAAmB,GAEvC,OAAKC,GAIElO,OAAOkO,EAAYF,MAAM,KAAK,KAH5B,CAIX,GAAC,6CAED,WACE,IAAKP,YAAcA,UAAUC,UAC3B,MAAO,GAGT,IAAMA,EAAYD,UAAUC,UACtBS,EAAOT,EAAUjK,QAAQ,SAE/B,GAAI0K,EAAO,EAET,MAAO,MAAP,OAAaC,SAASV,EAAUhK,UAAUyK,EAAO,EAAGT,EAAUjK,QAAQ,IAAK0K,IAAQ,KAKrF,GAFgBT,EAAUjK,QAAQ,YAEpB,EAAG,CAEf,IAAM8C,EAAUmH,EAAUjK,QAAQ,OAElC,MAAO,MAAP,OAAa2K,SAASV,EAAUhK,UAAU6C,EAAU,EAAGmH,EAAUjK,QAAQ,IAAK8C,IAAW,IAC3F,CAEA,MAAO,EACT,KAAC,EAlIiC,GAkIjC,IAlIkBsG,EAAe,8BACoB,8JAA4J,IAD/LA,EAAe,yBAEeA,EAAgBwB,8BAA4B,IAF1ExB,EAAe,eAGKA,EAAgByB,oBAAkB,IAHtDzB,EAAe,uBAIaA,EAAgB0B,4BAA0B,IAJtE1B,EAAe,cAMIA,EAAgBC,uBAAuBzI,SAAS,eAAa,IANhFwI,EAAe,cAOIA,EAAgBC,uBAAuBzI,SAAS,eAAa,IAPhFwI,EAAe,cAQIA,EAAgBC,uBAAuBzI,SAAS,eAAa,IARhFwI,EAAe,cASIA,EAAgBC,uBAAuBzI,SAAS,eAAa,IAThFwI,EAAe,cAUIA,EAAgBC,uBAAuBzI,SAAS,eAAa,IAVhFwI,EAAe,cAWIA,EAAgBC,uBAAuBzI,SAAS,eAAa,IAXhFwI,EAAe,cAYIA,EAAgBC,uBAAuBzI,SAAS,eAAa,IAZhFwI,EAAe,cAaIA,EAAgBC,uBAAuBzI,SAAS,eCbhC,IAEnCmK,EAAiB,oCAqDnC,OArDmC,2CACpC,WAEE,OAAO3B,EAAgB4B,YACrB5B,EAAgB6B,YAChB7B,EAAgB8B,YAChB9B,EAAgB+B,UACpB,GAAC,iCAED,WAEE,OAAO/B,EAAgBgC,YACrBhC,EAAgBiC,YAChBjC,EAAgBkC,YAChBlC,EAAgBmC,UACpB,GAAC,wCAED,WACE,MAAuC,WAAhCnC,EAAgBoC,aAA4BpC,EAAgBqC,qBAAuB,EAC5F,GAAC,mCAED,WACE,MAAuC,WAAhCrC,EAAgBoC,aAA4BpC,EAAgBqC,qBAAuB,IACxD,YAAhCrC,EAAgBoC,aAA6BpC,EAAgBqC,qBAAuB,EACxF,GAAC,2BAED,WACE,MAAuC,WAAhCrC,EAAgBoC,aAA4BpC,EAAgBqC,qBAAuB,IACxD,YAAhCrC,EAAgBoC,aAA6BpC,EAAgBqC,qBAAuB,EACxF,GAAC,0CAED,WACE,MAAuC,WAAhCrC,EAAgBoC,aAA4BpC,EAAgBqC,qBAAuB,EAC5F,GAAC,yCAED,WACE,MAAuC,YAAhCrC,EAAgBoC,aAA6BpC,EAAgBqC,qBAAuB,EAC7F,GAAC,8BAED,WACE,MAAuC,WAAhCrC,EAAgBoC,aACW,mBAAhCpC,EAAgBoC,WACpB,GAAC,yBAED,WACE,MAAwC,YAAhCpC,EAAgBoC,aAA6BpC,EAAgBqC,oBAAsB,IACxD,WAAhCrC,EAAgBoC,aAA4BpC,EAAgBqC,oBAAsB,IACnD,SAAhCrC,EAAgBoC,aACgB,OAAhCpC,EAAgBoC,WACpB,GAAC,+BAED,WACE,MAAuC,OAAhCpC,EAAgBoC,WACzB,KAAC,EArDmC,G,iBCIhCE,EAAqB,WAIzB,WAAYC,GAAkC,+BAHV7E,EAAc8E,UAAU,0BAAwB,mCAI9Eb,EAAkBc,+BACpB7Z,KAAK8Z,gBAAkB,IAAIC,wBAAwBJ,GAKrD3Z,KAAK8Z,gBAAkB,IAAIE,kBAAkBL,EAC/C,CAyDC,MALA,EAZA,EAZA,EAkHA,OA9IA,yBAED,WACE,OAAO3Z,KAAK8Z,eACd,GAAC,mCAED,WACE,OAAO9Z,KAAK8Z,gBAAgBG,uBAC9B,GAAC,oCAED,WACE,OAAOja,KAAK8Z,gBAAgBI,wBAC9B,GAAC,8BAED,WACE,OAAOla,KAAK8Z,gBAAgBK,kBAC9B,GAAC,oCAED,WACE,MAAwD,mBAA1Cna,KAAK8Z,gBAAgBM,gBACrC,GAAC,oCAED,WACE,MAAwD,mBAA1Cpa,KAAK8Z,gBAAgBO,gBACrC,GAAC,kCAED,WACE,OAAQtB,EAAkBuB,uBAAwE,mBAAxCta,KAAK8Z,gBAAgBS,cACjF,GAAC,0CAED,WAAkBC,GAAyB,gFACrCzB,EAAkB0B,8BAA+B,CAAF,wCAK1C,IAAI5a,GAAQ,SAACV,EAASC,GAAM,OAAK,EAAK0a,gBAAgBY,YAAYvb,EAASC,EAAQob,EAAQ,KAAC,gCAG9Fxa,KAAK8Z,gBAAgBY,YAAYF,IAAQ,gDACjD,yFAED,WAAmBA,GAA0B,gFACvCzB,EAAkB0B,8BAA+B,CAAF,wCAK1C,IAAI5a,GAAQ,SAACV,EAASC,GAAM,OAAK,EAAK0a,gBAAgBa,aAAaxb,EAASC,EAAQob,EAAQ,KAAC,gCAG/Fxa,KAAK8Z,gBAAgBa,aAAaH,IAAQ,gDAClD,gGAED,WAA0BI,GAAsC,0FACvD5a,KAAK8Z,gBAAgBe,oBAAoB9B,EAAkB0B,8BAChE,IAAIK,sBAAsBF,GAAeA,IAAY,gDACxD,iGAED,WAA2BA,GAAsC,uEAK9D,OAJgC,QAAlB,EAAGA,EAAYG,WAAG,aAAf,EAAiB5C,MAAM,gBAGvCnY,KAAKgb,QAAQvO,KAAK,iCACnB,kBAEMzM,KAAK8Z,gBAAgBmB,qBAAqBlC,EAAkB0B,8BACjE,IAAIK,sBAAsBF,GAAeA,IAAY,gDACxD,sEAED,WACE,OAAO5a,KAAK8Z,gBAAgBoB,YAC9B,GAAC,sBAED,SAASC,GACP,OAAOnb,KAAK8Z,gBAAgBsB,SAASD,EACvC,GAAC,4BAED,WAAiD,WAC/C,OAAO,IAAItb,GAAQ,SAAAV,GAOD,EAAK2a,gBAAgBsB,SAASjc,EAChD,GACF,GAAC,8BAED,SAAiBqF,EAA4BiS,EAA8C+D,GACzFxa,KAAK8Z,gBAAgBuB,iBAAiB7W,EAAMiS,EAAU+D,EACxD,GAAC,iCAED,SAAoBhW,EAA4BiS,EAA8C+D,GAC5Fxa,KAAK8Z,gBAAgBwB,oBAAoB9W,EAAMiS,EAAU+D,EAC3D,GAAC,4BAED,SAAe3S,EAAc2S,GAC3B,OAAOxa,KAAK8Z,gBAAgBS,eAAe1S,EAAM2S,EACnD,GAAC,uBAED,SAAUe,GAAgC,WACxCA,EAAYC,YAAYtW,SAAQ,SAAAuW,GAC9B,EAAK3B,gBAAgB4B,SAASD,EAChC,GACF,GAAC,8BAED,WACE,OAAOzb,KAAK8Z,gBAAgBM,kBAC9B,GAAC,8BAED,SAAiBT,GACf3Z,KAAK8Z,gBAAgBO,iBAAiBV,EACxC,GAAC,mBAMD,WACE,OAAO3Z,KAAK8Z,gBAAgB6B,OAC9B,EAAC,IAND,SAAYC,GACV5b,KAAK8Z,gBAAgB6B,QAAUC,CACjC,GAAC,0BAUD,WACE,OAAO5b,KAAK8Z,gBAAgB+B,cAC9B,EAAC,IAND,SAAmBD,GACjB5b,KAAK8Z,gBAAgB+B,eAAiBD,CACxC,GAAC,sCAUD,WACE,OAAO5b,KAAK8Z,gBAAgBgC,0BAC9B,EAAC,IAND,SAA+BF,GAC7B5b,KAAK8Z,gBAAgBgC,2BAA6BF,CACpD,GAAC,mBAMD,WACE5b,KAAK8Z,gBAAgBiC,OACvB,KAAC,EA1JwB,GA6J3B,IC9JMC,EAA4B,0CAG/B,OAH+B,0DAChC,WAA2BrC,GAAgC,0FAClD,IAAID,EAAsBC,IAAc,2CAChD,kDAH+B,GAMlC,ICNMsC,EAAsB,UAEPC,EAAQ,oCAoC1B,OApC0B,oCAG3B,SAAkBC,GAChB,GAAKnc,KAAKoc,aAAaD,GAMvB,IACE,IAAME,EAAuBC,KAAKH,EAAMI,OAAON,EAAoBxd,SAC7D+d,EAAgB7N,KAAK8N,MAAMJ,GAIjC,OAFAG,EAAcL,MAAQxN,KAAK8N,MAAMD,EAAcL,OAExCK,CAKT,CAJE,MAAOxQ,GAGP,YAFAkQ,EAASlB,QAAQrb,MAAM,2BAA4BqM,EAGrD,MAhBEkQ,EAASlB,QAAQrb,MAAM,0BAA2Bwc,EAiBtD,GAAC,oBAED,SAAcO,GACZ,OAAOA,GAAeA,EAAYP,OAASO,EAAYP,MAAMQ,IAC3D,IAAI7J,IAAI4J,EAAYP,MAAMQ,KAAO,IACrC,GAAC,wBAED,SAAkBD,GAChB,OAAOA,GAAeA,EAAYE,cAChCF,EAAYE,cAAgB,EAChC,GAAC,0BAED,SAAoBT,GAClB,QAASA,GAASA,EAAMU,WAAWZ,EACrC,KAAC,EApC0B,GAoC1B,IApCkBC,EAAQ,UACOpH,EAAc8E,UAAU,a,ICRvDkD,E,iBCEgBC,GAAc,qDACO,GAAE,CAazC,OAbyC,wBAE1C,SAAI3G,GACFpW,KAAKgd,MAAMja,KAAKqT,EAClB,GAAC,qBAED,WACEpW,KAAKgd,MAAM9X,SAAQ,SAAAkR,GAAU,OAAIA,EAAW6G,SAAS,IACrDjd,KAAKgd,MAAMve,OAAS,CACtB,GAAC,sBAED,WACE,MAAO,8BAAP,OAAqCuB,KAAKgd,MAAMve,OAAM,IACxD,KAAC,EAdgC,GCKdye,GAA0B,WAO7C,aAAc,oCANkC,IAAIH,IAAgB,+GAGxBrP,KAAKyP,OAAK,0CAIpDnd,KAAKod,cAAgB,IAAIzG,GAAiB,GAC1C3W,KAAKqd,sBAAwB,IAAIrG,EAAgBhX,KAAKod,eACtDpd,KAAKsd,sBACP,CA8EC,OA9EA,+BAED,WACE,OAAOtd,KAAKqd,qBACd,GAAC,oCAED,WACE,OAAO3P,KAAKyP,MAAQnd,KAAKud,yBAC3B,GAAC,qBAED,WACEvd,KAAKwd,aAAaP,SACpB,GAAC,kCAED,WAAqC,IAC/BQ,EACAC,EAF+B,OAInC,GAAwB,YAAL,oBAARnJ,SAAQ,iBAARA,WAAX,MAQiC,IAAtBA,SAASoJ,UAClBF,EAAS,WACTC,EAAmB,2BAEuB,IAA1BnJ,SAASqJ,cACzBH,EAAS,eACTC,EAAmB,+BACiB,IAApBnJ,SAASkJ,SACzBA,EAAS,SACTC,EAAmB,oBAIrB,IAAMG,EAAyB,WAC7B,IAAMC,GAAgBvJ,SAASkJ,GAE/B,EAAKM,cAAcD,EACrB,OAEyC,IAA9BvJ,SAAS8G,uBAAgE,IAArB9G,SAASkJ,IACtElJ,SAAS8G,iBAAiBqC,EAAkBG,GAAwB,GAEpE7d,KAAKwd,aAAa/H,IAAI,IAAIU,GAAW,WACnC5B,SAAS+G,oBAAoBoC,EAAkBG,GAAwB,EACzE,MAEA7d,KAAKge,uBAAuBnb,KAAK7C,KAhCnC,CAkCF,GAAC,oCAED,WAAuC,WACrCA,KAAKie,uBAAyBC,OAAOC,aAAY,WAC/C,IAAML,EAAevJ,SAAS6J,WAE9B,EAAKL,cAAcD,EACrB,GA1EwC,KA4ExC9d,KAAKwd,aAAa/H,IAAI,IAAIU,GAAW,WAC/B,EAAK8H,wBACPI,cAAc,EAAKJ,wBAGrB,EAAKA,uBAAyB,IAChC,IACF,GAAC,2BAED,SAAsBH,GAChB9d,KAAKod,gBAAkBU,IAI3B9d,KAAKod,cAAc1d,MAAQoe,EAC7B,KAAC,EAzF4C,GCN1BQ,GAAY,oCAsC9B,OAtC8B,yCAC/B,SAAuB1M,GACrB,IACE,IAAM2M,EAAU,IAAIzL,IAAIlB,GAClB4M,EAAWD,EAAQ/N,SAAS+H,MAAM,KAExC,OAAQgG,EAAQE,UACd,IAAK,MACHF,EAAQE,SAAW,QAEnB,MACF,IAAK,OACHF,EAAQE,SAAW,SAsBvB,OAdwB,IAApBD,EAAS/f,QACY,IAApB+f,EAAS/f,QAAgB+f,EAASA,EAAS/f,OAAS,GAAGA,QAAU,GAAK+f,EAASA,EAAS/f,OAAS,GAAGA,QAAU,EAEjH+f,EAASpN,QAAQ,aACRoN,EAAS,GAAG3B,WAAW,SAAW2B,EAAS,GAAGE,SAAS,SAAWF,EAAS,GAAG5P,SAAS,UAA4B,QAAhB4P,EAAS,GACrHA,EAAS,GAAK,gBACLA,EAAS,GAAG3B,WAAW,UAAY2B,EAAS,GAAGE,SAAS,YAGjEF,EAAS,GAAK,aAGhBD,EAAQ/N,SAAWgO,EAASG,KAAK,KAE1B,GAAP,OAAUJ,EAAQK,OAAM,aAG1B,CAFE,MAAO5S,GACP,OAAO4F,CACT,CACF,KAAC,EAtC8B,GCAZiN,GAAW,oCAS7B,OAT6B,+CAC9B,SAA6BjN,GAC3B,IAGE,OAFgB,IAAIkB,IAAIlB,GAETgN,MAGjB,CAFE,MAAO5S,GACP,MAAO,EACT,CACF,KAAC,EAT6B,GCIX8S,GAAY,WAoB/B,aACE,MADoB,YACd,IAAI/Y,MAAM,8DAClB,CAJC,OAIA,2BAnBD,WACE,OAAO+Y,EAAaC,aACtB,GAAC,+BAED,SAAyBpC,GACvB,IAAM/K,EAAM,IAAIkB,IAAI6J,EAAIjS,YAClBqG,EAAad,EAAec,WAQlC,OANAa,EAAIgD,OAAS,IAAH,OAAO,IAAID,gBAAgB,CAAC,CAAC,UAAW5D,GAAa,CAAC,IAAK,GAAF,OAAKrD,KAAKyP,UAAWzS,YAEnE,MAAjBkH,EAAImB,WACNnB,EAAImB,SAAW,oBAGVnB,EAAIlH,UACb,KAAC,EAlB8B,GAkB9B,IAlBkBoU,GAAY,gBAC0B,IAAInI,ECLnC,gDNDZ,SAAXmG,OAAW,uCAAXA,IAAW,qEAAXA,IAAW,qBAAXA,IAAW,yBAAXA,IAAW,mCAAXA,IAAW,6BAAXA,IAAW,iCAAXA,IAAW,2DAAXA,IAAW,6BAAXA,IAAW,yCAAXA,IAAW,kDAAXA,IAAW,mDAAXA,MAAW,KAehB,SOXqBkC,GAAU,WAG7B,WAAYC,GAAsB,wCAChCjf,KAAKkf,SAAWD,CAClB,CAmCC,OAnCA,4BAED,WACE,OAAOnC,GAAY9c,KAAKkf,SAC1B,GAAC,+BAED,WACE,OAAQlf,KAAKkf,UACX,KAAKpC,oBAEL,KAAKA,mCACH,OAAO1M,EAAeiD,UACxB,KAAKyJ,WAEL,KAAKA,aAEL,KAAKA,kBAEL,KAAKA,eAEL,KAAKA,iBAEL,KAAKA,8BAEL,KAAKA,eAEL,KAAKA,qBAEL,KAAKA,yBAEL,KAAKA,yBACH,OAAO1M,EAAeV,IACxB,QACE+D,EAAkBzT,KAAKkf,UAE7B,KAAC,EAxC4B,GCmCVC,GAAc,WAMjC,WAAYC,GAA4C,yEAJf,IAAE,iDAEzB7O,SAASC,UAGzBxQ,KAAKqf,sBAAwBD,CAC/B,CA4CC,MAXA,EAmCA,OApEA,uCAED,WACE,OAAOpf,KAAKqf,qBACd,GAAC,kBAED,SAAKC,GACH,IAAOC,EAA2DD,EAA3DC,SAAU7f,EAAiD4f,EAAjD5f,MAAO8f,EAA0CF,EAA1CE,cAAe5U,EAA2B0U,EAA3B1U,QAAS6U,EAAkBH,EAAlBG,SAAUC,EAAQJ,EAARI,KACpDC,EAAa,IAAIX,GAAWM,EAAOK,YAEzC,KAAI3f,KAAKqf,sBAAsBvS,UAAY6S,EAAWC,qBAAtD,CAIA,IAAMC,EAAe,CACnBnP,WAAW,IAAIhD,MAAOsC,cACtBY,QAAS5Q,KAAKqf,sBAAsBzO,QACpCC,UAAW7Q,KAAKqf,sBAAsBxO,UACtC0O,WACAD,OAAQK,EAAWG,UACnBpgB,QACA8f,gBACAvO,kBAAmBjR,KAAKkR,QACxBF,YAAahR,KAAKqf,sBAAsBrO,YACxCF,QAASb,EAAec,WACxBnG,UACA6U,WACAC,QAGF1f,KAAKkf,SAASnc,KAAK8c,GAEH7f,KAAK+f,mBApBrB,CAqBF,GAAC,0CAED,WAA0BC,GAAqC,uEAGW,OAFlEzO,EAAW,IAAIC,UAEZC,OAAO,WAAY9C,KAAKP,UAAU,CAACsD,QAASsO,KAAmB,SAE3DrO,MAAM3R,KAAKqf,sBAAsBzN,IAAK,CACjDzM,OAAQ,OACR0M,KAAMN,IACN,wFACH,8FAED,gGACMvR,KAAKkf,SAASzgB,QAAU,GAAKuB,KAAK8R,YAAU,iDAQM,OAJtD9R,KAAK8R,YAAa,EAEZkO,EAAkBhgB,KAAKkf,SAASzW,MAAM,EA/FvB,MAiGrBzI,KAAKkf,SAAWlf,KAAKkf,SAASzW,MAjGT,MAiGiC,kBAE/CzI,KAAKigB,YAAYD,GAAiBlgB,MAAK,SAAAsS,GAK5C,OAJA,EAAKN,YAAa,EAEF,EAAKiO,oBAEd3N,CACT,IAAGC,OAAM,WACP,EAAKP,YAAa,EAEF,EAAKiO,mBACvB,KAAE,gDACH,iDA5EgC,GC/BdG,GAAc,WAsCjC,aACE,MADoB,YACd,IAAIna,MAAM,+DAClB,CAJC,OAIA,2CArCD,SAAyB6L,GACvB,GAAmB,iBAARA,EACT,MAAM,IAAI7L,MAAM,MAGlB,IAAMoa,EAAkBD,EAAeE,iBAAiBxO,GAExD,GAAIuO,EACF,OAAOA,EAGT,IAAMf,EAAuB,IAAInM,EASjC,OAPAmM,EAAqBvO,UAAYwP,GAAIC,gBACrClB,EAAqBxO,QAAUyP,GAAIzP,QAAQlR,MAC3C0f,EAAqBxN,IAAM0M,GAAaiC,gBAAgB3O,GACxDwN,EAAqBpO,YAAc6N,GAAY2B,sBAAsB5O,GAErEwN,EAAqBtS,UAAYyG,EAAsBkN,0CAA0CJ,GAAI7M,gBAE9F0M,EAAeE,iBAAiBxO,GAAO,IAAIuN,GAAeC,EACnE,GAAC,+BAED,SAAyB5L,GACvB,IAAM2M,EAAkBlf,OAAO8D,OAAOmb,EAAeE,kBAEjDD,GAAmBA,EAAgB1hB,QACrC0hB,EAAgBjb,SAAQ,SAAAwb,GACOA,EAAetB,qBAEvBtS,UAAY0G,CACnC,GAEJ,KAAC,EApCgC,GAoChC,IApCkB0M,GAAc,mBACuC,CAAC,GCkB3E,IC3BKS,GD2BCC,GAAe1C,OAA6B,sBAAKA,OAAuB,gBAAKxQ,KAAKyP,MAenEkD,GAAG,WA0StB,aACE,MADoB,YACd,IAAIta,MAAM,qDAClB,CAJC,OAIA,oCAjRD,WACE,OAAO6a,EACT,GAAC,+BAED,WACE,OAAO5gB,KAAK6gB,oBACd,GAAC,mBAED,WACE,OAAO7gB,KAAKuS,QACd,GAAC,2BAED,WACE,OAAO8N,EAAIS,gBACb,GAAC,2BAED,WACE,OAAOT,EAAIU,gBACb,GAAC,uBAED,WACE,OAAOV,EAAIW,oBACb,GAAC,wBAED,WACE,OAAOX,EAAIY,qBACb,GAAC,iCAED,WACE,OAAOZ,EAAIa,8BACb,GAAC,mCAED,WACE,OAAOb,EAAIc,4BACb,GAAC,gDAED,WACE,OAAOd,EAAIe,qCACb,GAAC,wCAED,WACE,OAAOf,EAAIgB,6BACb,GAAC,+CAED,WACE,OAAOhB,EAAIiB,oCACb,GAAC,2BAED,WACE,OAAOthB,KAAKuhB,gBACd,GAAC,6BAED,WACE,OAAOvhB,KAAKwhB,kBACd,GAAC,uBAED,WACE,OAAOxhB,KAAKyhB,YACd,GAAC,0BAED,WACE,OAAOpB,EAAIqB,eACb,GAAC,sCAED,WACE,OAAO1hB,KAAK2hB,2BACd,GAAC,wBAED,WACE,OAAO3hB,KAAK4hB,aACd,GAAC,0DAED,WACE,OAAO5hB,KAAK6hB,+CACd,EAAC,IAED,SAA0DC,GACxD9hB,KAAK6hB,gDAAkDC,CACzD,GAAC,wBAED,WACE,OAAOnO,EAAoBS,sCAAsCpU,KAAKgb,QAAQlO,UAAUpN,MAC1F,GAAC,0BAED,WACE,OAAO6T,EAAsBY,0CAA0CkM,EAAI0B,gBAAgBriB,MAC7F,GAAC,2BAED,WACE,OAAO0X,CACT,GAAC,yCAED,WAA2C,WACnC9G,EAAyBwE,EAAcxE,uBAE7CA,EAAuBO,UAAYwP,EAAIC,gBAEZD,EAAIrN,aAAamE,WAAU,SAAAnG,GACpDV,EAAuBU,YAAcA,CACvC,IAC4BqP,EAAIxN,aAAasE,WAAU,SAAAzX,GACrD,IAAMsiB,EAAoB,EAAKhH,QAAQnO,UAAUnN,MAAMuiB,MAAK,SAAApU,GAAQ,OAAIA,aAAoByE,CAAiB,IAEzG0P,IACF1R,EAAuBsB,IAAMlS,EAE7B,EAAKsb,QAAQnO,UAAUqV,OAAOF,GAC9B,EAAKhH,QAAQnO,UAAU4I,IAAI,IAAInD,EAAkBhC,IACjD,EAAK0K,QAAQvb,KAAK,gCAAiC6Q,EAAuBsB,KAE9E,IACuByO,EAAI9N,SAAS4E,WAAU,SAAAvG,GAC5C,IAAMoR,EAAoB,EAAKhH,QAAQnO,UAAUnN,MAAMuiB,MAAK,SAAApU,GAAQ,OAAIA,aAAoByE,CAAiB,IAEzG0P,GAAqBpR,IACvBN,EAAuBM,QAAUA,EAEjC,EAAKoK,QAAQnO,UAAUqV,OAAOF,GAC9B,EAAKhH,QAAQnO,UAAU4I,IAAI,IAAInD,EAAkBhC,IACjD,EAAK0K,QAAQvb,KAAK,oCAAqC6Q,EAAuBM,SAElF,GACF,GAAC,uCAED,WACEyP,EAAIqB,gBAAkBxB,GAAeiC,kBAAkBrD,GAAanC,IAAIjd,OACxE2gB,EAAIhB,sBAAwBgB,EAAIqB,gBAAgBtC,qBAEhDiB,EAAIhB,sBAAsBxO,UAAYwP,EAAIC,gBAEfD,EAAIrN,aAAamE,WAAU,SAAAnG,GACpDqP,EAAIhB,sBAAsBrO,YAAcA,CAC1C,IAC4BqP,EAAIxN,aAAasE,WAAU,SAAAzX,GACrD2gB,EAAIhB,sBAAsBzN,IAAMlS,CAClC,IACuB2gB,EAAI9N,SAAS4E,WAAU,SAAAvG,GAC5CyP,EAAIhB,sBAAsBzO,QAAUA,CACtC,IARA,IASMlR,EAAQM,KAAKqV,8BAA8BC,eAAe,wBAE5D5V,GACFwgB,GAAekC,kBAAkBhS,EAAe1Q,IAGpB2gB,EAAI0B,gBAAgB5K,WAAU,SAAA3D,GAC1D0M,GAAekC,kBAAkB5O,EACnC,GACF,GAAC,wEAED,WACExT,KAAKmhB,6BAA+BnhB,KAAKqV,8BAA8BgN,gBAAgB,yCACvFriB,KAAKgb,QAAQvb,KAAK,iDAAkDO,KAAKmhB,6BAG3E,GAAC,iFAED,WACEnhB,KAAKohB,sCAAwCphB,KAAKqV,8BAA8BgN,gBAAgB,kDAChGriB,KAAKgb,QAAQvb,KAAK,0DAA2DO,KAAKohB,sCAGpF,GAAC,gEAED,WACEf,EAAIiC,aAAanL,WAAU,SAAAzX,GACzB2gB,EAAIxN,aAAanT,MAAQ2gB,EAAIE,gBAAgB7gB,GAC7C2gB,EAAIrN,aAAatT,MAAQmf,GAAY2B,sBAAsB9gB,EAC7D,IAEA,IAAM6iB,EAAeviB,KAAKqV,8BAA8BC,eAAe,wBAEvE,GAAIiN,EAAc,CAChB,IAAM7F,EAAcR,EAASsG,WAAWD,GAOxC,OALAlC,EAAI9N,SAAS7S,MAAQwc,EAASuG,WAAW/F,GACzCoC,GAAanC,IAAIjd,OAASwc,EAASwG,OAAOhG,IAAgB2D,EAAIiC,aAAa5iB,OAAOgL,gBAElF1K,KAAKgb,QAAQvb,KAAK,yDAA0D4gB,EAAIiC,aAAa5iB,MAG/F,CAEA,IAAMijB,EAAW3iB,KAAKqV,8BAA8BC,eAAe,cAEnE,GAAIqN,EAIF,OAHA7D,GAAanC,IAAIjd,MAAQijB,OACzB3iB,KAAKgb,QAAQvb,KAAK,0EAA2E4gB,EAAIiC,aAAa5iB,OAKhH,IAAMkjB,EAAe5iB,KAAKqV,8BAA8BC,eAAe,mBAEvE,OAAIsN,GACF9D,GAAanC,IAAIjd,MAAQ,GAAH,OAAMkjB,EAAY,yBACxC5iB,KAAKgb,QAAQvb,KAAK,+EAAgF4gB,EAAIiC,aAAa5iB,aAFrH,CAMF,GAAC,kBAED,SAAY8a,GAKV,GAJKxa,KAAK6iB,aAAanjB,QACrBM,KAAK2hB,4BAA8B,IAAIzE,IAGrC1C,EAAS,CAiBX,GAhBIA,EAAQ8H,eACVxD,GAAanC,IAAIjd,MAAQ8a,EAAQ8H,cAG/B9H,EAAQsI,wBACVzC,EAAI0C,uBAAuBrjB,MAAQ8a,EAAQsI,uBAGzCtI,EAAQhH,gBAAkBpD,EAAeoK,EAAQhH,kBACnD6M,EAAI0B,gBAAgBriB,MAAQ6T,EAAsBkN,0CAA0CjG,EAAQhH,iBAGlGgH,EAAQ5G,cAAgBlH,EAAa8N,EAAQ5G,eAC/C5T,KAAKgb,QAAQlO,UAAUyI,aAAa5B,EAAoBqP,sCAAsCxI,EAAQ5G,eAGpG4G,EAAQyI,qBACVvW,EAAa8N,EAAQyI,qBAAsB,CAC3C,IAAMC,EAAkBljB,KAAKgb,QAAQnO,UAAUnN,MAAMuiB,MAAK,SAAApU,GAAQ,OAAIA,aAAoBgC,CAAe,IAErGqT,GACFljB,KAAKgb,QAAQnO,UAAUqV,OAAOgB,GAGI,QAAhC1I,EAAQyI,qBACVjjB,KAAKgb,QAAQnO,UAAU4I,IAAI,IAAI5F,EAAgB8D,EAAoBqP,sCAAsCxI,EAAQyI,sBAErH,CAEoD,kBAAzCzI,EAAQ2I,+BACjBnjB,KAAKqhB,8BAAgC7G,EAAQ2I,8BAGY,kBAAhD3I,EAAQ4I,sCACjBpjB,KAAKshB,qCAAuC9G,EAAQ4I,qCAGlD5I,EAAQ6I,kBACVrjB,KAAKuhB,iBAAmB/G,EAAQ6I,iBAG9B7I,EAAQ8I,oBACVtjB,KAAKwhB,mBAAqBhH,EAAQ8I,mBAGhC9I,EAAQ+I,cACVvjB,KAAKyhB,aAAejH,EAAQ+I,YAEhC,CAEAlD,EAAIwC,aAAanjB,OAAQ,CAC3B,GAAC,qBAED,WACE2gB,EAAIwC,aAAanjB,OAAQ,EACzBM,KAAK2hB,4BAA4B1E,UACjCjd,KAAK2hB,4BAA8B,IACrC,GAAC,6BAED,SAAuB/P,GACrB,OAAO0M,GAAaiC,gBAAgB3O,EACtC,KAAC,EAxSqB,GAwSrB,IAxSkByO,GAAG,gCACwB,GAAI,IAD/BA,GAAG,yCAEiC,GAAI,IAFxCA,GAAG,iCAGyB,GAAI,IAHhCA,GAAG,wCAIgC,GAAI,IAJvCA,GAAG,mBAKY,MAAI,IALnBA,GAAG,qBAMc,MAAI,IANrBA,GAAG,eAOQ,MAAI,IAPfA,GAAG,gCAQwD,IAAIvM,GAA8B,IAR7FuM,GAAG,0CAAHA,GAAG,eAUyB,IAAI1J,EAAgB,KAAG,IAVnD0J,GAAG,gBAW0B,IAAI1J,EAAgB,8CAA4C,IAX7F0J,GAAG,kDAY2C,GAAC,IAZ/CA,GAAG,kBAaoC,IAAI1J,EAAwBzD,EAAiBC,wBAAsB,IAb1GkN,GAAG,8BAAHA,GAAG,oCAAHA,GAAG,uBAgB2C,IAAI1J,GAASxH,EAAYK,YAAU,IAhBjF6Q,GAAG,WAiB8B,IAAI1J,EAAgB,KAAG,IAjBxD0J,GAAG,mBAkB6B1K,EAAQK,OAAO,KAAG,IAlBlDqK,GAAG,mBAmB2B,IAAI3S,MAAM,IAnBxC2S,GAAG,UAoBqBvL,EAAc8E,UAAU,QAAM,IApBtDyG,GAAG,eAqBmC,IAAI1J,GAAiB,IAAM,IArBjE0J,GAAG,yBAsB4D,IAAI1J,EAAgC,IAAIqF,IAA+B,IAtBtIqE,GAAG,uBAuBmD,IAAIrJ,EAAyBqJ,GAAIwC,eAAa,IAvBpGxC,GAAG,wBAwBmD,IAAIrJ,EAAwB8H,GAAanC,MAAI,IAxBnG0D,GAAG,iCAyB4E,IAAIrJ,EAAwCqJ,GAAI0C,yBAsRpJ7E,OAAO7C,iBAAiB,UAAU,WAChCgF,GAAIpD,SACN,IAEAoD,GAAImD,qDACJnD,GAAIoD,4BACJpD,GAAIqD,8BACJrD,GAAIsD,6DACJtD,GAAIuD,sEACJvD,GAAIwD,OClWe,SAAdlD,OAAc,qBAAdA,IAAc,uBAAdA,IAAc,2BAAdA,IAAc,2BAAdA,IAAc,+BAAdA,IAAc,qBAAdA,IAAc,qBAAdA,IAAc,+BAAdA,IAAc,iCAAdA,IAAc,4BAAdA,IAAc,4CAAdA,IAAc,mBAAdA,QAAc,KAenB,UCdqBmD,GAAS,WAG5B,aAA0B,IAAdC,EAAW,UAAH,6CAAG,EAAC,yCACtB/jB,KAAKgkB,UAAYD,CACnB,CAiEC,OAjEA,gCAED,WACE,GAAuB,IAAnB/jB,KAAKgkB,UACP,MAAO,MAGT,IAAMC,EAAajkB,KAAKgkB,UAAY,EAC9BD,EAAWE,EAAapO,KAAKqO,IAAIlkB,KAAKgkB,WAAahkB,KAAKgkB,UAC1DG,EAAStO,KAAKuO,MAAML,GAClBM,EAAeF,EAAS,IAIxBG,GAFNH,EAAStO,KAAKuO,MAAMD,EAAS,MAEJ,GAInBI,GAFNJ,EAAStO,KAAKuO,MAAMD,EAAS,KAEJ,GAInBK,GAFNL,EAAStO,KAAKuO,MAAMD,EAAS,KAEN,GACjBM,EAAQ,CAAC,MAwBf,OAtBIR,GACFQ,EAAMrT,QAAQ,KAGZoT,GACFC,EAAM1hB,KAAKyhB,EAAQ,KAGjBD,GACFE,EAAM1hB,KAAKwhB,EAAU,MAGnBD,GAAWD,KACbI,EAAM1hB,KAAKuH,OAAOga,IAEdD,GACFI,EAAM1hB,KAAK,IAAM/C,KAAK0kB,SAASL,EAAa3Z,WAAY,EAAG,MAG7D+Z,EAAM1hB,KAAK,MAGN0hB,EAAM9F,KAAK,GACpB,GAAC,sBAED,SAASzP,EAAcyV,EAAsBC,GAI3C,OAHAD,IAA+B,EAC/BC,EAAYta,YAA6B,IAAdsa,EAA4BA,EAAY,KAE/D1V,EAAKzQ,OAASkmB,EACTzV,IAGTyV,GAA8BzV,EAAKzQ,QAEhBmmB,EAAUnmB,SAC3BmmB,GAAaA,EAAUC,OAAOF,EAAeC,EAAUnmB,SAGlDmmB,EAAUnc,MAAM,EAAGkc,GAAgBzV,EAC5C,KAAC,EAtE2B,GCMjB4V,GAAmB,WAO9B,WAAYlE,GAAsB,+BANE9L,EAAc8E,UAAU,wBAAsB,0BAChDyG,GAAIK,gBAAc,4FAGzB,GAGzB1gB,KAAK+kB,WAAarX,KAAKyP,MACvBnd,KAAKglB,cAAgBpE,CACvB,CAmCC,OAnCA,4BAED,SAAQrB,GACNvf,KAAKilB,mBAAmBnI,kBAA4ByC,EACtD,GAAC,kBAED,WACEvf,KAAKilB,mBAAmBnI,eAC1B,GAAC,gCAED,SAA2B6C,EAAyBJ,GAClD,IAAIvf,KAAKklB,iBAAT,CAIAllB,KAAKklB,kBAAmB,EAExB,IAAM/H,EAAMzP,KAAKyP,MACXgI,EAAYhI,EAAMnd,KAAK+kB,WACvBK,EAAa,IAAIpG,GAAWW,GAAYG,UAE9C9f,KAAK0gB,eAAe3d,KAAK,CACvB4c,aACA/U,SAAUuS,EAAMnd,KAAKglB,eAAiB,IACtCtlB,MAAO,CAAC2lB,OAAQF,GAChB5F,aAGFvf,KAAKgb,QAAQvb,KACX,uCACA,IAAIqkB,GAAU3G,EAAMnd,KAAKglB,eAAeM,cACxC/F,EACA6F,EACA,IAAItB,GAAUqB,GAAWG,cApB3B,CAsBF,KAAC,EA7C6B,GCDXC,GAAc,WAOjC,aAAc,oCANkC,IAAIxI,IAAgB,wBACpC/E,WAAaA,UAAsB,YAAC,gBAC3B,IAAIrB,OAAQtW,IAAU,0BACZ,IAAIsW,OAAQtW,IAAU,uCACT,IAAIsW,OAAQtW,IAGrEL,KAAKwlB,cAIVxlB,KAAKylB,8BACLzlB,KAAK0lB,mBACP,CA0DC,OA1DA,8BAED,WACE,OAAO1lB,KAAK2lB,YACd,GAAC,eAED,WACE,OAAO3lB,KAAK4lB,IACd,GAAC,yBAED,WACE,OAAO5lB,KAAK6lB,cACd,GAAC,sCAED,WACE,OAAO7lB,KAAK8lB,2BACd,GAAC,qBAED,WACE9lB,KAAKwd,aAAaP,SACpB,GAAC,2CAED,WACE,OAAKjd,KAAKwlB,YAIHxN,UAAsB,WAAE+N,UAAY/N,UAAsB,WAAEgO,aAHzD,CAIZ,GAAC,8BAED,WACE,OAAKhmB,KAAKwlB,YAIHxN,UAAsB,WAAEiO,eAAiBjO,UAAsB,WAAExT,KAH/D,SAIX,GAAC,8BAED,WACE,OAAOwT,UAAsB,WAAEkO,GACjC,GAAC,yCAED,WAA4C,WACpCzP,EAAW,WACf,EAAKiP,kBACP,EAEA1N,UAAsB,WAAEqD,iBAAiB,SAAU5E,GAEnDzW,KAAKwd,aAAa/H,IAAI,IAAIU,GAAW,WACnC6B,UAAsB,WAAEsD,oBAAoB,SAAU7E,EACxD,IACF,GAAC,8BAED,WACEzW,KAAK4lB,KAAKlmB,MAAQM,KAAKmmB,mBACvBnmB,KAAK6lB,eAAenmB,MAAQM,KAAKomB,mBACjCpmB,KAAK8lB,4BAA4BpmB,MAAQM,KAAKqmB,+BAChD,KAAC,EAxEgC,GCWdC,GAAgB,WASnC,WAAY1F,EAAsBF,GAAgC,0CAR9B5L,EAAc8E,UAAU,qBAAmB,0EAEhCyG,GAAIkG,4BAA0B,2BAC1B,IAAIhB,IAAgB,yDAEvB,IAAIxI,IAAgB,kCACf,CAAC,GAGpD/c,KAAKglB,cAAgBpE,EACrB5gB,KAAKwd,aAAa/H,IAAIzV,KAAKwmB,iBAC3BxmB,KAAK0hB,gBAAkBhB,EAElB1gB,KAAKwmB,gBAAgBhB,cAI1BxlB,KAAKwd,aAAa/H,IAAIzV,KAAK2hB,4BAA4B7D,aAAa3G,WAAU,SAAA2G,GAC5E,EAAK2I,uBAAuB3I,EAC9B,KACA9d,KAAKwd,aAAa/H,IAAIzV,KAAKwmB,gBAAgBN,IAAI/O,WAAU,SAAAzX,GACvD,EAAKgnB,uBAAuBhnB,EAC9B,KACAM,KAAKwd,aAAa/H,IAAIzV,KAAKwmB,gBAAgBP,cAAc9O,WAAU,SAAAzX,GACjE,EAAKinB,8BAA8BjnB,EACrC,KACAM,KAAKwd,aAAa/H,IAAIzV,KAAKwmB,gBAAgBI,2BAA2BzP,WAAU,SAAAzX,GAC9E,EAAKmnB,8CAA8CnnB,EACrD,KACF,CAyFC,OAzFA,wCAED,WACE,OAAO,IAAIolB,GAAoB9kB,KAAKglB,cACtC,GAAC,qBAED,WACEhlB,KAAKwd,aAAaP,SACpB,GAAC,oCAED,SAA+Ba,GAC7B,IAAMX,EAAMzP,KAAKyP,MACX2J,EAAsB9mB,KAAK2hB,4BAA4BoF,yBAE7D/mB,KAAK0hB,gBAAgB3e,KAAK,CACxB4c,WAAY7B,EAAehB,yBAAoCA,yBAC/DlS,SAAUuS,EAAMnd,KAAKglB,eAAiB,IACtCtlB,MAAO,CAAC2lB,OAAQyB,KAGlB9mB,KAAKgb,QAAQvb,KACX,mDACAqe,EAAe,aAAe,aAC9B,IAAIgG,GAAUgD,GAAqBxB,cAEvC,GAAC,oCAED,SAA+B0B,GAC7B,IAAM7J,EAAMzP,KAAKyP,MACX8J,EAASjnB,KAAKknB,uBAAuBhB,IAE3ClmB,KAAKknB,uBAAuBhB,IAAMc,EAElChnB,KAAK0hB,gBAAgB3e,KAAK,CACxB4c,WAAY7C,iBACZlS,SAAUuS,EAAMnd,KAAKglB,eAAiB,IACtCtlB,MAAO,CAAC2lB,OAAQ2B,GAChBxH,cAAeyH,EAAS,CAAC5B,OAAQ4B,QAAU5mB,EAC3Cof,SAAU,cAGZzf,KAAKgb,QAAQvb,KACX,6CACA,IAAIqkB,GAAU3G,EAAMnd,KAAKglB,eAAeM,cACxC0B,EACAC,EAEJ,GAAC,2CAED,SAAsCE,GACpC,IAAMhK,EAAMzP,KAAKyP,MACXiK,EAAiBpnB,KAAKknB,uBAAuBjB,cAEnDjmB,KAAKknB,uBAAuBjB,cAAgBkB,EAE5CnnB,KAAK0hB,gBAAgB3e,KAAK,CACxB4c,WAAY7C,eACZlS,SAAUuS,EAAMnd,KAAKglB,eAAiB,IACtCtlB,MAAO,CAACuW,OAAQkR,GAChB3H,cAAe4H,EAAiB,CAACnR,OAAQmR,QAAkB/mB,IAG7DL,KAAKgb,QAAQvb,KACX,4DACA,IAAIqkB,GAAU3G,EAAMnd,KAAKglB,eAAeM,cACxC6B,EACAC,EAEJ,GAAC,2DAED,SAAsDC,GACpD,IAAMlK,EAAMzP,KAAKyP,MACXmK,EAActnB,KAAKknB,uBAAuBN,2BAEhD5mB,KAAKknB,uBAAuBN,2BAA6BS,EAEzDrnB,KAAK0hB,gBAAgB3e,KAAK,CACxB4c,WAAY7C,8BACZlS,SAAUuS,EAAMnd,KAAKglB,eAAiB,IACtCtlB,MAAO,CAAC6nB,MAAOF,GACf7H,cAAe8H,EAAc,CAACC,MAAOD,QAAejnB,IAGtDL,KAAKgb,QAAQvb,KACX,sEACA,IAAIqkB,GAAU3G,EAAMnd,KAAKglB,eAAeM,cACxC+B,EACAC,EAEJ,KAAC,EAvHkC,GCdhBE,GAAY,KAI/B,WAAYrL,GAAe,sEACzBnc,KAAKmc,MAAQ,IAAIxF,EAAmBwF,GACpCnc,KAAKynB,cAAgB,IAAI9Q,GAAiB,EAC5C,ICDmB+Q,GAAgB,WAqBnC,WAAY7f,GAAe,mkBACzB7H,KAAK2nB,YAAc,IAAI5K,GACvB/c,KAAK4nB,qBAAuB,IAAI7K,GAChC/c,KAAK6nB,wBAA0B,IAAIna,KACnC1N,KAAK8F,MAAQ,IAAI6Q,EAAwBgK,aACzC3gB,KAAK8nB,WAAa,IAAInR,GAAiB,GACvC3W,KAAK+nB,OAAS,IAAIpR,GAAiB,GACnC3W,KAAKgoB,QAAU,IAAIrR,GAAiB,GACpC3W,KAAKioB,WAAa,IAAItR,GAAiB,GACvC3W,KAAKkoB,QAAU,IAAIvR,GAAiB,GACpC3W,KAAKmoB,QAAU,IAAIxR,GAAiB,GACpC3W,KAAKooB,aAAe,IAAIzR,EAAgB,GACxC3W,KAAKqoB,SAAW,IAAI1R,EAAkB,MACtC3W,KAAKsoB,OAAS,IAAI3R,EAAiB,MACnC3W,KAAKuoB,cAAgB,IAAI5R,EAAqC,MAC9D3W,KAAK6H,KAAOA,GAAQA,EAAKpJ,OAASoJ,EAAO7H,KAAKwoB,oBAChD,CAqEC,OArEA,2BAED,WACE,IAAMF,EAAStoB,KAAKsoB,OAAO5oB,MAE3B,OAAK4oB,EAIEA,EAAO/I,SAHL,GAIX,GAAC,yBAED,SAAYkJ,GACV,OAAQA,GACN,IAAK,KACH,MACF,IAAK,eACL,IAAK,iBACL,IAAK,cACHzoB,KAAK8nB,WAAWpoB,OAAQ,EAG1B,IAAK,YACL,IAAK,YAOH,OANAM,KAAKooB,aAAa1oB,MAAQ,EAC1BM,KAAKioB,WAAWvoB,OAAQ,EACxBM,KAAKkoB,QAAQxoB,OAAQ,EACrBM,KAAKmoB,QAAQzoB,OAAQ,OACrBM,KAAKsoB,OAAO5oB,MAAQ,MAGtB,QAQE,OAPAM,KAAKooB,aAAa1oB,QAClBM,KAAKioB,WAAWvoB,OAAQ,EACxBM,KAAKkoB,QAAQxoB,OAAQ,EACrBM,KAAKmoB,QAAQzoB,OAAQ,EACrBM,KAAKsoB,OAAO5oB,MAAQ,UACpBM,KAAK8F,MAAMpG,MAAQihB,UAIzB,GAAC,+CAED,SAAkC8H,GAChC,OAAQA,GACN,IAAK,KACH,OAAO9H,YACT,IAAK,YACL,IAAK,YACH,OAAOA,WACT,IAAK,iBACH,OAAOA,iBACT,IAAK,cACH,OAAOA,cACT,IAAK,eACH,OAAOA,gBACT,IAAK,WACL,IAAK,eACL,IAAK,UACH,OAAOA,cACT,IAAK,SACH,OAAOA,SACT,QACElN,EAAkBgV,GAExB,GAAC,gCAED,WACE,OAAO9S,EAAQK,OAAO,GACxB,KAAC,EA1GkC,GCNhB0S,GAAqB,KAKxC,aAAc,gIACZ1oB,KAAKub,YAAc,IAAI5E,EAAqB,MAC5C3W,KAAK2oB,eAAiB,IAAIhS,EAAyB,MACnD3W,KAAK4oB,gCAAkC,CACzC,ICVmBC,GAAY,KAI/B,aAAc,wEACZ7oB,KAAK8oB,WAAa,IAAInS,GAAiB,GACvC3W,KAAK+oB,YAAa,CACpB,I,sBCImBC,GAAqB,WAkExC,aACE,MADoB,YACd,IAAIjjB,MAAM,uEAClB,CA5CC,MAZA,EAoDA,OAIA,mDA7DD,WACMgT,EAAkBkQ,qBACJD,EAAsBE,oCACnC7W,OAAM,SAAArG,GAAC,OAAIgd,EAAsBhO,QAAQrb,MAAM,6CAA8CqM,EAAE,GAEtG,GAAC,gEAED,uGACSgd,EAAsBG,QAAU,CACrCC,UAAW,WACXT,eAAgBK,EAAsBK,4BACnChX,OAAM,SAAArG,GAGL,MAFAgd,EAAsBG,QAAU,KAE1Bnd,CACR,MACH,2CACF,qGAED,oGAAyF,GAAlDod,EAAwC,EAAH,6BAAG,YACzEJ,EAAsBG,SAAWH,EAAsBG,QAAQC,YAAcA,EAAS,gBAGnD,OAF/B1pB,EAAQspB,EAAsBG,QAAQR,eAE5CK,EAAsBG,QAAU,KAAK,kBAE9BzpB,GAAK,OAG+C,OAAvDojB,EAAwBzC,GAAIyC,sBAAsBpjB,MAAK,kBAEtDojB,EAAsBwG,uBAC1BxpB,KAAI,+BAAC,WAAM6oB,GAAc,2EAC4C,IAArCA,EAAeY,uBAGlB,CAAF,gBAOQ,OANhCC,EAAmBb,EAAepO,eAAe,QAAS,CAAC6O,cAC3DK,EAAmBd,EAAepO,eAAe,QAAS,CAAC6O,cAAY,KAGrEI,EAAgB,KAChBC,EAAgB,KACAd,EAAc,SACZA,EAAejO,iBAAYra,GAAU,6CAHvDmpB,iBAAgB,KAChBC,iBAAgB,KAChBd,eAAgB,EAAF,GACde,WAAY,EAAF,aAUkB,OAN1BlP,EAAwB,aAAd4O,EAA2B,CACzCO,qBAAqB,EACrBC,qBAAqB,GACnB,CAAC,EAAC,KAGYjB,EAAc,UACZA,EAAejO,YAAYF,GAAQ,8CADrDmO,eAAgB,EAAF,GACde,WAAY,EAAF,iDAEb,mDAzBI,KAyBH,2CACL,iDAhEuC,GAgEvC,IAhEkBV,GAAqB,UACNlU,EAAc8E,UAAU,0BAAwB,IAD/DoP,GAAqB,kBAuE1CA,GAAsBa,4B,IChFVC,GAKAC,G,sBAFX,SAHWD,OAAY,eAAZA,IAAY,iBAGvB,CAHWA,QAAY,KASvB,SAJWC,OAAW,mBAAXA,IAAW,iBAAXA,IAAW,iBAItB,CAJWA,QAAW,KCRsC,IAExCC,GAAkB,oCAYpC,OAZoC,6DACrC,SAA2CC,GACzC,OAAQA,GACN,KAAKF,GAAYG,OACf,MAAO,SACT,KAAKH,GAAYI,MACf,MAAO,QACT,KAAKJ,GAAYK,MACf,MAAO,QACT,QACE3W,EAAkBwW,GAExB,KAAC,EAZoC,GCAlBI,GAAmB,oCAUrC,OAVqC,+DACtC,SAA6CC,GAC3C,OAAQA,GACN,KAAKR,GAAaS,KAChB,MAAO,OACT,KAAKT,GAAaM,MAChB,MAAO,QACT,QACE3W,EAAkB6W,GAExB,KAAC,EAVqC,G,kBCwBlCE,GAAa,EAkDEC,GAAQ,WAM3B,WAAY9N,EAAa+N,GAIvB,GAJwC,+BALN5V,EAAc8E,UAAU,aAAW,sFAMrE5Z,KAAK2qB,KAAOhO,EACZ3c,KAAK4qB,SAAWF,GAEXA,EACH,MAAM,IAAI3kB,MAAM,+BAEpB,CAmxBC,MAhBA,EAXA,EAlIA,EAjCA,EAlNA,EAxDA,EAzDA,EAzDA,EAlGA,EAxFA,EAvBA,EAgyBA,OAxyBA,gCAED,WACE,OAAO/F,KAAK6qB,cACd,GAAC,sBAED,WACE,MAAO,gBAAP,OAAuB7qB,KAAK2qB,KAAI,IAClC,GAAC,mCAED,iGAE0B,OADlB/Y,EAAM5R,KAAK8qB,eACXC,EAAQrd,KAAKyP,MAAK,SACDtd,GAAQmrB,KAAK,CAClCrZ,MAAMC,EAAK,CACTzM,OAAQ,MACRuJ,MAAO,aAET,IAAI7O,IAAkB,SAACyM,EAAGlN,GAAM,OAC9BmN,YAAW,kBAAMnN,EAAO,IAAI2G,MAAM,mBAAD,OAAoB6L,EAAG,MAAK,GAAE,EAAKgZ,SAAS,MAE/E,OACyB,GATrBxY,EAAW,EAAH,KASR6Y,EAAWvd,KAAKyP,MAEjB/K,EAAS8Y,GAAI,CAAF,qBACR,IAAInlB,MAAM,gBAAD,OAAiB6L,EAAG,cAAMQ,EAASqW,OAAM,MAAI,OAGvB,OAAvCzoB,KAAK6qB,eAAiBI,EAAWF,EAAM,kBAEhC/qB,KAAK6qB,gBAAc,iDAC3B,qFAED,WAAgB1O,EAAegP,EAAoD/C,GAAoB,sGACvD,IAAxC1L,EAAcR,EAASsG,WAAWrG,KAEnBO,EAAYE,cAAa,gBACY,OAAxD5c,KAAKgb,QAAQrb,MAAM,6BAA8Bwc,GAAO,kBAEjD,CAACsM,OAAQ,iBAAe,OA2Cb,OAxCd7X,EAAU8L,EAAYE,cACtBhL,EAAM5R,KAAKorB,SAAS,CAACxa,EAAS,SAAU,cAAclG,WACtD6G,EAAW,IAAIC,SACf6Z,EAAgBpb,EAAec,WAEhB,IAAjBqX,GAAsB+C,GAClBG,EAA4C,CAChDd,cACAa,gBACA7O,cAAeL,EACfiM,eACAmD,kBAAmBvrB,KAAK6qB,eACxB5P,qBAAsB,CACpBuP,cACAgB,mBAAoB,CAClBhnB,KAAMxE,KAAKyrB,2BAA2BN,EAAwB3mB,MAC9DuW,IAAKoQ,EAAwBpQ,MAGjC2Q,wBAAyB,CAAClB,gBAG5BjZ,EAASE,OAAO,WAAY9C,KAAKP,UAAUkd,MAErCK,EAAkD,CACtDnB,cACAa,gBACA7O,cAAeL,EACfiM,eACAmD,kBAAmBvrB,KAAK6qB,eACxBe,uBAAwB,CAACpB,gBAG3BjZ,EAASE,OAAO,WAAY9C,KAAKP,UAAUud,KAGvCZ,EAAQrd,KAAKyP,MAAK,UAIlBuN,EAAU,KAAI,UAEG7qB,GAAQmrB,KAAK,CAChCrZ,MAAMC,EAAK,CACTzM,OAAQ,OACR0M,KAAMN,IAER,IAAI1R,IAAkB,SAAAV,GAAO,OAC3BurB,EAAUxM,OAAO3R,YAAW,WAC1B,EAAKyO,QAAQrb,MAAM,sBAAuB,IAAIoG,MAAM,wBAAD,OAAyB6L,EAAG,OAC/EzS,EAAQ,CAACspB,OAAQ,KACnB,GAAG,EAAKmC,SAAS,MAGlBiB,SAAQ,WACHnB,GACFoB,aAAapB,EAEjB,IAAE,QAhBJqB,EAAe,EAAH,6BAkBiC,OAlBjC,2BAkBZ/rB,KAAKgb,QAAQrb,MAAM,sBAAuB,EAAF,IAAK,kBAEtC,CAAC8oB,OAAQ,WAAS,QAGsD,GAElE,QAFTA,EAA0BzoB,KAAKgsB,+BAA+BD,IAEjD,0CACV,CAACtD,WAAO,QAGU,OAArBwC,EAAWvd,KAAKyP,MAAK,UACKnd,KAAKisB,uCAAuCrb,EAASmb,GAAa,QAEA,OAF5FG,EAAoB,EAAH,KAEvBlsB,KAAKgb,QAAQmR,MAAM,yCAA0CD,EAAmBjB,EAAWF,GAAO,kBAE3FmB,GAAiB,2DACzB,wFAED,WAAcrkB,EAAcsU,EAAegP,EAAoD/C,GAAoB,sGACnE,IAAxC1L,EAAcR,EAASsG,WAAWrG,KAEnBO,EAAYE,cAAa,gBACY,OAAxD5c,KAAKgb,QAAQrb,MAAM,6BAA8Bwc,GAAO,kBAEjD,CAACsM,OAAQ,iBAAe,OAqDb,OAlDd7X,EAAU8L,EAAYE,cACtBhL,EAAM5R,KAAKorB,SAAS,CAACxa,EAAS,SAAU,YAAYlG,WACpD6G,EAAW,IAAIC,SACf6Z,EAAgBpb,EAAec,WAEhB,IAAjBqX,GAAsB+C,GAClBG,EAA0C,CAC9Cd,cACAa,gBACA7O,cAAeL,EACfiM,eACAmD,kBAAmBvrB,KAAK6qB,eACxBhjB,OACAoT,qBAAsB,CACpBuP,cACAgB,mBAAoB,CAClBhnB,KAAMxE,KAAKyrB,2BAA2BN,EAAwB3mB,MAC9DuW,IAAKoQ,EAAwBpQ,MAGjC2Q,wBAAyB,CACvBnM,SAAU,GACV/E,QAAS,CAAC,UACVgQ,gBAIJjZ,EAASE,OAAO,WAAY9C,KAAKP,UAAUkd,MAErCK,EAAgD,CACpDnB,cACAa,gBACA7O,cAAeL,EACfiM,eACAmD,kBAAmBvrB,KAAK6qB,eACxBhjB,OACA+jB,uBAAwB,CACtBrM,SAAU,GACV/E,QAAS,CAAC,UACVgQ,gBAIJjZ,EAASE,OAAO,WAAY9C,KAAKP,UAAUud,KAGvCZ,EAAQrd,KAAKyP,MAAK,UAIlBuN,EAAU,KAAI,UAEG7qB,GAAQmrB,KAAK,CAChCrZ,MAAMC,EAAK,CACTzM,OAAQ,OACR0M,KAAMN,IAER,IAAI1R,IAAkB,SAAAV,GAAO,OAC3BurB,EAAUxM,OAAO3R,YAAW,WAC1B,EAAKyO,QAAQrb,MAAM,oBAAqB,IAAIoG,MAAM,sBAAD,OAAuB6L,EAAG,OAC3EzS,EAAQ,CAACspB,OAAQ,KACnB,GAAG,EAAKmC,SAAS,MAGlBiB,SAAQ,WACHnB,GACFoB,aAAapB,EAEjB,IAAE,QAhBJqB,EAAe,EAAH,6BAkB+B,OAlB/B,2BAkBZ/rB,KAAKgb,QAAQrb,MAAM,oBAAqB,EAAF,IAAK,kBAEpC,CAAC8oB,OAAQ,WAAS,QAGkD,GAE9D,QAFTA,EAAwBzoB,KAAKosB,6BAA6BL,IAE7C,0CACV,CAACtD,WAAO,QAGU,OAArBwC,EAAWvd,KAAKyP,MAAK,UACKnd,KAAKqsB,qCAAqCzb,EAASmb,GAAa,QAEA,OAF1FG,EAAoB,EAAH,KAEvBlsB,KAAKgb,QAAQmR,MAAM,uCAAwCD,EAAmBjB,EAAWF,GAAO,kBAEzFmB,GAAiB,2DACzB,uGAED,WAA2B5D,EAAiBkD,GAA6C,8FAkBnE,OAjBd5Z,EAAM5R,KAAKorB,SAAS,CAAC9C,EAAO1X,QAAS,SAAU0X,EAAO/I,SAAU,cAAe,WAAW7U,WAC1F6G,EAAW,IAAIC,SACfK,EAAqC,CACzC2Y,cACA8B,aAAchE,EAAOgE,aACrBd,mBAAoB,CAClBhnB,KAAMxE,KAAKyrB,2BAA2BD,EAAmBhnB,MACzDuW,IAAKyQ,EAAmBzQ,MAI5BxJ,EAASE,OAAO,WAAY9C,KAAKP,UAAUyD,IAErCkZ,EAAQrd,KAAKyP,MAAK,SAIlBuN,EAAU,KAAI,SAEG7qB,GAAQmrB,KAAK,CAChCrZ,MAAMC,EAAK,CACTzM,OAAQ,OACR0M,KAAMN,IAER,IAAI1R,IAAkB,SAAAV,GAAO,OAC3BurB,EAAUxM,OAAO3R,YAAW,WAC1B,EAAKyO,QAAQrb,MAAM,mCAAoC,IAAIoG,MAAM,qCAAD,OAAsC6L,EAAG,OACzGzS,EAAQ,CAACspB,OAAQ,KACnB,GAAG,EAAKmC,SAAS,MAGlBiB,SAAQ,WACHnB,GACFoB,aAAapB,EAEjB,IAAE,OAhBJqB,EAAe,EAAH,6BAkB8C,OAlB9C,0BAkBZ/rB,KAAKgb,QAAQrb,MAAM,mCAAoC,EAAF,IAAK,kBAEnD,CAAC8oB,OAAQ,WAAS,QAG4E,GAExF,QAFTA,EAAqCzoB,KAAKusB,0CAA0CR,IAEvE,0CACV,CAACtD,WAAO,QAGU,OAArBwC,EAAWvd,KAAKyP,MAAK,UACgBnd,KAAKwsB,kDAAkDT,GAAa,QAEW,OAFpHU,EAA+B,EAAH,KAElCzsB,KAAKgb,QAAQmR,MAAM,sDAAuDM,EAA8BxB,EAAWF,GAAO,kBAEnH0B,GAA4B,0DACpC,2FAED,WACEnE,EACAoE,EACAC,EACArC,EACAL,GAAwB,4FAmBJ,OAjBdrY,EAAM5R,KAAKorB,SAAS,CAAC9C,EAAO1X,QAAS,SAAU0X,EAAO/I,SAAU,YAAY7U,WAC5E6G,EAAW,IAAIC,SACfK,EAAoC,CACxC2Y,cACA8B,aAAchE,EAAOgE,aACrBI,wBACAC,yBACArC,aAAcD,GAAoBuC,sCAAsCtC,GACxEL,YAAaD,GAAmB6C,oCAAoC5C,IAGtE1Y,EAASE,OAAO,WAAY9C,KAAKP,UAAUyD,IAErCkZ,EAAQrd,KAAKyP,MAAK,SAIlBuN,EAAU,KAAI,SAEG7qB,GAAQmrB,KAAK,CAChCrZ,MAAMC,EAAK,CACTzM,OAAQ,OACR0M,KAAMN,IAER,IAAI1R,IAAkB,SAAAV,GAAO,OAC3BurB,EAAUxM,OAAO3R,YAAW,WAC1B,EAAKyO,QAAQrb,MAAM,oCAAqC,IAAIoG,MAAM,gCAAD,OAAiC6L,EAAG,OACrGzS,EAAQ,CAACspB,OAAQ,KACnB,GAAG,EAAKmC,SAAS,MAGlBiB,SAAQ,WACHnB,GACFoB,aAAapB,EAEjB,IAAE,OAhBJqB,EAAe,EAAH,6BAkB+C,OAlB/C,0BAkBZ/rB,KAAKgb,QAAQrb,MAAM,oCAAqC,EAAF,IAAK,kBAEpD,CAAC8oB,OAAQ,WAAS,QAMmE,OAHxFA,EAA2CzoB,KAAK8sB,gDAAgDf,GAChGd,EAAWvd,KAAKyP,MAEtBnd,KAAKgb,QAAQvb,KAAK,iDAAkDgpB,EAAQwC,EAAWF,GAAO,kBAEvF,CAACtC,WAAO,0DAChB,qGAED,WAAuBH,EAAiByE,EAA+BC,GAA2B,4GAiB5E,OAjB8ExS,EAAoB,EAAH,6BAAG,GAChH5I,EAAM5R,KAAKorB,SAAS,CAAC9C,EAAO1X,QAAS,SAAU0X,EAAO/I,SAAU,MAAO,eAAe7U,WACtF6G,EAAW,IAAIC,SACfK,EAAiC,CACrC2Y,cACA8B,aAAchE,EAAOgE,aACrBS,aACAC,qBACAxS,WAGFjJ,EAASE,OAAO,WAAY9C,KAAKP,UAAUyD,IAErCkZ,EAAQrd,KAAKyP,MAAK,SAIlBuN,EAAU,KAAI,UAEG7qB,GAAQmrB,KAAK,CAChCrZ,MAAMC,EAAK,CACTzM,OAAQ,OACR0M,KAAMN,IAER,IAAI1R,IAAkB,SAAAV,GAAO,OAC3BurB,EAAUxM,OAAO3R,YAAW,WAC1B,EAAKyO,QAAQrb,MAAM,+BAAgC,IAAIoG,MAAM,iCAAD,OAAkC6L,EAAG,OACjGzS,EAAQ,CAACspB,OAAQ,KACnB,GAAG,EAAKmC,SAAS,MAGlBiB,SAAQ,WACHnB,GACFoB,aAAapB,EAEjB,IAAE,QAhBJqB,EAAe,EAAH,6BAkB0C,OAlB1C,0BAkBZ/rB,KAAKgb,QAAQrb,MAAM,+BAAgC,EAAF,IAAK,kBAE/C,CAAC8oB,OAAQ,WAAS,QAGoE,GAEhF,QAFTA,EAAiCzoB,KAAKitB,sCAAsClB,IAE/D,0CACV,CAACtD,WAAO,QAGU,OAArBwC,EAAWvd,KAAKyP,MAAK,UACYnd,KAAKktB,8CAA8CnB,GAAa,QAEU,OAF3GoB,EAA2B,EAAH,KAE9BntB,KAAKgb,QAAQvb,KAAK,kDAAmD0tB,EAA0BlC,EAAWF,GAAO,kBAE1GoC,GAAwB,0DAChC,8FAED,WAAoB7E,EAAiB1c,GAAc,8FAgB7B,OAfdgG,EAAM5R,KAAKorB,SAAS,CAAC9C,EAAO1X,QAAS,SAAU0X,EAAO/I,SAAU,YAAY7U,WAC5E6G,EAAW,IAAIC,SACfK,EAA8B,CAClC2Y,cACA8B,aAAchE,EAAOgE,aACrB1gB,SACA4O,QAAS,IAGXjJ,EAASE,OAAO,WAAY9C,KAAKP,UAAUyD,IAErCkZ,EAAQrd,KAAKyP,MAAK,SAIlBuN,EAAU,KAAI,SAEG7qB,GAAQmrB,KAAK,CAChCrZ,MAAMC,EAAK,CACTzM,OAAQ,OACR0M,KAAMN,EACN7C,MAAO,aAET,IAAI7O,IAAkB,SAAAV,GAAO,OAC3BurB,EAAUxM,OAAO3R,YAAW,WAC1B,EAAKyO,QAAQrb,MAAM,sBAAuB,IAAIoG,MAAM,4BAAD,OAA6B6L,EAAG,OACnFzS,EAAQ,CAACspB,OAAQ,KACnB,GAAG,EAAKmC,SAAS,MAGlBiB,SAAQ,WACHnB,GACFoB,aAAapB,EAEjB,IAAE,OAjBJqB,EAAe,EAAH,6BAmBqC,OAnBrC,0BAmBZ/rB,KAAKgb,QAAQrb,MAAM,0BAA2B,EAAF,IAAK,kBAE1C,CAAC8oB,OAAQ,WAAS,QAGiE,GAE7E,QAFTA,EAA8BzoB,KAAKotB,sCAAsCrB,IAE5D,0CACV,CAACtD,WAAO,QAGU,OAArBwC,EAAWvd,KAAKyP,MAAK,UACSnd,KAAKqtB,2CAA2CtB,GAAa,QAES,OAFpGuB,EAAwB,EAAH,KAE3BttB,KAAKgb,QAAQvb,KAAK,8CAA+C6tB,EAAuBrC,EAAWF,GAAO,kBAEnGuC,GAAqB,0DAC7B,sEAED,SAAiBC,GACf,IAAM5Q,EAAM,IAAI7J,IAAI9S,KAAK2qB,MACnB6C,EAAc7Q,EAAI5J,SAASwF,MAAM,KAMvC,OAJAiV,EAAY/uB,OAAS+uB,EAAY/uB,OAAS,EAE1Cke,EAAI5J,SAAWya,EAAYC,OAAM,MAAlBD,EAAW,KAAWD,IAAM5O,KAAK,KAEzChC,CACT,GAAC,0BAED,WACE,IAAMA,EAAM,IAAI7J,IAAI9S,KAAK2qB,MACnB5Z,EAAad,EAAec,WAIlC,OAFA4L,EAAI/H,OAAS,IAAH,OAAO,IAAID,gBAAgB,CAAC,CAAC,OAAQ,QAAS,CAAC,UAAW5D,GAAa,CAAC,IAAK,GAAF,OAAKrD,KAAKyP,UAAWzS,YAEnGiS,EAAIjS,UACb,GAAC,0CAED,SAAqC0H,GACnC,IAAKA,EACH,MAAO,SAGT,OAAQA,EAASqW,QACf,KAAK,IACH,MAAO,KACT,KAAK,IACH,MAAO,eACT,KAAK,IACH,MAAO,iBACT,KAAK,IACH,MAAO,cACT,KAAK,IACH,MAAO,UACT,KAAK,IACH,MAAO,WACT,KAAK,IACH,MAAO,eACT,QACE,MAAO,SAEb,GAAC,4CAED,SAAuCrW,GACrC,IAAKA,EACH,MAAO,SAGT,OAAQA,EAASqW,QACf,KAAK,IACH,MAAO,KACT,KAAK,IACH,MAAO,eACT,KAAK,IACH,MAAO,iBACT,KAAK,IACH,MAAO,cACT,KAAK,IACH,MAAO,UACT,KAAK,IACH,MAAO,WACT,KAAK,IACH,MAAO,eACT,QACE,MAAO,SAEb,GAAC,uDAED,SAAkDrW,GAChD,IAAKA,EACH,MAAO,SAGT,OAAQA,EAASqW,QACf,KAAK,IACH,MAAO,KACT,KAAK,IACH,MAAO,eACT,KAAK,IACH,MAAO,UACT,KAAK,IACH,MAAO,WACT,KAAK,IACH,MAAO,eACT,QACE,MAAO,SAEb,GAAC,6DAED,SAAwDrW,GACtD,IAAKA,EACH,MAAO,SAGT,OAAQA,EAASqW,QACf,KAAK,IACH,MAAO,KACT,KAAK,IACH,MAAO,eACT,KAAK,IACH,MAAO,UACT,KAAK,IACH,MAAO,WACT,KAAK,IACH,MAAO,eACT,QACE,MAAO,SAEb,GAAC,mDAED,SAA8CrW,GAC5C,IAAKA,EACH,MAAO,SAGT,OAAQA,EAASqW,QACf,KAAK,IACH,MAAO,KACT,KAAK,IACH,MAAO,eACT,KAAK,IACH,MAAO,UACT,KAAK,IACH,MAAO,WACT,KAAK,IACH,MAAO,eACT,QACE,MAAO,SAEb,GAAC,mDAED,SAA8CrW,GAC5C,IAAKA,EACH,MAAO,SAGT,OAAQA,EAASqW,QACf,KAAK,IACH,MAAO,KACT,KAAK,IACH,MAAO,eACT,KAAK,IACH,MAAO,UACT,KAAK,IACH,MAAO,WACT,KAAK,IACH,MAAO,eACT,QACE,MAAO,SAEb,GAAC,qEAED,WAAqD7X,EAAiBwB,GAAkB,yFACnEA,EAASsb,OAAM,OA2BjC,OA3BK5e,EAAO,EAAH,MACJod,EAA4C,CAACzD,OAAQ3Z,EAAK2Z,SAE9CH,OAAS,CACzB1X,UACA2O,SAAUzQ,EAAKyQ,SACf+M,aAAcxd,EAAKwd,cAGrBJ,EAAkByB,IAAM7e,EAAK6e,IAEzB7e,IACEA,EAAK8e,mBACP1B,EAAkB0B,iBAAmB5tB,KAAK6tB,2CAA2C/e,EAAK8e,mBAGxF9e,EAAK2d,8BAAgC3d,EAAK2d,6BAA6BjB,qBACzEU,EAAkBO,6BAA+B,CAACjB,mBAAoBxrB,KAAK8tB,kDAAkDhf,EAAK2d,6BAA6BjB,sBAG7J1c,EAAKif,iCAAmCjf,EAAKif,gCAAgCvC,qBAC/EU,EAAkB6B,gCAAkC,CAACvC,mBAAoBxrB,KAAK8tB,kDAAkDhf,EAAKif,gCAAgCvC,sBAGnK1c,EAAKkf,gCAAkClf,EAAKkf,+BAA+BxC,qBAC7EU,EAAkB8B,+BAAiC,CAACxC,mBAAoBxrB,KAAK8tB,kDAAkDhf,EAAKkf,+BAA+BxC,uBAEtK,kBAEMU,GAAiB,gDACzB,mHAED,WAAmDtb,EAAiBwB,GAAkB,yFACjEA,EAASsb,OAAM,OAyBjC,OAzBK5e,EAAO,EAAH,MACJmf,EAAwC,CAACxF,OAAQ3Z,EAAK2Z,SAE5CH,OAAS,CACvB1X,UACA2O,SAAUzQ,EAAKyQ,SACf+M,aAAcxd,EAAKwd,cAGjBxd,IACEA,EAAK8e,mBACPK,EAAgBL,iBAAmB5tB,KAAK6tB,2CAA2C/e,EAAK8e,mBAGtF9e,EAAK2d,8BAAgC3d,EAAK2d,6BAA6BjB,qBACzEyC,EAAgBxB,6BAA+B,CAACjB,mBAAoBxrB,KAAK8tB,kDAAkDhf,EAAK2d,6BAA6BjB,sBAG3J1c,EAAKif,iCAAmCjf,EAAKif,gCAAgCvC,qBAC/EyC,EAAgBF,gCAAkC,CAACvC,mBAAoBxrB,KAAK8tB,kDAAkDhf,EAAKif,gCAAgCvC,sBAGjK1c,EAAKkf,gCAAkClf,EAAKkf,+BAA+BxC,qBAC7EyC,EAAgBD,+BAAiC,CAACxC,mBAAoBxrB,KAAK8tB,kDAAkDhf,EAAKkf,+BAA+BxC,uBAEpK,kBAEMyC,GAAe,gDACvB,wGAED,SAAmDtU,GACjD,IAAMiU,EAAqC,CAAC,EAE5C,GAAIjU,EAAcuU,aAChB,OAAQvU,EAAcuU,cACpB,IAAK,uBACHN,EAAiBM,aAAe,WAEhC,MACF,IAAK,wBACHN,EAAiBM,aAAe,aAEhC,MACF,IAAK,wBACHN,EAAiBM,aAAe,aAEhC,MACF,QACEza,EAAkBkG,EAAcuU,cAQtC,GAJkD,iBAAvCvU,EAAcwU,uBACvBP,EAAiBO,qBAAuBxU,EAAcwU,sBAGpDxU,EAAcyU,WAAY,CAG5B,IAFA,IAAMA,EAA6B,GAE1B1vB,EAAI,EAAGA,EAAIib,EAAcyU,WAAW3vB,OAAQC,IACnD0vB,EAAWrrB,KAAK,CACdsrB,KAAM1U,EAAcyU,WAAW1vB,GAAG2vB,KAClCC,SAAU3U,EAAcyU,WAAW1vB,GAAG4vB,SACtCC,WAAY5U,EAAcyU,WAAW1vB,GAAG6vB,aAI5CX,EAAiBQ,WAAaA,CAChC,CAEA,GAAIzU,EAAc6U,mBAChB,OAAQ7U,EAAc6U,oBACpB,IAAK,wBACHZ,EAAiBY,mBAAqB,MAEtC,MACF,IAAK,0BACHZ,EAAiBY,mBAAqB,QAEtC,MACF,IAAK,2BAEH,MACF,QACE/a,EAAkBkG,EAAc6U,oBAQtC,GAJI7U,EAAc8U,eAChBb,EAAiBa,aAAe9U,EAAc8U,cAG5C9U,EAAc+U,cAChB,OAAQ/U,EAAc+U,eACpB,IAAK,yBACHd,EAAiBc,cAAgB,YAEjC,MACF,IAAK,uBACHd,EAAiBc,cAAgB,UAEjC,MACF,QACEjb,EAAkBkG,EAAc+U,eAItC,OAAOd,CACT,GAAC,+DAED,SAA0DpC,GACxD,IAAMmD,EAAmD,CAAC5T,IAAKyQ,EAAmBzQ,KAElF,OAAQyQ,EAAmBhnB,MACzB,IAAK,QACHmqB,EAAsBnqB,KAAO,QAE7B,MACF,IAAK,SACHmqB,EAAsBnqB,KAAO,SAE7B,MACF,QACEiP,EAAkB+X,EAAmBhnB,MAGzC,OAAOmqB,CACT,GAAC,gFAED,WAAgEvc,GAAkB,yFAC7DA,EAASsb,OAAM,OAKjC,OALK5e,EAAO,EAAH,KACJ2d,EAAkE,CAAChE,OAAQ3Z,EAAK2Z,QAElF3Z,GAAQA,EAAK0c,qBACfiB,EAA6BjB,mBAAqBxrB,KAAK8tB,kDAAkDhf,EAAK0c,qBAC/G,kBAEMiB,GAA4B,gDACpC,0HAED,WAA4Dra,GAAkB,yFACzDA,EAASsb,OAAM,OAUjC,OAVK5e,EAAO,EAAH,KACJqe,EAA0D,CAC9D1E,OAAQ3Z,EAAK2Z,OACbjO,QAAS,IAGP1L,GACEA,EAAK0L,UACP2S,EAAyB3S,QAAU1L,EAAK0L,SAE3C,kBAEM2S,GAAwB,2CAChC,uHAED,WAAyD/a,GAAkB,yFACtDA,EAASsb,OAAM,OACqC,OADjE5e,EAAO,EAAH,KACJ8f,EAA4C,CAACnG,OAAQ3Z,EAAK2Z,QAAO,kBAEhEmG,GAAa,2CACrB,sFAED,SAAmCpqB,GACjC,OAAQA,GACN,IAAK,SACH,MAAO,SACT,IAAK,QACH,MAAO,QACT,IAAK,WACL,IAAK,WACH,MAAM,IAAIuB,MAAM,aAAD,OAAcvB,EAAI,uBACnC,QACEiP,EAAkBjP,GAExB,KAAC,EArzB0B,G,kBCpEvBqqB,GAAiB,IAEFC,GAAgB,WAKnC,WAAYnS,GACV,GADoB,+BAJK7H,EAAc8E,UAAU,cAAY,4DAKxD+C,EACH,MAAM,IAAI5W,MAAM,0BAGlB/F,KAAK0hB,gBAAkBxB,GAAeiC,kBAAkBxF,EAAIjS,YAC5D1K,KAAK2qB,KAAOhO,CACd,CA8BC,MA9BA,EA6DA,OA7DA,6DAED,WAA8BA,EAAU+N,GAAe,gFAChDA,EAAS,CAAF,qBACJ,IAAI3kB,MAAM,8BAA6B,OAGrB,OAApB6L,EAAM+K,EAAIjS,WAAU,SACH7K,GAAQmrB,KAAK,CAClCrZ,MAAMC,EAAK,CACTzM,OAAQ,MACRuJ,MAAO,aAET,IAAI7O,IAAkB,SAACyM,EAAGlN,GAAM,OAC9BmN,YAAW,kBAAMnN,EAAO,IAAI2G,MAAM,wBAAD,OAAyB6L,EAAG,MAAK,GAAE8Y,EAAQ,MAE9E,OARY,IAARtY,EAAW,EAAH,MAUA8Y,GAAI,CAAF,qBACR,IAAInlB,MAAM,qBAAD,OAAsB6L,EAAG,cAAMQ,EAASqW,OAAM,MAAI,UAG7C,OAAlBrW,EAASP,KAAa,uBAClB,IAAI9L,MAAM,kCAAD,OAAmC6L,EAAG,MAAI,yBAGpCQ,EAAS2c,OAAM,QACD,OAD/BC,EAAW,EAAH,KACRC,EAAYD,EAASzW,MAAM,KAAI,kBAE9B0W,EAAUC,KAAI,SAAA7G,GAAQ,OAAI,IAAIoC,GAASpC,EAAUqC,EAAQ,KAAC,4CAClE,sGAED,+GACuD,OADzBA,EAAkB,EAAH,6BAAGmE,GACxCjd,EAAMkN,GAAaqQ,kBAAkBnvB,KAAK2qB,MAAK,SAC7B3qB,KAAKovB,wBAAwB,IAAItc,IAAIlB,GAAM8Y,GAAQ,OAGzE,OAHIuE,EAAY,EAAH,KACTI,EAAe,WAAH,OAAwB,IAAIxvB,IAAQ,WACpD,EAAKmb,QAAQvb,KAAK,qDAAsDmS,EAC1E,GAAE,WACqB/R,GAAQmrB,KAAKiE,EAAUC,KAAI,SAAA7G,GAAQ,OAAIA,EAC3DiH,OACAjd,OAAM,SAAArG,GAGL,OAFA,EAAKgP,QAAQvO,KAAK,gCAAiC4b,EAAUrc,GAEtDqjB,GACT,IACCvvB,MAAK,SAAAyvB,GACJ,IAAMpS,EAAMzP,KAAKyP,MAWjB,OATA,EAAKnC,QAAQvb,KAAK,2CAA4C4oB,EAAS3d,WAAY6kB,GACnF,EAAK7N,gBAAgB3e,KAAK,CACxB4c,WAAY7C,iBACZlS,SAAUuS,EAAMkD,GAAIO,cAAgB,IACpClhB,MAAO,CAAC2lB,OAAQkK,GAAQ,GACxB9P,SAAU4I,EAAS3d,WACnBgV,KAAM,SAGD2I,CACT,GAAE,KAAE,OApBQ,OAARA,EAAW,EAAH,uBAsBPA,GAAQ,iDAChB,iDAzEkC,GCHhBmH,GAAS,WAkC5B,aACE,MADoB,YACd,IAAIzpB,MAAM,2DAClB,CA7BC,MA6BA,EAJA,OAIA,2EAjCD,oFAC6C,OAArC4W,EAAM,IAAI7J,IAAIuN,GAAIiC,aAAa5iB,OAAM,kBAEpC8vB,EAAUC,mCAAmC9S,IAAI,2CACzD,8GAED,WAAgDA,GAAQ,2EAC5B,GAApB/K,EAAM+K,EAAIjS,YAEZ8kB,EAAUE,OAAO9d,GAAM,CAAF,wCAChB4d,EAAUE,OAAO9d,IAAI,OAgB3B,OAbG+d,EAAmB,IAAIb,GAAiBnS,GACxCiT,EAAcJ,EAAUE,OAAO9d,GAAO+d,EAAiBE,0BAE7DL,EAAUE,OAAO9d,GAAK9R,MAAK,WACTyM,YAAW,WACrBijB,EAAUE,OAAO9d,KAASge,UACrBJ,EAAUE,OAAO9d,EAE5B,GA5ByB,IA6B3B,IAAGS,OAAM,SAAArG,GAGP,aAFOwjB,EAAUE,OAAO9d,GAElB5F,CACR,IAAG,kBAEI4jB,GAAW,2CACnB,kDAhC2B,GAgC3B,IAhCkBJ,GAAS,SACa,CAAC,GAsC5BA,GAAUM,mCAA1B,IC9CqBC,GAAS,WAO5B,WAAYhV,GAAa,kLACvB/a,KAAKgwB,KAAOjV,EAEZ,IAAMkV,EAAkBjwB,KAAKgwB,KAAKzX,MAAM,gBAClC2X,EAAmBlwB,KAAKgwB,KAAKzX,MAAM,MAEzCvY,KAAKmwB,YAAcnwB,KAAKowB,WAAW,QAASH,GAC5CjwB,KAAKqwB,YAAcrwB,KAAKowB,WAAW,QAASH,GAC5CjwB,KAAKswB,qBAAuBtwB,KAAKuwB,qBAAqB,QAASL,GAC/DlwB,KAAKwwB,qBAAuBxwB,KAAKuwB,qBAAqB,QAASL,EACjE,CAkCC,OAlCA,6BAED,WACE,OAAOlwB,KAAKmwB,WACd,GAAC,sBAED,WACE,OAAOnwB,KAAKqwB,WACd,GAAC,+BAED,WACE,OAAOrwB,KAAKswB,oBACd,GAAC,+BAED,WACE,OAAOtwB,KAAKwwB,oBACd,GAAC,kCAED,SAA6BhsB,EAAc0rB,GACzC,IAAMO,EAAoBP,EAAiBjO,MAAK,SAAAyO,GAAQ,OAAIA,EAAS7T,WAAWrY,EAAK,IAErF,QAAKisB,IAIGA,EAAkB7hB,SAAS,aACrC,GAAC,wBAED,SAAmBpK,EAAcyrB,GAK/B,OAJsBA,EAAgBhO,MAAK,SAAA0O,GAAO,OAAIA,EAAQ/hB,SAAS,YAAD,OAAaqhB,EAAgBhO,MAAK,SAAAvjB,GAAC,OAAIA,EAAEkQ,SAAS,KAAD,OAAMpK,GAAO,IAAE+T,MAAM,KAAK,IAAK,IACtHA,MAAM,KAAK,GACfA,MAAM,KAAK,EAGzC,KAAC,EAnD2B,GC8CTqY,GAAiB,WAapC,WAAYjI,EAAiCpN,EAA0BsV,GAIrE,GAJqG,gKAThC,IAAIla,EAAqC,CAAC,IAAE,iEAEvF,GAAI,sEAQ9B3W,KAAK8Z,gBAAkB6O,EACvB3oB,KAAK8wB,wBAA0BD,EAE3B7wB,KAAK8Z,gBAAiB,CACxB,IAAMiX,EAAyB,IAAIhB,GAAU/vB,KAAK8Z,gBAAgBG,wBAAwBc,KACpFiW,EAA0B,IAAIjB,GAAU/vB,KAAK8Z,gBAAgBI,yBAAyBa,KAE5F/a,KAAKixB,qBAAuBD,EAAwBE,WACpDlxB,KAAKmxB,qBAAuBH,EAAwBI,WAEpDpxB,KAAKqxB,iBAAmB,CACtBC,MAAOP,EAAuBQ,qBAAuBP,EAAwBO,oBAC7EC,MAAOT,EAAuBU,qBAAuBT,EAAwBS,qBAG/EzxB,KAAK0xB,iBACP,CACF,CAcC,MA0HA,OAxIA,+BAED,WACE,OAAO1xB,KAAK2xB,aACd,GAAC,qBAED,WACE3xB,KAAK4xB,mBAAoB,EACzB5xB,KAAK8Z,gBAAkB,KAEnB9Z,KAAK6xB,iBACP/F,aAAa9rB,KAAK6xB,gBAClB7xB,KAAK6xB,eAAiB,KAE1B,GAAC,8CAED,+FACM9Y,EAAkB+Y,6BAA8B,CAAF,eAI/C,iCAMwH,OAArHC,EAAqB,SAAC7iB,GAAI,OAAaA,EAAK8iB,GAAGpjB,SAAS,SAAW,QAAUM,EAAK8iB,GAAGpjB,SAAS,SAAW,QAAU,EAAE,WACrG5O,KAAK8Z,gBAAgBsB,SAAS,MACjDtb,MAAK,SAAAmyB,GACJ,IAAM1J,EAA6C,CAAC,EAEpD,GAAI0J,EAAO,CACT,IACIC,EADAC,EAAgB,EAAKrB,wBAGzBmB,EAAM/sB,SAAQ,SAAAktB,GAyBZ,GAxBoB,mBAAhBA,EAAO5tB,MAA6B4tB,EAAOC,uBAC7CF,EAA8C,IAA9BC,EAAOC,qBAEnB9J,EAAqB,QACvBA,EAAqB,MAAE4J,cAAgBA,GAGrC5J,EAAqB,QACvBA,EAAqB,MAAE4J,cAAgBA,IAIvB,mBAAhBC,EAAO5tB,MAA6B4tB,EAAOF,0BAC7CA,EAA0BE,EAAOF,wBAE7B3J,EAAqB,QACvBA,EAAqB,MAAE2J,wBAA0BA,GAG/C3J,EAAqB,QACvBA,EAAqB,MAAE2J,wBAA0BA,IAIjC,iBAAhBE,EAAO5tB,KAAyB,CAClC,IAAMkb,EAAO0S,EAAO1S,MAAQ0S,EAAOE,WAAaP,EAAmBK,GAC/DG,EAAQ,GAQZ,GANAN,EAAM/sB,SAAQ,SAAAgK,GACRA,EAAK8iB,KAAOI,EAAOI,UACrBD,EAAQrjB,EAAKujB,SAEjB,IAEI/S,GAAQ,EAAK2R,iBAAiB3R,GAAO,eAGjCgT,GAFQN,EAAOO,WAAa,IACmC,QAA9C,EAA2B,QAA3B,EAAG,EAAKhB,cAAcjyB,aAAK,OAAQ,QAAR,EAAxB,EAA2BggB,UAAK,WAAR,EAAxB,EAAkCiT,iBAAS,QAAI,GAEnEC,EAAYR,EAAO1hB,WAAoC,QAA3B,EAAG,EAAKihB,cAAcjyB,aAAK,OAAQ,QAAR,EAAxB,EAA2BggB,UAAK,WAAR,EAAxB,EAAkChP,WACjEmiB,EAAUH,GAAcE,EAAY/c,KAAKuO,MAAM,EAAIsO,EACvDE,EAAY,KAAQ,EAkBtB,GAhBArK,EAAc7I,GAAQ,CACpBoT,KAAMV,EAAOU,KACbR,UAAW5S,EACXhP,UAAW0hB,EAAO1hB,UAClBmiB,UACAF,UAAWP,EAAOO,UAClBI,YAAaX,EAAOW,YACpBC,uBAAwBZ,EAAOY,uBAC/BT,MAAOA,GAAS,EAAKU,eAAevT,GACpCyS,kBAGEC,EAAOF,yBAA2BA,KACpC3J,EAAc7I,GAAMwS,wBAA0BE,EAAOF,yBAA2BA,GAGrE,UAATxS,GAAoB,EAAKiS,cAAcjyB,OAAS,EAAKiyB,cAAcjyB,MAAM8xB,MAAO,CAClFjJ,EAAc7I,GAAgB,SAAI0S,EAAOc,SACzC3K,EAAc7I,GAAmB,YAAI0S,EAAOe,YAC5C5K,EAAc7I,GAAkB,WAAI0S,EAAOgB,WAC3C7K,EAAc7I,GAAqB,cAAI0S,EAAOiB,cAC9C9K,EAAc7I,GAAkB,WAAI0S,EAAOkB,WAC3C/K,EAAc7I,GAAuB,gBAAI0S,EAAOmB,gBAChDhL,EAAc7I,GAAsB,eAAI0S,EAAOoB,eAC/CjL,EAAc7I,GAAgB,SAAI0S,EAAOqB,SACzClL,EAAc7I,GAAa,MAAI0S,EAAOsB,MACtCnL,EAAc7I,GAAuB,gBAAI0S,EAAOuB,gBAChDpL,EAAc7I,GAA+B,wBAAI0S,EAAOwB,wBAExD,IAAMC,GAAOzB,EAAOiB,cAAgB,EAAK1B,cAAcjyB,MAAM8xB,MAAM6B,gBAChE9K,EAAc7I,GAAMhP,UAAY,EAAKihB,cAAcjyB,MAAM8xB,MAAM9gB,WAChE,IAEF6X,EAAc7I,GAAW,IAAImU,EAAMhe,KAAKie,MAAY,IAAND,GAAa,IAAM,CACnE,CACF,CACF,CACF,GACF,CAEA,EAAKlC,cAAcjyB,MAAQ6oB,CAC7B,IAAGzoB,MAAK,WACF,EAAK8xB,oBACP,EAAKC,eAAiB3T,OAAO3R,YAAW,kBAAM,EAAKmlB,iBAAiB,GA3J/C,MA6JzB,IAAE,OAhGY,EAAH,qDAiGd,yEAED,SAAuBltB,GACrB,OAAQA,GACN,IAAK,QACH,OAAOxE,KAAKixB,qBACd,IAAK,QACH,OAAOjxB,KAAKmxB,qBACd,QACE,MAAO,UAEb,KAAC,EAvKmC,GC/CjB4C,GAAuB,WA2B1C,aACE,MADoB,YACd,IAAIhuB,MAAM,yEAClB,CAJC,OAIA,4CA5BD,SAA0B4T,GAGxB,IAFA,IAAMyU,EAA6B,GAE1B1vB,EAAI,EAAGA,EAAIib,EAAcyU,WAAW3vB,OAAQC,IAAK,CAGxD,IAFA,IAAM2vB,EAAiB,GAEdtgB,EAAQ,EAAGA,EAAQ,EAAGA,IACjB4L,EAAcyU,WAAW1vB,GAAG2vB,KAAKtgB,IAG3CsgB,EAAKtrB,KAAK4W,EAAcyU,WAAW1vB,GAAG2vB,KAAKtgB,IAI/CqgB,EAAWrrB,KAAK,CACdsrB,KAAMA,EACNC,SAAU3U,EAAcyU,WAAW1vB,GAAG4vB,SACtCC,WAAY5U,EAAcyU,WAAW1vB,GAAG6vB,YAE5C,CAIA,OAFA5U,EAAcyU,WAAaA,EAEpBzU,CACT,KAAC,EAzByC,G,ulBCgB5C,IAEqBqa,GAAiB,WAMpC,WAAYC,EAAoCC,EAA8CC,GAA0C,+BALpGrf,EAAc8E,UAAU,sBAAoB,uHAM9E5Z,KAAKo0B,kBAAoBH,EACzBj0B,KAAKq0B,uBAAyBH,EAC9Bl0B,KAAKs0B,qBAAuBH,CAC9B,CA2TC,MAgFA,OA3YA,0BAED,SAAMxX,EAAKR,EAAOoY,GAAoC,WACpD,OAAO10B,GAAQ20B,IAAwC,CACrDhF,GAAUC,mCAAmC9S,GAC7CqM,GAAsBK,0BAA0B,cAE/CvpB,MAAK,YAA8C,gBAA5CuoB,EAAQ,YAAGqB,EAAU,EAAVA,WAAYf,EAAc,EAAdA,eAc7B,OAbA,EAAKyL,kBAAkBrM,OAAOroB,OAAQ,EACtC,EAAK00B,kBAAkB/L,SAAS3oB,MAAQ2oB,EACxC,EAAKrN,QAAQvb,KAAK,qBAAsB4oB,EAAS3d,YACjD,EAAKsQ,QAAQvb,KAAK,iBAAmBiqB,EAAW3O,MAE5ChC,EAAkB0b,qBAAwB9L,EAAe+L,0BAA6B/L,EAAegM,2BACvGhM,EAAe5M,QACf4M,EAAiB,KACjBe,EAAa,MAGf,EAAK2K,uBAAuB1L,eAAejpB,MAAQipB,EAE5CN,EAASuM,QAAQ,EAAKR,kBAAkBvsB,KAAMsU,EAAOuN,EAAY,EAAK0K,kBAAkBhM,aAAa1oB,MAC9G,IACCI,MAAK,YAAuI,IAArI2oB,EAAM,EAANA,OAAQH,EAAM,EAANA,OAAQsF,EAAgB,EAAhBA,iBAAkBnB,EAA4B,EAA5BA,6BAA8BuB,EAA8B,EAA9BA,+BAAgCD,EAA+B,EAA/BA,gCAiBtG,GAhBA,EAAKqG,kBAAkB9L,OAAO5oB,MAAQ4oB,EAEtC,EAAKtN,QAAQmR,MACX,kDACA,EAAKiI,kBAAkB7U,SACvBkJ,EACAmF,EACAnB,EACAuB,EACAD,GAGF,EAAKqG,kBAAkBtuB,MAAMpG,MAAQ,EAAK00B,kBAAkBS,kCAAkCpM,GAE9F,EAAK2L,kBAAkBU,YAAYrM,GAEpB,OAAXA,EAIJ,OAAO,EAAKsM,sBAAsB,EAAKV,uBAAuB1L,eAAejpB,MAAOkuB,GACjF9tB,MAAK,SAAA6oB,GACJ,IAAIqM,EACAC,GAAkB,EAClBjI,GAAqB,EACnBD,EAAgC,GAgHtC,OA9GA,EAAKsH,uBAAuB1L,eAAejpB,MAAQipB,EAEnDA,EAAeuM,UAAU,EAAKb,uBAAuB9Y,YAAY7b,OAEjEipB,EAAe9M,eAAiB,SAAC7P,GAC3B,EAAKooB,kBAAkB9L,OAAO5oB,QAAU4oB,GAIxC,EAAK+L,uBAAuB1L,eAAejpB,QAAUipB,IAIrDsM,GAIC5U,GAAI8U,oBAAoBz1B,QAIzBsM,EAAEopB,WAAappB,EAAEopB,UAAUA,UAC7BrI,EAAWhqB,KAAKiJ,EAAEopB,WAElBpI,GAAqB,EAGlBgI,IACHA,EAA0BzoB,YAAW,WAC/B,EAAK6nB,kBAAkB9L,OAAO5oB,QAAU4oB,GAIxC2M,GAIY,EAAKb,kBAAkB/L,SAAS3oB,MAAM21B,iBAAiB/M,EAAQyE,EAAYC,GACxFltB,MAAK,YAAuB,IAArB2oB,EAAM,EAANA,OAAQjO,EAAO,EAAPA,QACC,OAAXiO,GAMAjO,EAAQ5L,SAAS,YACnBqmB,GAAkB,GAGpB,EAAKja,QAAQvb,KAAK,8DAA+D,EAAK20B,kBAAkB7U,SAAUkJ,EAAQjO,IATxH,EAAKQ,QAAQvO,KAAK,qDAAsD,EAAK2nB,kBAAkB7U,SAAUkJ,EAU7G,IACCpW,OAAM,SAAArG,GACL,EAAKgP,QAAQrb,MAAM,oCAAqC,EAAKy0B,kBAAkB7U,SAAUvT,EAC3F,GACJ,GArHyB,OAuH7B,EAEA2c,EAAe7M,2BAA6B,WAC1C,GAAI,EAAKsY,kBAAkB9L,OAAO5oB,QAAU4oB,GAIxC,EAAK+L,uBAAuB1L,eAAejpB,QAAUipB,EAAzD,CAIA,IAAM2M,EAAgB,WAGpB,EAAKlB,kBAAkBtuB,MAAMpG,MAAQihB,SACrC,EAAKyT,kBAAkBnM,WAAWvoB,OAAQ,EAC1C,EAAK00B,kBAAkBpM,QAAQtoB,OAAQ,EAEvB,EAAK40B,uBAClBjiB,OAAM,SAAArG,GACL,EAAKgP,QAAQrb,MACX,oFACA,EAAKy0B,kBAAkB7U,SACvBoJ,EAAexO,mBACfnO,EAEJ,GACJ,EAEA,OAAQ2c,EAAexO,oBACrB,IAAK,WACL,IAAK,YACL,IAAK,YACL,IAAK,MACH,OAEF,IAAK,eACL,IAAK,SAMH,YALInC,UAAUud,SACZ,EAAKva,QAAQvb,KAAK,iEAAkE,EAAK20B,kBAAkB7U,SAAUoJ,EAAexO,oBACpI,EAAKqb,wBAAwB7M,EAAgB2M,KAIjD,IAAK,SAIH,OAHA,EAAKta,QAAQvb,KAAK,iEAAkE,EAAK20B,kBAAkB7U,SAAUoJ,EAAexO,yBACpImb,IAGF,QACE7hB,EAAkBkV,EAAexO,oBAzCrC,CA2CF,EAEO,IAAIta,IAAQ,SAAAV,GACjBA,GACF,IAAGW,MAAK,WACN,GAAK2sB,EAML,OAFA,EAAKzR,QAAQvb,KAAK,gCAAiC,EAAK20B,kBAAkB7U,SAAUkN,EAA6BjB,mBAAmBzQ,KAE7H4N,EAAe9N,oBAAoB4R,EAA6BjB,oBACpEnZ,OAAM,SAAArG,GAGL,MAFA,EAAKgP,QAAQvb,KAAK,8DAA+D,EAAK20B,kBAAkB7U,SAAUkN,EAA6BjB,mBAAoBxf,EAAE2B,SAE/J3B,CACR,GACJ,IAAGlM,MAAK,WACN,GAAKiuB,EAML,OAFA,EAAK/S,QAAQvb,KAAK,kCAAmC,EAAK20B,kBAAkB7U,SAAUwO,EAAgCvC,mBAAmBzQ,KAElI4N,EAAe1N,qBAAqB8S,EAAgCvC,oBACxEnZ,OAAM,SAAArG,GAGL,MAFA,EAAKgP,QAAQvb,KAAK,+DAAgE,EAAK20B,kBAAkB7U,SAAUwO,EAAgCvC,mBAAoBxf,EAAE2B,SAEnK3B,CACR,GACJ,IAAGlM,MAAK,WACN,GAAKkuB,EAML,OAFA,EAAKhT,QAAQvb,KAAK,iCAAkC,EAAK20B,kBAAkB7U,SAAUyO,EAA+BxC,mBAAmBzQ,KAEhI4N,EAAe1N,qBAAqB+S,EAA+BxC,oBACvEnZ,OAAM,SAAArG,GAGL,MAFA,EAAKgP,QAAQvb,KAAK,+DAAgE,EAAK20B,kBAAkB7U,SAAUwO,EAAgCvC,mBAAoBxf,EAAE2B,SAEnK3B,CACR,IACClM,MAAK,WACJ,OAAO6oB,EAAehO,aAAa,CACjCgP,qBAAqB,EACrBC,qBAAqB,GAEzB,IAAG9pB,MAAK,SAAA21B,GAGN,OAFA,EAAKza,QAAQvb,KAAK,iCAAkC,EAAK20B,kBAAkB7U,SAAUkW,EAAO1a,KAErF,EAAKqZ,kBAAkB/L,SAAS3oB,MAAMub,qBAAqBqN,EAAQmN,EAC5E,IAAG31B,MAAK,YAAkC,IAAhC2oB,EAAM,EAANA,OAAQ+C,EAAkB,EAAlBA,mBAGhB,OAFA,EAAK4I,kBAAkBtuB,MAAMpG,MAAQ,EAAKg2B,+CAA+CjN,GAE1E,OAAXA,GACF,EAAK2L,kBAAkBnM,WAAWvoB,OAAQ,EAC1C,EAAK00B,kBAAkBlM,QAAQxoB,OAAQ,OACvC,EAAK00B,kBAAkBjM,QAAQzoB,OAAQ,KAKzC,EAAKsb,QAAQvb,KAAK,0BAA2B,EAAK20B,kBAAkB7U,SAAUiM,EAAmBzQ,KAE1F4N,EAAe9N,oBAAoB2Q,GACvCnZ,OAAM,SAAArG,GAGL,MAFA,EAAKgP,QAAQvb,KAAK,8DAA+D,EAAK20B,kBAAkB7U,SAAUiM,EAAoBxf,EAAE2B,SAElI3B,CACR,IACJ,GACJ,IAAGlM,MAAK,WACNy0B,EAAoBoB,QAAQ,EAAKvB,kBAAkB7U,UAEnD,EAAK6U,kBAAkBtuB,MAAMpG,MAAQihB,cACrC,EAAKyT,kBAAkBnM,WAAWvoB,OAAQ,EAE1C,IAAMk2B,EAAoB,IAAIhF,GAAkBjI,EAAgB,EAAK0L,uBAAuB9Y,YAAY7b,MAAO,EAAK00B,kBAAkB/L,SAAS3oB,MAAMyyB,cAAgB,GA0ErK,OAzEgByD,EAAkBC,aAAa1e,WAAU,SAAA2e,GAGvD,GAFA,EAAK1B,kBAAkB7L,cAAc7oB,MAAQo2B,GAExC,EAAK1B,kBAAkB2B,oBAAsB,EAAK3B,kBAAkB4B,kBAIvE,OAHA,EAAK5B,kBAAkB4B,kBAAoBF,EAAWxE,WACtD,EAAK8C,kBAAkB2B,kBAAoBD,EAAWtE,OAKxD,IAAIyE,GAAmB,EACnBC,GAAmB,EAEnBJ,EAAWxE,OACT,EAAK8C,kBAAkB4B,mBAAqB,EAAK5B,kBAAkB4B,kBAAkBtlB,YAAcolB,EAAWxE,MAAM5gB,aACtHulB,EAAmB,EAAK7B,kBAAkB4B,mBAAqB,EAAK5B,kBAAkB4B,kBAAkBrD,YAAcmD,EAAWxE,MAAMqB,YAE/G3a,UAAUud,QAChC,EAAKva,QAAQvb,KACX,mGACA,EAAK20B,kBAAkB7U,SACvBuW,EAAWxE,MAAMqB,UACjB,EAAKyB,kBAAkB4B,kBAAkBrD,UACzC,IAAI7O,GAAUgS,EAAWxE,MAAM5gB,UAAY,EAAK0jB,kBAAkB4B,kBAAkBtlB,WAAW4U,eAInG,EAAK8O,kBAAkB4B,kBAAoBF,EAAWxE,OAItDwE,EAAWtE,OACT,EAAK4C,kBAAkB2B,mBAAqB,EAAK3B,kBAAkB2B,kBAAkBrlB,YAAcolB,EAAWtE,MAAM9gB,aACtHwlB,EAAmB,EAAK9B,kBAAkB2B,mBAAqB,EAAK3B,kBAAkB2B,kBAAkBpD,YAAcmD,EAAWtE,MAAMmB,YAE/G3a,UAAUud,QAChC,EAAKva,QAAQvb,KACX,mGACA,EAAK20B,kBAAkB7U,SACvBuW,EAAWtE,MAAMmB,UACjB,EAAKyB,kBAAkB2B,kBAAkBpD,UACzC,IAAI7O,GAAUgS,EAAWtE,MAAM9gB,UAAY,EAAK0jB,kBAAkB2B,kBAAkBrlB,WAAW4U,eAInG,EAAK8O,kBAAkB2B,kBAAoBD,EAAWtE,QAIrD0E,GAAoBD,IAAqBje,UAAUud,OAkBtD,EAAKC,wBAAwB7M,GAjBP,WACpB,EAAKyL,kBAAkBtuB,MAAMpG,MAAQihB,SACrC,EAAKyT,kBAAkBpM,QAAQtoB,OAAQ,EAEvCk2B,EAAkB3Y,UAEF,EAAKqX,uBAClBjiB,OAAM,SAAArG,GACL,EAAKgP,QAAQrb,MACX,0EACA,EAAKy0B,kBAAkB7U,SACvBoJ,EAAexO,mBACfnO,EAEJ,GACJ,IAIA,EAAKqoB,uBAAuBzL,gCAAkC,CAElE,IAEO/oB,GAAQV,SACjB,GACF,GACJ,GACJ,GAAC,oDAED,WACEg3B,EACAvI,GAAkC,0EAC7BuI,EAAwB,CAAF,eACuD,OAAhFvI,EAAmBmG,GAAwBqC,mBAAmBxI,GAAkB,kBAEzEvN,GAAIyC,sBAAsBpjB,MAAM4pB,qBAAqBsE,IAAiB,OAQlB,OALvDyI,EAAsB,GAAH,MACpBF,EAAuB/b,oBACvBwT,GAGLuI,EAAuB9b,iBAAiBgc,GAAqB,kBAEtDF,GAAsB,2CAC9B,qFAED,SAAgCxN,EAAiC2M,GAAiC,WAChG,GAA0C,WAAtC3M,EAAexO,mBAMnB,GAFAna,KAAKo0B,kBAAkBtuB,MAAMpG,MAAQihB,gBAEjC3gB,KAAKq0B,uBAAuBzL,gCAAkCvI,GAAIiW,iDAAmDjW,GAAIkW,qCAA7H,CAGE,GAFAv2B,KAAKq0B,uBAAuBzL,kCAExB7P,EAAkB0b,sBACnB9L,EAAe+L,2BACf/L,EAAegM,0BAChB30B,KAAKo0B,kBAAkBhM,aAAa1oB,MAEpC,OAGFM,KAAKgb,QAAQvb,KAAK,kDAElB,IAAMiqB,EAAaf,EAAe1O,wBAClB0O,EAAejO,YAAY,CAAC8b,YAAY,IAAO12B,MAAK,SAAA22B,GAClE,OAAO9N,EAAe9N,oBAAoB4b,GAAO32B,MAAK,WACpD,OAAO6oB,EAAe9N,oBAAoB6O,GACvC5pB,MAAK,WACJ,EAAKs0B,kBAAkBtuB,MAAMpG,MAAQihB,aACvC,GACJ,GACF,IACGtO,OAAM,SAAArG,GACL,EAAKgP,QAAQrb,MAAM,sCAAuCqM,GAC1D,EAAKqoB,uBAAuBzL,gCAAkC,EAC9D0M,GACF,GAGJ,MAEAt1B,KAAKgb,QAAQvb,KAAK,oFAAqFO,KAAKq0B,uBAAuBzL,iCACnI5oB,KAAKq0B,uBAAuBzL,gCAAkC,EAC9D0M,GACF,GAAC,4DAED,SAAuD7M,GACrD,OAAQA,GACN,IAAK,KACH,OAAO9H,YACT,IAAK,eACH,OAAOA,gBACT,IAAK,YACL,IAAK,WACL,IAAK,eACL,IAAK,UACH,OAAOA,cACT,IAAK,SACH,OAAOA,SACT,QACElN,EAAkBgV,GAExB,KAAC,EArZmC,G,kBCMhCiO,GAAiC,qBAEjCC,GAA4C,IAI7BC,GAAS,WA0B5B,WAAYrb,EAA0BY,EAAetU,GAAe,0CAzBhCiN,EAAc8E,UAAU,cAAY,yzBA0BtE5Z,KAAK62B,cAAgB,IAAIrP,GAAarL,GACtCnc,KAAKo0B,kBAAoB,IAAI1M,GAAiB7f,GAC9C7H,KAAKq0B,uBAAyB,IAAI3L,GAClC1oB,KAAK82B,cAAgB,IAAIjO,GACzB7oB,KAAK+2B,oBAAsBrpB,KAAKyP,MAChCnd,KAAKg3B,eAAiB,IAAIhgB,EAAwBhX,KAAK62B,cAAc1a,OACrEnc,KAAKi3B,wBAA0B,IAAIjgB,EAAiChX,KAAKq0B,uBAAuB1L,gBAChG3oB,KAAKk3B,eAAiB,IAAIlgB,EAAgChX,KAAKo0B,kBAAkBtuB,OACjF9F,KAAKm3B,uBAAyB,IAAIngB,EAAyBhX,KAAK62B,cAAcpP,eAC9EznB,KAAKo3B,oBAAsB,IAAIpgB,EAAyBhX,KAAKo0B,kBAAkBtM,YAC/E9nB,KAAKq3B,gBAAkB,IAAIrgB,EAAyBhX,KAAKo0B,kBAAkBrM,QAC3E/nB,KAAKs3B,iBAAmB,IAAItgB,EAAyBhX,KAAKo0B,kBAAkBpM,SAC5EhoB,KAAKu3B,oBAAsB,IAAIvgB,EAAyBhX,KAAKo0B,kBAAkBnM,YAC/EjoB,KAAKw3B,iBAAmB,IAAIxgB,EAAyBhX,KAAKo0B,kBAAkBlM,SAC5EloB,KAAKy3B,iBAAmB,IAAIzgB,EAAyBhX,KAAKo0B,kBAAkBjM,SAC5EnoB,KAAK03B,sBAAwB,IAAI1gB,EAAwBhX,KAAKo0B,kBAAkBhM,cAChFpoB,KAAK23B,kBAAoB,IAAI3gB,EAA0BhX,KAAKo0B,kBAAkB/L,UAC9EroB,KAAK43B,gBAAkB,IAAI5gB,EAAyBhX,KAAKo0B,kBAAkB9L,QAC3EtoB,KAAK63B,uBAAyB,IAAI7gB,EAAsChX,KAAKo0B,kBAAkB7L,eAC/FvoB,KAAK83B,qBAAuB,IAAI9gB,EAA6BhX,KAAKq0B,uBAAuB9Y,aAEzFvb,KAAKq0B,uBAAuB9Y,YAAY7b,MAAQ6b,EAEhD,IAAMmB,EAAcR,EAASsG,WAAWxiB,KAAK62B,cAAc1a,MAAMzc,OAC3D4iB,GAAgBpG,EAASwG,OAAOhG,IAAgB2D,GAAIiC,aAAa5iB,OAAOgL,WAE9E2V,GAAIzP,QAAQlR,MAAQwc,EAASuG,WAAW/F,IAAgB2D,GAAIzP,QAAQlR,MACpEof,GAAanC,IAAIjd,MAAQ4iB,EACzBtiB,KAAK0hB,gBAAkBxB,GAAeiC,kBAAkBG,GACxDtiB,KAAK+3B,kBAAoB,IAAIzR,GAAiBjG,GAAIO,aAAc5gB,KAAK0hB,iBACrE1hB,KAAKo0B,kBAAkBxM,qBAAqBnS,IAAIzV,KAAK+3B,mBAErD/3B,KAAKo0B,kBAAkBxM,qBAAqBnS,IAC1CzV,KAAKo0B,kBAAkBtuB,MAAMqR,WAAU,SAAArR,GACjC,EAAKsuB,kBAAkB4D,0BACzBlM,aAAa,EAAKsI,kBAAkB4D,0BAGjC,EAAK5D,kBAAkBhM,aAAa1oB,OAIrCoG,IAAU6a,gBAId,EAAKyT,kBAAkB4D,yBAA2B9Z,OAAO3R,YAAW,WAClE,EAAK6nB,kBAAkBhM,aAAa1oB,MAAQ,CAC9C,GAAGi3B,IACL,KAEF,IAAMsB,EAAyB,WACzB,EAAK7D,kBAAkB9L,OAAO5oB,OAAS,EAAK00B,kBAAkB/L,SAAS3oB,OACzD,EAAK00B,kBAAkB/L,SAAS3oB,MAAMkvB,cAAc,EAAKwF,kBAAkB9L,OAAO5oB,MAAO,sCAE7G,EAEAwe,OAAO7C,iBAAiB,eAAgB4c,GAExCj4B,KAAKo0B,kBAAkBxM,qBAAqBnS,IAAI,IAAIU,GAAW,WAC7D+H,OAAO5C,oBAAoB,eAAgB2c,EAC7C,KAEAj4B,KAAK+qB,OACP,CAyPC,MAxFA,EA9BA,EApBA,EA9BA,EAwPA,OAzUA,wBAED,WACE,OAAO/qB,KAAK62B,cAAc1a,MAAMzc,KAClC,EAAC,IAED,SAAUyc,GACRnc,KAAKo0B,kBAAkBzM,YAAY1K,UAEnCjd,KAAK62B,cAAc1a,MAAMzc,MAAQyc,EACjCnc,KAAK62B,cAAcpP,cAAc/nB,OAAQ,EAEzC,IAAMgd,EAAcR,EAASsG,WAAWxiB,KAAK62B,cAAc1a,MAAMzc,OAC3D4iB,GAAgBpG,EAASwG,OAAOhG,IAAgB2D,GAAIiC,aAAa5iB,OAAOgL,WAE9E2V,GAAIzP,QAAQlR,MAAQwc,EAASuG,WAAW/F,IAAgB2D,GAAIzP,QAAQlR,MACpEof,GAAanC,IAAIjd,MAAQ4iB,EAEzBtiB,KAAK0hB,gBAAkBxB,GAAeiC,kBAAkBG,GAExDtiB,KAAK+qB,OACP,GAAC,0BAED,WACE,OAAO/qB,KAAKi3B,uBACd,GAAC,iBAED,WACE,OAAOj3B,KAAKk3B,cACd,GAAC,yBAED,WACE,OAAOl3B,KAAKm3B,sBACd,GAAC,sBAED,WACE,OAAOn3B,KAAKo3B,mBACd,GAAC,kBAED,WACE,OAAOp3B,KAAKq3B,eACd,GAAC,mBAED,WACE,OAAOr3B,KAAKs3B,gBACd,GAAC,sBAED,WACE,OAAOt3B,KAAKu3B,mBACd,GAAC,mBAED,WACE,OAAOv3B,KAAKw3B,gBACd,GAAC,mBAED,WACE,OAAOx3B,KAAKy3B,gBACd,GAAC,wBAED,WACE,OAAOz3B,KAAK03B,qBACd,GAAC,oBAED,WACE,OAAO13B,KAAK23B,iBACd,GAAC,kBAED,WACE,OAAO33B,KAAK43B,eACd,GAAC,oBAED,WACE,OAAO53B,KAAKo0B,kBAAkB7U,QAChC,GAAC,yBAED,WACE,OAAOvf,KAAK63B,sBACd,GAAC,uBAED,WACE,OAAO73B,KAAK83B,oBACd,GAAC,mCAED,WAAWlsB,GAAc,qGAChB,IAAI/L,IAAQ,SAAAV,GACjB,IAAK,EAAK23B,cAAchO,WAAWppB,MAKjC,OAJA,EAAKw4B,YAAYtsB,QAEjBzM,IAKF,EAAKi1B,kBAAkBzM,YAAYlS,IAAI,EAAKqhB,cAAchO,WAAW3R,WAAU,SAAA2R,GACxEA,IACH,EAAKoP,YAAYtsB,GACjBzM,IAEJ,IACF,KAAE,2CACH,uEAED,SAAoByM,GAClB5L,KAAKm4B,iBAAiBvsB,GAElB5L,KAAKq0B,uBAAuB1L,eAAejpB,QAC7CM,KAAKq0B,uBAAuB1L,eAAejpB,MAAMqc,QACjD/b,KAAKq0B,uBAAuB1L,eAAejpB,MAAQ,MAGrDM,KAAKo0B,kBAAkBtuB,MAAMpG,MAAQihB,UACvC,GAAC,sCAED,kHACS3gB,KAAK0I,KAAK,0BAA0B5I,MAAK,WAC9C,EAAKs0B,kBAAkBxM,qBAAqB3K,UAC5C,EAAK6Z,cAAc/N,YAAa,CAClC,KAAE,gDACH,iEAED,SAAO5M,GACL,IAAMO,EAAcR,EAASsG,WAAWrG,GAGxC,OAFYD,EAASwG,OAAOhG,KAM5B1c,KAAKgb,QAAQvb,KAAK,6CAA8C4gB,GAAIiC,aAAa5iB,OAE1E,IAAIoT,IAAIuN,GAAIiC,aAAa5iB,OAClC,GAAC,oCAED,kFACMM,KAAK82B,cAAc/N,WAAY,CAAF,qBACzB,IAAIhjB,MAAM,gCAA+B,WAG7C/F,KAAK82B,cAAchO,WAAWppB,MAAO,CAAF,eAC8B,OAAnEM,KAAKgb,QAAQvb,KAAK,iDAAiD,0BAK1B,OAA3CO,KAAK82B,cAAchO,WAAWppB,OAAQ,EAAK,kBAEpCM,KAAKo4B,gBAAc,gDAC3B,yEAED,SAAe7c,GAA0B,WACvCvb,KAAKq0B,uBAAuB9Y,YAAY7b,MAAQ6b,EAE5Cvb,KAAKq0B,uBAAuB1L,eAAejpB,OAC7C6b,EAAYC,YAAYtW,SAAQ,SAAAmzB,GAC9B,EAAKhE,uBAAuB1L,eAAejpB,MAAMwb,aAAahW,SAAQ,SAAAozB,GAAU,MAC1ED,EAAW3Y,QAAS4Y,SAAa,QAAP,EAANA,EAAQ7c,aAAK,WAAP,EAAN,EAAeiE,OAAQ2Y,EAAWrG,KAAOsG,EAAO7c,MAAMuW,IAC5EsG,EAAOC,aAAaF,EAExB,GACF,GAEJ,GAAC,2CAED,mGAE0E,GADlElc,EAAQnc,KAAK62B,cAAc1a,MAAMzc,MACjC60B,EAAsBv0B,KAAK+3B,kBAAkBxD,sBAE9CrY,EAASE,aAAaD,GAAQ,CAAF,eAIa,OAH5Cnc,KAAKgb,QAAQrb,MAAM,6BAA8Bwc,GACjDnc,KAAKo0B,kBAAkBtuB,MAAMpG,MAAQihB,gBACrC3gB,KAAKo0B,kBAAkBtM,WAAWpoB,OAAQ,EAC1CM,KAAK82B,cAAchO,WAAWppB,OAAQ,EAAM,0BAgBiF,OAX/HM,KAAKm4B,iBAAiB,gBACtBn4B,KAAKo0B,kBAAkBtuB,MAAMpG,MAAQihB,YACrC3gB,KAAKo0B,kBAAkBpM,QAAQtoB,OAAQ,EAEjCid,EAAM3c,KAAK0iB,OAAOvG,GAClBqc,EAAmD,WAAH,OAAS,IAAI34B,IAAQ,SAACV,GAI1E,OAFA,EAAK23B,cAAchO,WAAWppB,OAAQ,EAE/BP,EAAQ,EAAKg1B,sBACtB,GAAE,EACIsE,EAAkB,IAAIzE,GAAkBh0B,KAAKo0B,kBAAmBp0B,KAAKq0B,uBAAwBmE,GAA4B,kBAExHC,EAAgB1N,MACrBpO,EACAR,EACAoY,GACCz0B,MAAK,WACJ,EAAKs0B,kBAAkBpM,QAAQtoB,OAAQ,CACzC,IACC2S,OAAM,SAAArG,GACLuoB,EAAoBmE,OAEpB,EAAKtE,kBAAkBhM,aAAa1oB,QAEpC,EAAK00B,kBAAkBrM,OAAOroB,OAAQ,EAEtC,EAAKy4B,iBAAiB,qCAEtB,EAAK/D,kBAAkBtuB,MAAMpG,MAAQihB,SAErC,EAAK3F,QAAQrb,MAAM,6BAA8BqM,EACnD,IACC6f,SAAQ,WAGP,GAFA,EAAKiL,cAAchO,WAAWppB,OAAQ,EAElC,EAAK00B,kBAAkBtuB,MAAMpG,QAAUihB,eAA8BN,GAAIsY,wBAA7E,CAIA,IAAMC,EAAYrsB,YAAW,WACX,EAAK4nB,sBAClB9hB,OAAM,SAAArG,GACL,EAAKgP,QAAQrb,MAAM,iCAAkCqM,EACvD,GACJ,GAAG,EAAK6sB,oBAER,EAAKzE,kBAAkBzM,YAAYlS,IAAI,IAAIU,GAAW,WACpD2V,aAAa8M,EACf,IAXA,CAYF,KAAE,iDACL,2EAED,WACE,OAAQ54B,KAAKo0B,kBAAkBtuB,MAAMpG,OACnC,KAAKihB,WACL,KAAKA,WACH,OAtUqC,KAuUvC,KAAKA,SACL,KAAKA,cACL,KAAKA,gBACL,KAAKA,iBACL,KAAKA,cACL,KAAKA,WACL,KAAKA,YACL,KAAKA,cACL,KAAKA,gBACL,KAAKA,sBAEH,OAAO9K,KAAKijB,IAnVqB,IAmViBjjB,KAAKkjB,IArVzB,IAqV4DljB,KAAKmjB,IAAI,EAAGh5B,KAAKo0B,kBAAkBhM,aAAa1oB,MAAQ,KACpJ,QACE+T,EAAkBzT,KAAKo0B,kBAAkBtuB,MAAMpG,OAErD,GAAC,kDAED,mFACUM,KAAKo0B,kBAAkBtuB,MAAMpG,MAAK,cACnCihB,UAAoB,OACpBA,iBAA2B,OAC3BA,YAAsB,OACtBA,YAAsB,OACtBA,cAJoB,EAIK,OAIzBA,gBAA2B,SAI3BA,iBAA4B,SAI5BA,cAAyB,SAIzBA,WAAsB,UAItBA,cAAyB,UAIzBA,YAAuB,UAIvBA,sBAAiC,mBA3BkH,OAAtJ3gB,KAAKgb,QAAQvb,KAAK,2CAA4CO,KAAKo0B,kBAAkBtuB,MAAMpG,MAAOihB,GAAe3gB,KAAKo0B,kBAAkBtuB,MAAMpG,QAAQ,4BAI/B,OAAvHM,KAAKgb,QAAQvb,KAAK,qGAAqG,0BAIE,OAAzHO,KAAKgb,QAAQvb,KAAK,uGAAuG,0BAIH,OAAtHO,KAAKgb,QAAQvb,KAAK,oGAAoG,2BAIlD,OAApEO,KAAKgb,QAAQvb,KAAK,kDAAkD,2BAIE,OAAtEO,KAAKgb,QAAQvb,KAAK,oDAAoD,2BAIM,OAA5EO,KAAKgb,QAAQvb,KAAK,0DAA0D,2BAImB,OAA/FO,KAAKgb,QAAQvb,KAAK,6EAA6E,2BAI/FgU,EAAkBzT,KAAKo0B,kBAAkBtuB,MAAMpG,OAAO,iCAGnDM,KAAK+qB,SAAO,iDACpB,2EAED,WAAgF,WAAvDnf,EAAiB,UAAH,6CAAG8qB,GACxC12B,KAAKo0B,kBAAkBzM,YAAY1K,UAEnC,IAAM0L,EAAiB3oB,KAAKq0B,uBAAuB1L,eAAejpB,MAE9DipB,IACF3oB,KAAKq0B,uBAAuB1L,eAAejpB,MAAQ,KACnDipB,EAAe5M,SAGjB/b,KAAKo0B,kBAAkBnM,WAAWvoB,OAAQ,EAC1CM,KAAKo0B,kBAAkBjM,QAAQzoB,OAAQ,EACvCM,KAAKo0B,kBAAkBlM,QAAQxoB,OAAQ,EAEnCM,KAAKo0B,kBAAkB9L,OAAO5oB,OAASM,KAAKo0B,kBAAkB/L,SAAS3oB,OACzDM,KAAKo0B,kBAAkB/L,SAAS3oB,MAAMkvB,cAAc5uB,KAAKo0B,kBAAkB9L,OAAO5oB,MAAOkM,GACtG9L,MAAK,YAAc,IAAZ2oB,EAAM,EAANA,OACS,OAAXA,EAMJ,EAAKzN,QAAQvb,KAAK,yCAA0C,EAAK8f,SAAUkJ,GALzE,EAAKzN,QAAQvO,KAAK,iDAAkD,EAAK8S,SAAUkJ,EAMvF,IACCpW,OAAM,SAAArG,GACL,EAAKgP,QAAQrb,MAAM,gCAAiC,EAAK4f,SAAUvT,EACrE,IAGJhM,KAAKo0B,kBAAkB9L,OAAO5oB,MAAQ,KACtCM,KAAKo0B,kBAAkB/L,SAAS3oB,MAAQ,KACxCM,KAAKq0B,uBAAuBzL,gCAAkC,CAChE,KAAC,EApa2B,GCnBTqQ,GAAU,WAS7B,aACE,MADoB,YACd,IAAIlzB,MAAM,4DAClB,CAJC,OAIA,yCAVD,SAAuByU,GACrB,IAAK6F,GAAI6Y,YAAYx5B,MACnB,MAAM,IAAIqG,MAAM,sBAGlB,OAAO,IAAI6wB,GAAUpc,EAAQe,YAAaf,EAAQ2B,MAAO3B,EAAQ3S,KACnE,KAAC,EAP4B,GCA/B,IACEwY,OACA4Y,cACAtY,kB,GChBEwY,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUn7B,QAG3C,IAAIC,EAASg7B,EAAyBE,GAAY,CAGjDn7B,QAAS,CAAC,GAOX,OAHAo7B,EAAoBD,GAAUl7B,EAAQA,EAAOD,QAASk7B,GAG/Cj7B,EAAOD,OACf,CClBA,OCFAk7B,EAAoB3uB,EAAKtM,IACxB,IAAIo7B,EAASp7B,GAAUA,EAAOU,WAC7B,IAAMV,EAAgB,QACtB,IAAMA,EAEP,OADAi7B,EAAoBI,EAAED,EAAQ,CAAEE,EAAGF,IAC5BA,CAAM,ECLdH,EAAoBI,EAAI,CAACt7B,EAASw7B,KACjC,IAAI,IAAIn6B,KAAOm6B,EACXN,EAAoB53B,EAAEk4B,EAAYn6B,KAAS65B,EAAoB53B,EAAEtD,EAASqB,IAC5E0B,OAAOC,eAAehD,EAASqB,EAAK,CAAEuB,YAAY,EAAM+T,IAAK6kB,EAAWn6B,IAE1E,ECND65B,EAAoB53B,EAAI,CAACF,EAAKq4B,IAAS14B,OAAOI,UAAUgC,eAAeR,KAAKvB,EAAKq4B,GCCjFP,EAAoBQ,EAAK17B,IACH,oBAAXgE,QAA0BA,OAAO0B,aAC1C3C,OAAOC,eAAehD,EAASgE,OAAO0B,YAAa,CAAElE,MAAO,WAE7DuB,OAAOC,eAAehD,EAAS,aAAc,CAAEwB,OAAO,GAAO,EJFvD05B,EAAoB,K","file":"publish.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"phenix\"] = factory();\n\telse\n\t\troot[\"phenix\"] = factory();\n})(self, function() {\nreturn ","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Promise from './Promise';\n\nexport default class PromiseHandler {\n  onFulfilled: Function;\n  onRejected: Function;\n  promise: Promise;\n\n  constructor(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport PromiseHandler from './PromiseHandler';\n\nclass Promise {\n  _state: number;\n  _handled: boolean;\n  _value: Promise;\n  _deferreds: Array<PromiseHandler>;\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  then(onFulfilled: Function, onRejected: Function): Promise | void;\n\n  constructor(callback) {\n    if (!(this instanceof Promise)) {\n      throw new TypeError('Promises must be constructed via new');\n    }\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('not a function');\n    }\n\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    this.doResolve(callback);\n  }\n\n  doResolve(callback: Function): void {\n    let done = false;\n\n    try {\n      callback(\n        value => {\n          if (done) {\n            return;\n          }\n\n          done = true;\n          this.promiseResolve(value);\n        },\n        reason => {\n          if (done) {\n            return;\n          }\n\n          done = true;\n          this.promiseReject(reason);\n        }\n      );\n    } catch (error) {\n      if (done) {\n        return;\n      }\n\n      done = true;\n      this.promiseReject(error);\n    }\n  }\n\n  promiseResolve(newValue: Promise | undefined): void {\n    const promise = this as Promise;\n\n    try {\n      // Promise Resolution Procedure: https://github.com/Promises-aplus/Promises-spec#the-Promise-resolution-procedure\n      if (newValue === promise) {\n        throw new TypeError('A Promise cannot be resolved with it self.');\n      }\n\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        const then = newValue.then;\n\n        if (newValue instanceof Promise) {\n          promise._state = 3;\n          promise._value = newValue;\n          promise.finale();\n\n          return;\n        } else if (typeof then === 'function') {\n          promise.doResolve(function(): void {\n            // eslint-disable-next-line prefer-rest-params\n            then.apply(newValue, arguments);\n          });\n\n          return;\n        }\n      }\n\n      promise._state = 1;\n      promise._value = newValue;\n      promise.finale();\n    } catch (e) {\n      promise.promiseReject(e);\n    }\n  }\n\n  promiseReject(newValue: Promise | undefined): void {\n    this._state = 2;\n    this._value = newValue;\n    this.finale();\n  }\n\n  finale(): void {\n    if (this._state === 2 && this._deferreds.length === 0) {\n      Promise._immediate(() => {\n        if (!this._handled) {\n          Promise._unhandledRejection(this._value);\n        }\n      });\n    }\n\n    for (let i = 0, len = this._deferreds.length; i < len; i++) {\n      this.handle(this._deferreds[i]);\n    }\n\n    this._deferreds = null;\n  }\n\n  handle(deferred: PromiseHandler): void {\n    let promise = this as Promise;\n\n    while (promise._state === 3) {\n      promise = promise._value;\n    }\n\n    if (promise._state === 0) {\n      promise._deferreds.push(deferred);\n\n      return;\n    }\n\n    promise._handled = true;\n    Promise._immediate(() => {\n      const callback = promise._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\n      if (callback === null) {\n        if (promise._state === 1) {\n          deferred.promise.promiseResolve(promise._value);\n        } else {\n          deferred.promise.promiseReject(promise._value);\n        }\n\n        return;\n      }\n\n      let result;\n\n      try {\n        result = callback(promise._value);\n      } catch (e) {\n        deferred.promise.promiseReject(e);\n\n        return;\n      }\n\n      deferred.promise.promiseResolve(result);\n    });\n  }\n\n  static all(arr: Array<Promise>): Promise {\n    return new Promise((resolve, reject) => {\n      if (!Array.isArray(arr)) {\n        return reject(new TypeError('Promise.all accepts an array'));\n      }\n\n      const args = Array.prototype.slice.call(arr);\n\n      if (args.length === 0) {\n        return resolve([]);\n      }\n\n      let remaining = args.length;\n      const manageResponse = (i, value): void => {\n        try {\n          if (value && (typeof value === 'object' || typeof value === 'function')) {\n            const then = value.then;\n\n            if (typeof then === 'function') {\n              then.call(\n                value,\n                value => manageResponse(i, value),\n                reject\n              );\n\n              return;\n            }\n          }\n\n          args[i] = value;\n\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (error) {\n          reject(error);\n        }\n      };\n\n      for (let i = 0; i < args.length; i++) {\n        manageResponse(i, args[i]);\n      }\n    });\n  }\n\n  static resolve(value): Promise {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(resolve => resolve(value));\n  }\n\n  static reject(value): Promise {\n    return new Promise((_, reject) => reject(value));\n  }\n\n  static race(arr: Array<Promise>): Promise {\n    return new Promise((resolve, reject) => {\n      if (!Array.isArray(arr)) {\n        return reject(new TypeError('Promise.race accepts an array'));\n      }\n\n      for (let i = 0, len = arr.length; i < len; i++) {\n        Promise.resolve(arr[i]).then(resolve, reject);\n      }\n    });\n  }\n\n  static _immediate(callback: Function): void {\n    const ignored = setTimeout(callback, 0);\n  }\n\n  static _unhandledRejection(error): void {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', error); // eslint-disable-line no-console\n    }\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected: Function): Promise | void {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype['then'] = function(onFulfilled: Function, onRejected: Function): Promise | void {\n  const promise = new this.constructor(() => null);\n\n  this.handle(new PromiseHandler(onFulfilled, onRejected, promise));\n\n  return promise;\n};\n\nPromise.prototype['finally'] = function(callback: Function): Promise | void {\n  const constructor = this.constructor;\n\n  return this.then(\n    value => constructor.resolve(callback()).then(() => value),\n    reason => constructor.resolve(callback()).then(() => constructor.reject(reason))\n  );\n};\n\nexport default Promise;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {IAppender} from './IAppender';\nimport Appenders from './Appenders';\nimport LoggingThreshold from './LoggingThreshold';\n\nexport enum LoggingLevel {\n  All = -1,\n  Trace = 10,\n  Debug = 20,\n  Info = 30,\n  Warn = 40,\n  Error = 50,\n  Fatal = 60,\n  Off = 100,\n}\n\nexport type LoggingLevelType = 'Off' | 'Trace' | 'Debug' | 'Info' | 'Warn' | 'Error' | 'Fatal' | 'All';\n\nexport default class Logger {\n  private readonly _category: string;\n  private readonly _appenders: Appenders;\n  private readonly _threshold: LoggingThreshold;\n\n  get category(): string {\n    return this._category;\n  }\n\n  get appenders(): Appenders {\n    return this._appenders;\n  }\n\n  get threshold(): LoggingThreshold {\n    return this._threshold;\n  }\n\n  trace(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Trace) {\n      return;\n    }\n\n    this.log(LoggingLevel.Trace, args);\n  }\n\n  debug(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Debug) {\n      return;\n    }\n\n    this.log(LoggingLevel.Debug, args);\n  }\n\n  info(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Info) {\n      return;\n    }\n\n    this.log(LoggingLevel.Info, args);\n  }\n\n  warn(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Warn) {\n      return;\n    }\n\n    this.log(LoggingLevel.Warn, args);\n  }\n\n  error(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Error) {\n      return;\n    }\n\n    this.log(LoggingLevel.Error, args);\n  }\n\n  fatal(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Fatal) {\n      return;\n    }\n\n    this.log(LoggingLevel.Fatal, args);\n  }\n\n  private log(level: number, args: any): void {\n    const date = new Date();\n    const message = this.replacePlaceholders(args);\n\n    this._appenders.value.forEach((appender: IAppender) => {\n      appender.log(level, message, this.category, date);\n    });\n  }\n\n  private replacePlaceholders(args: any): string {\n    let replacePlaceholdersString = args[0];\n    let index = 0;\n\n    while (replacePlaceholdersString.indexOf && args.length > 1 && index >= 0) {\n      index = replacePlaceholdersString.indexOf('%', index);\n\n      if (index > 0) {\n        const type = replacePlaceholdersString.substring(index + 1, index + 2);\n\n        switch (type) {\n          case '%':\n            // Escaped '%%' turns into '%'\n            replacePlaceholdersString = replacePlaceholdersString.substring(0, index) + replacePlaceholdersString.substring(index + 1);\n            index++;\n\n            break;\n          case 's':\n          case 'd':\n            // Replace '%d' or '%s' with the argument\n            args[0] = replacePlaceholdersString = this.replaceArgument(\n              this.toString(args[1]),\n              replacePlaceholdersString,\n              index\n            );\n            args.splice(1, 1);\n\n            break;\n          case 'j':\n            // Replace %j' with the argument\n            args[0] = replacePlaceholdersString = this.replaceArgument(\n              this.stringify(args[1]),\n              replacePlaceholdersString,\n              index\n            );\n\n            args.splice(1, 1);\n\n            break;\n          default:\n            return args.toString();\n        }\n      }\n    }\n\n    if (args.length > 1) {\n      args = args.reduce((accumulator, currentValue, index, array) => {\n        if (index + 1 === array.length && currentValue instanceof Error) {\n          return accumulator + '\\n' + this.toString(currentValue.stack);\n        }\n\n        return accumulator + `[${this.toString(currentValue)}]`;\n      });\n    }\n\n    return args.toString();\n  }\n\n  private stringify(arg: any): string {\n    const cache = [];\n\n    try {\n      return JSON.stringify(\n        arg instanceof Error ? this.toString(arg) : arg,\n        (key, value) => {\n          if (!!value && value instanceof Object) {\n            if (cache.includes(value)) {\n              return '<recursive>';\n            }\n\n            cache.push(value);\n          }\n\n          return value;\n        },\n        2\n      );\n    } catch (e) {\n      return '[object invalid JSON.stringify]';\n    }\n  }\n\n  private replaceArgument(argument: any, replacePlaceholdersString: string, index: number): string {\n    return replacePlaceholdersString.substring(0, index) + this.toString(argument) + replacePlaceholdersString.substring(index + 2);\n  }\n\n  private toString(data: any): string {\n    if (typeof data === 'string') {\n      return data;\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'true' : 'false';\n    }\n\n    if (typeof data === 'number') {\n      return data.toString();\n    }\n\n    let toStringStr = '';\n\n    if (data) {\n      if (typeof data === 'function') {\n        toStringStr = data.toString();\n      } else if (data instanceof Object) {\n        try {\n          toStringStr = data.toString();\n        } catch (e) {\n          toStringStr = '[object invalid toString()]';\n        }\n      }\n    }\n\n    return toStringStr;\n  }\n\n  constructor(category: string, appenders: Appenders, threshold: LoggingThreshold) {\n    this._category = category;\n    this._appenders = appenders;\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {IAppender} from './IAppender';\n\nexport default class Appenders {\n  private _appenders: Array<IAppender> = [];\n\n  get value(): Array<IAppender> {\n    return this._appenders;\n  }\n\n  add(appender: IAppender): void {\n    this._appenders.push(appender);\n  }\n\n  remove(appender): void {\n    this._appenders = this._appenders.reduce((items, item) => {\n      if (!(item === appender)) {\n        items.push(item);\n      }\n\n      return items;\n    }, [] as Array<IAppender>);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\ndeclare const __PRIVACY_MODE__: boolean;\n\nexport default class PrivacyMode {\n  private static _isPrivate: boolean;\n\n  static get isPrivate(): boolean {\n    return this._isPrivate;\n  }\n\n  static applyIsPrivate(): void {\n    try {\n      this._isPrivate = __PRIVACY_MODE__;\n    } catch (e) {\n      this._isPrivate = false;\n    }\n  }\n}\n\nPrivacyMode.applyIsPrivate();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport PrivacyMode from '../dom/PrivacyMode';\nimport {LoggingLevel} from '../logger/Logger';\n\nexport default class LoggerDefaults {\n  static get defaultLoggingLevel(): LoggingLevel {\n    return PrivacyMode.isPrivate ? LoggingLevel.Off : LoggingLevel.All;\n  }\n\n  static get defaultConsoleLoggingLevel(): LoggingLevel {\n    return PrivacyMode.isPrivate ? LoggingLevel.Off : LoggingLevel.All;\n  }\n\n  static get defaultTelemetryLoggingLevel(): LoggingLevel {\n    return LoggingLevel.Info;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerDefaults from './LoggerDefaults';\nimport {LoggingLevel} from './Logger';\n\nexport default class LoggingThreshold {\n  private _threshold: LoggingLevel = LoggerDefaults.defaultLoggingLevel;\n\n  get value(): LoggingLevel {\n    return this._threshold;\n  }\n\n  setThreshold(threshold: LoggingLevel): void {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {IAppender} from './IAppender';\nimport {LoggingLevel} from './Logger';\n\nexport default class ConsoleAppender implements IAppender {\n  private readonly _threshold: LoggingLevel;\n\n  log(logLevel: LoggingLevel, message: string, category: string, date: Date): void {\n    if (logLevel < this._threshold) {\n      return;\n    }\n\n    const fullMessage = `${date.toISOString()} [${category}] [${LoggingLevel[logLevel]}] ${message}`;\n\n    if (logLevel < LoggingLevel.Warn) {\n      console.log(fullMessage);\n\n      return;\n    }\n\n    console.error(fullMessage);\n  }\n\n  constructor(threshold: LoggingLevel) {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\ndeclare const __SDKVERSION__: string;\n\nexport default class VersionManager {\n  private static _defaultVersion = new Date().toISOString();\n\n  static get sdkVersion(): string {\n    try {\n      return __SDKVERSION__;\n    } catch (e) {\n      return this._defaultVersion;\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {LoggingLevel} from '../logger/Logger';\nimport VersionManager from '../sdk/version/VersionManager';\nimport TelemetryConfiguration from './TelemetryConfiguration';\n\nconst requestSizeLimit = 8192;\n\ninterface ILogItem {\n  timestamp: string;\n  tenancy: string;\n  level: string;\n  category: string;\n  message: string;\n  sessionId: string;\n  version: string;\n  environment: string;\n  fullQualifiedName: string;\n}\n\nexport default class TelemetryService {\n  private readonly _telemetryConfiguration: TelemetryConfiguration;\n\n  private _logs: Array<ILogItem> = [];\n  private _isSending: boolean;\n  private _domain = location.hostname;\n\n  constructor(telemetryConfiguration: TelemetryConfiguration) {\n    this._telemetryConfiguration = telemetryConfiguration;\n  }\n\n  push(logLevel: LoggingLevel, message: string, category: string, timestamp: Date): void {\n    const logRecord = {\n      timestamp: timestamp.toISOString(),\n      tenancy: this._telemetryConfiguration.tenancy,\n      level: LoggingLevel[logLevel],\n      category,\n      message,\n      sessionId: this._telemetryConfiguration.sessionId,\n      version: VersionManager.sdkVersion,\n      environment: this._telemetryConfiguration.environment,\n      fullQualifiedName: this._domain\n    };\n\n    if (logLevel < LoggingLevel.Error) {\n      this._logs.push(logRecord);\n    } else {\n      this._logs.unshift(logRecord);\n    }\n\n    const ignored = this.sendLogsIfAble();\n  }\n\n  private async sendLogs(logMessages: Array<ILogItem>): Promise<Response | void> {\n    const formData = new FormData();\n\n    formData.append('jsonBody', JSON.stringify({records: logMessages}));\n\n    return await fetch(this._telemetryConfiguration.url, {\n      method: 'POST',\n      body: formData\n    });\n  }\n\n  private async sendLogsIfAble(): Promise<Response | void> {\n    if (this._logs.length <= 0 || this._isSending) {\n      return;\n    }\n\n    let numberOfLogsToSend = 0;\n    let sizeOfLogsToSend = 0;\n\n    this._isSending = true;\n\n    const getLogSize = (log: ILogItem): number => Object.values(log)\n      .reduce((sum, item) => sum + (item ? item.length : 0), 0);\n\n    while (this._logs.length > numberOfLogsToSend && getLogSize(this._logs[numberOfLogsToSend]) + sizeOfLogsToSend < requestSizeLimit) {\n      sizeOfLogsToSend += getLogSize(this._logs[numberOfLogsToSend]);\n      numberOfLogsToSend++;\n    }\n\n    if (!numberOfLogsToSend) {\n      this._logs[numberOfLogsToSend].message = this._logs[numberOfLogsToSend].message.substring(0,\n        getLogSize(this._logs[numberOfLogsToSend]) + (requestSizeLimit - getLogSize(this._logs[numberOfLogsToSend])));\n      numberOfLogsToSend = 1;\n    }\n\n    const logMessages = this._logs.slice(0, numberOfLogsToSend);\n\n    this._logs = this._logs.slice(numberOfLogsToSend);\n\n    return this.sendLogs(logMessages).then(response => {\n      this._isSending = false;\n\n      const ignored = this.sendLogsIfAble();\n\n      return response;\n    }).catch(() => {\n      this._isSending = false;\n\n      const ignored = this.sendLogsIfAble();\n    });\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport TelemetryDefault from './TelemetryDefault';\n\nexport enum TelemetryLevel {\n  Off = 100,\n  Essential = 10,\n  All = -1\n}\n\nexport type TelemetryLevelType = 'Off' | 'Essential' | 'All';\n\nexport default class MetricsConfiguration {\n  private _url = 'https://telemetry.phenixrts.com/telemetry/metrics';\n  private _tenancy: string;\n  private _sessionId: string;\n  private _environment: string;\n  private _threshold: TelemetryLevel = TelemetryDefault.defaultTelemetryLevel;\n\n  get url(): string {\n    return this._url;\n  }\n\n  set url(url: string) {\n    const metricsUrl = new URL(url);\n\n    metricsUrl.pathname = metricsUrl.pathname + '/metrics';\n\n    this._url = metricsUrl.toString();\n  }\n\n  get environment(): string {\n    return this._environment;\n  }\n\n  set environment(environment: string) {\n    this._environment = environment;\n  }\n\n  get tenancy(): string {\n    return this._tenancy;\n  }\n\n  set tenancy(tenancy: string) {\n    this._tenancy = tenancy;\n  }\n\n  get sessionId(): string {\n    return this._sessionId;\n  }\n\n  set sessionId(sessionId: string) {\n    this._sessionId = sessionId;\n  }\n\n  get threshold(): TelemetryLevel {\n    return this._threshold;\n  }\n\n  set threshold(threshold: TelemetryLevel) {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport TelemetryService from './TelemetryService';\nimport TelemetryConfiguration from './TelemetryConfiguration';\nimport {IAppender} from '../logger/IAppender';\nimport {LoggingLevel} from '../logger/Logger';\n\nexport default class TelemetryAppender implements IAppender {\n  private readonly _telemetryService: TelemetryService;\n  private readonly _tenancy: string;\n  private readonly _sessionId: string;\n  private readonly _threshold: LoggingLevel;\n\n  constructor(telemetryConfiguration: TelemetryConfiguration) {\n    this._tenancy = telemetryConfiguration.tenancy;\n    this._sessionId = telemetryConfiguration.sessionId;\n    this._threshold = telemetryConfiguration.threshold;\n    this._telemetryService = new TelemetryService(telemetryConfiguration);\n  }\n\n  log(logLevel: LoggingLevel, message: string, category: string, date: Date): void {\n    if (logLevel < this._threshold) {\n      return;\n    }\n\n    this._telemetryService.push(logLevel, message, category, date);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {LoggingLevel} from '../logger/Logger';\nimport LoggerDefaults from '../logger/LoggerDefaults';\n\nexport default class TelemetryConfiguration {\n  private _url = 'https://telemetry.phenixrts.com/telemetry/logs';\n  private _tenancy: string;\n  private _sessionId: string;\n  private _environment: string;\n  private _threshold = LoggerDefaults.defaultTelemetryLoggingLevel;\n\n  get url(): string {\n    return this._url;\n  }\n\n  set url(url: string) {\n    const telemetryUrl = new URL(url);\n\n    telemetryUrl.pathname = telemetryUrl.pathname + '/logs';\n\n    this._url = telemetryUrl.toString();\n  }\n\n  get environment(): string {\n    return this._environment;\n  }\n\n  set environment(environment: string) {\n    this._environment = environment;\n  }\n\n  get tenancy(): string {\n    return this._tenancy;\n  }\n\n  set tenancy(tenancy: string) {\n    this._tenancy = tenancy;\n  }\n\n  get sessionId(): string {\n    return this._sessionId;\n  }\n\n  set sessionId(sessionId: string) {\n    this._sessionId = sessionId;\n  }\n\n  get threshold(): LoggingLevel {\n    return this._threshold;\n  }\n\n  set threshold(threshold: LoggingLevel) {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport PrivacyMode from '../dom/PrivacyMode';\nimport {TelemetryLevel} from '../metrics/MetricsConfiguration';\n\nexport default class TelemetryDefault {\n  static get defaultTelemetryLevel(): TelemetryLevel {\n    return PrivacyMode.isPrivate ? TelemetryLevel.Essential : TelemetryLevel.All;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport function assertUnreachable(x: never): never {\n  throw new Error(`Unexpected value [${x}]. This should never be reached`);\n}\n\nexport default assertUnreachable;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {TelemetryLevel, TelemetryLevelType} from './MetricsConfiguration';\nimport assertUnreachable from '../lang/assertUnreachable';\n\nexport default class TelemetryLevelMapping {\n  static convertTelemetryLevelToTelemetryLevelType(telemetryLevel: TelemetryLevel): TelemetryLevelType {\n    switch (telemetryLevel) {\n      case TelemetryLevel.Off:\n        return 'Off';\n      case TelemetryLevel.Essential:\n        return 'Essential';\n      case TelemetryLevel.All:\n        return 'All';\n      default:\n        assertUnreachable(telemetryLevel);\n    }\n  }\n\n  static convertTelemetryLevelTypeToTelemetryLevel(telemetryLevelType: TelemetryLevelType): TelemetryLevel {\n    switch (telemetryLevelType) {\n      case 'Off':\n        return TelemetryLevel.Off;\n      case 'Essential':\n        return TelemetryLevel.Essential;\n      case 'All':\n        return TelemetryLevel.All;\n      default:\n        assertUnreachable(telemetryLevelType);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport assertUnreachable from '../lang/assertUnreachable';\nimport {LoggingLevel, LoggingLevelType} from './Logger';\n\nexport default class LoggingLevelMapping {\n  static convertLoggingLevelToLoggingLevelType(loggingLevel: LoggingLevel): LoggingLevelType {\n    switch (loggingLevel) {\n      case LoggingLevel.Off:\n        return 'Off';\n      case LoggingLevel.Trace:\n        return 'Trace';\n      case LoggingLevel.Debug:\n        return 'Debug';\n      case LoggingLevel.Info:\n        return 'Trace';\n      case LoggingLevel.Warn:\n        return 'Warn';\n      case LoggingLevel.Error:\n        return 'Error';\n      case LoggingLevel.Fatal:\n        return 'Fatal';\n      case LoggingLevel.All:\n        return 'All';\n      default:\n        assertUnreachable(loggingLevel);\n    }\n  }\n\n  static convertLoggingLevelTypeToLoggingLevel(loggingLevelType: LoggingLevelType): LoggingLevel {\n    switch (loggingLevelType) {\n      case 'Off':\n        return LoggingLevel.Off;\n      case 'Trace':\n        return LoggingLevel.Trace;\n      case 'Debug':\n        return LoggingLevel.Debug;\n      case 'Info':\n        return LoggingLevel.Info;\n      case 'Warn':\n        return LoggingLevel.Warn;\n      case 'Error':\n        return LoggingLevel.Error;\n      case 'Fatal':\n        return LoggingLevel.Fatal;\n      case 'All':\n        return LoggingLevel.All;\n      default:\n        assertUnreachable(loggingLevelType);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport TelemetryDefault from '../metrics/TelemetryDefault';\nimport TelemetryLevelMapping from '../metrics/TelemetricLevelMapping';\nimport LoggingLevelMapping from '../logger/LoggingLevelMapping';\nimport LoggerDefaults from '../logger/LoggerDefaults';\n\nexport default class ConfigurationParameterReader {\n  getStringValue(name: string): string {\n    return this.readConfigurationParameterValue(name) ||\n      this.readConfigurationParameterURIValue(`${name}-uri-parameter-name`) ||\n      this.defaultStringValue[name];\n  }\n\n  getBooleanValue(name: string): boolean {\n    const value = this.readConfigurationParameterValue(name);\n\n    if (value) {\n      return value === 'true' || value === '1' || value === 'On';\n    }\n\n    const valueFromUri = this.readConfigurationParameterURIValue(`${name}-uri-parameter-name`);\n\n    if (valueFromUri) {\n      return value === 'true' || value === '1' || value === 'On';\n    }\n\n    return this.defaultBooleanValue[name] === true;\n  }\n\n  private get defaultStringValue(): { [name: string]: string} {\n    return {\n      'phenix-metrics-level': TelemetryLevelMapping.convertTelemetryLevelToTelemetryLevelType(TelemetryDefault.defaultTelemetryLevel),\n      'phenix-logging-level': LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(LoggerDefaults.defaultLoggingLevel),\n      'phenix-console-logging-level': LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(LoggerDefaults.defaultConsoleLoggingLevel),\n      'phenix-telemetry-logging-level': LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(LoggerDefaults.defaultTelemetryLoggingLevel),\n      'phenix-channel-token': '',\n      'phenix-uri': '',\n      'phenix-base-uri': ''\n    };\n  }\n\n  private get defaultBooleanValue(): { [name: string]: boolean } {\n    return {\n      'phenix-automatically-retry-on-failure': true,\n      'phenix-automatically-reconnect-peer-connection': true\n    };\n  }\n\n  private readConfigurationParameterValue(name: string): string {\n    const metaValue = document.querySelector(`meta[name='${name}']`);\n\n    if (!metaValue) {\n      return;\n    }\n\n    const value = metaValue.getAttribute('value');\n\n    if (!value) {\n      return;\n    }\n\n    return value;\n  }\n\n  private readConfigurationParameterURIValue(name: string): string {\n    const valueURIParameterName = this.readConfigurationParameterValue(name);\n\n    if (!valueURIParameterName) {\n      return;\n    }\n\n    const value = new URLSearchParams(location.search).get(valueURIParameterName) || undefined;\n\n    if (!value) {\n      return;\n    }\n\n    return value;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {ILogger} from './LoggerInterface';\nimport Logger, {LoggingLevel} from './Logger';\nimport Appenders from './Appenders';\nimport LoggingThreshold from './LoggingThreshold';\nimport ConsoleAppender from './ConsoleAppender';\nimport TelemetryAppender from '../telemetry/TelemetryApender';\nimport TelemetryConfiguration from '../telemetry/TelemetryConfiguration';\nimport ConfigurationParameterReader from '../dom/ConfigurationParameterReader';\nimport {IConfigurationParameterReader} from '../dom/IConfigurationParamaterReader';\nimport LoggerDefaults from './LoggerDefaults';\n\nexport default class LoggerFactory {\n  private static _configurationParameterReader: IConfigurationParameterReader = new ConfigurationParameterReader();\n  private static _loggers: {[category: string]: ILogger} = {};\n  private static _appenders: Appenders = new Appenders();\n  private static _threshold: LoggingThreshold = new LoggingThreshold();\n  private static _telemetryConfiguration: TelemetryConfiguration = new TelemetryConfiguration();\n\n  static get telemetryConfiguration(): TelemetryConfiguration {\n    return LoggerFactory._telemetryConfiguration;\n  }\n\n  static getLogger(category: string): ILogger {\n    if (typeof category !== 'string') {\n      category = 'SDK';\n    }\n\n    const logger = LoggerFactory._loggers[category];\n\n    if (logger) {\n      return logger;\n    }\n\n    return LoggerFactory._loggers[category] = new Logger(category, this._appenders, this._threshold);\n  }\n\n  static applyLoggerConfigFromParameterConfiguration(): void {\n    LoggerFactory.applyLoggingLevel();\n    LoggerFactory.applyAppenderLoggingLevel('console', LoggerFactory.applyConsoleLogger.bind(this));\n    LoggerFactory.applyAppenderLoggingLevel('telemetry', LoggerFactory.applyTelemetryLogger.bind(this));\n  }\n\n  private static applyLoggingLevel(): void {\n    const parameterValue = this._configurationParameterReader.getStringValue('phenix-logging-level');\n\n    if (LoggingLevel[parameterValue]) {\n      this._threshold.setThreshold(LoggingLevel[parameterValue]);\n    }\n\n    return;\n  }\n\n  private static applyAppenderLoggingLevel(name: string, applyAppender: (level: LoggingLevel) => void): void {\n    const parameterValue = this._configurationParameterReader.getStringValue(`phenix-${name}-logging-level`);\n\n    if (parameterValue === 'Off') {\n      return;\n    }\n\n    applyAppender(LoggingLevel[parameterValue]);\n  }\n\n  private static applyConsoleLogger(level: LoggingLevel): void {\n    this._appenders.add(new ConsoleAppender(level || LoggerDefaults.defaultConsoleLoggingLevel));\n  }\n\n  private static applyTelemetryLogger(level: LoggingLevel): void {\n    this._telemetryConfiguration.threshold = level || LoggerDefaults.defaultTelemetryLoggingLevel;\n\n    this._appenders.add(new TelemetryAppender(this._telemetryConfiguration));\n  }\n\n  private constructor() {\n    throw new Error('LoggerFactory is a static class that may not be instantiated');\n  }\n}\n\nLoggerFactory.applyLoggerConfigFromParameterConfiguration();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport default class Strings {\n  static random(length: number): string {\n    const random13Characters = (): string => {\n      return Math.random().toString(16).substring(2, 15);\n    };\n\n    const loops: number = Math.ceil(length / 13);\n\n    return new Array(loops).fill(random13Characters).reduce((string, func) => {\n      return string + func();\n    }, '').substring(0, length);\n  }\n\n  private constructor() {\n    throw new Error('Strings is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IDisposable from './IDisposable';\n\nexport default class Disposable implements IDisposable {\n  private _disposed: boolean;\n  private _disposable: () => void;\n\n  constructor(disposable: () => void) {\n    this._disposed = false;\n    this._disposable = disposable;\n  }\n\n  dispose(): void {\n    if (this._disposed) {\n      return;\n    }\n\n    this._disposed = true;\n\n    return this._disposable.call(this);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport IDisposable from '../lang/IDisposable';\nimport Disposable from '../lang/Disposable';\nimport IComparable from '../lang/IComparable';\n\nclass DisposableListener<T> extends Disposable {\n  constructor(listeners: Array<T>, listener: T) {\n    super(() => {\n      const idx = listeners.indexOf(listener);\n\n      if (idx >= 0) {\n        listeners.splice(idx, 1);\n      }\n    });\n  }\n}\n\nexport default class Subject<T> {\n  private readonly _listeners: Array<(T) => void>;\n  private _value: T;\n\n  constructor(value: T) {\n    this._listeners = [];\n    this._value = value;\n  }\n\n  set value(value: T) {\n    let changed = this._value !== value;\n\n    if (changed && value) {\n      const comparable = value as unknown as IComparable<T>;\n\n      if (typeof comparable.equals === 'function') {\n        changed = !comparable.equals(this._value);\n      }\n    }\n\n    if (!changed) {\n      return;\n    }\n\n    this._value = value;\n\n    this._listeners.forEach(listener => {\n      listener(value);\n    });\n  }\n\n  get value(): T {\n    return this._value;\n  }\n\n  subscribe(listener: (T) => void): IDisposable {\n    this._listeners.push(listener);\n\n    listener(this._value);\n\n    return new DisposableListener<(T) => void>(this._listeners, listener);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport Subject from './Subject';\nimport IDisposable from '../lang/IDisposable';\n\nexport default class ReadOnlySubject<T> {\n  private readonly _subject: Subject<T>;\n\n  constructor(subject: Subject<T>) {\n    this._subject = subject;\n  }\n\n  get value(): T {\n    return this._subject.value;\n  }\n\n  subscribe(listener: (T) => void): IDisposable {\n    return this._subject.subscribe(listener);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport default class BrowserDetector {\n  private static readonly _browserNameAndVersionRegex = /(MSIE|(?!Gecko.+)Firefox|(?!AppleWebKit.+Chrome.+)Safari|(?!AppleWebKit.+)Chrome|AppleWebKit(?!.+Chrome|.+Safari)|Gecko(?!.+Firefox))(?: |\\/)([\\d.apre]+)/g;\n  private static readonly _browserNameAndVersion = BrowserDetector.parseBrowserNameAndVersion();\n  private static readonly _browserName = BrowserDetector.parseBrowserName();\n  private static readonly _browserMajorVersion = BrowserDetector.parseBrowserMajorVersion();\n\n  private static readonly _isChrome69 = BrowserDetector._browserNameAndVersion.includes('Chrome/69.');\n  private static readonly _isChrome70 = BrowserDetector._browserNameAndVersion.includes('Chrome/70.');\n  private static readonly _isChrome71 = BrowserDetector._browserNameAndVersion.includes('Chrome/71.');\n  private static readonly _isChrome72 = BrowserDetector._browserNameAndVersion.includes('Chrome/72.');\n  private static readonly _isChrome74 = BrowserDetector._browserNameAndVersion.includes('Chrome/74.');\n  private static readonly _isChrome75 = BrowserDetector._browserNameAndVersion.includes('Chrome/75.');\n  private static readonly _isChrome76 = BrowserDetector._browserNameAndVersion.includes('Chrome/76.');\n  private static readonly _isChrome77 = BrowserDetector._browserNameAndVersion.includes('Chrome/77.');\n\n  static get browserNameAndVersion(): string {\n    return BrowserDetector._browserNameAndVersion;\n  }\n\n  static get browserName(): string {\n    return this._browserName;\n  }\n\n  static get browserMajorVersion(): number {\n    return this._browserMajorVersion;\n  }\n\n  static get isChrome69(): boolean {\n    return BrowserDetector._isChrome69;\n  }\n\n  static get isChrome70(): boolean {\n    return BrowserDetector._isChrome70;\n  }\n\n  static get isChrome71(): boolean {\n    return BrowserDetector._isChrome71;\n  }\n\n  static get isChrome72(): boolean {\n    return BrowserDetector._isChrome72;\n  }\n\n  static get isChrome74(): boolean {\n    return BrowserDetector._isChrome74;\n  }\n\n  static get isChrome75(): boolean {\n    return BrowserDetector._isChrome75;\n  }\n\n  static get isChrome76(): boolean {\n    return BrowserDetector._isChrome76;\n  }\n\n  static get isChrome77(): boolean {\n    return BrowserDetector._isChrome77;\n  }\n\n  private static parseBrowserNameAndVersion(): string {\n    if (!navigator || !navigator.userAgent) {\n      return '';\n    }\n\n    const browserNameAndVersion = navigator.userAgent.match(BrowserDetector._browserNameAndVersionRegex);\n\n    if (browserNameAndVersion && browserNameAndVersion[0]) {\n      return browserNameAndVersion[0];\n    }\n\n    return BrowserDetector.parseBrowserNameAndVersionForIE();\n  }\n\n  private static parseBrowserName(): string {\n    if (!BrowserDetector._browserNameAndVersion) {\n      return '';\n    }\n\n    const browserNameList = BrowserDetector._browserNameAndVersion.split('/');\n\n    if (!browserNameList || !browserNameList[0]) {\n      return '';\n    }\n\n    return browserNameList[0];\n  }\n\n  private static parseBrowserMajorVersion(): number {\n    if (!BrowserDetector._browserNameAndVersion) {\n      return 0;\n    }\n\n    const browserVersionList = BrowserDetector._browserNameAndVersion.split('/');\n\n    if (!browserVersionList || !browserVersionList[1]) {\n      return 0;\n    }\n\n    const fullVersion = browserVersionList[1];\n\n    if (!fullVersion) {\n      return 0;\n    }\n\n    return Number(fullVersion.split('.')[0]) || 0;\n  }\n\n  private static parseBrowserNameAndVersionForIE(): string {\n    if (!navigator || !navigator.userAgent) {\n      return '';\n    }\n\n    const userAgent = navigator.userAgent;\n    const msie = userAgent.indexOf('MSIE ');\n\n    if (msie > 0) {\n      // IE 10 or older => return version number\n      return `IE/${parseInt(userAgent.substring(msie + 5, userAgent.indexOf('.', msie)), 10)}`;\n    }\n\n    const trident = userAgent.indexOf('Trident/');\n\n    if (trident > 0) {\n      // IE 11 => return version number\n      const version = userAgent.indexOf('rv:');\n\n      return `IE/${parseInt(userAgent.substring(version + 3, userAgent.indexOf('.', version)), 10)}`;\n    }\n\n    return '';\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport BrowserDetector from '../../dom/BrowserDetector';\n\nexport default class FeatureEnablement {\n  static get clientOfferDisabled(): boolean {\n    // Client offer workflow does not work correctly in the following browsers\n    return BrowserDetector.isChrome74 ||\n      BrowserDetector.isChrome75 ||\n      BrowserDetector.isChrome76 ||\n      BrowserDetector.isChrome77;\n  }\n\n  static get addTranceiverDisabled(): boolean {\n    // Chrome 69, 70, 71, 72 exposes `addTranceiver` but it does not work correctly\n    return BrowserDetector.isChrome69 ||\n      BrowserDetector.isChrome70 ||\n      BrowserDetector.isChrome71 ||\n      BrowserDetector.isChrome72;\n  }\n\n  static get getStatsPromiseBasedDisabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 66;\n  }\n\n  static get getCurrentOfferDisabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 69 ||\n      BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion <= 56;\n  }\n\n  static get onTrackDisabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 63 ||\n      BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion <= 52;\n  }\n\n  static get webkitRTCPeerConnectionEnabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 55;\n  }\n\n  static get promiseBasedPCMethodsDisabled(): boolean {\n    return BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion <= 52;\n  }\n\n  static get shouldUseNativeHls(): boolean {\n    return BrowserDetector.browserName === 'Safari' ||\n      BrowserDetector.browserName === 'SamsungBrowser';\n  }\n\n  static get isRTMPEnabled(): boolean {\n    return (BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion < 84) ||\n      (BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion < 70) ||\n      BrowserDetector.browserName === 'Edge' ||\n      BrowserDetector.browserName === 'IE';\n  }\n\n  static get isPrecachingEnabled(): boolean {\n    return BrowserDetector.browserName !== 'IE';\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport IPeerConnection, {PeerConnectionEvents} from './IPeerConnection';\nimport {ILogger} from '../logger/LoggerInterface';\nimport FeatureEnablement from '../sdk/feature/FeatureEnablement';\nimport {ILegacyRTCStatsReport} from './RtcConnectionMonitor';\n\nclass VanillaPeerConnection implements IPeerConnection {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('VanillaPeerConnection');\n  private readonly _peerConnection: RTCPeerConnection;\n\n  constructor(configuration?: RTCConfiguration) {\n    if (FeatureEnablement.webkitRTCPeerConnectionEnabled) {\n      this._peerConnection = new webkitRTCPeerConnection(configuration);\n\n      return;\n    }\n\n    this._peerConnection = new RTCPeerConnection(configuration);\n  }\n\n  get native(): RTCPeerConnection {\n    return this._peerConnection;\n  }\n\n  get currentLocalDescription(): RTCSessionDescription | null {\n    return this._peerConnection.currentLocalDescription;\n  }\n\n  get currentRemoteDescription(): RTCSessionDescription | null {\n    return this._peerConnection.currentRemoteDescription;\n  }\n\n  get iceConnectionState(): RTCIceConnectionState {\n    return this._peerConnection.iceConnectionState;\n  }\n\n  get supportsGetConfiguration(): boolean {\n    return typeof this._peerConnection.getConfiguration === 'function';\n  }\n\n  get supportsSetConfiguration(): boolean {\n    return typeof this._peerConnection.setConfiguration === 'function';\n  }\n\n  get supportsAddTransceiver(): boolean {\n    return !FeatureEnablement.addTranceiverDisabled && typeof this._peerConnection.addTransceiver === 'function';\n  }\n\n  async createOffer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit> {\n    if (FeatureEnablement.promiseBasedPCMethodsDisabled) {\n      // Ignored as leagcy createOffer method with callbacks is deprecated\n      // Requires a ts-ignore directive to prevent typescript errors\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return new Promise((resolve, reject) => this._peerConnection.createOffer(resolve, reject, options));\n    }\n\n    return this._peerConnection.createOffer(options);\n  }\n\n  async createAnswer(options?: RTCAnswerOptions): Promise<RTCSessionDescriptionInit> {\n    if (FeatureEnablement.promiseBasedPCMethodsDisabled) {\n      // Ignored as leagcy createAnswer method with callbacks is deprecated\n      // Requires a ts-ignore directive to prevent typescript errors\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return new Promise((resolve, reject) => this._peerConnection.createAnswer(resolve, reject, options));\n    }\n\n    return this._peerConnection.createAnswer(options);\n  }\n\n  async setLocalDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    return this._peerConnection.setLocalDescription(FeatureEnablement.promiseBasedPCMethodsDisabled ?\n      new RTCSessionDescription(description) : description);\n  }\n\n  async setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    const hasCrypto = description.sdp?.match(/a=crypto:/i);\n\n    if (hasCrypto) {\n      this._logger.warn('SDP a=crypto is not supported');\n    }\n\n    return this._peerConnection.setRemoteDescription(FeatureEnablement.promiseBasedPCMethodsDisabled ?\n      new RTCSessionDescription(description) : description);\n  }\n\n  getSenders(): RTCRtpSender[] {\n    return this._peerConnection.getSenders();\n  }\n\n  getStats(selector?: MediaStreamTrack | null): Promise<RTCStatsReport> {\n    return this._peerConnection.getStats(selector);\n  }\n\n  getStatsLegacy(): Promise<ILegacyRTCStatsReport> {\n    return new Promise(resolve => {\n      // Ignored due to typescript not having legacy 'getStats' method type definition\n      // This was a Chrome specific implementation of the 'getStats' method for\n      // Chrome@<= 66 detailed here: https://bugs.chromium.org/p/chromium/issues/detail?id=627816\n      // Requires a ts-ignore directive to prevent typescript errors\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const ignored = this._peerConnection.getStats(resolve);\n    });\n  }\n\n  addEventListener(type: PeerConnectionEvents, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\n    this._peerConnection.addEventListener(type, listener, options);\n  }\n\n  removeEventListener(type: PeerConnectionEvents, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void {\n    this._peerConnection.removeEventListener(type, listener, options);\n  }\n\n  addTransceiver(name: string, options: RTCRtpTransceiverInit): RTCRtpTransceiver {\n    return this._peerConnection.addTransceiver(name, options);\n  }\n\n  addStream(mediaStream: MediaStream): void {\n    mediaStream.getTracks().forEach(track => {\n      this._peerConnection.addTrack(track);\n    });\n  }\n\n  getConfiguration(): RTCConfiguration {\n    return this._peerConnection.getConfiguration();\n  }\n\n  setConfiguration(configuration: RTCConfiguration): void {\n    this._peerConnection.setConfiguration(configuration);\n  }\n\n  set ontrack(handler: ((this: RTCPeerConnection, ev: RTCTrackEvent) => unknown) | null) {\n    this._peerConnection.ontrack = handler;\n  }\n\n  get ontrack(): ((this: RTCPeerConnection, ev: RTCTrackEvent) => unknown) | null {\n    return this._peerConnection.ontrack;\n  }\n\n  set onicecandidate(handler: ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => unknown) | null) {\n    this._peerConnection.onicecandidate = handler;\n  }\n\n  get onicecandidate(): ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => unknown) | null {\n    return this._peerConnection.onicecandidate;\n  }\n\n  set oniceconnectionstatechange(handler: ((this: RTCPeerConnection, ev: Event) => unknown) | null) {\n    this._peerConnection.oniceconnectionstatechange = handler;\n  }\n\n  get oniceconnectionstatechange(): ((this: RTCPeerConnection, ev: Event) => unknown) | null {\n    return this._peerConnection.oniceconnectionstatechange;\n  }\n\n  close(): void {\n    this._peerConnection.close();\n  }\n}\n\nexport default VanillaPeerConnection;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport IPeerConnectionFactory from './IPeerConnectionFactory';\nimport IPeerConnection from './IPeerConnection';\nimport VanillaPeerConnection from './VanillaPeerConnection';\n\nclass VanillaPeerConnectionFactory implements IPeerConnectionFactory {\n  async createPeerConnection(configuration?: RTCConfiguration): Promise<IPeerConnection> {\n    return new VanillaPeerConnection(configuration);\n  }\n}\n\nexport default VanillaPeerConnectionFactory;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport {IEdgeAuth} from './EdgeAuthToken';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport {EdgeToken} from './EdgeToken';\n\nconst edgeAuthTokenPrefix = 'DIGEST:';\n\nexport default class EdgeAuth {\n  private static _logger: ILogger = LoggerFactory.getLogger('EdgeAuth');\n\n  static parseToken(token: EdgeToken): IEdgeAuth {\n    if (!this.isValidToken(token)) {\n      EdgeAuth._logger.error('Token is not valid [%s]', token);\n\n      return undefined;\n    }\n\n    try {\n      const encodedEdgeAuthToken = atob(token.substr(edgeAuthTokenPrefix.length));\n      const edgeAuthToken = JSON.parse(encodedEdgeAuthToken);\n\n      edgeAuthToken.token = JSON.parse(edgeAuthToken.token);\n\n      return edgeAuthToken;\n    } catch (e) {\n      EdgeAuth._logger.error('Cannot parse token value', e);\n\n      return undefined;\n    }\n  }\n\n  static getUri(parsedToken: IEdgeAuth): URL {\n    return parsedToken && parsedToken.token && parsedToken.token.uri ?\n      new URL(parsedToken.token.uri) : null;\n  }\n\n  static getTenancy(parsedToken: IEdgeAuth): string {\n    return parsedToken && parsedToken.applicationId ?\n      parsedToken.applicationId : '';\n  }\n\n  static isValidToken(token: EdgeToken): boolean {\n    return !!token && token.startsWith(edgeAuthTokenPrefix);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nenum MetricsType {\n  TimeToFirstFrame,\n  ChannelCreationTimeToFirstFrame,\n  Stalled,\n  Buffering,\n  SetupCompleted,\n  SetupFailed,\n  RoundTripTime,\n  DownlinkThroughputCapacity,\n  NetworkType,\n  ResolutionChanged,\n  ApplicationForeground,\n  ApplicationBackground\n}\n\nexport default MetricsType;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IDisposable from './IDisposable';\n\nexport default class DisposableList {\n  private readonly _list: IDisposable[] = [];\n\n  add(disposable: IDisposable): void {\n    this._list.push(disposable);\n  }\n\n  dispose(): void {\n    this._list.forEach(disposable => disposable.dispose());\n    this._list.length = 0;\n  }\n\n  toString(): string {\n    return `DisposableList[disposables=${this._list.length}]`;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Disposable from '../lang/Disposable';\nimport Subject from '../rx/Subject';\nimport ReadOnlySubject from '../rx/ReadOnlySubject';\nimport DisposableList from '../lang/DisposableList';\n\nconst defaultDocumentFocusIntervalTimeout = 3000;\n\nexport default class ApplicationActivityMonitor {\n  private readonly _disposables: DisposableList = new DisposableList();\n  private readonly _readOnlyIsForeground: ReadOnlySubject<boolean>;\n  private readonly _isForeground: Subject<boolean>;\n  private _timeOfLastTabFocusChange: number = Date.now();\n  private _documentFocusInterval: number;\n\n  constructor() {\n    this._isForeground = new Subject<boolean>(true);\n    this._readOnlyIsForeground = new ReadOnlySubject(this._isForeground);\n    this.detectTabFocusChange();\n  }\n\n  get isForeground(): ReadOnlySubject<boolean> {\n    return this._readOnlyIsForeground;\n  }\n\n  getTimeSinceLastChange(): number {\n    return Date.now() - this._timeOfLastTabFocusChange;\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private detectTabFocusChange(): void {\n    let hidden;\n    let visibilityChange;\n\n    if (typeof document !== 'object') {\n      return;\n    }\n\n    // Due to typescript not having a definition for 'msHidden' or 'webkitHidden' types\n    // Required to @ts-ignore to prevent typescript errors\n    /* eslint-disable @typescript-eslint/ban-ts-comment */\n    // @ts-ignore\n    if (typeof document.msHidden !== 'undefined') {\n      hidden = 'msHidden';\n      visibilityChange = 'msvisibilitychange';\n      // @ts-ignore\n    } else if (typeof document.webkitHidden !== 'undefined') {\n      hidden = 'webkitHidden';\n      visibilityChange = 'webkitvisibilitychange';\n    } else if (typeof document.hidden !== 'undefined') { // Opera 12.10 and Firefox 18 and later support\n      hidden = 'hidden';\n      visibilityChange = 'visibilitychange';\n    }\n    /* eslint-enable @typescript-eslint/ban-ts-comment */\n\n    const handleVisibilityChange = (): void => {\n      const isForeground = !document[hidden];\n\n      this.setFocusState(isForeground);\n    };\n\n    if (typeof document.addEventListener !== 'undefined' && typeof document[hidden] !== 'undefined') {\n      document.addEventListener(visibilityChange, handleVisibilityChange, false);\n\n      this._disposables.add(new Disposable(() => {\n        document.removeEventListener(visibilityChange, handleVisibilityChange, false);\n      }));\n    } else {\n      this.listenForDocumentFocus.call(this);\n    }\n  }\n\n  private listenForDocumentFocus(): void {\n    this._documentFocusInterval = window.setInterval(() => {\n      const isForeground = document.hasFocus();\n\n      this.setFocusState(isForeground);\n    }, defaultDocumentFocusIntervalTimeout);\n\n    this._disposables.add(new Disposable(() => {\n      if (this._documentFocusInterval) {\n        clearInterval(this._documentFocusInterval);\n      }\n\n      this._documentFocusInterval = null;\n    }));\n  }\n\n  private setFocusState(isForeground): void {\n    if (this._isForeground === isForeground) {\n      return;\n    }\n\n    this._isForeground.value = isForeground;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class TelemetryUrl {\n  static getTelemetryUrl(url: string): string {\n    try {\n      const baseURL = new URL(url);\n      const segments = baseURL.hostname.split('.');\n\n      switch (baseURL.protocol) {\n        case 'ws:':\n          baseURL.protocol = 'http:';\n\n          break;\n        case 'wss:':\n          baseURL.protocol = 'https:';\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (segments.length === 2 ||\n          (segments.length === 3 && segments[segments.length - 2].length <= 2 && segments[segments.length - 1].length <= 3)\n      ) {\n        segments.unshift('telemetry');\n      } else if (segments[0].startsWith('stg-') || segments[0].endsWith('-stg') || segments[0].includes('-stg-') || segments[0] === 'stg') {\n        segments[0] = 'telemetry-stg';\n      } else if (segments[0].startsWith('local') || segments[0].endsWith('-local')) {\n        // Leave URL unchanged\n      } else {\n        segments[0] = 'telemetry';\n      }\n\n      baseURL.hostname = segments.join('.');\n\n      return `${baseURL.origin}/telemetry`;\n    } catch (e) {\n      return url;\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class Environment {\n  static getEnvironmentFromUrl(url: string): string {\n    try {\n      const baseURL = new URL(url);\n\n      return baseURL.origin;\n    } catch (e) {\n      return '';\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport {defaultDiscoveryUri} from '../defaults';\nimport Subject from '../../rx/Subject';\nimport VersionManager from '../version/VersionManager';\n\nexport default class DiscoveryUri {\n  private static readonly _discoveryUri: Subject<string> = new Subject<string>(defaultDiscoveryUri);\n\n  static get uri(): Subject<string> {\n    return DiscoveryUri._discoveryUri;\n  }\n\n  static buildDiscoveryUrl(uri: URL): string {\n    const url = new URL(uri.toString());\n    const sdkVersion = VersionManager.sdkVersion;\n\n    url.search = `?${new URLSearchParams([['version', sdkVersion], ['_', `${Date.now()}`]]).toString()}`;\n\n    if (url.pathname === '/') {\n      url.pathname = '/pcast/endPoints';\n    }\n\n    return url.toString();\n  }\n\n  private constructor() {\n    throw new Error('DiscoveryUri is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nconst defaultDiscoveryUri = 'https://pcast.phenixrts.com/pcast/endPoints';\n\nexport {defaultDiscoveryUri};","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {TelemetryLevel} from './MetricsConfiguration';\nimport assertUnreachable from '../lang/assertUnreachable';\nimport MetricsType from './MetricsType';\n\nexport default class MetricType {\n  private readonly _metrics: MetricsType;\n\n  constructor(metrics: MetricsType) {\n    this._metrics = metrics;\n  }\n\n  getName(): string {\n    return MetricsType[this._metrics];\n  }\n\n  getTelemetryLevel(): TelemetryLevel {\n    switch (this._metrics) {\n      case MetricsType.TimeToFirstFrame:\n        return TelemetryLevel.Essential;\n      case MetricsType.ChannelCreationTimeToFirstFrame:\n        return TelemetryLevel.Essential;\n      case MetricsType.Stalled:\n        return TelemetryLevel.All;\n      case MetricsType.Buffering:\n        return TelemetryLevel.All;\n      case MetricsType.SetupCompleted:\n        return TelemetryLevel.All;\n      case MetricsType.SetupFailed:\n        return TelemetryLevel.All;\n      case MetricsType.RoundTripTime:\n        return TelemetryLevel.All;\n      case MetricsType.DownlinkThroughputCapacity:\n        return TelemetryLevel.All;\n      case MetricsType.NetworkType:\n        return TelemetryLevel.All;\n      case MetricsType.ResolutionChanged:\n        return TelemetryLevel.All;\n      case MetricsType.ApplicationForeground:\n        return TelemetryLevel.All;\n      case MetricsType.ApplicationBackground:\n        return TelemetryLevel.All;\n      default:\n        assertUnreachable(this._metrics);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport VersionManager from '../sdk/version/VersionManager';\nimport MetricsConfiguration from './MetricsConfiguration';\nimport MetricType from './MetricType';\nimport MetricsType from './MetricsType';\n\nconst requestSizeLimit = 1024;\n\ninterface IValue {\n  string?: string;\n  uint64?: number;\n  float?: number;\n}\n\ninterface IMetricRecord {\n  timestamp: string;\n  tenancy: string;\n  sessionId: string;\n  streamId: string;\n  metric: string;\n  value: IValue;\n  previousValue: IValue;\n  fullQualifiedName: string;\n  environment: string;\n  version: string;\n  runtime: number;\n  resource?: string;\n  kind?: string;\n}\n\ninterface IMetric {\n  streamId?: string;\n  metricType: MetricsType;\n  value?: IValue;\n  previousValue?: IValue;\n  runtime: number;\n  resource?: string;\n  kind?: string;\n}\n\nexport default class MetricsService {\n  private readonly _metricsConfiguration: MetricsConfiguration;\n  private _metrics: Array<IMetricRecord> = [];\n  private _isSending: boolean;\n  private _domain = location.hostname;\n\n  constructor(metricsConfiguration: MetricsConfiguration) {\n    this._metricsConfiguration = metricsConfiguration;\n  }\n\n  get metricsConfiguration(): MetricsConfiguration {\n    return this._metricsConfiguration;\n  }\n\n  push(metric: IMetric): void {\n    const {streamId, value, previousValue, runtime, resource, kind} = metric;\n    const metricType = new MetricType(metric.metricType);\n\n    if (this._metricsConfiguration.threshold > metricType.getTelemetryLevel()) {\n      return;\n    }\n\n    const metricRecord = {\n      timestamp: new Date().toISOString(),\n      tenancy: this._metricsConfiguration.tenancy,\n      sessionId: this._metricsConfiguration.sessionId,\n      streamId,\n      metric: metricType.getName(),\n      value,\n      previousValue,\n      fullQualifiedName: this._domain,\n      environment: this._metricsConfiguration.environment,\n      version: VersionManager.sdkVersion,\n      runtime,\n      resource,\n      kind\n    };\n\n    this._metrics.push(metricRecord);\n\n    const ignored = this.sendMetricsIfAble();\n  }\n\n  private async sendMetrics(metricsMessages: Array<IMetricRecord>): Promise<Response | void> {\n    const formData = new FormData();\n\n    formData.append('jsonBody', JSON.stringify({records: metricsMessages}));\n\n    return await fetch(this._metricsConfiguration.url, {\n      method: 'POST',\n      body: formData\n    });\n  }\n\n  private async sendMetricsIfAble(): Promise<Response | void> {\n    if (this._metrics.length <= 0 || this._isSending) {\n      return;\n    }\n\n    this._isSending = true;\n\n    const metricsMessages = this._metrics.slice(0, requestSizeLimit);\n\n    this._metrics = this._metrics.slice(requestSizeLimit);\n\n    return this.sendMetrics(metricsMessages).then(response => {\n      this._isSending = false;\n\n      const ignored = this.sendMetricsIfAble();\n\n      return response;\n    }).catch(() => {\n      this._isSending = false;\n\n      const ignored = this.sendMetricsIfAble();\n    });\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport MetricsService from './MetricsService';\nimport MetricsConfiguration, {TelemetryLevel} from './MetricsConfiguration';\nimport SDK from '../sdk/SDK';\nimport TelemetryUrl from '../sdk/TelemetryUrl';\nimport Environment from '../sdk/Environment';\nimport TelemetryLevelMapping from './TelemetricLevelMapping';\n\nexport default class MetricsFactory {\n  private static _metricsServices: {[category: string]: MetricsService} = {};\n\n  static getMetricsService(url: string): MetricsService {\n    if (typeof url !== 'string') {\n      throw new Error('ur');\n    }\n\n    const metricsServices = MetricsFactory._metricsServices[url];\n\n    if (metricsServices) {\n      return metricsServices;\n    }\n\n    const metricsConfiguration = new MetricsConfiguration();\n\n    metricsConfiguration.sessionId = SDK.clientSessionId;\n    metricsConfiguration.tenancy = SDK.tenancy.value;\n    metricsConfiguration.url = TelemetryUrl.getTelemetryUrl(url);\n    metricsConfiguration.environment = Environment.getEnvironmentFromUrl(url);\n\n    metricsConfiguration.threshold = TelemetryLevelMapping.convertTelemetryLevelTypeToTelemetryLevel(SDK.telemetryLevel);\n\n    return MetricsFactory._metricsServices[url] = new MetricsService(metricsConfiguration);\n  }\n\n  static setTelemetryLevel(telemetryLevel: TelemetryLevel): void {\n    const metricsServices = Object.values(MetricsFactory._metricsServices);\n\n    if (metricsServices && metricsServices.length) {\n      metricsServices.forEach(metricsService => {\n        const metricsConfiguration = metricsService.metricsConfiguration;\n\n        metricsConfiguration.threshold = telemetryLevel;\n      });\n    }\n  }\n\n  private constructor() {\n    throw new Error('LoggerFactory is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport Strings from '../lang/Strings';\nimport Subject from '../rx/Subject';\nimport ReadOnlySubject from '../rx/ReadOnlySubject';\nimport IPeerConnectionFactory from '../rtc/IPeerConnectionFactory';\nimport VanillaPeerConnectionFactory from '../rtc/VanillaPeerConnectionFactory';\nimport EdgeAuth from './edgeAuth/EdgeAuth';\nimport {ILogger} from '../logger/LoggerInterface';\nimport {LoggingLevel, LoggingLevelType} from '../logger/Logger';\nimport ConsoleAppender from '../logger/ConsoleAppender';\nimport TelemetryAppender from '../telemetry/TelemetryApender';\nimport ConfigurationParameterReader from '../dom/ConfigurationParameterReader';\nimport MetricsConfiguration, {TelemetryLevel, TelemetryLevelType} from '../metrics/MetricsConfiguration';\nimport MetricsService from '../metrics/MetricsService';\nimport TelemetryLevelMapping from '../metrics/TelemetricLevelMapping';\nimport LoggingLevelMapping from '../logger/LoggingLevelMapping';\nimport PrivacyMode from '../dom/PrivacyMode';\nimport BrowserDetector from '../dom/BrowserDetector';\nimport {IConfigurationParameterReader} from '../dom/IConfigurationParamaterReader';\nimport ApplicationActivityMonitor from '../dom/ApplicationActivityMonitor';\nimport TelemetryUrl from './TelemetryUrl';\nimport Environment from './Environment';\nimport {HlsPlayerType, ShakaType, WebPlayerType} from './streaming/StreamTypes';\nimport DiscoveryUri from './discovery/DiscoveryUri';\nimport MetricsFactory from '../metrics/MetricsFactory';\nimport TelemetryDefault from '../metrics/TelemetryDefault';\n\nconst pageLoadTime = window['__phenixPageLoadTime'] || window['__pageLoadTime'] || Date.now();\n\ninterface IInitOptions {\n  discoveryUri?: string;\n  peerConnectionFactory?: IPeerConnectionFactory;\n  telemetryLevel?: TelemetryLevelType;\n  loggingLevel?: LoggingLevelType;\n  consoleLoggingLevel?: LoggingLevelType;\n  automaticallyPlayMediaStream?: boolean;\n  automaticallyMuteVideoOnPlayFailure?: boolean;\n  webPlayerLoader?: (player: WebPlayerType) => void;\n  shakaPlayerLoader?: (player: ShakaType) => void;\n  hlsJsLoader?: (player: HlsPlayerType) => void;\n}\n\nexport default class SDK {\n  private static _automaticallyRetryOnFailure = true;\n  private static _automaticallyReconnectPeerConnection = true;\n  private static _automaticallyPlayMediaStream = true;\n  private static _automaticallyMuteVideoOnPlayFailure = true;\n  private static _webPlayerLoader = null;\n  private static _shakaPlayerLoader = null;\n  private static _hlsJsLoader = null;\n  private static _configurationParameterReader: IConfigurationParameterReader = new ConfigurationParameterReader();\n  private static _applicationActivityMonitor: ApplicationActivityMonitor;\n  private static _environment: Subject<string> = new Subject<string>('');\n  private static _telemetryUrl: Subject<string> = new Subject<string>('https://telemetry.phenixrts.com/telemetry');\n  private static _maximalNumberOfPeerConnectionReconnectAttempts = 8;\n  private static _telemetryLevel: Subject<TelemetryLevel> = new Subject<TelemetryLevel>(TelemetryDefault.defaultTelemetryLevel);\n  private static _metricsService: MetricsService;\n  private static _metricsConfiguration: MetricsConfiguration\n  private static readonly _sendLocalCandidates: Subject<boolean> = new Subject(!PrivacyMode.isPrivate);\n  private static readonly _tenancy: Subject<string> = new Subject<string>('');\n  private static readonly _clientSessionId: string = Strings.random(32);\n  private static readonly _loadedTimestamp: Date = new Date();\n  private static readonly _logger: ILogger = LoggerFactory.getLogger('SDK');\n  private static readonly _initialized: Subject<boolean> = new Subject<boolean>(false);\n  private static readonly _peerConnectionFactory: Subject<IPeerConnectionFactory> = new Subject<IPeerConnectionFactory>(new VanillaPeerConnectionFactory());\n  private static readonly _readOnlyInitialized: ReadOnlySubject<boolean> = new ReadOnlySubject<boolean>(SDK._initialized);\n  private static readonly _readOnlyDiscoveryUri: ReadOnlySubject<string> = new ReadOnlySubject<string>(DiscoveryUri.uri);\n  private static readonly _readOnlyPeerConnectionFactory: ReadOnlySubject<IPeerConnectionFactory> = new ReadOnlySubject<IPeerConnectionFactory>(SDK._peerConnectionFactory);\n\n  static get pageLoadTime(): number {\n    return pageLoadTime;\n  }\n\n  static get sendLocalCandidates(): Subject<boolean> {\n    return this._sendLocalCandidates;\n  }\n\n  static get tenancy(): Subject<string> {\n    return this._tenancy;\n  }\n\n  static get clientSessionId(): string {\n    return SDK._clientSessionId;\n  }\n\n  static get loadedTimestamp(): Date {\n    return SDK._loadedTimestamp;\n  }\n\n  static get initialized(): ReadOnlySubject<boolean> {\n    return SDK._readOnlyInitialized;\n  }\n\n  static get discoveryUri(): ReadOnlySubject<string> {\n    return SDK._readOnlyDiscoveryUri;\n  }\n\n  static get peerConnectionFactory(): ReadOnlySubject<IPeerConnectionFactory> {\n    return SDK._readOnlyPeerConnectionFactory;\n  }\n\n  static get automaticRetryOnFailure(): boolean {\n    return SDK._automaticallyRetryOnFailure;\n  }\n\n  static get automaticallyReconnectPeerConnection(): boolean {\n    return SDK._automaticallyReconnectPeerConnection;\n  }\n\n  static get automaticallyPlayMediaStream(): boolean {\n    return SDK._automaticallyPlayMediaStream;\n  }\n\n  static get automaticallyMuteVideoOnPlayFailure(): boolean {\n    return SDK._automaticallyMuteVideoOnPlayFailure;\n  }\n\n  static get webPlayerLoader(): (WebPlayerType) => void {\n    return this._webPlayerLoader;\n  }\n\n  static get shakaPlayerLoader(): (ShakaType) => void {\n    return this._shakaPlayerLoader;\n  }\n\n  static get hlsJsLoader(): (HlsPlayerType) => void {\n    return this._hlsJsLoader;\n  }\n\n  static get metricsService(): MetricsService {\n    return SDK._metricsService;\n  }\n\n  static get applicationActivityMonitor(): ApplicationActivityMonitor {\n    return this._applicationActivityMonitor;\n  }\n\n  static get telemetryUrl(): Subject<string> {\n    return this._telemetryUrl;\n  }\n\n  static get maximalNumberOfPeerConnectionReconnectAttempts(): number {\n    return this._maximalNumberOfPeerConnectionReconnectAttempts;\n  }\n\n  static set maximalNumberOfPeerConnectionReconnectAttempts(retriesAmount: number) {\n    this._maximalNumberOfPeerConnectionReconnectAttempts = retriesAmount;\n  }\n\n  static get loggingLevel(): LoggingLevelType {\n    return LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(this._logger.threshold.value);\n  }\n\n  static get telemetryLevel(): TelemetryLevelType {\n    return TelemetryLevelMapping.convertTelemetryLevelToTelemetryLevelType(SDK._telemetryLevel.value);\n  }\n\n  static get browserDetector(): BrowserDetector {\n    return BrowserDetector;\n  }\n\n  static applyTelemetryConfiguration(): void {\n    const telemetryConfiguration = LoggerFactory.telemetryConfiguration;\n\n    telemetryConfiguration.sessionId = SDK.clientSessionId;\n\n    const ignoredEnvironment = SDK._environment.subscribe(environment => {\n      telemetryConfiguration.environment = environment;\n    });\n    const ignoredDiscoveryUri = SDK.telemetryUrl.subscribe(value => {\n      const telemetryAppender = this._logger.appenders.value.find(appender => appender instanceof TelemetryAppender);\n\n      if (telemetryAppender) {\n        telemetryConfiguration.url = value;\n\n        this._logger.appenders.remove(telemetryAppender);\n        this._logger.appenders.add(new TelemetryAppender(telemetryConfiguration));\n        this._logger.info('Telemetry URL was set to [%s]', telemetryConfiguration.url);\n      }\n    });\n    const ignoredTenancy = SDK._tenancy.subscribe(tenancy => {\n      const telemetryAppender = this._logger.appenders.value.find(appender => appender instanceof TelemetryAppender);\n\n      if (telemetryAppender && tenancy) {\n        telemetryConfiguration.tenancy = tenancy;\n\n        this._logger.appenders.remove(telemetryAppender);\n        this._logger.appenders.add(new TelemetryAppender(telemetryConfiguration));\n        this._logger.info('Telemetry tenancy was set to [%s]', telemetryConfiguration.tenancy);\n      }\n    });\n  }\n\n  static applyMetricsConfiguration(): void {\n    SDK._metricsService = MetricsFactory.getMetricsService(DiscoveryUri.uri.value);\n    SDK._metricsConfiguration = SDK._metricsService.metricsConfiguration;\n\n    SDK._metricsConfiguration.sessionId = SDK.clientSessionId;\n\n    const ignoredEnvironment = SDK._environment.subscribe(environment => {\n      SDK._metricsConfiguration.environment = environment;\n    });\n    const ignoredDiscoveryUri = SDK.telemetryUrl.subscribe(value => {\n      SDK._metricsConfiguration.url = value;\n    });\n    const ignoredTenancy = SDK._tenancy.subscribe(tenancy => {\n      SDK._metricsConfiguration.tenancy = tenancy;\n    });\n    const value = this._configurationParameterReader.getStringValue('phenix-metrics-level');\n\n    if (value) {\n      MetricsFactory.setTelemetryLevel(TelemetryLevel[value]);\n    }\n\n    const ignoredTelemetryLevel = SDK._telemetryLevel.subscribe(telemetryLevel => {\n      MetricsFactory.setTelemetryLevel(telemetryLevel);\n    });\n  }\n\n  static applyAutomaticallyRetryOnFailureFromParameterConfiguration(): void {\n    this._automaticallyRetryOnFailure = this._configurationParameterReader.getBooleanValue('phenix-automatically-retry-on-failure');\n    this._logger.info('Automatically retry on failure is set to: [%s]', this._automaticallyRetryOnFailure);\n\n    return;\n  }\n\n  static applyAutomaticallyReconnectPeerConnectionFromParameterConfiguration(): void {\n    this._automaticallyReconnectPeerConnection = this._configurationParameterReader.getBooleanValue('phenix-automatically-reconnect-peer-connection');\n    this._logger.info('Automatically reconnect peer connection is set to: [%s]', this._automaticallyReconnectPeerConnection);\n\n    return;\n  }\n\n  static applyDiscoveryUriDefaultFromParameterConfiguration(): void {\n    SDK.discoveryUri.subscribe(value => {\n      SDK.telemetryUrl.value = SDK.getTelemetryUrl(value);\n      SDK._environment.value = Environment.getEnvironmentFromUrl(value);\n    });\n\n    const channelToken = this._configurationParameterReader.getStringValue('phenix-channel-token');\n\n    if (channelToken) {\n      const parsedToken = EdgeAuth.parseToken(channelToken);\n\n      SDK._tenancy.value = EdgeAuth.getTenancy(parsedToken);\n      DiscoveryUri.uri.value = (EdgeAuth.getUri(parsedToken) || SDK.discoveryUri.value).toString();\n\n      this._logger.info('Discovery URI set from configuration parameter to [%s]', SDK.discoveryUri.value);\n\n      return;\n    }\n\n    const uriValue = this._configurationParameterReader.getStringValue('phenix-uri');\n\n    if (uriValue) {\n      DiscoveryUri.uri.value = uriValue;\n      this._logger.info('Discovery URI set from \"phenix-uri\" configuration parameter tag to [%s]', SDK.discoveryUri.value);\n\n      return;\n    }\n\n    const baseURIValue = this._configurationParameterReader.getStringValue('phenix-base-uri');\n\n    if (baseURIValue) {\n      DiscoveryUri.uri.value = `${baseURIValue}/pcast/endPoints`;\n      this._logger.info('Discovery URI set from \"phenix-base-uri\" configuration parameter tag to [%s]', SDK.discoveryUri.value);\n\n      return;\n    }\n  }\n\n  static init(options?: IInitOptions): void {\n    if (!this._initialized.value) {\n      this._applicationActivityMonitor = new ApplicationActivityMonitor();\n    }\n\n    if (options) {\n      if (options.discoveryUri) {\n        DiscoveryUri.uri.value = options.discoveryUri;\n      }\n\n      if (options.peerConnectionFactory) {\n        SDK._peerConnectionFactory.value = options.peerConnectionFactory;\n      }\n\n      if (options.telemetryLevel && TelemetryLevel[options.telemetryLevel]) {\n        SDK._telemetryLevel.value = TelemetryLevelMapping.convertTelemetryLevelTypeToTelemetryLevel(options.telemetryLevel);\n      }\n\n      if (options.loggingLevel && LoggingLevel[options.loggingLevel]) {\n        this._logger.threshold.setThreshold(LoggingLevelMapping.convertLoggingLevelTypeToLoggingLevel(options.loggingLevel));\n      }\n\n      if (options.consoleLoggingLevel &&\n        LoggingLevel[options.consoleLoggingLevel]) {\n        const consoleAppender = this._logger.appenders.value.find(appender => appender instanceof ConsoleAppender);\n\n        if (consoleAppender) {\n          this._logger.appenders.remove(consoleAppender);\n        }\n\n        if (options.consoleLoggingLevel !== 'Off') {\n          this._logger.appenders.add(new ConsoleAppender(LoggingLevelMapping.convertLoggingLevelTypeToLoggingLevel(options.consoleLoggingLevel)));\n        }\n      }\n\n      if (typeof options.automaticallyPlayMediaStream === 'boolean') {\n        this._automaticallyPlayMediaStream = options.automaticallyPlayMediaStream;\n      }\n\n      if (typeof options.automaticallyMuteVideoOnPlayFailure === 'boolean') {\n        this._automaticallyMuteVideoOnPlayFailure = options.automaticallyMuteVideoOnPlayFailure;\n      }\n\n      if (options.webPlayerLoader) {\n        this._webPlayerLoader = options.webPlayerLoader;\n      }\n\n      if (options.shakaPlayerLoader) {\n        this._shakaPlayerLoader = options.shakaPlayerLoader;\n      }\n\n      if (options.hlsJsLoader) {\n        this._hlsJsLoader = options.hlsJsLoader;\n      }\n    }\n\n    SDK._initialized.value = true;\n  }\n\n  static dispose(): void {\n    SDK._initialized.value = false;\n    this._applicationActivityMonitor.dispose();\n    this._applicationActivityMonitor = null;\n  }\n\n  static getTelemetryUrl(url: string): string {\n    return TelemetryUrl.getTelemetryUrl(url);\n  }\n\n  private constructor() {\n    throw new Error('SDK is a static class that may not be instantiated');\n  }\n}\n\nwindow.addEventListener('unload', () => {\n  SDK.dispose();\n});\n\nSDK.applyDiscoveryUriDefaultFromParameterConfiguration();\nSDK.applyMetricsConfiguration();\nSDK.applyTelemetryConfiguration();\nSDK.applyAutomaticallyRetryOnFailureFromParameterConfiguration();\nSDK.applyAutomaticallyReconnectPeerConnectionFromParameterConfiguration();\nSDK.init();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nenum PublisherState {\n  Offline = 1,\n  Starting,\n  Publishing,\n  Recovering,\n  Reconnecting,\n  StandBy,\n  Stopped,\n  Unauthorized,\n  GeoRestricted,\n  GeoBlocked,\n  UnsupportedFeature,\n  Error\n}\n\nexport default PublisherState;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class Durations {\n  private readonly _duration: number;\n\n  constructor(duration = 0) {\n    this._duration = duration;\n  }\n\n  toIsoString(): string {\n    if (this._duration === 0) {\n      return 'P0S';\n    }\n\n    const isNegative = this._duration < 0;\n    const duration = isNegative ? Math.abs(this._duration) : this._duration;\n    let offset = Math.floor(duration);\n    const milliseconds = offset % 1000;\n\n    offset = Math.floor(offset / 1000);\n\n    const seconds = offset % 60;\n\n    offset = Math.floor(offset / 60);\n\n    const minutes = offset % 60;\n\n    offset = Math.floor(offset / 60);\n\n    const hours = offset % 24;\n    const parts = ['PT'];\n\n    if (isNegative) {\n      parts.unshift('-');\n    }\n\n    if (hours) {\n      parts.push(hours + 'H');\n    }\n\n    if (minutes) {\n      parts.push(minutes + 'M');\n    }\n\n    if (seconds || milliseconds) {\n      parts.push(String(seconds));\n\n      if (milliseconds) {\n        parts.push('.' + this.padStart(milliseconds.toString(), 3, '0'));\n      }\n\n      parts.push('S');\n    }\n\n    return parts.join('');\n  }\n\n  padStart(item: string, targetLength: number, padString: string): string {\n    targetLength = targetLength >> 0;\n    padString = String((typeof padString !== 'undefined' ? padString : ' '));\n\n    if (item.length > targetLength) {\n      return item;\n    }\n\n    targetLength = targetLength - item.length;\n\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n\n    return padString.slice(0, targetLength) + item;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport MetricsType from '../metrics/MetricsType';\nimport MetricType from '../metrics/MetricType';\nimport Durations from '../time/Duration';\nimport {ILogger} from '../logger/LoggerInterface';\nimport SDK from '../sdk/SDK';\nimport LoggerFactory from '../logger/LoggerFactory';\n\nexport class StreamSetupListener {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('StreamSetupListener');\n  private readonly metricsService = SDK.metricsService;\n  private readonly _pageLoadTime: number;\n  private readonly _startTime: number;\n  private _metricSubmitted = false;\n\n  constructor(pageLoadTime: number) {\n    this._startTime = Date.now();\n    this._pageLoadTime = pageLoadTime;\n  }\n\n  success(streamId): void {\n    this.recordStreamMetric(MetricsType.SetupCompleted, streamId);\n  }\n\n  fail(): void {\n    this.recordStreamMetric(MetricsType.SetupFailed);\n  }\n\n  private recordStreamMetric(metricType: MetricsType, streamId?: string): void {\n    if (this._metricSubmitted) {\n      return ;\n    }\n\n    this._metricSubmitted = true;\n\n    const now = Date.now();\n    const setupTime = now - this._startTime;\n    const metricName = new MetricType(metricType).getName();\n\n    this.metricsService.push({\n      metricType,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: setupTime},\n      streamId\n    });\n\n    this._logger.info(\n      '[%s] [%s] Stream metric [%s] in [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      streamId,\n      metricName,\n      new Durations(setupTime).toIsoString()\n    );\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport IDisposable from '../lang/IDisposable';\nimport Disposable from '../lang/Disposable';\nimport Subject from '../rx/Subject';\nimport DisposableList from '../lang/DisposableList';\n\nexport default class NetworkMonitor implements IDisposable {\n  private readonly _disposables: DisposableList = new DisposableList();\n  private readonly _isSupported = navigator && navigator['connection'];\n  private readonly _rtt: Subject<number> = new Subject(undefined);\n  private readonly _effectiveType: Subject<string> = new Subject(undefined);\n  private readonly _downlinkThroughputCapacity: Subject<number> = new Subject(undefined);\n\n  constructor() {\n    if (!this.isSupported) {\n      return;\n    }\n\n    this.setupNetworkChangeListeners();\n    this.updateStatistics();\n  }\n\n  get isSupported(): boolean {\n    return this._isSupported;\n  }\n\n  get rtt(): Subject<number> {\n    return this._rtt;\n  }\n\n  get effectiveType(): Subject<string> {\n    return this._effectiveType;\n  }\n\n  get downlinkThroughputCapacity(): Subject<number> {\n    return this._downlinkThroughputCapacity;\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private getDownlinkThroughputCapacity(): number {\n    if (!this.isSupported) {\n      return -1;\n    }\n\n    return navigator['connection'].downlink || navigator['connection'].downlinkMax;\n  }\n\n  private getEffectiveType(): string {\n    if (!this.isSupported) {\n      return 'Unknown';\n    }\n\n    return navigator['connection'].effectiveType || navigator['connection'].type;\n  }\n\n  private getRoundTripTime(): number {\n    return navigator['connection'].rtt;\n  }\n\n  private setupNetworkChangeListeners(): void {\n    const listener = (): void => {\n      this.updateStatistics();\n    };\n\n    navigator['connection'].addEventListener('change', listener);\n\n    this._disposables.add(new Disposable(() => {\n      navigator['connection'].removeEventListener('change', listener);\n    }));\n  }\n\n  private updateStatistics(): void {\n    this._rtt.value = this.getRoundTripTime();\n    this._effectiveType.value = this.getEffectiveType();\n    this._downlinkThroughputCapacity.value = this.getDownlinkThroughputCapacity();\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {StreamSetupListener} from '../dom/StreamSetupListener';\nimport {ILogger} from '../logger/LoggerInterface';\nimport LoggerFactory from '../logger/LoggerFactory';\nimport NetworkMonitor from '../dom/NetworkMonitor';\nimport SDK from '../sdk/SDK';\nimport MetricsType from '../metrics/MetricsType';\nimport Durations from '../time/Duration';\nimport IDisposable from '../lang/IDisposable';\nimport DisposableList from '../lang/DisposableList';\nimport MetricsService from '../metrics/MetricsService';\n\ninterface INetworkStatistics {\n  rtt?: number;\n  effectiveType?: string;\n  downlinkThroughputCapacity?: number;\n}\n\nexport default class SessionTelemetry implements IDisposable {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('SessionTelemetry');\n  private readonly _metricsService: MetricsService;\n  private readonly _applicationActivityMonitor = SDK.applicationActivityMonitor;\n  private readonly _networkMonitor: NetworkMonitor = new NetworkMonitor();\n  private readonly _pageLoadTime: number;\n  private readonly _disposables: DisposableList = new DisposableList();\n  private _lastNetworkStatistics: INetworkStatistics = {};\n\n  constructor(pageLoadTime: number, metricsService: MetricsService) {\n    this._pageLoadTime = pageLoadTime;\n    this._disposables.add(this._networkMonitor);\n    this._metricsService = metricsService;\n\n    if (!this._networkMonitor.isSupported) {\n      return;\n    }\n\n    this._disposables.add(this._applicationActivityMonitor.isForeground.subscribe(isForeground => {\n      this.recordForegroundChange(isForeground);\n    }));\n    this._disposables.add(this._networkMonitor.rtt.subscribe(value => {\n      this.recordNetworkRTTUpdate(value);\n    }));\n    this._disposables.add(this._networkMonitor.effectiveType.subscribe(value => {\n      this.recordNetworkTypeChangeUpdate(value);\n    }));\n    this._disposables.add(this._networkMonitor.downlinkThroughputCapacity.subscribe(value => {\n      this.recordNetworkDownlinkThroughputCapacityUpdate(value);\n    }));\n  }\n\n  listenOnStreamSetup(): StreamSetupListener {\n    return new StreamSetupListener(this._pageLoadTime);\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private recordForegroundChange(isForeground: boolean): void {\n    const now = Date.now();\n    const timeSinceLastChange = this._applicationActivityMonitor.getTimeSinceLastChange();\n\n    this._metricsService.push({\n      metricType: isForeground ? MetricsType.ApplicationForeground : MetricsType.ApplicationBackground,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: timeSinceLastChange}\n    });\n\n    this._logger.info(\n      'Application has gone into the [%s] after [%s] ms',\n      isForeground ? 'foreground' : 'background',\n      new Durations(timeSinceLastChange).toIsoString(),\n    );\n  }\n\n  private recordNetworkRTTUpdate(newRTT: number): void {\n    const now = Date.now();\n    const oldRtt = this._lastNetworkStatistics.rtt;\n\n    this._lastNetworkStatistics.rtt = newRTT;\n\n    this._metricsService.push({\n      metricType: MetricsType.RoundTripTime,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: newRTT},\n      previousValue: oldRtt ? {uint64: oldRtt} : undefined,\n      resource: 'navigator'\n    });\n\n    this._logger.info(\n      '[%s] Network RTT changed to [%s] from [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      newRTT,\n      oldRtt\n    );\n  }\n\n  private recordNetworkTypeChangeUpdate(newNetworkType: string): void {\n    const now = Date.now();\n    const oldNetworkType = this._lastNetworkStatistics.effectiveType;\n\n    this._lastNetworkStatistics.effectiveType = newNetworkType;\n\n    this._metricsService.push({\n      metricType: MetricsType.NetworkType,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {string: newNetworkType},\n      previousValue: oldNetworkType ? {string: oldNetworkType} : undefined\n    });\n\n    this._logger.info(\n      '[%s] Network effective type has changed to [%s] from [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      newNetworkType,\n      oldNetworkType\n    );\n  }\n\n  private recordNetworkDownlinkThroughputCapacityUpdate(newCapacity: number): void {\n    const now = Date.now();\n    const oldCapacity = this._lastNetworkStatistics.downlinkThroughputCapacity;\n\n    this._lastNetworkStatistics.downlinkThroughputCapacity = newCapacity;\n\n    this._metricsService.push({\n      metricType: MetricsType.DownlinkThroughputCapacity,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {float: newCapacity},\n      previousValue: oldCapacity ? {float: oldCapacity} : undefined\n    });\n\n    this._logger.info(\n      '[%s] Network downlink throughput capacity changed to [%s] from [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      newCapacity,\n      oldCapacity\n    );\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {EdgeToken} from '../sdk/edgeAuth/EdgeToken';\nimport Subject from '../rx/Subject';\n\nexport default class TokenContext {\n  token: Subject<EdgeToken>;\n  tokenExpiring: Subject<boolean>;\n\n  constructor(token: string) {\n    this.token = new Subject<EdgeToken>(token);\n    this.tokenExpiring = new Subject<boolean>(false);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../../rx/Subject';\nimport PublisherState from './PublisherState';\nimport EndPoint, {IStream} from '../discovery/EndPoint';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport DisposableList from '../../lang/DisposableList';\nimport {PublishStatus} from '../api/Publish';\nimport Strings from '../../lang/Strings';\nimport {IRtcPublishMonitorStatistic, IRtcPublishStatistic} from '../../rtc/RtcPublishMonitor';\n\nexport default class PublisherContext {\n  publisherInitialization: Date;\n  disposables: DisposableList;\n  publisherDisposables: DisposableList;\n  state: Subject<PublisherState>;\n  authorized: Subject<boolean>;\n  online: Subject<boolean>;\n  loading: Subject<boolean>;\n  publishing: Subject<boolean>;\n  standby: Subject<boolean>;\n  stopped: Subject<boolean>;\n  failureCount: Subject<number>;\n  endPoint: Subject<EndPoint>;\n  stream: Subject<IStream>;\n  rtcStatistics: Subject<IRtcPublishMonitorStatistic>;\n  clearFailureCountTimeout: number;\n  name: string;\n\n  rtcAudioStatistic: IRtcPublishStatistic;\n  rtcVideoStatistic: IRtcPublishStatistic;\n\n  constructor(name?: string) {\n    this.disposables = new DisposableList();\n    this.publisherDisposables = new DisposableList();\n    this.publisherInitialization = new Date();\n    this.state = new Subject<PublisherState>(PublisherState.Starting);\n    this.authorized = new Subject<boolean>(true);\n    this.online = new Subject<boolean>(true);\n    this.loading = new Subject<boolean>(false);\n    this.publishing = new Subject<boolean>(false);\n    this.standby = new Subject<boolean>(false);\n    this.stopped = new Subject<boolean>(false);\n    this.failureCount = new Subject<number>(0);\n    this.endPoint = new Subject<EndPoint>(null);\n    this.stream = new Subject<IStream>(null);\n    this.rtcStatistics = new Subject<IRtcPublishMonitorStatistic>(null);\n    this.name = name && name.length ? name : this.generateScreenName();\n  }\n\n  get streamId(): string {\n    const stream = this.stream.value;\n\n    if (!stream) {\n      return '-';\n    }\n\n    return stream.streamId;\n  }\n\n  applyStatus(status: PublishStatus): void {\n    switch (status) {\n      case 'ok':\n        break;\n      case 'unauthorized':\n      case 'geo-restricted':\n      case 'geo-blocked':\n        this.authorized.value = false;\n\n      // eslint-disable-next-line no-fallthrough\n      case 'no-stream':\n      case 'not-found':\n        this.failureCount.value = 0;\n        this.publishing.value = false;\n        this.standby.value = true;\n        this.stopped.value = false;\n        this.stream.value = null;\n\n        return;\n      default:\n        this.failureCount.value++;\n        this.publishing.value = false;\n        this.standby.value = true;\n        this.stopped.value = false;\n        this.stream.value = null;\n        this.state.value = PublisherState.Error;\n\n        return;\n    }\n  }\n\n  mapPublishStatusToPublisherStatus(status: PublishStatus): PublisherState {\n    switch (status) {\n      case 'ok':\n        return PublisherState.Starting;\n      case 'no-stream':\n      case 'not-found':\n        return PublisherState.StandBy;\n      case 'geo-restricted':\n        return PublisherState.GeoRestricted;\n      case 'geo-blocked':\n        return PublisherState.GeoBlocked;\n      case 'unauthorized':\n        return PublisherState.Unauthorized;\n      case 'capacity':\n      case 'rate-limited':\n      case 'timeout':\n        return PublisherState.Recovering;\n      case 'failed':\n        return PublisherState.Error;\n      default:\n        assertUnreachable(status);\n    }\n  }\n\n  private generateScreenName(): string {\n    return Strings.random(12);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../rx/Subject';\nimport IPeerConnection from '../rtc/IPeerConnection';\n\nexport default class PeerConnectionContext {\n  mediaStream: Subject<MediaStream>;\n  peerConnection: Subject<IPeerConnection>;\n  peerConnectionReconnectAttempts: number;\n\n  constructor() {\n    this.mediaStream = new Subject<MediaStream>(null);\n    this.peerConnection = new Subject<IPeerConnection>(null);\n    this.peerConnectionReconnectAttempts = 0;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../rx/Subject';\n\nexport default class StateContext {\n  isStarting: Subject<boolean>;\n  isDisposed: boolean;\n\n  constructor() {\n    this.isStarting = new Subject<boolean>(false);\n    this.isDisposed = false;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport SDK from '../sdk/SDK';\nimport IPeerConnection from './IPeerConnection';\nimport {ILogger} from '../logger/LoggerInterface';\nimport FeatureEnablement from '../sdk/feature/FeatureEnablement';\n\nexport interface IPeerConnectionOfferInit {\n  audioTransceiver?: RTCRtpTransceiver;\n  videoTransceiver?: RTCRtpTransceiver;\n  peerConnection: IPeerConnection;\n  localOffer: RTCSessionDescriptionInit;\n}\n\nexport default class PeerConnectionService {\n  private static _logger: ILogger = LoggerFactory.getLogger('PeerConnectionService');\n  private static _cached: {\n    direction?: RTCRtpTransceiverDirection;\n    peerConnection: Promise<IPeerConnectionOfferInit>;\n  };\n\n  static initiateInitialPrecaching(): void {\n    if (FeatureEnablement.isPrecachingEnabled) {\n      const ignored = PeerConnectionService.precacheCreatePeerConnectionOffer()\n        .catch(e => PeerConnectionService._logger.error('Failed to pre-cache peer connection offer\"', e));\n    }\n  }\n\n  static async precacheCreatePeerConnectionOffer(): Promise<{ peerConnection: Promise<IPeerConnectionOfferInit | void> }> {\n    return PeerConnectionService._cached = {\n      direction: 'recvonly',\n      peerConnection: PeerConnectionService.createPeerConnectionOffer()\n        .catch(e => {\n          PeerConnectionService._cached = null;\n\n          throw e;\n        })\n    };\n  }\n\n  static async createPeerConnectionOffer(direction: RTCRtpTransceiverDirection = 'recvonly'): Promise<IPeerConnectionOfferInit> {\n    if (PeerConnectionService._cached && PeerConnectionService._cached.direction === direction) {\n      const value = PeerConnectionService._cached.peerConnection;\n\n      PeerConnectionService._cached = null;\n\n      return value;\n    }\n\n    const peerConnectionFactory = SDK.peerConnectionFactory.value;\n\n    return peerConnectionFactory.createPeerConnection()\n      .then(async peerConnection => {\n        const supportsAddTransceiver = peerConnection.supportsAddTransceiver;\n        let videoTransceiver, audioTransceiver;\n\n        if (supportsAddTransceiver) {\n          audioTransceiver = peerConnection.addTransceiver('audio', {direction});\n          videoTransceiver = peerConnection.addTransceiver('video', {direction});\n\n          return {\n            audioTransceiver,\n            videoTransceiver,\n            peerConnection: peerConnection,\n            localOffer: await peerConnection.createOffer(undefined)\n          };\n        }\n\n        const options = direction === 'recvonly' ? {\n          offerToReceiveAudio: true,\n          offerToReceiveVideo: true\n        } : {};\n\n        return {\n          peerConnection: peerConnection,\n          localOffer: await peerConnection.createOffer(options)\n        };\n      });\n  }\n\n  private constructor() {\n    throw new Error('PeerConnectionService is a static class that may not be instantiated');\n  }\n}\n\nPeerConnectionService.initiateInitialPrecaching();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport type BitrateStateType = 'Keep' | 'Reset';\nexport type BitrateModeType = 'Normal' | 'Force' | 'Reset';\n\nexport enum BitrateState {\n  Keep,\n  Reset\n}\n\nexport enum BitrateMode {\n  Normal,\n  Force,\n  Reset\n}\n\nexport interface ISetTemporaryMaximalBitrate {\n  apiVersion: number;\n  sharedSecret: string;\n  elapsedInMilliseconds: number;\n  bitrateInBitsPerSecond: number;\n  bitrateState: BitrateStateType;\n  bitrateMode: BitrateModeType;\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {BitrateMode, BitrateModeType} from '../api/SetTemporaryMaximalBitrate';\nimport assertUnreachable from '../../lang/assertUnreachable';\n\nexport default class BitrateModeMapping {\n  static convertBitrateModeToBitrateModeType(bitrateMode: BitrateMode): BitrateModeType {\n    switch (bitrateMode) {\n      case BitrateMode.Normal:\n        return 'Normal';\n      case BitrateMode.Force:\n        return 'Force';\n      case BitrateMode.Reset:\n        return 'Reset';\n      default:\n        assertUnreachable(bitrateMode);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {BitrateState, BitrateStateType} from '../api/SetTemporaryMaximalBitrate';\nimport assertUnreachable from '../../lang/assertUnreachable';\n\nexport default class BitrateStateMapping {\n  static convertBitrateStateToBitrateStateType(bitrateState: BitrateState): BitrateStateType {\n    switch (bitrateState) {\n      case BitrateState.Keep:\n        return 'Keep';\n      case BitrateState.Reset:\n        return 'Reset';\n      default:\n        assertUnreachable(bitrateState);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport {ILogger} from '../../logger/LoggerInterface';\n\nimport {\n  ISubscribeResponse,\n  ISubscribeWithOfferRequest,\n  ISubscribeWithoutOfferRequest\n} from '../api/Subscribe';\nimport {ISetRemoteDescriptionRequest, ISetRemoteDescriptionResponse} from '../api/SetRemoteDescription';\nimport {IRtcConfiguration} from '../api/RtcConfiguration';\nimport {ISessionDescription, SdpType} from '../api/SessionDescription';\nimport {IDestroyStreamRequest, IDestroyStreamResponse} from '../api/DestroyStream';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport {IAddIceCandidatesRequest, IAddIceCandidatesResponse} from '../api/AddIceCandidates';\nimport VersionManager from '../version/VersionManager';\nimport EdgeAuth from '../edgeAuth/EdgeAuth';\nimport {BitrateMode, BitrateState, ISetTemporaryMaximalBitrate} from '../api/SetTemporaryMaximalBitrate';\nimport BitrateModeMapping from './BitrateModeMapping';\nimport BitrateStateMapping from './BitrateStateMapping';\nimport {BitsPerSecond, Millisecond} from '../../units/Units';\nimport {\n  IPublishResponse,\n  IPublishWithOfferRequest,\n  IPublishWithoutOfferRequest,\n  PublishStatus\n} from '../api/Publish';\n\nconst apiVersion = 6;\n\nexport type SubscribeStatus = 'ok' | 'no-stream' | 'not-found' | 'unauthorized' | 'geo-restricted' | 'geo-blocked' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type SetRemoteDescriptionStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type SetTemporaryMaximalBitrateStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type RemoveTemporaryMaximalBitrateStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type AddIceCandidatesStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type DestroyStreamStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport interface IStream {\n  streamId: string;\n  sharedSecret: string;\n  tenancy: string;\n}\n\nexport interface ISubscribeResponseInit {\n  status: SubscribeStatus;\n  stream?: IStream;\n  lag?: Millisecond;\n  rtcConfiguration?: RTCConfiguration;\n  setRemoteDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n  createOfferDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n  createAnswerDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n}\n\nexport type IPublishResponseInit = ISubscribeResponseInit;\n\ninterface ISetRemoteDescriptionResponseInit {\n  status: SetRemoteDescriptionStatus;\n  sessionDescription?: RTCSessionDescriptionInit;\n}\n\ninterface IAddIceCandidatesResponseInit {\n  status: AddIceCandidatesStatus;\n  options?: string[];\n}\n\ninterface ISetTemporaryMaximalBitrateResponseInit {\n  status: SetTemporaryMaximalBitrateStatus;\n}\n\ninterface IDestroyStreamResponseInit {\n  status: DestroyStreamStatus;\n}\n\nexport default class EndPoint {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('EndPoint');\n  private readonly _uri: string;\n  private readonly _timeout: number;\n  private _roundTripTime: number;\n\n  constructor(uri: string, timeout: number) {\n    this._uri = uri;\n    this._timeout = timeout;\n\n    if (!timeout) {\n      throw new Error(`End point requires a timeout`);\n    }\n  }\n\n  get roundTripTime(): number {\n    return this._roundTripTime;\n  }\n\n  toString(): string {\n    return `EndPoint[uri=${this._uri}]`;\n  }\n\n  async ping(): Promise<number> {\n    const url = this.buildPingUrl();\n    const start = Date.now();\n    const response = await Promise.race([\n      fetch(url, {\n        method: 'GET',\n        cache: 'no-cache'\n      }),\n      new Promise<Response>((_, reject) =>\n        setTimeout(() => reject(new Error(`Ping timed out [${url}]`)), this._timeout)\n      )\n    ]);\n    const finished = Date.now();\n\n    if (!response.ok) { /* Handle */\n      throw new Error(`Ping failed [${url}] [${response.status}]`);\n    }\n\n    this._roundTripTime = finished - start;\n\n    return this._roundTripTime;\n  }\n\n  async subscribe(token: string, localSessionDescription: RTCSessionDescriptionInit, failureCount: number): Promise<ISubscribeResponseInit> {\n    const parsedToken = EdgeAuth.parseToken(token);\n\n    if (!parsedToken || !parsedToken.applicationId) {\n      this._logger.error('Failed to parse token [%s]', token);\n\n      return {status: 'unauthorized'};\n    }\n\n    const tenancy = parsedToken.applicationId;\n    const url = this.buildUrl([tenancy, 'stream', 'subscribe']).toString();\n    const formData = new FormData();\n    const clientVersion = VersionManager.sdkVersion;\n\n    if (failureCount === 0 && localSessionDescription) {\n      const bodyWithOffer: ISubscribeWithOfferRequest = {\n        apiVersion,\n        clientVersion,\n        edgeAuthToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        setRemoteDescription: {\n          apiVersion,\n          sessionDescription: {\n            type: this.convertRTCSdpTypeToSdpType(localSessionDescription.type),\n            sdp: localSessionDescription.sdp\n          }\n        },\n        createAnswerDescription: {apiVersion}\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithOffer));\n    } else {\n      const bodyWithoutOffer: ISubscribeWithoutOfferRequest = {\n        apiVersion,\n        clientVersion,\n        edgeAuthToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        createOfferDescription: {apiVersion}\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithoutOffer));\n    }\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to subscribe', new Error(`Subscribe timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to subscribe', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: SubscribeStatus = this.mapHttpStatusToSubscribeStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const subscribeResponse = await this.convertHttpResponseToSubscribeResponse(tenancy, httpResponse);\n\n    this._logger.debug('Got subscribe response [%j] in [%s] ms', subscribeResponse, finished - start);\n\n    return subscribeResponse;\n  }\n\n  async publish(name: string, token: string, localSessionDescription: RTCSessionDescriptionInit, failureCount: number): Promise<IPublishResponseInit> {\n    const parsedToken = EdgeAuth.parseToken(token);\n\n    if (!parsedToken || !parsedToken.applicationId) {\n      this._logger.error('Failed to parse token [%s]', token);\n\n      return {status: 'unauthorized'};\n    }\n\n    const tenancy = parsedToken.applicationId;\n    const url = this.buildUrl([tenancy, 'stream', 'publish']).toString();\n    const formData = new FormData();\n    const clientVersion = VersionManager.sdkVersion;\n\n    if (failureCount === 0 && localSessionDescription) {\n      const bodyWithOffer: IPublishWithOfferRequest = {\n        apiVersion,\n        clientVersion,\n        edgeAuthToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        name,\n        setRemoteDescription: {\n          apiVersion,\n          sessionDescription: {\n            type: this.convertRTCSdpTypeToSdpType(localSessionDescription.type),\n            sdp: localSessionDescription.sdp\n          }\n        },\n        createAnswerDescription: {\n          streamId: '',\n          options: ['upload'],\n          apiVersion\n        }\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithOffer));\n    } else {\n      const bodyWithoutOffer: IPublishWithoutOfferRequest = {\n        apiVersion,\n        clientVersion,\n        edgeAuthToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        name,\n        createOfferDescription: {\n          streamId: '',\n          options: ['upload'],\n          apiVersion\n        }\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithoutOffer));\n    }\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to publish', new Error(`Publish timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to publish', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: PublishStatus = this.mapHttpStatusToPublishStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const subscribeResponse = await this.convertHttpResponseToPublishResponse(tenancy, httpResponse);\n\n    this._logger.debug('Got publish response [%j] in [%s] ms', subscribeResponse, finished - start);\n\n    return subscribeResponse;\n  }\n\n  async setRemoteDescription(stream: IStream, sessionDescription: RTCSessionDescriptionInit): Promise<ISetRemoteDescriptionResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'description', 'remote']).toString();\n    const formData = new FormData();\n    const body: ISetRemoteDescriptionRequest = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      sessionDescription: {\n        type: this.convertRTCSdpTypeToSdpType(sessionDescription.type),\n        sdp: sessionDescription.sdp\n      }\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to set remote description', new Error(`Set remote description timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to set remote description', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: SetRemoteDescriptionStatus = this.mapHttpStatusToSetRemoteDescriptionStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const setRemoteDescriptionResponse = await this.convertHttpResponseToSetRemoteDescriptionResponse(httpResponse);\n\n    this._logger.debug('Got set remote description response [%j] in [%s] ms', setRemoteDescriptionResponse, finished - start);\n\n    return setRemoteDescriptionResponse;\n  }\n\n  async limitBitrate(\n    stream: IStream,\n    elapsedInMilliseconds: number,\n    bitrateInBitsPerSecond: BitsPerSecond,\n    bitrateState: BitrateState,\n    bitrateMode: BitrateMode,\n  ): Promise<ISetTemporaryMaximalBitrateResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'bitrate']).toString();\n    const formData = new FormData();\n    const body: ISetTemporaryMaximalBitrate = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      elapsedInMilliseconds,\n      bitrateInBitsPerSecond,\n      bitrateState: BitrateStateMapping.convertBitrateStateToBitrateStateType(bitrateState),\n      bitrateMode: BitrateModeMapping.convertBitrateModeToBitrateModeType(bitrateMode)\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to set limit bitrate timed', new Error(`Set limit bitrate timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to set limit bitrate timed', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: SetTemporaryMaximalBitrateStatus = this.mapHttpStatusToSetTemporaryMaximalBitrateStatus(httpResponse);\n    const finished = Date.now();\n\n    this._logger.info('Got set limit bitrate response [%s] in [%s] ms', status, finished - start);\n\n    return {status};\n  }\n\n  async addIceCandidates(stream: IStream, candidates: RTCIceCandidate[], discoveryCompleted: boolean, options: string[] = []): Promise<IAddIceCandidatesResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'ice', 'candidates']).toString();\n    const formData = new FormData();\n    const body: IAddIceCandidatesRequest = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      candidates,\n      discoveryCompleted,\n      options\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to add ice candidates', new Error(`Add ice candidates timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to add ice candidates', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: AddIceCandidatesStatus = this.mapHttpStatusToAddIceCandidatesStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const addIceCandidatesResponse = await this.convertHttpResponseToAddIceCandidatesResponse(httpResponse);\n\n    this._logger.info('Got add ICE candidates response [%j] in [%s] ms', addIceCandidatesResponse, finished - start);\n\n    return addIceCandidatesResponse;\n  }\n\n  async destroyStream(stream: IStream, reason: string): Promise<IDestroyStreamResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'destroy']).toString();\n    const formData = new FormData();\n    const body: IDestroyStreamRequest = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      reason,\n      options: []\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData,\n          cache: 'no-cache'\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to subscribe', new Error(`Delete stream timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to delete stream', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: DestroyStreamStatus = this.mapHttpStatusToSetDestroyStreamStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const destroyStreamResponse = await this.convertHttpResponseToDestroyStreamResponse(httpResponse);\n\n    this._logger.info('Got destroy stream response [%j] in [%s] ms', destroyStreamResponse, finished - start);\n\n    return destroyStreamResponse;\n  }\n\n  private buildUrl(path: string[]): URL {\n    const uri = new URL(this._uri);\n    const pathAsArray = uri.pathname.split('/');\n\n    pathAsArray.length = pathAsArray.length - 1;\n\n    uri.pathname = pathAsArray.concat(...path).join('/');\n\n    return uri;\n  }\n\n  private buildPingUrl(): string {\n    const uri = new URL(this._uri);\n    const sdkVersion = VersionManager.sdkVersion;\n\n    uri.search = `?${new URLSearchParams([['type', 'http'], ['version', sdkVersion], ['_', `${Date.now()}`]]).toString()}`;\n\n    return uri.toString();\n  }\n\n  private mapHttpStatusToPublishStatus(response: Response): PublishStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 402:\n        return 'geo-restricted';\n      case 403:\n        return 'geo-blocked';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSubscribeStatus(response: Response): SubscribeStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 402:\n        return 'geo-restricted';\n      case 403:\n        return 'geo-blocked';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSetRemoteDescriptionStatus(response: Response): SetRemoteDescriptionStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSetTemporaryMaximalBitrateStatus(response: Response): SetTemporaryMaximalBitrateStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToAddIceCandidatesStatus(response: Response): AddIceCandidatesStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSetDestroyStreamStatus(response: Response): DestroyStreamStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private async convertHttpResponseToSubscribeResponse(tenancy: string, response: Response): Promise<ISubscribeResponseInit> {\n    const data = await response.json() as ISubscribeResponse;\n    const subscribeResponse: ISubscribeResponseInit = {status: data.status};\n\n    subscribeResponse.stream = {\n      tenancy,\n      streamId: data.streamId,\n      sharedSecret: data.sharedSecret\n    };\n\n    subscribeResponse.lag = data.lag;\n\n    if (data) {\n      if (data.rtcConfiguration) {\n        subscribeResponse.rtcConfiguration = this.convertIRtcConfigurationToRTCConfiguration(data.rtcConfiguration);\n      }\n\n      if (data.setRemoteDescriptionResponse && data.setRemoteDescriptionResponse.sessionDescription) {\n        subscribeResponse.setRemoteDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.setRemoteDescriptionResponse.sessionDescription)};\n      }\n\n      if (data.createAnswerDescriptionResponse && data.createAnswerDescriptionResponse.sessionDescription) {\n        subscribeResponse.createAnswerDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.createAnswerDescriptionResponse.sessionDescription)};\n      }\n\n      if (data.createOfferDescriptionResponse && data.createOfferDescriptionResponse.sessionDescription) {\n        subscribeResponse.createOfferDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.createOfferDescriptionResponse.sessionDescription)};\n      }\n    }\n\n    return subscribeResponse;\n  }\n\n  private async convertHttpResponseToPublishResponse(tenancy: string, response: Response): Promise<IPublishResponseInit> {\n    const data = await response.json() as IPublishResponse;\n    const publishResponse: IPublishResponseInit = {status: data.status};\n\n    publishResponse.stream = {\n      tenancy,\n      streamId: data.streamId,\n      sharedSecret: data.sharedSecret\n    };\n\n    if (data) {\n      if (data.rtcConfiguration) {\n        publishResponse.rtcConfiguration = this.convertIRtcConfigurationToRTCConfiguration(data.rtcConfiguration);\n      }\n\n      if (data.setRemoteDescriptionResponse && data.setRemoteDescriptionResponse.sessionDescription) {\n        publishResponse.setRemoteDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.setRemoteDescriptionResponse.sessionDescription)};\n      }\n\n      if (data.createAnswerDescriptionResponse && data.createAnswerDescriptionResponse.sessionDescription) {\n        publishResponse.createAnswerDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.createAnswerDescriptionResponse.sessionDescription)};\n      }\n\n      if (data.createOfferDescriptionResponse && data.createOfferDescriptionResponse.sessionDescription) {\n        publishResponse.createOfferDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.createOfferDescriptionResponse.sessionDescription)};\n      }\n    }\n\n    return publishResponse;\n  }\n\n  private convertIRtcConfigurationToRTCConfiguration(configuration: IRtcConfiguration): RTCConfiguration {\n    const rtcConfiguration: RTCConfiguration = {};\n\n    if (configuration.bundlePolicy) {\n      switch (configuration.bundlePolicy) {\n        case 'BundlePolicyBalanced':\n          rtcConfiguration.bundlePolicy = 'balanced';\n\n          break;\n        case 'BundlePolicyMaxCompat':\n          rtcConfiguration.bundlePolicy = 'max-compat';\n\n          break;\n        case 'BundlePolicyMaxBundle':\n          rtcConfiguration.bundlePolicy = 'max-bundle';\n\n          break;\n        default:\n          assertUnreachable(configuration.bundlePolicy);\n      }\n    }\n\n    if (typeof configuration.iceCandidatePoolSize === 'number') {\n      rtcConfiguration.iceCandidatePoolSize = configuration.iceCandidatePoolSize;\n    }\n\n    if (configuration.iceServers) {\n      const iceServers: RTCIceServer[] = [];\n\n      for (let i = 0; i < configuration.iceServers.length; i++) {\n        iceServers.push({\n          urls: configuration.iceServers[i].urls,\n          username: configuration.iceServers[i].username,\n          credential: configuration.iceServers[i].credential\n        });\n      }\n\n      rtcConfiguration.iceServers = iceServers;\n    }\n\n    if (configuration.iceTransportPolicy) {\n      switch (configuration.iceTransportPolicy) {\n        case 'IceTransportPolicyAll':\n          rtcConfiguration.iceTransportPolicy = 'all';\n\n          break;\n        case 'IceTransportPolicyRelay':\n          rtcConfiguration.iceTransportPolicy = 'relay';\n\n          break;\n        case 'IceTransportPolicyPublic':\n          // Deprecated - Not supported\n          break;\n        default:\n          assertUnreachable(configuration.iceTransportPolicy);\n      }\n    }\n\n    if (configuration.peerIdentity) {\n      rtcConfiguration.peerIdentity = configuration.peerIdentity;\n    }\n\n    if (configuration.rtcpMuxPolicy) {\n      switch (configuration.rtcpMuxPolicy) {\n        case 'RtcpMuxPolicyNegotiate':\n          rtcConfiguration.rtcpMuxPolicy = 'negotiate';\n\n          break;\n        case 'RtcpMuxPolicyRequire':\n          rtcConfiguration.rtcpMuxPolicy = 'require';\n\n          break;\n        default:\n          assertUnreachable(configuration.rtcpMuxPolicy);\n      }\n    }\n\n    return rtcConfiguration;\n  }\n\n  private convertISessionDescriptionToRTCSessionDescription(sessionDescription: ISessionDescription): RTCSessionDescriptionInit {\n    const rtcSessionDescription: RTCSessionDescriptionInit = {sdp: sessionDescription.sdp};\n\n    switch (sessionDescription.type) {\n      case 'Offer':\n        rtcSessionDescription.type = 'offer';\n\n        break;\n      case 'Answer':\n        rtcSessionDescription.type = 'answer';\n\n        break;\n      default:\n        assertUnreachable(sessionDescription.type);\n    }\n\n    return rtcSessionDescription;\n  }\n\n  private async convertHttpResponseToSetRemoteDescriptionResponse(response: Response): Promise<ISetRemoteDescriptionResponseInit> {\n    const data = await response.json() as ISetRemoteDescriptionResponse;\n    const setRemoteDescriptionResponse: ISetRemoteDescriptionResponseInit = {status: data.status};\n\n    if (data && data.sessionDescription) {\n      setRemoteDescriptionResponse.sessionDescription = this.convertISessionDescriptionToRTCSessionDescription(data.sessionDescription);\n    }\n\n    return setRemoteDescriptionResponse;\n  }\n\n  private async convertHttpResponseToAddIceCandidatesResponse(response: Response): Promise<IAddIceCandidatesResponseInit> {\n    const data = await response.json() as IAddIceCandidatesResponse;\n    const addIceCandidatesResponse: IAddIceCandidatesResponseInit = {\n      status: data.status,\n      options: []\n    };\n\n    if (data) {\n      if (data.options) {\n        addIceCandidatesResponse.options = data.options;\n      }\n    }\n\n    return addIceCandidatesResponse;\n  }\n\n  private async convertHttpResponseToDestroyStreamResponse(response: Response): Promise<IDestroyStreamResponseInit> {\n    const data = await response.json() as IDestroyStreamResponse;\n    const destroyStream: IDestroyStreamResponseInit = {status: data.status};\n\n    return destroyStream;\n  }\n\n  private convertRTCSdpTypeToSdpType(type: RTCSdpType): SdpType {\n    switch (type) {\n      case 'answer':\n        return 'Answer';\n      case 'offer':\n        return 'Offer';\n      case 'pranswer':\n      case 'rollback':\n        throw new Error(`SDP type [${type}] is not supported`);\n      default:\n        assertUnreachable(type);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport EndPoint from './EndPoint';\nimport SDK from '../SDK';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport MetricsType from '../../metrics/MetricsType';\nimport DiscoveryUri from './DiscoveryUri';\nimport MetricsService from '../../metrics/MetricsService';\nimport MetricsFactory from '../../metrics/MetricsFactory';\n\nconst defaultTimeout = 20000;\n\nexport default class DiscoveryService {\n  private _logger: ILogger = LoggerFactory.getLogger('Discovery');\n  private _metricsService: MetricsService;\n  private _uri: URL;\n\n  constructor(uri: URL) {\n    if (!uri) {\n      throw new Error('Discovery requires uri');\n    }\n\n    this._metricsService = MetricsFactory.getMetricsService(uri.toString());\n    this._uri = uri;\n  }\n\n  async discoverNearbyEndPoints(uri: URL, timeout: number): Promise<EndPoint[]> {\n    if (!timeout) {\n      throw new Error('Discovery requires timeout');\n    }\n\n    const url = uri.toString();\n    const response = await Promise.race([\n      fetch(url, {\n        method: 'GET',\n        cache: 'no-cache'\n      }),\n      new Promise<Response>((_, reject) =>\n        setTimeout(() => reject(new Error(`Discovery timed out [${url}]`)), timeout)\n      )\n    ]);\n\n    if (!response.ok) {\n      throw new Error(`Discovery failed [${url}] [${response.status}]`);\n    }\n\n    if (response.body === null) {\n      throw new Error(`Discovery failed with no data [${url}]`);\n    }\n\n    const asString = await response.text();\n    const endPoints = asString.split(',');\n\n    return endPoints.map(endPoint => new EndPoint(endPoint, timeout));\n  }\n\n  async discoverClosestEndPoint(timeout: number = defaultTimeout): Promise<EndPoint> {\n    const url = DiscoveryUri.buildDiscoveryUrl(this._uri);\n    const endPoints = await this.discoverNearbyEndPoints(new URL(url), timeout);\n    const neverResolve = (): Promise<void> => new Promise(() => {\n      this._logger.info('Request [%s] failed, preventing it from completing', url);\n    });\n    const endPoint = await Promise.race(endPoints.map(endPoint => endPoint\n      .ping()\n      .catch(e => {\n        this._logger.warn('Failed to ping end point [%s]', endPoint, e);\n\n        return neverResolve();\n      })\n      .then(time => {\n        const now = Date.now();\n\n        this._logger.info('Discovered end point [%s] with time [%s]', endPoint.toString(), time);\n        this._metricsService.push({\n          metricType: MetricsType.RoundTripTime,\n          runtime: (now - SDK.pageLoadTime) / 1000,\n          value: {uint64: time || 0},\n          resource: endPoint.toString(),\n          kind: 'ping'\n        });\n\n        return endPoint;\n      })));\n\n    return endPoint;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport EndPoint from './EndPoint';\nimport SDK from '../SDK';\nimport DiscoveryService from './DiscoveryService';\n\nconst discoveryCacheInterval = 60000;\n\ninterface IPerURIEndpoint { [x: string]: Promise<EndPoint> }\n\nexport default class Discovery {\n  private static _cache: IPerURIEndpoint = {};\n\n  static async precacheClosestEndPointDiscovery(): Promise<EndPoint> {\n    const uri = new URL(SDK.discoveryUri.value);\n\n    return Discovery.discoverClosestEndPointWithCaching(uri);\n  }\n\n  static async discoverClosestEndPointWithCaching(uri: URL): Promise<EndPoint> {\n    const url = uri.toString();\n\n    if (Discovery._cache[url]) {\n      return Discovery._cache[url];\n    }\n\n    const discoveryService = new DiscoveryService(uri);\n    const cachedValue = Discovery._cache[url] = discoveryService.discoverClosestEndPoint();\n\n    Discovery._cache[url].then(() => {\n      const ignored = setTimeout(() => {\n        if (Discovery._cache[url] === cachedValue) {\n          delete Discovery._cache[url];\n        }\n      }, discoveryCacheInterval);\n    }).catch(e => {\n      delete Discovery._cache[url];\n\n      throw e;\n    });\n\n    return cachedValue;\n  }\n\n  private constructor() {\n    throw new Error('Discovery is a static class that may not be instantiated');\n  }\n}\n\nconst ignored = Discovery.precacheClosestEndPointDiscovery();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class SdpParser {\n  private readonly _sdp: string;\n  private readonly _audioCodec: string;\n  private readonly _videoCodec: string;\n  private readonly _isAudioTrackEnabled: boolean;\n  private readonly _isVideoTrackEnabled: boolean;\n\n  constructor(sdp: string) {\n    this._sdp = sdp;\n\n    const sdpSplitByLines = this._sdp.split(/(\\r\\n|\\r|\\n)/);\n    const sdpSplitByTracks = this._sdp.split('m=');\n\n    this._audioCodec = this.applyCodec('audio', sdpSplitByLines);\n    this._videoCodec = this.applyCodec('video', sdpSplitByLines);\n    this._isAudioTrackEnabled = this.isTrackByTypeEnabled('audio', sdpSplitByTracks);\n    this._isVideoTrackEnabled = this.isTrackByTypeEnabled('video', sdpSplitByTracks);\n  }\n\n  get audioCodec(): string {\n    return this._audioCodec;\n  }\n\n  get videoCodec(): string {\n    return this._videoCodec;\n  }\n\n  get isAudioTrackEnabled(): boolean {\n    return this._isAudioTrackEnabled;\n  }\n\n  get isVideoTrackEnabled(): boolean {\n    return this._isVideoTrackEnabled;\n  }\n\n  private isTrackByTypeEnabled(type: string, sdpSplitByTracks: string[]): boolean {\n    const sdpSectionForType = sdpSplitByTracks.find(sdpTrack => sdpTrack.startsWith(type));\n\n    if (!sdpSectionForType) {\n      return false;\n    }\n\n    return !sdpSectionForType.includes(`a=inactive`);\n  }\n\n  private applyCodec(type: string, sdpSplitByLines: string []): string {\n    const usedCodecLine = sdpSplitByLines.find(sdpLine => sdpLine.includes(`a=rtpmap:${sdpSplitByLines.find(i => i.includes(`m=${type}`)).split(' ')[3]}`));\n    const usedCodec = usedCodecLine.split(' ')[1];\n    const codecName = usedCodec.split('/')[0];\n\n    return codecName;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IPeerConnection from './IPeerConnection';\nimport Subject from '../rx/Subject';\nimport FeatureEnablement from '../sdk/feature/FeatureEnablement';\nimport SdpParser from './SdpParser';\nimport IDisposable from '../lang/IDisposable';\n\nexport interface IRtcPublishMonitorStatistic {\n  [kind: string]: IRtcPublishStatistic;\n}\n\nexport interface ILegacyRTCStatsReport {\n  result: () => ILegacyRTCStatsReportItem[];\n}\n\nexport interface ILegacyRTCStatsReportItem extends RTCStatsReport {\n  type: string;\n  names: () => string[];\n  stat: (name) => number;\n}\n\nexport interface IRtcPublishStatistic {\n  lastPacketSentTimestamp?: number;\n  ssrc: string;\n  mediaType: string;\n  timestamp: number;\n  bitrate?: number;\n  bytesSent: number;\n  packetsSent: number;\n  retransmittedBytesSent?: number;\n  firCount?: number;\n  frameHeight?: number;\n  frameWidth?: number;\n  framesEncoded?: number;\n  framesSent?: number;\n  headerBytesSent?: number;\n  hugeFramesSent?: number;\n  pliCount?: number;\n  qpSum?: number;\n  totalEncodeTime?: number;\n  totalEncodedBytesTarget?: number;\n  codec: string;\n  fps?: number;\n  roundTripTime: number;\n}\n\nconst updateStatisticTimeOut = 1500;\n\nexport default class RtcPublishMonitor implements IDisposable {\n  private readonly _estimatedRoundTripTime: number;\n  private readonly _estimatedVideoCodec: string;\n  private readonly _estimatedAudioCodec: string;\n  private readonly _rtcStatistic: Subject<IRtcPublishMonitorStatistic> = new Subject<IRtcPublishMonitorStatistic>({});\n  private _peerConnection: IPeerConnection;\n  private _isMonitorRunning = true;\n  private _updateTimeOut: number;\n  private _availableTracks: {\n    audio: boolean;\n    video: boolean;\n  }\n\n  constructor(peerConnection: IPeerConnection, mediaStream: MediaStream, estimatedRoundTripTime: number) {\n    this._peerConnection = peerConnection;\n    this._estimatedRoundTripTime = estimatedRoundTripTime;\n\n    if (this._peerConnection) {\n      const parsedLocalDescription = new SdpParser(this._peerConnection.currentLocalDescription.sdp);\n      const parsedRemoteDescription = new SdpParser(this._peerConnection.currentRemoteDescription.sdp);\n\n      this._estimatedAudioCodec = parsedRemoteDescription.audioCodec;\n      this._estimatedVideoCodec = parsedRemoteDescription.videoCodec;\n\n      this._availableTracks = {\n        audio: parsedLocalDescription.isAudioTrackEnabled && parsedRemoteDescription.isAudioTrackEnabled,\n        video: parsedLocalDescription.isVideoTrackEnabled && parsedRemoteDescription.isVideoTrackEnabled\n      };\n\n      this.updateStatistic();\n    }\n  }\n\n  get rtcStatistic(): Subject<IRtcPublishMonitorStatistic> {\n    return this._rtcStatistic;\n  }\n\n  dispose(): void {\n    this._isMonitorRunning = false;\n    this._peerConnection = null;\n\n    if (this._updateTimeOut) {\n      clearTimeout(this._updateTimeOut);\n      this._updateTimeOut = null;\n    }\n  }\n\n  private async updateStatistic(): Promise<void> {\n    if (FeatureEnablement.getStatsPromiseBasedDisabled) {\n      const ignored = {\n        audio: 0,\n        video: 0\n      };\n\n      return;\n    }\n\n    // Safari 11 doesnt have kind or mediaType so we need to take it from the inbound-rtp object id\n    const getKindForSafari11 = (item): string => item.id.includes('Audio') ? 'audio' : item.id.includes('Video') ? 'video' : '';\n    const ignored = await this._peerConnection.getStats(null)\n      .then(stats => {\n        const rtcStatistics: IRtcPublishMonitorStatistic = {};\n\n        if (stats) {\n          let roundTripTime = this._estimatedRoundTripTime;\n          let lastPacketSentTimestamp;\n\n          stats.forEach(report => {\n            if (report.type === 'candidate-pair' && report.currentRoundTripTime) {\n              roundTripTime = report.currentRoundTripTime * 1000;\n\n              if (rtcStatistics['audio']) {\n                rtcStatistics['audio'].roundTripTime = roundTripTime;\n              }\n\n              if (rtcStatistics['video']) {\n                rtcStatistics['video'].roundTripTime = roundTripTime;\n              }\n            }\n\n            if (report.type === 'candidate-pair' && report.lastPacketSentTimestamp) {\n              lastPacketSentTimestamp = report.lastPacketSentTimestamp;\n\n              if (rtcStatistics['audio']) {\n                rtcStatistics['audio'].lastPacketSentTimestamp = lastPacketSentTimestamp;\n              }\n\n              if (rtcStatistics['video']) {\n                rtcStatistics['video'].lastPacketSentTimestamp = lastPacketSentTimestamp;\n              }\n            }\n\n            if (report.type === 'outbound-rtp') {\n              const kind = report.kind || report.mediaType || getKindForSafari11(report);\n              let codec = '';\n\n              stats.forEach(item => {\n                if (item.id === report.codecId) {\n                  codec = item.mimeType;\n                }\n              });\n\n              if (kind && this._availableTracks[kind]) {\n                const bytes = report.bytesSent || 0;\n                const previousBytesSent = this._rtcStatistic.value?.[kind]?.bytesSent ?? 0;\n                const bytesDelta = bytes - previousBytesSent;\n                const timeDelta = report.timestamp - this._rtcStatistic.value?.[kind]?.timestamp;\n                const bitrate = bytesDelta && timeDelta ? Math.floor(8 * bytesDelta /\n                  timeDelta * 1000) : 0;\n\n                rtcStatistics[kind] = {\n                  ssrc: report.ssrc,\n                  mediaType: kind,\n                  timestamp: report.timestamp,\n                  bitrate,\n                  bytesSent: report.bytesSent,\n                  packetsSent: report.packetsSent,\n                  retransmittedBytesSent: report.retransmittedBytesSent,\n                  codec: codec || this.getCodecByType(kind),\n                  roundTripTime\n                };\n\n                if (report.lastPacketSentTimestamp || lastPacketSentTimestamp) {\n                  rtcStatistics[kind].lastPacketSentTimestamp = report.lastPacketSentTimestamp || lastPacketSentTimestamp;\n                }\n\n                if (kind === 'video' && this._rtcStatistic.value && this._rtcStatistic.value.video) {\n                  rtcStatistics[kind]['firCount'] = report.firCount;\n                  rtcStatistics[kind]['frameHeight'] = report.frameHeight;\n                  rtcStatistics[kind]['frameWidth'] = report.frameWidth;\n                  rtcStatistics[kind]['framesEncoded'] = report.framesEncoded;\n                  rtcStatistics[kind]['framesSent'] = report.framesSent;\n                  rtcStatistics[kind]['headerBytesSent'] = report.headerBytesSent;\n                  rtcStatistics[kind]['hugeFramesSent'] = report.hugeFramesSent;\n                  rtcStatistics[kind]['pliCount'] = report.pliCount;\n                  rtcStatistics[kind]['qpSum'] = report.qpSum;\n                  rtcStatistics[kind]['totalEncodeTime'] = report.totalEncodeTime;\n                  rtcStatistics[kind]['totalEncodedBytesTarget'] = report.totalEncodedBytesTarget;\n\n                  const fps = (report.framesEncoded - this._rtcStatistic.value.video.framesEncoded) /\n                    (rtcStatistics[kind].timestamp - this._rtcStatistic.value.video.timestamp) *\n                    1000;\n\n                  rtcStatistics[kind]['fps'] = fps ? Math.round(fps * 100) / 100 : 0;\n                }\n              }\n            }\n          });\n        }\n\n        this._rtcStatistic.value = rtcStatistics;\n      }).then(() => {\n        if (this._isMonitorRunning) {\n          this._updateTimeOut = window.setTimeout(() => this.updateStatistic(), updateStatisticTimeOut);\n        }\n      });\n  }\n\n  private getCodecByType(type: string): string {\n    switch (type) {\n      case 'audio':\n        return this._estimatedAudioCodec;\n      case 'video':\n        return this._estimatedVideoCodec;\n      default:\n        return 'unknown';\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport default class RtcConfigurationManager {\n  static truncateIceServers(configuration: RTCConfiguration): RTCConfiguration {\n    const iceServers: RTCIceServer[] = [];\n\n    for (let i = 0; i < configuration.iceServers.length; i++) {\n      const urls: string[] = [];\n\n      for (let index = 0; index < 2; index++) {\n        const url = configuration.iceServers[i].urls[index];\n\n        if (url) {\n          urls.push(configuration.iceServers[i].urls[index]);\n        }\n      }\n\n      iceServers.push({\n        urls: urls,\n        username: configuration.iceServers[i].username,\n        credential: configuration.iceServers[i].credential\n      });\n    }\n\n    configuration.iceServers = iceServers;\n\n    return configuration;\n  }\n\n  private constructor() {\n    throw new Error('RtcConfigurationManager is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IPeerConnection from '../../rtc/IPeerConnection';\nimport SDK from '../SDK';\nimport EndPoint, {SetRemoteDescriptionStatus} from '../discovery/EndPoint';\nimport PeerConnectionService, {IPeerConnectionOfferInit} from '../../rtc/PeerConnectionService';\nimport Discovery from '../discovery/Discovery';\nimport FeatureEnablement from '../feature/FeatureEnablement';\nimport PublisherState from './PublisherState';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport PublisherContext from './PublisherContext';\nimport PeerConnectionContext from '../../context/PeerConnectionContext';\nimport RtcPublishMonitor from '../../rtc/RtcPublishMonitor';\nimport Durations from '../../time/Duration';\nimport RtcConfigurationManager from '../../rtc/RtcConfigurationManager';\n\nconst iceCandidateAccumulationInterval = 100;\n\nexport default class RealTimePublisher {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('RealTimePublisher');\n  private readonly _publisherContext: PublisherContext;\n  private readonly _peerConnectionContext: PeerConnectionContext;\n  private readonly _handleStreamFailure: () => Promise<void>;\n\n  constructor(publisherContext: PublisherContext, peerConnectionContext: PeerConnectionContext, handleStreamFailure: () => Promise<void>) {\n    this._publisherContext = publisherContext;\n    this._peerConnectionContext = peerConnectionContext;\n    this._handleStreamFailure = handleStreamFailure;\n  }\n\n  start(uri, token, listenOnStreamSetup): Promise<void> {\n    return Promise.all<EndPoint, IPeerConnectionOfferInit>([\n      Discovery.discoverClosestEndPointWithCaching(uri),\n      PeerConnectionService.createPeerConnectionOffer('sendonly')\n    ])\n      .then(([endPoint, {localOffer, peerConnection}]) => {\n        this._publisherContext.online.value = true;\n        this._publisherContext.endPoint.value = endPoint;\n        this._logger.info('Connecting to [%s]', endPoint.toString());\n        this._logger.info('Local offer:\\n' + localOffer.sdp);\n\n        if (FeatureEnablement.clientOfferDisabled || !peerConnection.supportsSetConfiguration || !peerConnection.supportsGetConfiguration) {\n          peerConnection.close();\n          peerConnection = null;\n          localOffer = null;\n        }\n\n        this._peerConnectionContext.peerConnection.value = peerConnection;\n\n        return endPoint.publish(this._publisherContext.name, token, localOffer, this._publisherContext.failureCount.value);\n      })\n      .then(({status, stream, rtcConfiguration, setRemoteDescriptionResponse, createOfferDescriptionResponse, createAnswerDescriptionResponse}) => {\n        this._publisherContext.stream.value = stream;\n\n        this._logger.debug(\n          '[%s] Publish completed [%s] [%j] [%j] [%j] [%j]',\n          this._publisherContext.streamId,\n          status,\n          rtcConfiguration,\n          setRemoteDescriptionResponse,\n          createOfferDescriptionResponse,\n          createAnswerDescriptionResponse\n        );\n\n        this._publisherContext.state.value = this._publisherContext.mapPublishStatusToPublisherStatus(status);\n\n        this._publisherContext.applyStatus(status);\n\n        if (status !== 'ok') {\n          return;\n        }\n\n        return this.applyRtcConfiguration(this._peerConnectionContext.peerConnection.value, rtcConfiguration)\n          .then(peerConnection => {\n            let submitCandidatesTimeout;\n            let cancelDiscovery = false;\n            let discoveryCompleted = false;\n            const candidates: RTCIceCandidate[] = [];\n\n            this._peerConnectionContext.peerConnection.value = peerConnection;\n\n            peerConnection.addStream(this._peerConnectionContext.mediaStream.value);\n\n            peerConnection.onicecandidate = (e): void => {\n              if (this._publisherContext.stream.value !== stream) {\n                return;\n              }\n\n              if (this._peerConnectionContext.peerConnection.value !== peerConnection) {\n                return;\n              }\n\n              if (cancelDiscovery) {\n                return;\n              }\n\n              if (!SDK.sendLocalCandidates.value) {\n                return;\n              }\n\n              if (e.candidate && e.candidate.candidate) {\n                candidates.push(e.candidate);\n              } else {\n                discoveryCompleted = true;\n              }\n\n              if (!submitCandidatesTimeout) {\n                submitCandidatesTimeout = setTimeout(() => {\n                  if (this._publisherContext.stream.value !== stream) {\n                    return;\n                  }\n\n                  if (cancelDiscovery) {\n                    return;\n                  }\n\n                  const ignored = this._publisherContext.endPoint.value.addIceCandidates(stream, candidates, discoveryCompleted)\n                    .then(({status, options}) => {\n                      if (status !== 'ok') {\n                        this._logger.warn('[%s] Failed to add ICE candidates with reason [%s]', this._publisherContext.streamId, status);\n\n                        return;\n                      }\n\n                      if (options.includes('cancel')) {\n                        cancelDiscovery = true;\n                      }\n\n                      this._logger.info('[%s] Added ICE candidates with reason [%s] and options [%s]', this._publisherContext.streamId, status, options);\n                    })\n                    .catch(e => {\n                      this._logger.error('[%s] Failed to add ICE candidates', this._publisherContext.streamId, e);\n                    });\n                }, iceCandidateAccumulationInterval);\n              }\n            };\n\n            peerConnection.oniceconnectionstatechange = (): void => {\n              if (this._publisherContext.stream.value !== stream) {\n                return;\n              }\n\n              if (this._peerConnectionContext.peerConnection.value !== peerConnection) {\n                return;\n              }\n\n              const retryCallback = (): void => {\n                // If we stop normally the peer connection is unregistered first.\n                // Thus anytime we see a closed peer connection that is still valid, it is an error.\n                this._publisherContext.state.value = PublisherState.Error;\n                this._publisherContext.publishing.value = false;\n                this._publisherContext.loading.value = true;\n\n                const ignored = this._handleStreamFailure()\n                  .catch(e => {\n                    this._logger.error(\n                      '[%s] Failed handling stream failure after peer connection stopped with state [%s]',\n                      this._publisherContext.streamId,\n                      peerConnection.iceConnectionState,\n                      e\n                    );\n                  });\n              };\n\n              switch (peerConnection.iceConnectionState) {\n                case 'checking':\n                case 'completed':\n                case 'connected':\n                case 'new':\n                  return;\n\n                case 'disconnected':\n                case 'failed':\n                  if (navigator.onLine) {\n                    this._logger.info('[%s] ICE connection state changed to [%s], trying to reconnect', this._publisherContext.streamId, peerConnection.iceConnectionState);\n                    this.reconnectPeerConnection(peerConnection, retryCallback);\n                  }\n\n                  return;\n                case 'closed':\n                  this._logger.info('[%s] ICE connection state changed to [%s], retrying to connect', this._publisherContext.streamId, peerConnection.iceConnectionState);\n                  retryCallback();\n\n                  return;\n                default:\n                  assertUnreachable(peerConnection.iceConnectionState);\n              }\n            };\n\n            return new Promise(resolve => {\n              resolve();\n            }).then(() => {\n              if (!setRemoteDescriptionResponse) {\n                return;\n              }\n\n              this._logger.info('[%s] Set local SDP offer [%s]', this._publisherContext.streamId, setRemoteDescriptionResponse.sessionDescription.sdp);\n\n              return peerConnection.setLocalDescription(setRemoteDescriptionResponse.sessionDescription)\n                .catch(e => {\n                  this._logger.info('[%s] Failed to set local description [%j] with message [%s]', this._publisherContext.streamId, setRemoteDescriptionResponse.sessionDescription, e.message);\n\n                  throw e;\n                });\n            }).then(() => {\n              if (!createAnswerDescriptionResponse) {\n                return;\n              }\n\n              this._logger.info('[%s] Set remote SDP answer [%s]', this._publisherContext.streamId, createAnswerDescriptionResponse.sessionDescription.sdp);\n\n              return peerConnection.setRemoteDescription(createAnswerDescriptionResponse.sessionDescription)\n                .catch(e => {\n                  this._logger.info('[%s] Failed to set remote description [%j] with message [%s]', this._publisherContext.streamId, createAnswerDescriptionResponse.sessionDescription, e.message);\n\n                  throw e;\n                });\n            }).then(() => {\n              if (!createOfferDescriptionResponse) {\n                return;\n              }\n\n              this._logger.info('[%s] Set remote SDP offer [%s]', this._publisherContext.streamId, createOfferDescriptionResponse.sessionDescription.sdp);\n\n              return peerConnection.setRemoteDescription(createOfferDescriptionResponse.sessionDescription)\n                .catch(e => {\n                  this._logger.info('[%s] Failed to set remote description [%j] with message [%s]', this._publisherContext.streamId, createAnswerDescriptionResponse.sessionDescription, e.message);\n\n                  throw e;\n                })\n                .then(() => {\n                  return peerConnection.createAnswer({\n                    offerToReceiveAudio: false,\n                    offerToReceiveVideo: false\n                  });\n                }).then(answer => {\n                  this._logger.info('[%s] Set local SDP answer [%s]', this._publisherContext.streamId, answer.sdp);\n\n                  return this._publisherContext.endPoint.value.setRemoteDescription(stream, answer);\n                }).then(({status, sessionDescription}) => {\n                  this._publisherContext.state.value = this.mapSetRemoteDescriptionStatusToPublisherStatus(status);\n\n                  if (status !== 'ok') {\n                    this._publisherContext.publishing.value = false;\n                    this._publisherContext.standby.value = true;\n                    this._publisherContext.stopped.value = false;\n\n                    return;\n                  }\n\n                  this._logger.info('[%s] Set local SDP [%s]', this._publisherContext.streamId, sessionDescription.sdp);\n\n                  return peerConnection.setLocalDescription(sessionDescription)\n                    .catch(e => {\n                      this._logger.info('[%s] Failed to set local description [%j] with message [%s]', this._publisherContext.streamId, sessionDescription, e.message);\n\n                      throw e;\n                    });\n                });\n            }).then(() => {\n              listenOnStreamSetup.success(this._publisherContext.streamId);\n\n              this._publisherContext.state.value = PublisherState.Publishing;\n              this._publisherContext.publishing.value = true;\n\n              const rtcPublishMonitor = new RtcPublishMonitor(peerConnection, this._peerConnectionContext.mediaStream.value, this._publisherContext.endPoint.value.roundTripTime / 4);\n              const ignored = rtcPublishMonitor.rtcStatistic.subscribe(statistics => {\n                this._publisherContext.rtcStatistics.value = statistics;\n\n                if (!this._publisherContext.rtcVideoStatistic && !this._publisherContext.rtcAudioStatistic) {\n                  this._publisherContext.rtcAudioStatistic = statistics.audio;\n                  this._publisherContext.rtcVideoStatistic = statistics.video;\n\n                  return;\n                }\n\n                let audioTrackFailed = false;\n                let videoTrackFailed = false;\n\n                if (statistics.audio) {\n                  if (this._publisherContext.rtcAudioStatistic && this._publisherContext.rtcAudioStatistic.timestamp !== statistics.audio.timestamp) {\n                    audioTrackFailed = this._publisherContext.rtcAudioStatistic && this._publisherContext.rtcAudioStatistic.bytesSent === statistics.audio.bytesSent;\n\n                    if (audioTrackFailed && navigator.onLine) {\n                      this._logger.info(\n                        '[%s] Audio track failed with last bytesSent [%s] is equal to previous bytesSent [%s] within [%s]',\n                        this._publisherContext.streamId,\n                        statistics.audio.bytesSent,\n                        this._publisherContext.rtcAudioStatistic.bytesSent,\n                        new Durations(statistics.audio.timestamp - this._publisherContext.rtcAudioStatistic.timestamp).toIsoString()\n                      );\n                    }\n\n                    this._publisherContext.rtcAudioStatistic = statistics.audio;\n                  }\n                }\n\n                if (statistics.video) {\n                  if (this._publisherContext.rtcVideoStatistic && this._publisherContext.rtcVideoStatistic.timestamp !== statistics.video.timestamp) {\n                    videoTrackFailed = this._publisherContext.rtcVideoStatistic && this._publisherContext.rtcVideoStatistic.bytesSent === statistics.video.bytesSent;\n\n                    if (videoTrackFailed && navigator.onLine) {\n                      this._logger.info(\n                        '[%s] Video track failed with last bytesSent [%s] is equal to previous bytesSent [%s] within [%s]',\n                        this._publisherContext.streamId,\n                        statistics.video.bytesSent,\n                        this._publisherContext.rtcVideoStatistic.bytesSent,\n                        new Durations(statistics.video.timestamp - this._publisherContext.rtcVideoStatistic.timestamp).toIsoString()\n                      );\n                    }\n\n                    this._publisherContext.rtcVideoStatistic = statistics.video;\n                  }\n                }\n\n                if ((videoTrackFailed || audioTrackFailed) && navigator.onLine) {\n                  const retryCallback = (): void => {\n                    this._publisherContext.state.value = PublisherState.Error;\n                    this._publisherContext.loading.value = true;\n\n                    rtcPublishMonitor.dispose();\n\n                    const ignored = this._handleStreamFailure()\n                      .catch(e => {\n                        this._logger.error(\n                          '[%s] Failed handling stream failure after track stopped with state [%s]',\n                          this._publisherContext.streamId,\n                          peerConnection.iceConnectionState,\n                          e\n                        );\n                      });\n                  };\n\n                  this.reconnectPeerConnection(peerConnection, retryCallback);\n                } else {\n                  this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n                }\n              });\n\n              return Promise.resolve();\n            });\n          });\n      });\n  }\n\n  private async applyRtcConfiguration(\n    optionalPeerConnection: IPeerConnection | null,\n    rtcConfiguration: RTCConfiguration): Promise<IPeerConnection> {\n    if (!optionalPeerConnection) {\n      rtcConfiguration = RtcConfigurationManager.truncateIceServers(rtcConfiguration);\n\n      return SDK.peerConnectionFactory.value.createPeerConnection(rtcConfiguration);\n    }\n\n    const newRtcConfiguration = {\n      ...optionalPeerConnection.getConfiguration(),\n      ...rtcConfiguration\n    };\n\n    optionalPeerConnection.setConfiguration(newRtcConfiguration);\n\n    return optionalPeerConnection;\n  }\n\n  private reconnectPeerConnection(peerConnection: IPeerConnection, retryCallback: () => void): void {\n    if (peerConnection.iceConnectionState === 'closed') {\n      return;\n    }\n\n    this._publisherContext.state.value = PublisherState.Reconnecting;\n\n    if (this._peerConnectionContext.peerConnectionReconnectAttempts < SDK.maximalNumberOfPeerConnectionReconnectAttempts || !SDK.automaticallyReconnectPeerConnection) {\n      this._peerConnectionContext.peerConnectionReconnectAttempts++;\n\n      if (FeatureEnablement.clientOfferDisabled ||\n        !peerConnection.supportsSetConfiguration ||\n        !peerConnection.supportsGetConfiguration ||\n        this._publisherContext.failureCount.value\n      ) {\n        return;\n      }\n\n      this._logger.info('Reconnecting peer connection by restarting ICE');\n\n      const localOffer = peerConnection.currentLocalDescription;\n      const ignored = peerConnection.createOffer({iceRestart: true}).then(offer => {\n        return peerConnection.setLocalDescription(offer).then(() => {\n          return peerConnection.setLocalDescription(localOffer)\n            .then(() => {\n              this._publisherContext.state.value = PublisherState.Publishing;\n            });\n        });\n      })\n        .catch(e => {\n          this._logger.error('Failed to reconnect peer connection', e);\n          this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n          retryCallback();\n        });\n\n      return;\n    }\n\n    this._logger.info('Failed to reconnect peer connection after [%s] attempts, performing full recovery', this._peerConnectionContext.peerConnectionReconnectAttempts);\n    this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n    retryCallback();\n  }\n\n  private mapSetRemoteDescriptionStatusToPublisherStatus(status: SetRemoteDescriptionStatus): PublisherState {\n    switch (status) {\n      case 'ok':\n        return PublisherState.Starting;\n      case 'unauthorized':\n        return PublisherState.Unauthorized;\n      case 'not-found':\n      case 'capacity':\n      case 'rate-limited':\n      case 'timeout':\n        return PublisherState.Recovering;\n      case 'failed':\n        return PublisherState.Error;\n      default:\n        assertUnreachable(status);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport IDisposable from '../../lang/IDisposable';\nimport ReadOnlySubject from '../../rx/ReadOnlySubject';\nimport EndPoint, {IStream} from '../discovery/EndPoint';\nimport SDK from '../SDK';\nimport IPeerConnection from '../../rtc/IPeerConnection';\nimport PublisherState from './PublisherState';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport Disposable from '../../lang/Disposable';\nimport EdgeAuth from '../edgeAuth/EdgeAuth';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport SessionTelemetry from '../../video/SessionTelemetry';\nimport {IRtcMonitorStatistic} from '../../rtc/RtcConnectionMonitor';\n\nimport {EdgeToken} from '../edgeAuth/EdgeToken';\nimport TokenContext from '../../context/TokenContext';\nimport PublisherContext from './PublisherContext';\nimport PeerConnectionContext from '../../context/PeerConnectionContext';\nimport StateContext from '../../context/StateContext';\nimport DiscoveryUri from '../discovery/DiscoveryUri';\nimport MetricsFactory from '../../metrics/MetricsFactory';\nimport MetricsService from '../../metrics/MetricsService';\nimport RealTimePublisher from './RealTimePublisher';\n\nconst defaultStreamTerminationReason = 'client:termination';\nconst backoffIntervalInMilliseconds = 2000;\nconst failureCountCleanUpIntervalInMilliseconds = 3000;\nconst maxBackoffIntervalInMilliseconds = 300000;\nconst standbyPollingIntervalInMilliseconds = 15000;\n\nexport default class Publisher implements IDisposable {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('Publisher');\n  private readonly _tokenContext: TokenContext;\n  private readonly _publisherContext: PublisherContext;\n  private readonly _peerConnectionContext: PeerConnectionContext;\n  private readonly _stateContext: StateContext;\n  private readonly _publisherStartTime: number;\n  private readonly _readOnlyToken: ReadOnlySubject<EdgeToken>;\n  private readonly _readOnlyPeerConnection: ReadOnlySubject<IPeerConnection>;\n  private readonly _readOnlyState: ReadOnlySubject<PublisherState>;\n  private readonly _readOnlyTokenExpiring: ReadOnlySubject<boolean>;\n  private readonly _readOnlyAuthorized: ReadOnlySubject<boolean>;\n  private readonly _readOnlyOnline: ReadOnlySubject<boolean>;\n  private readonly _readOnlyLoading: ReadOnlySubject<boolean>;\n  private readonly _readOnlyPublishing: ReadOnlySubject<boolean>;\n  private readonly _readOnlyStandby: ReadOnlySubject<boolean>;\n  private readonly _readOnlyStopped: ReadOnlySubject<boolean>;\n  private readonly _readOnlyFailureCount: ReadOnlySubject<number>;\n  private readonly _readOnlyEndPoint: ReadOnlySubject<EndPoint>;\n  private readonly _readOnlyStream: ReadOnlySubject<IStream>;\n  private readonly _readOnlyRtcStatistics: ReadOnlySubject<IRtcMonitorStatistic>;\n  private readonly _readOnlyMediaStream: ReadOnlySubject<MediaStream>;\n\n  private _metricsService: MetricsService;\n  private readonly _sessionTelemetry: SessionTelemetry;\n\n  constructor(mediaStream: MediaStream, token: string, name?: string) {\n    this._tokenContext = new TokenContext(token);\n    this._publisherContext = new PublisherContext(name);\n    this._peerConnectionContext = new PeerConnectionContext();\n    this._stateContext = new StateContext();\n    this._publisherStartTime = Date.now();\n    this._readOnlyToken = new ReadOnlySubject<string>(this._tokenContext.token);\n    this._readOnlyPeerConnection = new ReadOnlySubject<IPeerConnection>(this._peerConnectionContext.peerConnection);\n    this._readOnlyState = new ReadOnlySubject<PublisherState>(this._publisherContext.state);\n    this._readOnlyTokenExpiring = new ReadOnlySubject<boolean>(this._tokenContext.tokenExpiring);\n    this._readOnlyAuthorized = new ReadOnlySubject<boolean>(this._publisherContext.authorized);\n    this._readOnlyOnline = new ReadOnlySubject<boolean>(this._publisherContext.online);\n    this._readOnlyLoading = new ReadOnlySubject<boolean>(this._publisherContext.loading);\n    this._readOnlyPublishing = new ReadOnlySubject<boolean>(this._publisherContext.publishing);\n    this._readOnlyStandby = new ReadOnlySubject<boolean>(this._publisherContext.standby);\n    this._readOnlyStopped = new ReadOnlySubject<boolean>(this._publisherContext.stopped);\n    this._readOnlyFailureCount = new ReadOnlySubject<number>(this._publisherContext.failureCount);\n    this._readOnlyEndPoint = new ReadOnlySubject<EndPoint>(this._publisherContext.endPoint);\n    this._readOnlyStream = new ReadOnlySubject<IStream>(this._publisherContext.stream);\n    this._readOnlyRtcStatistics = new ReadOnlySubject<IRtcMonitorStatistic>(this._publisherContext.rtcStatistics);\n    this._readOnlyMediaStream = new ReadOnlySubject<MediaStream>(this._peerConnectionContext.mediaStream);\n\n    this._peerConnectionContext.mediaStream.value = mediaStream;\n\n    const parsedToken = EdgeAuth.parseToken(this._tokenContext.token.value);\n    const discoveryUri = (EdgeAuth.getUri(parsedToken) || SDK.discoveryUri.value).toString();\n\n    SDK.tenancy.value = EdgeAuth.getTenancy(parsedToken) || SDK.tenancy.value;\n    DiscoveryUri.uri.value = discoveryUri;\n    this._metricsService = MetricsFactory.getMetricsService(discoveryUri);\n    this._sessionTelemetry = new SessionTelemetry(SDK.pageLoadTime, this._metricsService);\n    this._publisherContext.publisherDisposables.add(this._sessionTelemetry);\n\n    this._publisherContext.publisherDisposables.add(\n      this._publisherContext.state.subscribe(state => {\n        if (this._publisherContext.clearFailureCountTimeout) {\n          clearTimeout(this._publisherContext.clearFailureCountTimeout);\n        }\n\n        if (!this._publisherContext.failureCount.value) {\n          return;\n        }\n\n        if (state !== PublisherState.Publishing) {\n          return;\n        }\n\n        this._publisherContext.clearFailureCountTimeout = window.setTimeout(() => {\n          this._publisherContext.failureCount.value = 0;\n        }, failureCountCleanUpIntervalInMilliseconds);\n      }));\n\n    const destroyStreamOnUnmount = () => {\n      if (this._publisherContext.stream.value && this._publisherContext.endPoint.value) {\n        const ignored = this._publisherContext.endPoint.value.destroyStream(this._publisherContext.stream.value, 'client:termination-on-window-unload');\n      }\n    };\n\n    window.addEventListener('beforeunload', destroyStreamOnUnmount);\n\n    this._publisherContext.publisherDisposables.add(new Disposable(() => {\n      window.removeEventListener('beforeunload', destroyStreamOnUnmount);\n    }));\n\n    this.start();\n  }\n\n  get token(): EdgeToken {\n    return this._tokenContext.token.value;\n  }\n\n  set token(token: EdgeToken) {\n    this._publisherContext.disposables.dispose();\n\n    this._tokenContext.token.value = token;\n    this._tokenContext.tokenExpiring.value = false;\n\n    const parsedToken = EdgeAuth.parseToken(this._tokenContext.token.value);\n    const discoveryUri = (EdgeAuth.getUri(parsedToken) || SDK.discoveryUri.value).toString();\n\n    SDK.tenancy.value = EdgeAuth.getTenancy(parsedToken) || SDK.tenancy.value;\n    DiscoveryUri.uri.value = discoveryUri;\n\n    this._metricsService = MetricsFactory.getMetricsService(discoveryUri);\n\n    this.start();\n  }\n\n  get peerConnection(): ReadOnlySubject<IPeerConnection> {\n    return this._readOnlyPeerConnection;\n  }\n\n  get state(): ReadOnlySubject<PublisherState> {\n    return this._readOnlyState;\n  }\n\n  get tokenExpiring(): ReadOnlySubject<boolean> {\n    return this._readOnlyTokenExpiring;\n  }\n\n  get authorized(): ReadOnlySubject<boolean> {\n    return this._readOnlyAuthorized;\n  }\n\n  get online(): ReadOnlySubject<boolean> {\n    return this._readOnlyOnline;\n  }\n\n  get loading(): ReadOnlySubject<boolean> {\n    return this._readOnlyLoading;\n  }\n\n  get publishing(): ReadOnlySubject<boolean> {\n    return this._readOnlyPublishing;\n  }\n\n  get standby(): ReadOnlySubject<boolean> {\n    return this._readOnlyStandby;\n  }\n\n  get stopped(): ReadOnlySubject<boolean> {\n    return this._readOnlyStopped;\n  }\n\n  get failureCount(): ReadOnlySubject<number> {\n    return this._readOnlyFailureCount;\n  }\n\n  get endPoint(): ReadOnlySubject<EndPoint> {\n    return this._readOnlyEndPoint;\n  }\n\n  get stream(): ReadOnlySubject<IStream> {\n    return this._readOnlyStream;\n  }\n\n  get streamId(): string {\n    return this._publisherContext.streamId;\n  }\n\n  get rtcStatistics(): ReadOnlySubject<IRtcMonitorStatistic> {\n    return this._readOnlyRtcStatistics;\n  }\n\n  get mediaStream(): ReadOnlySubject<MediaStream> {\n    return this._readOnlyMediaStream;\n  }\n\n  async stop(reason: string): Promise<void> {\n    return new Promise(resolve => {\n      if (!this._stateContext.isStarting.value) {\n        this.processStop(reason);\n\n        resolve();\n\n        return;\n      }\n\n      this._publisherContext.disposables.add(this._stateContext.isStarting.subscribe(isStarting => {\n        if (!isStarting) {\n          this.processStop(reason);\n          resolve();\n        }\n      }));\n    });\n  }\n\n  private processStop(reason: string): void {\n    this.cleanUpResources(reason);\n\n    if (this._peerConnectionContext.peerConnection.value) {\n      this._peerConnectionContext.peerConnection.value.close();\n      this._peerConnectionContext.peerConnection.value = null;\n    }\n\n    this._publisherContext.state.value = PublisherState.Stopped;\n  }\n\n  async dispose(): Promise<void> {\n    return this.stop('client:channel-dispose').then(() => {\n      this._publisherContext.publisherDisposables.dispose();\n      this._stateContext.isDisposed = true;\n    });\n  }\n\n  getUri(token): URL {\n    const parsedToken = EdgeAuth.parseToken(token);\n    const url = EdgeAuth.getUri(parsedToken);\n\n    if (url) {\n      return url;\n    }\n\n    this._logger.info('Fall back to the default discover URI [%s]', SDK.discoveryUri.value);\n\n    return new URL(SDK.discoveryUri.value);\n  }\n\n  async start(): Promise<void> {\n    if (this._stateContext.isDisposed) {\n      throw new Error('Channel was already disposed');\n    }\n\n    if (this._stateContext.isStarting.value) {\n      this._logger.info('Publisher is already starting, skipping start');\n\n      return;\n    }\n\n    this._stateContext.isStarting.value = true;\n\n    return this.processStart();\n  }\n\n  setMediaStream(mediaStream: MediaStream) {\n    this._peerConnectionContext.mediaStream.value = mediaStream;\n\n    if (this._peerConnectionContext.peerConnection.value) {\n      mediaStream.getTracks().forEach(mediaTrack => {\n        this._peerConnectionContext.peerConnection.value.getSenders().forEach(sender => {\n          if (mediaTrack.kind === sender?.track?.kind && mediaTrack.id !== sender.track.id) {\n            sender.replaceTrack(mediaTrack);\n          }\n        });\n      });\n    }\n  }\n\n  private async processStart(): Promise<void> {\n    const token = this._tokenContext.token.value;\n    const listenOnStreamSetup = this._sessionTelemetry.listenOnStreamSetup();\n\n    if (!EdgeAuth.isValidToken(token)) {\n      this._logger.error('Failed to parse token [%s]', token);\n      this._publisherContext.state.value = PublisherState.Unauthorized;\n      this._publisherContext.authorized.value = false;\n      this._stateContext.isStarting.value = false;\n\n      return;\n    }\n\n    this.cleanUpResources('client:start');\n    this._publisherContext.state.value = PublisherState.Starting;\n    this._publisherContext.loading.value = true;\n\n    const uri = this.getUri(token);\n    const handleStreamFailureCallback: () => Promise<void> = () => new Promise((resolve): void => {\n      // Need to set isStarting to false and call handleStreamFailure if stream monitors found an issue\n      this._stateContext.isStarting.value = false;\n\n      return resolve(this.handleStreamFailure());\n    });\n    const streamPublisher = new RealTimePublisher(this._publisherContext, this._peerConnectionContext, handleStreamFailureCallback);\n\n    return streamPublisher.start(\n      uri,\n      token,\n      listenOnStreamSetup)\n      .then(() => {\n        this._publisherContext.loading.value = false;\n      })\n      .catch(e => {\n        listenOnStreamSetup.fail();\n\n        this._publisherContext.failureCount.value++;\n\n        this._publisherContext.online.value = false;\n\n        this.cleanUpResources('client:cleanup-after-failed-setup');\n\n        this._publisherContext.state.value = PublisherState.Error;\n\n        this._logger.error('Failed to start publishing', e);\n      })\n      .finally(() => {\n        this._stateContext.isStarting.value = false;\n\n        if (this._publisherContext.state.value === PublisherState.Publishing || !SDK.automaticRetryOnFailure) {\n          return;\n        }\n\n        const timeoutId = setTimeout(() => {\n          const ignored = this.handleStreamFailure()\n            .catch(e => {\n              this._logger.error('Failed handling stream failure', e);\n            });\n        }, this.getRetryInterval());\n\n        this._publisherContext.disposables.add(new Disposable(() => {\n          clearTimeout(timeoutId);\n        }));\n      });\n  }\n\n  private getRetryInterval(): number {\n    switch (this._publisherContext.state.value) {\n      case PublisherState.StandBy:\n      case PublisherState.Offline:\n        return standbyPollingIntervalInMilliseconds;\n      case PublisherState.Error:\n      case PublisherState.Recovering:\n      case PublisherState.Unauthorized:\n      case PublisherState.GeoRestricted:\n      case PublisherState.GeoBlocked:\n      case PublisherState.Stopped:\n      case PublisherState.Starting:\n      case PublisherState.Publishing:\n      case PublisherState.Reconnecting:\n      case PublisherState.UnsupportedFeature:\n        // First and second attempt fast, after that exponential with backoff interval\n        return Math.min(maxBackoffIntervalInMilliseconds, Math.pow(backoffIntervalInMilliseconds, Math.max(0, this._publisherContext.failureCount.value - 1)));\n      default:\n        assertUnreachable(this._publisherContext.state.value);\n    }\n  }\n\n  private async handleStreamFailure(): Promise<void> {\n    switch (this._publisherContext.state.value) {\n      case PublisherState.Error:\n      case PublisherState.Reconnecting:\n      case PublisherState.StandBy:\n      case PublisherState.Offline:\n      case PublisherState.Recovering:\n        this._logger.info('Retry start with initial state [%s] [%s]', this._publisherContext.state.value, PublisherState[this._publisherContext.state.value]);\n\n        break;\n      case PublisherState.Unauthorized:\n        this._logger.info('Publisher is unauthorized, skipping retry of start. Please provide a new token and invoke start()');\n\n        return;\n      case PublisherState.GeoRestricted:\n        this._logger.info('Publisher is geo restricted, skipping retry of start. Please provide a new token and invoke start()');\n\n        return;\n      case PublisherState.GeoBlocked:\n        this._logger.info('Publisher is geo blocked, skipping retry of start. Please provide a new token and invoke start()');\n\n        return;\n      case PublisherState.Stopped:\n        this._logger.info('Publisher is stopped, skipping retry of start.');\n\n        return;\n      case PublisherState.Publishing:\n        this._logger.info('Publisher is publishing, skipping retry of start');\n\n        return;\n      case PublisherState.Starting:\n        this._logger.info('Publisher is already starting, skipping retry of start');\n\n        return;\n      case PublisherState.UnsupportedFeature:\n        this._logger.info('Publisher is stopped due to unsupported feature, skipping retry of start.');\n\n        return;\n      default:\n        assertUnreachable(this._publisherContext.state.value);\n    }\n\n    return this.start();\n  }\n\n  private cleanUpResources(reason: string = defaultStreamTerminationReason): void {\n    this._publisherContext.disposables.dispose();\n\n    const peerConnection = this._peerConnectionContext.peerConnection.value;\n\n    if (peerConnection) {\n      this._peerConnectionContext.peerConnection.value = null;\n      peerConnection.close();\n    }\n\n    this._publisherContext.publishing.value = false;\n    this._publisherContext.stopped.value = true;\n    this._publisherContext.standby.value = false;\n\n    if (this._publisherContext.stream.value && this._publisherContext.endPoint.value) {\n      const ignored = this._publisherContext.endPoint.value.destroyStream(this._publisherContext.stream.value, reason)\n        .then(({status}) => {\n          if (status !== 'ok') {\n            this._logger.warn('[%s] Failed to destroy stream with reason [%s]', this.streamId, status);\n\n            return;\n          }\n\n          this._logger.info('[%s] Destroyed stream with reason [%s]', this.streamId, status);\n        })\n        .catch(e => {\n          this._logger.error('[%s] Failed to destroy stream', this.streamId, e);\n        });\n    }\n\n    this._publisherContext.stream.value = null;\n    this._publisherContext.endPoint.value = null;\n    this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport SDK from '../SDK';\nimport {EdgeToken} from '../edgeAuth/EdgeToken';\nimport Publisher from './Publisher';\n\ntype CreatePublisherOptions = {\n  mediaStream: MediaStream;\n  token: EdgeToken;\n  name?: string;\n}\n\nexport default class Publishers {\n  static createPublisher(options: CreatePublisherOptions): Publisher {\n    if (!SDK.initialized.value) {\n      throw new Error('SDK is not loaded.');\n    }\n\n    return new Publisher(options.mediaStream, options.token, options.name);\n  }\n\n  private constructor() {\n    throw new Error('Publishers is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport SDK from '../SDK';\nimport Publishers from './Publishers';\nimport PublisherState from './PublisherState';\n\nexport {\n  SDK,\n  Publishers,\n  PublisherState\n};\n\nexport default {\n  SDK,\n  Publishers,\n  PublisherState\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(7112);\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}