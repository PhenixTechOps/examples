{"version":3,"sources":["webpack://phenix/webpack/universalModuleDefinition","webpack://phenix/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://phenix/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://phenix/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://phenix/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://phenix/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://phenix/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://phenix/./node_modules/@babel/runtime/helpers/createClass.js","webpack://phenix/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://phenix/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://phenix/./node_modules/@babel/runtime/helpers/inherits.js","webpack://phenix/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://phenix/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://phenix/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://phenix/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://phenix/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://phenix/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://phenix/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://phenix/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://phenix/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://phenix/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://phenix/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://phenix/./node_modules/@babel/runtime/helpers/typeof.js","webpack://phenix/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://phenix/./node_modules/@babel/runtime/regenerator/index.js","webpack://phenix/./src/dom/ApplicationActivityMonitor.ts","webpack://phenix/./src/dom/BrowserDetector.ts","webpack://phenix/./src/dom/ConfigurationParameterReader.ts","webpack://phenix/./src/dom/PrivacyMode.ts","webpack://phenix/./src/lang/Disposable.ts","webpack://phenix/./src/lang/DisposableList.ts","webpack://phenix/./src/lang/Strings.ts","webpack://phenix/./src/lang/assertUnreachable.ts","webpack://phenix/./src/logger/Appenders.ts","webpack://phenix/./src/logger/ConsoleAppender.ts","webpack://phenix/./src/logger/Logger.ts","webpack://phenix/./src/logger/LoggerDefaults.ts","webpack://phenix/./src/logger/LoggerFactory.ts","webpack://phenix/./src/logger/LoggingLevelMapping.ts","webpack://phenix/./src/logger/LoggingThreshold.ts","webpack://phenix/./src/metrics/MetricType.ts","webpack://phenix/./src/metrics/MetricsConfiguration.ts","webpack://phenix/./src/metrics/MetricsFactory.ts","webpack://phenix/./src/metrics/MetricsService.ts","webpack://phenix/./src/metrics/MetricsType.ts","webpack://phenix/./src/metrics/TelemetricLevelMapping.ts","webpack://phenix/./src/metrics/TelemetryDefault.ts","webpack://phenix/./src/promise/PromiseHandler.ts","webpack://phenix/./src/promise/Promise.ts","webpack://phenix/./src/rtc/VanillaPeerConnection.ts","webpack://phenix/./src/rtc/VanillaPeerConnectionFactory.ts","webpack://phenix/./src/rx/ReadOnlySubject.ts","webpack://phenix/./src/rx/Subject.ts","webpack://phenix/./src/sdk/Environment.ts","webpack://phenix/./src/sdk/SDK.ts","webpack://phenix/./src/sdk/TelemetryUrl.ts","webpack://phenix/./src/sdk/channels/ChannelState.ts","webpack://phenix/./src/sdk/api/SetTemporaryMaximalBitrate.ts","webpack://phenix/./src/video/Dimension.ts","webpack://phenix/./src/time/Duration.ts","webpack://phenix/./src/video/VideoTelemetry.ts","webpack://phenix/./src/dom/StreamSetupListener.ts","webpack://phenix/./src/dom/NetworkMonitor.ts","webpack://phenix/./src/video/SessionTelemetry.ts","webpack://phenix/./src/context/TokenContext.ts","webpack://phenix/./src/sdk/channels/ChannelContext.ts","webpack://phenix/./src/context/PeerConnectionContext.ts","webpack://phenix/./src/context/StateContext.ts","webpack://phenix/./src/sdk/discovery/BitrateModeMapping.ts","webpack://phenix/./src/sdk/discovery/BitrateStateMapping.ts","webpack://phenix/./src/sdk/discovery/EndPoint.ts","webpack://phenix/./src/sdk/discovery/DiscoveryService.ts","webpack://phenix/./src/sdk/discovery/Discovery.ts","webpack://phenix/./src/sdk/streaming/NetworkStates.ts","webpack://phenix/./src/sdk/streaming/WebPlayer.ts","webpack://phenix/./src/sdk/streaming/ShakaPlayer.ts","webpack://phenix/./src/sdk/streaming/HlsPlayer.ts","webpack://phenix/./src/sdk/streaming/LiveStreaming.ts","webpack://phenix/./src/sdk/streaming/ChunkedStream.ts","webpack://phenix/./src/rtc/PeerConnectionService.ts","webpack://phenix/./src/rtc/SdpParser.ts","webpack://phenix/./src/rtc/RtcConnectionMonitor.ts","webpack://phenix/./src/rtc/RtcConfigurationManager.ts","webpack://phenix/./src/sdk/streaming/RealTimeStream.ts","webpack://phenix/./src/sdk/streaming/StreamFactory.ts","webpack://phenix/./src/sdk/channels/Channel.ts","webpack://phenix/./src/sdk/channels/Channels.ts","webpack://phenix/./src/sdk/channels/index.ts","webpack://phenix/./src/sdk/defaults.ts","webpack://phenix/./src/sdk/discovery/DiscoveryUri.ts","webpack://phenix/./src/sdk/edgeAuth/EdgeAuth.ts","webpack://phenix/./src/sdk/feature/FeatureEnablement.ts","webpack://phenix/./src/sdk/version/VersionManager.ts","webpack://phenix/./src/telemetry/TelemetryApender.ts","webpack://phenix/./src/telemetry/TelemetryConfiguration.ts","webpack://phenix/./src/telemetry/TelemetryService.ts","webpack://phenix/webpack/bootstrap","webpack://phenix/webpack/startup","webpack://phenix/webpack/runtime/compat get default export","webpack://phenix/webpack/runtime/define property getters","webpack://phenix/webpack/runtime/hasOwnProperty shorthand","webpack://phenix/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","self","arr","len","length","i","arr2","Array","__esModule","isArray","arrayLikeToArray","ReferenceError","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","this","args","arguments","apply","err","undefined","instance","Constructor","TypeError","toPropertyKey","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","prototype","obj","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","bind","__proto__","subClass","superClass","create","constructor","iter","Symbol","iterator","from","_i","_s","_e","_x","_r","_arr","_n","_d","call","next","push","_typeof","assertThisInitialized","_regeneratorRuntime","Op","hasOwn","hasOwnProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","Error","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","displayName","isGeneratorFunction","genFun","ctor","name","mark","awrap","async","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_setPrototypeOf","p","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","input","hint","prim","toPrimitive","res","String","Number","minLen","n","toString","test","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","ApplicationActivityMonitor","DisposableList","Date","now","_isForeground","Subject","_readOnlyIsForeground","ReadOnlySubject","detectTabFocusChange","_timeOfLastTabFocusChange","_disposables","dispose","hidden","visibilityChange","document","msHidden","webkitHidden","handleVisibilityChange","isForeground","setFocusState","addEventListener","add","Disposable","removeEventListener","listenForDocumentFocus","_documentFocusInterval","window","setInterval","hasFocus","clearInterval","BrowserDetector","_browserNameAndVersion","_browserName","_browserMajorVersion","_isChrome69","_isChrome70","_isChrome71","_isChrome72","_isChrome74","_isChrome75","_isChrome76","_isChrome77","navigator","userAgent","browserNameAndVersion","match","_browserNameAndVersionRegex","parseBrowserNameAndVersionForIE","browserNameList","split","browserVersionList","fullVersion","msie","indexOf","parseInt","substring","version","parseBrowserNameAndVersion","parseBrowserName","parseBrowserMajorVersion","includes","ConfigurationParameterReader","readConfigurationParameterValue","readConfigurationParameterURIValue","defaultStringValue","defaultBooleanValue","TelemetryLevelMapping","TelemetryDefault","LoggingLevelMapping","LoggerDefaults","metaValue","querySelector","getAttribute","valueURIParameterName","URLSearchParams","location","search","get","PrivacyMode","_isPrivate","__PRIVACY_MODE__","e","applyIsPrivate","disposable","_disposed","_disposable","_list","Strings","loops","Math","ceil","fill","random","reduce","string","func","x","Appenders","_appenders","appender","items","item","ConsoleAppender","threshold","_threshold","logLevel","message","category","date","fullMessage","toISOString","LoggingLevel","console","log","Logger","appenders","_category","Trace","Debug","Info","Warn","Fatal","level","replacePlaceholders","replacePlaceholdersString","index","replaceArgument","splice","stringify","accumulator","currentValue","array","stack","cache","JSON","argument","data","toStringStr","LoggerFactory","_telemetryConfiguration","_loggers","applyLoggingLevel","applyAppenderLoggingLevel","applyConsoleLogger","applyTelemetryLogger","parameterValue","_configurationParameterReader","getStringValue","setThreshold","applyAppender","TelemetryAppender","LoggingThreshold","TelemetryConfiguration","applyLoggerConfigFromParameterConfiguration","loggingLevel","assertUnreachable","loggingLevelType","MetricType","metrics","_metrics","MetricsType","TelemetryLevel","MetricsConfiguration","_url","url","metricsUrl","URL","pathname","_environment","environment","_tenancy","tenancy","_sessionId","sessionId","MetricsFactory","metricsServices","_metricsServices","metricsConfiguration","SDK","TelemetryUrl","Environment","MetricsService","telemetryLevel","metricsService","hostname","_metricsConfiguration","metric","streamId","previousValue","resource","kind","metricType","getTelemetryLevel","metricRecord","timestamp","getName","fullQualifiedName","_domain","VersionManager","sendMetricsIfAble","metricsMessages","formData","FormData","append","records","fetch","body","_isSending","sendMetrics","response","catch","telemetryLevelType","PromiseHandler","onFulfilled","onRejected","promise","callback","_state","_handled","_value","_deferreds","doResolve","promiseResolve","reason","promiseReject","newValue","finale","_immediate","_unhandledRejection","deferred","remaining","manageResponse","_","setTimeout","warn","VanillaPeerConnection","configuration","FeatureEnablement","_peerConnection","webkitRTCPeerConnection","RTCPeerConnection","currentLocalDescription","currentRemoteDescription","iceConnectionState","getConfiguration","setConfiguration","addTransceiver","options","createOffer","createAnswer","description","setLocalDescription","RTCSessionDescription","sdp","_logger","setRemoteDescription","getSenders","selector","getStats","listener","mediaStream","getTracks","track","addTrack","ontrack","handler","onicecandidate","oniceconnectionstatechange","close","VanillaPeerConnectionFactory","subject","_subject","subscribe","DisposableListener","listeners","idx","_listeners","changed","comparable","equals","origin","pageLoadTime","_sendLocalCandidates","_clientSessionId","_loadedTimestamp","_readOnlyInitialized","_readOnlyDiscoveryUri","_readOnlyPeerConnectionFactory","_automaticallyRetryOnFailure","_automaticallyReconnectPeerConnection","_automaticallyPlayMediaStream","_automaticallyMuteVideoOnPlayFailure","_webPlayerLoader","_shakaPlayerLoader","_hlsJsLoader","_metricsService","_applicationActivityMonitor","_telemetryUrl","_maximalNumberOfPeerConnectionReconnectAttempts","retriesAmount","_telemetryLevel","telemetryConfiguration","clientSessionId","telemetryUrl","telemetryAppender","find","remove","DiscoveryUri","getBooleanValue","discoveryUri","getTelemetryUrl","channelToken","parsedToken","EdgeAuth","uriValue","baseURIValue","_initialized","peerConnectionFactory","_peerConnectionFactory","consoleLoggingLevel","consoleAppender","automaticallyPlayMediaStream","automaticallyMuteVideoOnPlayFailure","webPlayerLoader","shakaPlayerLoader","hlsJsLoader","applyDiscoveryUriDefaultFromParameterConfiguration","applyMetricsConfiguration","applyTelemetryConfiguration","applyAutomaticallyRetryOnFailureFromParameterConfiguration","applyAutomaticallyReconnectPeerConnectionFromParameterConfiguration","init","baseURL","segments","protocol","unshift","startsWith","endsWith","join","ChannelState","BitrateState","BitrateMode","Dimension","width","height","other","Durations","duration","_duration","isNegative","abs","offset","floor","milliseconds","seconds","minutes","hours","parts","padStart","targetLength","padString","repeat","VideoTelemetry","channelStartTime","_streamId","_pageLoadTime","_channelStartTime","video","_startRecordingFirstFrame","_listenToFirstTime","callTimeToFirstFrame","_clearTimeToFirstFrameListener","_listenForStall","onStall","_listenForContinuation","event","onContinuation","_clearRebufferingListener","toIsoString","pushTimeToFirstFrame","pushChannelCreationTimeToFirstFrame","_timeToFirstFrame","uint64","durationSincePageLoad","_channelCreationTimeToFirstFrame","_videoStalled","buffered","bufferLength","hasNotProgressedSinceLastProgressEvent","end","_lastProgress","timeSinceStop","newResolution","_videoResolution","StreamSetupListener","_startTime","recordStreamMetric","_metricSubmitted","setupTime","metricName","NetworkMonitor","isSupported","setupNetworkChangeListeners","updateStatistics","_isSupported","_rtt","_effectiveType","_downlinkThroughputCapacity","downlink","downlinkMax","effectiveType","rtt","getRoundTripTime","getEffectiveType","getDownlinkThroughputCapacity","SessionTelemetry","_networkMonitor","recordForegroundChange","recordNetworkRTTUpdate","recordNetworkTypeChangeUpdate","downlinkThroughputCapacity","recordNetworkDownlinkThroughputCapacityUpdate","timeSinceLastChange","getTimeSinceLastChange","newRTT","oldRtt","_lastNetworkStatistics","newNetworkType","oldNetworkType","newCapacity","oldCapacity","float","TokenContext","token","tokenExpiring","ChannelContext","targetLag","disposables","channelDisposables","rendererDisposables","channelInitialization","videoElement","autoMuted","autoPaused","authorized","online","loading","playing","standby","stopped","lag","bitrateLimit","resolution","empty","failureCount","endPoint","stream","rtcStatistics","status","dataset","PeerConnectionContext","peerConnection","peerConnectionReconnectAttempts","StateContext","isStarting","isDisposed","BitrateModeMapping","bitrateMode","Normal","Force","Reset","BitrateStateMapping","bitrateState","Keep","apiVersion","EndPoint","uri","timeout","_uri","_timeout","_roundTripTime","buildPingUrl","start","race","finished","ok","localSessionDescription","applicationId","buildUrl","clientVersion","bodyWithOffer","edgeAuthToken","httpRoundTripTime","sessionDescription","convertRTCSdpTypeToSdpType","createAnswerDescription","bodyWithoutOffer","createOfferDescription","finally","clearTimeout","httpResponse","mapHttpStatusToSubscribeStatus","convertHttpResponseToSubscribeResponse","subscribeResponse","debug","mapHttpStatusToPublishStatus","convertHttpResponseToPublishResponse","sharedSecret","mapHttpStatusToSetRemoteDescriptionStatus","convertHttpResponseToSetRemoteDescriptionResponse","setRemoteDescriptionResponse","elapsedInMilliseconds","bitrateInBitsPerSecond","convertBitrateStateToBitrateStateType","convertBitrateModeToBitrateModeType","mapHttpStatusToSetTemporaryMaximalBitrateStatus","candidates","discoveryCompleted","mapHttpStatusToAddIceCandidatesStatus","convertHttpResponseToAddIceCandidatesResponse","addIceCandidatesResponse","mapHttpStatusToSetDestroyStreamStatus","convertHttpResponseToDestroyStreamResponse","destroyStreamResponse","path","pathAsArray","concat","sdkVersion","json","rtcConfiguration","convertIRtcConfigurationToRTCConfiguration","convertISessionDescriptionToRTCSessionDescription","createAnswerDescriptionResponse","createOfferDescriptionResponse","publishResponse","bundlePolicy","iceCandidatePoolSize","iceServers","urls","username","credential","iceTransportPolicy","peerIdentity","rtcpMuxPolicy","rtcSessionDescription","destroyStream","defaultTimeout","DiscoveryService","text","asString","endPoints","map","discoverNearbyEndPoints","neverResolve","ping","time","Discovery","discoverClosestEndPointWithCaching","_cache","discoveryService","cachedValue","discoverClosestEndPoint","precacheClosestEndPointDiscovery","NetworkStates","WebPlayer","manifestURI","_videoElement","_kind","_manifestURI","encodeURI","replace","_options","LiveStreaming","phenixWebPlayer","playerOptions","bandwidthToStartAt","_player","errorObject","canReload","code","severity","errors","RECOVERABLE","reloadIfAble","currentTime","networkState","NetworkNoSource","dataBuffered","statistics","trueCurrentTime","originStartTime","isNative","deliveryType","max","estimatedBandwidth","NetworkLoading","playTime","NetworkIdle","NetworkEmpty","hasElapsedMinTimeSinceLastReload","_lastReloadTime","minTimeBeforeNextReload","reload","ShakaPlayer","shaka","Player","loadPlayer","abr","defaultBandwidthEstimate","manifest","retryParameters","streaming","rebufferingGoal","bufferingGoal","bufferBehind","maxAttempts","backoffFactor","unload","destroy","playerConfig","configure","load","play","HlsPlayer","hlsPlayer","enableWorker","maxBufferLength","liveBackBufferLength","liveSyncDuration","liveDurationInfinity","liveMaxLatencyDuration","Infinity","highBufferWatchdogPeriod","loadSource","attachMedia","canPlayType","src","media","offsetWidth","offsetHeight","streamController","_hlsPlayer","_phenixWebPlayer","_shaka","offerSdp","loaded","_pending","player","dashManifestUrlMatch","hlsManifestUrlMatch","manifestUrl","playlistUrl","preferNative","ChunkedStream","channelContext","handleStreamFailure","_channelContext","_handleStreamFailure","applySessionAndStreamPropertiesToVideoElement","mapSubscribeStatusToChannelStatus","applyStatus","roundTripTime","monitor","_monitorDisposables","newStreamStatistics","_streamStatistics","_monitorFailureCount","paused","PeerConnectionService","precacheCreatePeerConnectionOffer","_cached","direction","createPeerConnectionOffer","createPeerConnection","supportsAddTransceiver","audioTransceiver","videoTransceiver","localOffer","offerToReceiveAudio","offerToReceiveVideo","initiateInitialPrecaching","SdpParser","_sdp","sdpSplitByLines","sdpSplitByTracks","_audioCodec","applyCodec","_videoCodec","_isAudioTrackEnabled","isTrackByTypeEnabled","_isVideoTrackEnabled","sdpSectionForType","sdpTrack","sdpLine","RtcConnectionMonitor","estimatedRoundTripTime","_estimatedRoundTripTime","_tracksToMonitor","parsedSDP","_estimatedAudioCodec","audioCodec","_estimatedVideoCodec","videoCodec","updateStatistic","_rtcStatistic","_isMonitorRunning","_updateTimeOut","updateStatisticLegacy","getKindForSafari11","id","stats","lastPacketReceivedTimestamp","report","currentRoundTripTime","mediaType","codec","codecId","mimeType","bytesDelta","bytesReceived","timeDelta","bitrate","ssrc","packetsLost","packetsReceived","getCodecByType","framesDecoded","fps","round","getStatsLegacy","names","stat","RtcConfigurationManager","RealTimeStream","peerConnectionContext","_peerConnectionContext","listenOnStreamSetup","playMediaStreamInVideoElement","all","supportsSetConfiguration","supportsGetConfiguration","applyRtcConfiguration","submitCandidatesTimeout","cancelDiscovery","candidate","addIceCandidates","retryCallback","pause","srcObject","onLine","reconnectPeerConnection","mediaStreamPromise","trackListener","timeoutId","streams","answer","mapSetRemoteDescriptionStatusToChannelStatus","success","rtcConnectionMonitor","rtcStatistic","rtcVideoStatistic","rtcAudioStatistic","audio","audioTrackFailed","videoTrackFailed","optionalPeerConnection","truncateIceServers","newRtcConfiguration","iceRestart","offer","StreamFactory","capabilities","defaultTargetLag","defaultStreamTerminationReason","failureCountCleanUpIntervalInMilliseconds","Channel","_tokenContext","_stateContext","_readOnlyVideoElement","_readOnlyToken","_readOnlyPeerConnection","_readOnlyState","_readOnlyAutoMuted","_readOnlyAutoPaused","_readOnlyTokenExpiring","_readOnlyAuthorized","_readOnlyOnline","_readOnlyLoading","_readOnlyPlaying","_readOnlyStandby","_readOnlyStopped","_readOnlyTargetLag","_readOnlyLag","_readOnlyBitrateLimit","_readOnlyResolution","_readOnlyFailureCount","_readOnlyEndPoint","_readOnlyStream","_readOnlyRtcStatistics","_readOnlyMediaStream","_sessionTelemetry","_videoMetaDataChangedHandler","handleVideoMetaDataChanged","videoTelemetry","setupListenerForTimeToFirstTime","setupListenerForRebuffering","restartAfterStop","clearFailureCountTimeout","onVideoResolutionChanges","getTime","limitBitrate","destroyStreamOnUnmount","videoWidth","videoHeight","processStop","cleanUpResources","muted","processStart","getUri","handleStreamFailureCallback","streamPlayer","fail","getRetryInterval","min","pow","playPromise","hasAudioTrack","filter","automaticallyMuteVideoOnPlayFailureOff","Channels","defaultDiscoveryUri","_discoveryUri","edgeAuthTokenPrefix","isValidToken","encodedEdgeAuthToken","atob","substr","parse","__SDKVERSION__","_defaultVersion","_telemetryService","TelemetryService","logRecord","_logs","sendLogsIfAble","logMessages","numberOfLogsToSend","sizeOfLogsToSend","getLogSize","sum","sendLogs","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","d","a","definition","prop","r"],"mappings":"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","file":"channels.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"phenix\"] = factory();\n\telse\n\t\troot[\"phenix\"] = factory();\n})(self, function() {\nreturn ","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Disposable from '../lang/Disposable';\nimport Subject from '../rx/Subject';\nimport ReadOnlySubject from '../rx/ReadOnlySubject';\nimport DisposableList from '../lang/DisposableList';\n\nconst defaultDocumentFocusIntervalTimeout = 3000;\n\nexport default class ApplicationActivityMonitor {\n  private readonly _disposables: DisposableList = new DisposableList();\n  private readonly _readOnlyIsForeground: ReadOnlySubject<boolean>;\n  private readonly _isForeground: Subject<boolean>;\n  private _timeOfLastTabFocusChange: number = Date.now();\n  private _documentFocusInterval: number;\n\n  constructor() {\n    this._isForeground = new Subject<boolean>(true);\n    this._readOnlyIsForeground = new ReadOnlySubject(this._isForeground);\n    this.detectTabFocusChange();\n  }\n\n  get isForeground(): ReadOnlySubject<boolean> {\n    return this._readOnlyIsForeground;\n  }\n\n  getTimeSinceLastChange(): number {\n    return Date.now() - this._timeOfLastTabFocusChange;\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private detectTabFocusChange(): void {\n    let hidden;\n    let visibilityChange;\n\n    if (typeof document !== 'object') {\n      return;\n    }\n\n    // Due to typescript not having a definition for 'msHidden' or 'webkitHidden' types\n    // Required to @ts-ignore to prevent typescript errors\n    /* eslint-disable @typescript-eslint/ban-ts-comment */\n    // @ts-ignore\n    if (typeof document.msHidden !== 'undefined') {\n      hidden = 'msHidden';\n      visibilityChange = 'msvisibilitychange';\n      // @ts-ignore\n    } else if (typeof document.webkitHidden !== 'undefined') {\n      hidden = 'webkitHidden';\n      visibilityChange = 'webkitvisibilitychange';\n    } else if (typeof document.hidden !== 'undefined') { // Opera 12.10 and Firefox 18 and later support\n      hidden = 'hidden';\n      visibilityChange = 'visibilitychange';\n    }\n    /* eslint-enable @typescript-eslint/ban-ts-comment */\n\n    const handleVisibilityChange = (): void => {\n      const isForeground = !document[hidden];\n\n      this.setFocusState(isForeground);\n    };\n\n    if (typeof document.addEventListener !== 'undefined' && typeof document[hidden] !== 'undefined') {\n      document.addEventListener(visibilityChange, handleVisibilityChange, false);\n\n      this._disposables.add(new Disposable(() => {\n        document.removeEventListener(visibilityChange, handleVisibilityChange, false);\n      }));\n    } else {\n      this.listenForDocumentFocus.call(this);\n    }\n  }\n\n  private listenForDocumentFocus(): void {\n    this._documentFocusInterval = window.setInterval(() => {\n      const isForeground = document.hasFocus();\n\n      this.setFocusState(isForeground);\n    }, defaultDocumentFocusIntervalTimeout);\n\n    this._disposables.add(new Disposable(() => {\n      if (this._documentFocusInterval) {\n        clearInterval(this._documentFocusInterval);\n      }\n\n      this._documentFocusInterval = null;\n    }));\n  }\n\n  private setFocusState(isForeground): void {\n    if (this._isForeground === isForeground) {\n      return;\n    }\n\n    this._isForeground.value = isForeground;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport default class BrowserDetector {\n  private static readonly _browserNameAndVersionRegex = /(MSIE|(?!Gecko.+)Firefox|(?!AppleWebKit.+Chrome.+)Safari|(?!AppleWebKit.+)Chrome|AppleWebKit(?!.+Chrome|.+Safari)|Gecko(?!.+Firefox))(?: |\\/)([\\d.apre]+)/g;\n  private static readonly _browserNameAndVersion = BrowserDetector.parseBrowserNameAndVersion();\n  private static readonly _browserName = BrowserDetector.parseBrowserName();\n  private static readonly _browserMajorVersion = BrowserDetector.parseBrowserMajorVersion();\n\n  private static readonly _isChrome69 = BrowserDetector._browserNameAndVersion.includes('Chrome/69.');\n  private static readonly _isChrome70 = BrowserDetector._browserNameAndVersion.includes('Chrome/70.');\n  private static readonly _isChrome71 = BrowserDetector._browserNameAndVersion.includes('Chrome/71.');\n  private static readonly _isChrome72 = BrowserDetector._browserNameAndVersion.includes('Chrome/72.');\n  private static readonly _isChrome74 = BrowserDetector._browserNameAndVersion.includes('Chrome/74.');\n  private static readonly _isChrome75 = BrowserDetector._browserNameAndVersion.includes('Chrome/75.');\n  private static readonly _isChrome76 = BrowserDetector._browserNameAndVersion.includes('Chrome/76.');\n  private static readonly _isChrome77 = BrowserDetector._browserNameAndVersion.includes('Chrome/77.');\n\n  static get browserNameAndVersion(): string {\n    return BrowserDetector._browserNameAndVersion;\n  }\n\n  static get browserName(): string {\n    return this._browserName;\n  }\n\n  static get browserMajorVersion(): number {\n    return this._browserMajorVersion;\n  }\n\n  static get isChrome69(): boolean {\n    return BrowserDetector._isChrome69;\n  }\n\n  static get isChrome70(): boolean {\n    return BrowserDetector._isChrome70;\n  }\n\n  static get isChrome71(): boolean {\n    return BrowserDetector._isChrome71;\n  }\n\n  static get isChrome72(): boolean {\n    return BrowserDetector._isChrome72;\n  }\n\n  static get isChrome74(): boolean {\n    return BrowserDetector._isChrome74;\n  }\n\n  static get isChrome75(): boolean {\n    return BrowserDetector._isChrome75;\n  }\n\n  static get isChrome76(): boolean {\n    return BrowserDetector._isChrome76;\n  }\n\n  static get isChrome77(): boolean {\n    return BrowserDetector._isChrome77;\n  }\n\n  private static parseBrowserNameAndVersion(): string {\n    if (!navigator || !navigator.userAgent) {\n      return '';\n    }\n\n    const browserNameAndVersion = navigator.userAgent.match(BrowserDetector._browserNameAndVersionRegex);\n\n    if (browserNameAndVersion && browserNameAndVersion[0]) {\n      return browserNameAndVersion[0];\n    }\n\n    return BrowserDetector.parseBrowserNameAndVersionForIE();\n  }\n\n  private static parseBrowserName(): string {\n    if (!BrowserDetector._browserNameAndVersion) {\n      return '';\n    }\n\n    const browserNameList = BrowserDetector._browserNameAndVersion.split('/');\n\n    if (!browserNameList || !browserNameList[0]) {\n      return '';\n    }\n\n    return browserNameList[0];\n  }\n\n  private static parseBrowserMajorVersion(): number {\n    if (!BrowserDetector._browserNameAndVersion) {\n      return 0;\n    }\n\n    const browserVersionList = BrowserDetector._browserNameAndVersion.split('/');\n\n    if (!browserVersionList || !browserVersionList[1]) {\n      return 0;\n    }\n\n    const fullVersion = browserVersionList[1];\n\n    if (!fullVersion) {\n      return 0;\n    }\n\n    return Number(fullVersion.split('.')[0]) || 0;\n  }\n\n  private static parseBrowserNameAndVersionForIE(): string {\n    if (!navigator || !navigator.userAgent) {\n      return '';\n    }\n\n    const userAgent = navigator.userAgent;\n    const msie = userAgent.indexOf('MSIE ');\n\n    if (msie > 0) {\n      // IE 10 or older => return version number\n      return `IE/${parseInt(userAgent.substring(msie + 5, userAgent.indexOf('.', msie)), 10)}`;\n    }\n\n    const trident = userAgent.indexOf('Trident/');\n\n    if (trident > 0) {\n      // IE 11 => return version number\n      const version = userAgent.indexOf('rv:');\n\n      return `IE/${parseInt(userAgent.substring(version + 3, userAgent.indexOf('.', version)), 10)}`;\n    }\n\n    return '';\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport TelemetryDefault from '../metrics/TelemetryDefault';\nimport TelemetryLevelMapping from '../metrics/TelemetricLevelMapping';\nimport LoggingLevelMapping from '../logger/LoggingLevelMapping';\nimport LoggerDefaults from '../logger/LoggerDefaults';\n\nexport default class ConfigurationParameterReader {\n  getStringValue(name: string): string {\n    return this.readConfigurationParameterValue(name) ||\n      this.readConfigurationParameterURIValue(`${name}-uri-parameter-name`) ||\n      this.defaultStringValue[name];\n  }\n\n  getBooleanValue(name: string): boolean {\n    const value = this.readConfigurationParameterValue(name);\n\n    if (value) {\n      return value === 'true' || value === '1' || value === 'On';\n    }\n\n    const valueFromUri = this.readConfigurationParameterURIValue(`${name}-uri-parameter-name`);\n\n    if (valueFromUri) {\n      return value === 'true' || value === '1' || value === 'On';\n    }\n\n    return this.defaultBooleanValue[name] === true;\n  }\n\n  private get defaultStringValue(): { [name: string]: string} {\n    return {\n      'phenix-metrics-level': TelemetryLevelMapping.convertTelemetryLevelToTelemetryLevelType(TelemetryDefault.defaultTelemetryLevel),\n      'phenix-logging-level': LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(LoggerDefaults.defaultLoggingLevel),\n      'phenix-console-logging-level': LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(LoggerDefaults.defaultConsoleLoggingLevel),\n      'phenix-telemetry-logging-level': LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(LoggerDefaults.defaultTelemetryLoggingLevel),\n      'phenix-channel-token': '',\n      'phenix-uri': '',\n      'phenix-base-uri': ''\n    };\n  }\n\n  private get defaultBooleanValue(): { [name: string]: boolean } {\n    return {\n      'phenix-automatically-retry-on-failure': true,\n      'phenix-automatically-reconnect-peer-connection': true\n    };\n  }\n\n  private readConfigurationParameterValue(name: string): string {\n    const metaValue = document.querySelector(`meta[name='${name}']`);\n\n    if (!metaValue) {\n      return;\n    }\n\n    const value = metaValue.getAttribute('value');\n\n    if (!value) {\n      return;\n    }\n\n    return value;\n  }\n\n  private readConfigurationParameterURIValue(name: string): string {\n    const valueURIParameterName = this.readConfigurationParameterValue(name);\n\n    if (!valueURIParameterName) {\n      return;\n    }\n\n    const value = new URLSearchParams(location.search).get(valueURIParameterName) || undefined;\n\n    if (!value) {\n      return;\n    }\n\n    return value;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\ndeclare const __PRIVACY_MODE__: boolean;\n\nexport default class PrivacyMode {\n  private static _isPrivate: boolean;\n\n  static get isPrivate(): boolean {\n    return this._isPrivate;\n  }\n\n  static applyIsPrivate(): void {\n    try {\n      this._isPrivate = __PRIVACY_MODE__;\n    } catch (e) {\n      this._isPrivate = false;\n    }\n  }\n}\n\nPrivacyMode.applyIsPrivate();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IDisposable from './IDisposable';\n\nexport default class Disposable implements IDisposable {\n  private _disposed: boolean;\n  private _disposable: () => void;\n\n  constructor(disposable: () => void) {\n    this._disposed = false;\n    this._disposable = disposable;\n  }\n\n  dispose(): void {\n    if (this._disposed) {\n      return;\n    }\n\n    this._disposed = true;\n\n    return this._disposable.call(this);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IDisposable from './IDisposable';\n\nexport default class DisposableList {\n  private readonly _list: IDisposable[] = [];\n\n  add(disposable: IDisposable): void {\n    this._list.push(disposable);\n  }\n\n  dispose(): void {\n    this._list.forEach(disposable => disposable.dispose());\n    this._list.length = 0;\n  }\n\n  toString(): string {\n    return `DisposableList[disposables=${this._list.length}]`;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport default class Strings {\n  static random(length: number): string {\n    const random13Characters = (): string => {\n      return Math.random().toString(16).substring(2, 15);\n    };\n\n    const loops: number = Math.ceil(length / 13);\n\n    return new Array(loops).fill(random13Characters).reduce((string, func) => {\n      return string + func();\n    }, '').substring(0, length);\n  }\n\n  private constructor() {\n    throw new Error('Strings is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport function assertUnreachable(x: never): never {\n  throw new Error(`Unexpected value [${x}]. This should never be reached`);\n}\n\nexport default assertUnreachable;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {IAppender} from './IAppender';\n\nexport default class Appenders {\n  private _appenders: Array<IAppender> = [];\n\n  get value(): Array<IAppender> {\n    return this._appenders;\n  }\n\n  add(appender: IAppender): void {\n    this._appenders.push(appender);\n  }\n\n  remove(appender): void {\n    this._appenders = this._appenders.reduce((items, item) => {\n      if (!(item === appender)) {\n        items.push(item);\n      }\n\n      return items;\n    }, [] as Array<IAppender>);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {IAppender} from './IAppender';\nimport {LoggingLevel} from './Logger';\n\nexport default class ConsoleAppender implements IAppender {\n  private readonly _threshold: LoggingLevel;\n\n  log(logLevel: LoggingLevel, message: string, category: string, date: Date): void {\n    if (logLevel < this._threshold) {\n      return;\n    }\n\n    const fullMessage = `${date.toISOString()} [${category}] [${LoggingLevel[logLevel]}] ${message}`;\n\n    if (logLevel < LoggingLevel.Warn) {\n      console.log(fullMessage);\n\n      return;\n    }\n\n    console.error(fullMessage);\n  }\n\n  constructor(threshold: LoggingLevel) {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {IAppender} from './IAppender';\nimport Appenders from './Appenders';\nimport LoggingThreshold from './LoggingThreshold';\n\nexport enum LoggingLevel {\n  All = -1,\n  Trace = 10,\n  Debug = 20,\n  Info = 30,\n  Warn = 40,\n  Error = 50,\n  Fatal = 60,\n  Off = 100,\n}\n\nexport type LoggingLevelType = 'Off' | 'Trace' | 'Debug' | 'Info' | 'Warn' | 'Error' | 'Fatal' | 'All';\n\nexport default class Logger {\n  private readonly _category: string;\n  private readonly _appenders: Appenders;\n  private readonly _threshold: LoggingThreshold;\n\n  get category(): string {\n    return this._category;\n  }\n\n  get appenders(): Appenders {\n    return this._appenders;\n  }\n\n  get threshold(): LoggingThreshold {\n    return this._threshold;\n  }\n\n  trace(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Trace) {\n      return;\n    }\n\n    this.log(LoggingLevel.Trace, args);\n  }\n\n  debug(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Debug) {\n      return;\n    }\n\n    this.log(LoggingLevel.Debug, args);\n  }\n\n  info(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Info) {\n      return;\n    }\n\n    this.log(LoggingLevel.Info, args);\n  }\n\n  warn(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Warn) {\n      return;\n    }\n\n    this.log(LoggingLevel.Warn, args);\n  }\n\n  error(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Error) {\n      return;\n    }\n\n    this.log(LoggingLevel.Error, args);\n  }\n\n  fatal(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Fatal) {\n      return;\n    }\n\n    this.log(LoggingLevel.Fatal, args);\n  }\n\n  private log(level: number, args: any): void {\n    const date = new Date();\n    const message = this.replacePlaceholders(args);\n\n    this._appenders.value.forEach((appender: IAppender) => {\n      appender.log(level, message, this.category, date);\n    });\n  }\n\n  private replacePlaceholders(args: any): string {\n    let replacePlaceholdersString = args[0];\n    let index = 0;\n\n    while (replacePlaceholdersString.indexOf && args.length > 1 && index >= 0) {\n      index = replacePlaceholdersString.indexOf('%', index);\n\n      if (index > 0) {\n        const type = replacePlaceholdersString.substring(index + 1, index + 2);\n\n        switch (type) {\n          case '%':\n            // Escaped '%%' turns into '%'\n            replacePlaceholdersString = replacePlaceholdersString.substring(0, index) + replacePlaceholdersString.substring(index + 1);\n            index++;\n\n            break;\n          case 's':\n          case 'd':\n            // Replace '%d' or '%s' with the argument\n            args[0] = replacePlaceholdersString = this.replaceArgument(\n              this.toString(args[1]),\n              replacePlaceholdersString,\n              index\n            );\n            args.splice(1, 1);\n\n            break;\n          case 'j':\n            // Replace %j' with the argument\n            args[0] = replacePlaceholdersString = this.replaceArgument(\n              this.stringify(args[1]),\n              replacePlaceholdersString,\n              index\n            );\n\n            args.splice(1, 1);\n\n            break;\n          default:\n            return args.toString();\n        }\n      }\n    }\n\n    if (args.length > 1) {\n      args = args.reduce((accumulator, currentValue, index, array) => {\n        if (index + 1 === array.length && currentValue instanceof Error) {\n          return accumulator + '\\n' + this.toString(currentValue.stack);\n        }\n\n        return accumulator + `[${this.toString(currentValue)}]`;\n      });\n    }\n\n    return args.toString();\n  }\n\n  private stringify(arg: any): string {\n    const cache = [];\n\n    try {\n      return JSON.stringify(\n        arg instanceof Error ? this.toString(arg) : arg,\n        (key, value) => {\n          if (!!value && value instanceof Object) {\n            if (cache.includes(value)) {\n              return '<recursive>';\n            }\n\n            cache.push(value);\n          }\n\n          return value;\n        },\n        2\n      );\n    } catch (e) {\n      return '[object invalid JSON.stringify]';\n    }\n  }\n\n  private replaceArgument(argument: any, replacePlaceholdersString: string, index: number): string {\n    return replacePlaceholdersString.substring(0, index) + this.toString(argument) + replacePlaceholdersString.substring(index + 2);\n  }\n\n  private toString(data: any): string {\n    if (typeof data === 'string') {\n      return data;\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'true' : 'false';\n    }\n\n    if (typeof data === 'number') {\n      return data.toString();\n    }\n\n    let toStringStr = '';\n\n    if (data) {\n      if (typeof data === 'function') {\n        toStringStr = data.toString();\n      } else if (data instanceof Object) {\n        try {\n          toStringStr = data.toString();\n        } catch (e) {\n          toStringStr = '[object invalid toString()]';\n        }\n      }\n    }\n\n    return toStringStr;\n  }\n\n  constructor(category: string, appenders: Appenders, threshold: LoggingThreshold) {\n    this._category = category;\n    this._appenders = appenders;\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport PrivacyMode from '../dom/PrivacyMode';\nimport {LoggingLevel} from '../logger/Logger';\n\nexport default class LoggerDefaults {\n  static get defaultLoggingLevel(): LoggingLevel {\n    return PrivacyMode.isPrivate ? LoggingLevel.Off : LoggingLevel.All;\n  }\n\n  static get defaultConsoleLoggingLevel(): LoggingLevel {\n    return PrivacyMode.isPrivate ? LoggingLevel.Off : LoggingLevel.All;\n  }\n\n  static get defaultTelemetryLoggingLevel(): LoggingLevel {\n    return LoggingLevel.Info;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {ILogger} from './LoggerInterface';\nimport Logger, {LoggingLevel} from './Logger';\nimport Appenders from './Appenders';\nimport LoggingThreshold from './LoggingThreshold';\nimport ConsoleAppender from './ConsoleAppender';\nimport TelemetryAppender from '../telemetry/TelemetryApender';\nimport TelemetryConfiguration from '../telemetry/TelemetryConfiguration';\nimport ConfigurationParameterReader from '../dom/ConfigurationParameterReader';\nimport {IConfigurationParameterReader} from '../dom/IConfigurationParamaterReader';\nimport LoggerDefaults from './LoggerDefaults';\n\nexport default class LoggerFactory {\n  private static _configurationParameterReader: IConfigurationParameterReader = new ConfigurationParameterReader();\n  private static _loggers: {[category: string]: ILogger} = {};\n  private static _appenders: Appenders = new Appenders();\n  private static _threshold: LoggingThreshold = new LoggingThreshold();\n  private static _telemetryConfiguration: TelemetryConfiguration = new TelemetryConfiguration();\n\n  static get telemetryConfiguration(): TelemetryConfiguration {\n    return LoggerFactory._telemetryConfiguration;\n  }\n\n  static getLogger(category: string): ILogger {\n    if (typeof category !== 'string') {\n      category = 'SDK';\n    }\n\n    const logger = LoggerFactory._loggers[category];\n\n    if (logger) {\n      return logger;\n    }\n\n    return LoggerFactory._loggers[category] = new Logger(category, this._appenders, this._threshold);\n  }\n\n  static applyLoggerConfigFromParameterConfiguration(): void {\n    LoggerFactory.applyLoggingLevel();\n    LoggerFactory.applyAppenderLoggingLevel('console', LoggerFactory.applyConsoleLogger.bind(this));\n    LoggerFactory.applyAppenderLoggingLevel('telemetry', LoggerFactory.applyTelemetryLogger.bind(this));\n  }\n\n  private static applyLoggingLevel(): void {\n    const parameterValue = this._configurationParameterReader.getStringValue('phenix-logging-level');\n\n    if (LoggingLevel[parameterValue]) {\n      this._threshold.setThreshold(LoggingLevel[parameterValue]);\n    }\n\n    return;\n  }\n\n  private static applyAppenderLoggingLevel(name: string, applyAppender: (level: LoggingLevel) => void): void {\n    const parameterValue = this._configurationParameterReader.getStringValue(`phenix-${name}-logging-level`);\n\n    if (parameterValue === 'Off') {\n      return;\n    }\n\n    applyAppender(LoggingLevel[parameterValue]);\n  }\n\n  private static applyConsoleLogger(level: LoggingLevel): void {\n    this._appenders.add(new ConsoleAppender(level || LoggerDefaults.defaultConsoleLoggingLevel));\n  }\n\n  private static applyTelemetryLogger(level: LoggingLevel): void {\n    this._telemetryConfiguration.threshold = level || LoggerDefaults.defaultTelemetryLoggingLevel;\n\n    this._appenders.add(new TelemetryAppender(this._telemetryConfiguration));\n  }\n\n  private constructor() {\n    throw new Error('LoggerFactory is a static class that may not be instantiated');\n  }\n}\n\nLoggerFactory.applyLoggerConfigFromParameterConfiguration();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport assertUnreachable from '../lang/assertUnreachable';\nimport {LoggingLevel, LoggingLevelType} from './Logger';\n\nexport default class LoggingLevelMapping {\n  static convertLoggingLevelToLoggingLevelType(loggingLevel: LoggingLevel): LoggingLevelType {\n    switch (loggingLevel) {\n      case LoggingLevel.Off:\n        return 'Off';\n      case LoggingLevel.Trace:\n        return 'Trace';\n      case LoggingLevel.Debug:\n        return 'Debug';\n      case LoggingLevel.Info:\n        return 'Trace';\n      case LoggingLevel.Warn:\n        return 'Warn';\n      case LoggingLevel.Error:\n        return 'Error';\n      case LoggingLevel.Fatal:\n        return 'Fatal';\n      case LoggingLevel.All:\n        return 'All';\n      default:\n        assertUnreachable(loggingLevel);\n    }\n  }\n\n  static convertLoggingLevelTypeToLoggingLevel(loggingLevelType: LoggingLevelType): LoggingLevel {\n    switch (loggingLevelType) {\n      case 'Off':\n        return LoggingLevel.Off;\n      case 'Trace':\n        return LoggingLevel.Trace;\n      case 'Debug':\n        return LoggingLevel.Debug;\n      case 'Info':\n        return LoggingLevel.Info;\n      case 'Warn':\n        return LoggingLevel.Warn;\n      case 'Error':\n        return LoggingLevel.Error;\n      case 'Fatal':\n        return LoggingLevel.Fatal;\n      case 'All':\n        return LoggingLevel.All;\n      default:\n        assertUnreachable(loggingLevelType);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerDefaults from './LoggerDefaults';\nimport {LoggingLevel} from './Logger';\n\nexport default class LoggingThreshold {\n  private _threshold: LoggingLevel = LoggerDefaults.defaultLoggingLevel;\n\n  get value(): LoggingLevel {\n    return this._threshold;\n  }\n\n  setThreshold(threshold: LoggingLevel): void {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {TelemetryLevel} from './MetricsConfiguration';\nimport assertUnreachable from '../lang/assertUnreachable';\nimport MetricsType from './MetricsType';\n\nexport default class MetricType {\n  private readonly _metrics: MetricsType;\n\n  constructor(metrics: MetricsType) {\n    this._metrics = metrics;\n  }\n\n  getName(): string {\n    return MetricsType[this._metrics];\n  }\n\n  getTelemetryLevel(): TelemetryLevel {\n    switch (this._metrics) {\n      case MetricsType.TimeToFirstFrame:\n        return TelemetryLevel.Essential;\n      case MetricsType.ChannelCreationTimeToFirstFrame:\n        return TelemetryLevel.Essential;\n      case MetricsType.Stalled:\n        return TelemetryLevel.All;\n      case MetricsType.Buffering:\n        return TelemetryLevel.All;\n      case MetricsType.SetupCompleted:\n        return TelemetryLevel.All;\n      case MetricsType.SetupFailed:\n        return TelemetryLevel.All;\n      case MetricsType.RoundTripTime:\n        return TelemetryLevel.All;\n      case MetricsType.DownlinkThroughputCapacity:\n        return TelemetryLevel.All;\n      case MetricsType.NetworkType:\n        return TelemetryLevel.All;\n      case MetricsType.ResolutionChanged:\n        return TelemetryLevel.All;\n      case MetricsType.ApplicationForeground:\n        return TelemetryLevel.All;\n      case MetricsType.ApplicationBackground:\n        return TelemetryLevel.All;\n      default:\n        assertUnreachable(this._metrics);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport TelemetryDefault from './TelemetryDefault';\n\nexport enum TelemetryLevel {\n  Off = 100,\n  Essential = 10,\n  All = -1\n}\n\nexport type TelemetryLevelType = 'Off' | 'Essential' | 'All';\n\nexport default class MetricsConfiguration {\n  private _url = 'https://telemetry.phenixrts.com/telemetry/metrics';\n  private _tenancy: string;\n  private _sessionId: string;\n  private _environment: string;\n  private _threshold: TelemetryLevel = TelemetryDefault.defaultTelemetryLevel;\n\n  get url(): string {\n    return this._url;\n  }\n\n  set url(url: string) {\n    const metricsUrl = new URL(url);\n\n    metricsUrl.pathname = metricsUrl.pathname + '/metrics';\n\n    this._url = metricsUrl.toString();\n  }\n\n  get environment(): string {\n    return this._environment;\n  }\n\n  set environment(environment: string) {\n    this._environment = environment;\n  }\n\n  get tenancy(): string {\n    return this._tenancy;\n  }\n\n  set tenancy(tenancy: string) {\n    this._tenancy = tenancy;\n  }\n\n  get sessionId(): string {\n    return this._sessionId;\n  }\n\n  set sessionId(sessionId: string) {\n    this._sessionId = sessionId;\n  }\n\n  get threshold(): TelemetryLevel {\n    return this._threshold;\n  }\n\n  set threshold(threshold: TelemetryLevel) {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport MetricsService from './MetricsService';\nimport MetricsConfiguration, {TelemetryLevel} from './MetricsConfiguration';\nimport SDK from '../sdk/SDK';\nimport TelemetryUrl from '../sdk/TelemetryUrl';\nimport Environment from '../sdk/Environment';\nimport TelemetryLevelMapping from './TelemetricLevelMapping';\n\nexport default class MetricsFactory {\n  private static _metricsServices: {[category: string]: MetricsService} = {};\n\n  static getMetricsService(url: string): MetricsService {\n    if (typeof url !== 'string') {\n      throw new Error('ur');\n    }\n\n    const metricsServices = MetricsFactory._metricsServices[url];\n\n    if (metricsServices) {\n      return metricsServices;\n    }\n\n    const metricsConfiguration = new MetricsConfiguration();\n\n    metricsConfiguration.sessionId = SDK.clientSessionId;\n    metricsConfiguration.tenancy = SDK.tenancy.value;\n    metricsConfiguration.url = TelemetryUrl.getTelemetryUrl(url);\n    metricsConfiguration.environment = Environment.getEnvironmentFromUrl(url);\n\n    metricsConfiguration.threshold = TelemetryLevelMapping.convertTelemetryLevelTypeToTelemetryLevel(SDK.telemetryLevel);\n\n    return MetricsFactory._metricsServices[url] = new MetricsService(metricsConfiguration);\n  }\n\n  static setTelemetryLevel(telemetryLevel: TelemetryLevel): void {\n    const metricsServices = Object.values(MetricsFactory._metricsServices);\n\n    if (metricsServices && metricsServices.length) {\n      metricsServices.forEach(metricsService => {\n        const metricsConfiguration = metricsService.metricsConfiguration;\n\n        metricsConfiguration.threshold = telemetryLevel;\n      });\n    }\n  }\n\n  private constructor() {\n    throw new Error('LoggerFactory is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport VersionManager from '../sdk/version/VersionManager';\nimport MetricsConfiguration from './MetricsConfiguration';\nimport MetricType from './MetricType';\nimport MetricsType from './MetricsType';\n\nconst requestSizeLimit = 1024;\n\ninterface IValue {\n  string?: string;\n  uint64?: number;\n  float?: number;\n}\n\ninterface IMetricRecord {\n  timestamp: string;\n  tenancy: string;\n  sessionId: string;\n  streamId: string;\n  metric: string;\n  value: IValue;\n  previousValue: IValue;\n  fullQualifiedName: string;\n  environment: string;\n  version: string;\n  runtime: number;\n  resource?: string;\n  kind?: string;\n}\n\ninterface IMetric {\n  streamId?: string;\n  metricType: MetricsType;\n  value?: IValue;\n  previousValue?: IValue;\n  runtime: number;\n  resource?: string;\n  kind?: string;\n}\n\nexport default class MetricsService {\n  private readonly _metricsConfiguration: MetricsConfiguration;\n  private _metrics: Array<IMetricRecord> = [];\n  private _isSending: boolean;\n  private _domain = location.hostname;\n\n  constructor(metricsConfiguration: MetricsConfiguration) {\n    this._metricsConfiguration = metricsConfiguration;\n  }\n\n  get metricsConfiguration(): MetricsConfiguration {\n    return this._metricsConfiguration;\n  }\n\n  push(metric: IMetric): void {\n    const {streamId, value, previousValue, runtime, resource, kind} = metric;\n    const metricType = new MetricType(metric.metricType);\n\n    if (this._metricsConfiguration.threshold > metricType.getTelemetryLevel()) {\n      return;\n    }\n\n    const metricRecord = {\n      timestamp: new Date().toISOString(),\n      tenancy: this._metricsConfiguration.tenancy,\n      sessionId: this._metricsConfiguration.sessionId,\n      streamId,\n      metric: metricType.getName(),\n      value,\n      previousValue,\n      fullQualifiedName: this._domain,\n      environment: this._metricsConfiguration.environment,\n      version: VersionManager.sdkVersion,\n      runtime,\n      resource,\n      kind\n    };\n\n    this._metrics.push(metricRecord);\n\n    const ignored = this.sendMetricsIfAble();\n  }\n\n  private async sendMetrics(metricsMessages: Array<IMetricRecord>): Promise<Response | void> {\n    const formData = new FormData();\n\n    formData.append('jsonBody', JSON.stringify({records: metricsMessages}));\n\n    return await fetch(this._metricsConfiguration.url, {\n      method: 'POST',\n      body: formData\n    });\n  }\n\n  private async sendMetricsIfAble(): Promise<Response | void> {\n    if (this._metrics.length <= 0 || this._isSending) {\n      return;\n    }\n\n    this._isSending = true;\n\n    const metricsMessages = this._metrics.slice(0, requestSizeLimit);\n\n    this._metrics = this._metrics.slice(requestSizeLimit);\n\n    return this.sendMetrics(metricsMessages).then(response => {\n      this._isSending = false;\n\n      const ignored = this.sendMetricsIfAble();\n\n      return response;\n    }).catch(() => {\n      this._isSending = false;\n\n      const ignored = this.sendMetricsIfAble();\n    });\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nenum MetricsType {\n  TimeToFirstFrame,\n  ChannelCreationTimeToFirstFrame,\n  Stalled,\n  Buffering,\n  SetupCompleted,\n  SetupFailed,\n  RoundTripTime,\n  DownlinkThroughputCapacity,\n  NetworkType,\n  ResolutionChanged,\n  ApplicationForeground,\n  ApplicationBackground\n}\n\nexport default MetricsType;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {TelemetryLevel, TelemetryLevelType} from './MetricsConfiguration';\nimport assertUnreachable from '../lang/assertUnreachable';\n\nexport default class TelemetryLevelMapping {\n  static convertTelemetryLevelToTelemetryLevelType(telemetryLevel: TelemetryLevel): TelemetryLevelType {\n    switch (telemetryLevel) {\n      case TelemetryLevel.Off:\n        return 'Off';\n      case TelemetryLevel.Essential:\n        return 'Essential';\n      case TelemetryLevel.All:\n        return 'All';\n      default:\n        assertUnreachable(telemetryLevel);\n    }\n  }\n\n  static convertTelemetryLevelTypeToTelemetryLevel(telemetryLevelType: TelemetryLevelType): TelemetryLevel {\n    switch (telemetryLevelType) {\n      case 'Off':\n        return TelemetryLevel.Off;\n      case 'Essential':\n        return TelemetryLevel.Essential;\n      case 'All':\n        return TelemetryLevel.All;\n      default:\n        assertUnreachable(telemetryLevelType);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport PrivacyMode from '../dom/PrivacyMode';\nimport {TelemetryLevel} from '../metrics/MetricsConfiguration';\n\nexport default class TelemetryDefault {\n  static get defaultTelemetryLevel(): TelemetryLevel {\n    return PrivacyMode.isPrivate ? TelemetryLevel.Essential : TelemetryLevel.All;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Promise from './Promise';\n\nexport default class PromiseHandler {\n  onFulfilled: Function;\n  onRejected: Function;\n  promise: Promise;\n\n  constructor(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport PromiseHandler from './PromiseHandler';\n\nclass Promise {\n  _state: number;\n  _handled: boolean;\n  _value: Promise;\n  _deferreds: Array<PromiseHandler>;\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  then(onFulfilled: Function, onRejected: Function): Promise | void;\n\n  constructor(callback) {\n    if (!(this instanceof Promise)) {\n      throw new TypeError('Promises must be constructed via new');\n    }\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('not a function');\n    }\n\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    this.doResolve(callback);\n  }\n\n  doResolve(callback: Function): void {\n    let done = false;\n\n    try {\n      callback(\n        value => {\n          if (done) {\n            return;\n          }\n\n          done = true;\n          this.promiseResolve(value);\n        },\n        reason => {\n          if (done) {\n            return;\n          }\n\n          done = true;\n          this.promiseReject(reason);\n        }\n      );\n    } catch (error) {\n      if (done) {\n        return;\n      }\n\n      done = true;\n      this.promiseReject(error);\n    }\n  }\n\n  promiseResolve(newValue: Promise | undefined): void {\n    const promise = this as Promise;\n\n    try {\n      // Promise Resolution Procedure: https://github.com/Promises-aplus/Promises-spec#the-Promise-resolution-procedure\n      if (newValue === promise) {\n        throw new TypeError('A Promise cannot be resolved with it self.');\n      }\n\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        const then = newValue.then;\n\n        if (newValue instanceof Promise) {\n          promise._state = 3;\n          promise._value = newValue;\n          promise.finale();\n\n          return;\n        } else if (typeof then === 'function') {\n          promise.doResolve(function(): void {\n            // eslint-disable-next-line prefer-rest-params\n            then.apply(newValue, arguments);\n          });\n\n          return;\n        }\n      }\n\n      promise._state = 1;\n      promise._value = newValue;\n      promise.finale();\n    } catch (e) {\n      promise.promiseReject(e);\n    }\n  }\n\n  promiseReject(newValue: Promise | undefined): void {\n    this._state = 2;\n    this._value = newValue;\n    this.finale();\n  }\n\n  finale(): void {\n    if (this._state === 2 && this._deferreds.length === 0) {\n      Promise._immediate(() => {\n        if (!this._handled) {\n          Promise._unhandledRejection(this._value);\n        }\n      });\n    }\n\n    for (let i = 0, len = this._deferreds.length; i < len; i++) {\n      this.handle(this._deferreds[i]);\n    }\n\n    this._deferreds = null;\n  }\n\n  handle(deferred: PromiseHandler): void {\n    let promise = this as Promise;\n\n    while (promise._state === 3) {\n      promise = promise._value;\n    }\n\n    if (promise._state === 0) {\n      promise._deferreds.push(deferred);\n\n      return;\n    }\n\n    promise._handled = true;\n    Promise._immediate(() => {\n      const callback = promise._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\n      if (callback === null) {\n        if (promise._state === 1) {\n          deferred.promise.promiseResolve(promise._value);\n        } else {\n          deferred.promise.promiseReject(promise._value);\n        }\n\n        return;\n      }\n\n      let result;\n\n      try {\n        result = callback(promise._value);\n      } catch (e) {\n        deferred.promise.promiseReject(e);\n\n        return;\n      }\n\n      deferred.promise.promiseResolve(result);\n    });\n  }\n\n  static all(arr: Array<Promise>): Promise {\n    return new Promise((resolve, reject) => {\n      if (!Array.isArray(arr)) {\n        return reject(new TypeError('Promise.all accepts an array'));\n      }\n\n      const args = Array.prototype.slice.call(arr);\n\n      if (args.length === 0) {\n        return resolve([]);\n      }\n\n      let remaining = args.length;\n      const manageResponse = (i, value): void => {\n        try {\n          if (value && (typeof value === 'object' || typeof value === 'function')) {\n            const then = value.then;\n\n            if (typeof then === 'function') {\n              then.call(\n                value,\n                value => manageResponse(i, value),\n                reject\n              );\n\n              return;\n            }\n          }\n\n          args[i] = value;\n\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (error) {\n          reject(error);\n        }\n      };\n\n      for (let i = 0; i < args.length; i++) {\n        manageResponse(i, args[i]);\n      }\n    });\n  }\n\n  static resolve(value): Promise {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(resolve => resolve(value));\n  }\n\n  static reject(value): Promise {\n    return new Promise((_, reject) => reject(value));\n  }\n\n  static race(arr: Array<Promise>): Promise {\n    return new Promise((resolve, reject) => {\n      if (!Array.isArray(arr)) {\n        return reject(new TypeError('Promise.race accepts an array'));\n      }\n\n      for (let i = 0, len = arr.length; i < len; i++) {\n        Promise.resolve(arr[i]).then(resolve, reject);\n      }\n    });\n  }\n\n  static _immediate(callback: Function): void {\n    const ignored = setTimeout(callback, 0);\n  }\n\n  static _unhandledRejection(error): void {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', error); // eslint-disable-line no-console\n    }\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected: Function): Promise | void {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype['then'] = function(onFulfilled: Function, onRejected: Function): Promise | void {\n  const promise = new this.constructor(() => null);\n\n  this.handle(new PromiseHandler(onFulfilled, onRejected, promise));\n\n  return promise;\n};\n\nPromise.prototype['finally'] = function(callback: Function): Promise | void {\n  const constructor = this.constructor;\n\n  return this.then(\n    value => constructor.resolve(callback()).then(() => value),\n    reason => constructor.resolve(callback()).then(() => constructor.reject(reason))\n  );\n};\n\nexport default Promise;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport IPeerConnection, {PeerConnectionEvents} from './IPeerConnection';\nimport {ILogger} from '../logger/LoggerInterface';\nimport FeatureEnablement from '../sdk/feature/FeatureEnablement';\nimport {ILegacyRTCStatsReport} from './RtcConnectionMonitor';\n\nclass VanillaPeerConnection implements IPeerConnection {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('VanillaPeerConnection');\n  private readonly _peerConnection: RTCPeerConnection;\n\n  constructor(configuration?: RTCConfiguration) {\n    if (FeatureEnablement.webkitRTCPeerConnectionEnabled) {\n      this._peerConnection = new webkitRTCPeerConnection(configuration);\n\n      return;\n    }\n\n    this._peerConnection = new RTCPeerConnection(configuration);\n  }\n\n  get native(): RTCPeerConnection {\n    return this._peerConnection;\n  }\n\n  get currentLocalDescription(): RTCSessionDescription | null {\n    return this._peerConnection.currentLocalDescription;\n  }\n\n  get currentRemoteDescription(): RTCSessionDescription | null {\n    return this._peerConnection.currentRemoteDescription;\n  }\n\n  get iceConnectionState(): RTCIceConnectionState {\n    return this._peerConnection.iceConnectionState;\n  }\n\n  get supportsGetConfiguration(): boolean {\n    return typeof this._peerConnection.getConfiguration === 'function';\n  }\n\n  get supportsSetConfiguration(): boolean {\n    return typeof this._peerConnection.setConfiguration === 'function';\n  }\n\n  get supportsAddTransceiver(): boolean {\n    return !FeatureEnablement.addTranceiverDisabled && typeof this._peerConnection.addTransceiver === 'function';\n  }\n\n  async createOffer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit> {\n    if (FeatureEnablement.promiseBasedPCMethodsDisabled) {\n      // Ignored as leagcy createOffer method with callbacks is deprecated\n      // Requires a ts-ignore directive to prevent typescript errors\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return new Promise((resolve, reject) => this._peerConnection.createOffer(resolve, reject, options));\n    }\n\n    return this._peerConnection.createOffer(options);\n  }\n\n  async createAnswer(options?: RTCAnswerOptions): Promise<RTCSessionDescriptionInit> {\n    if (FeatureEnablement.promiseBasedPCMethodsDisabled) {\n      // Ignored as leagcy createAnswer method with callbacks is deprecated\n      // Requires a ts-ignore directive to prevent typescript errors\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return new Promise((resolve, reject) => this._peerConnection.createAnswer(resolve, reject, options));\n    }\n\n    return this._peerConnection.createAnswer(options);\n  }\n\n  async setLocalDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    return this._peerConnection.setLocalDescription(FeatureEnablement.promiseBasedPCMethodsDisabled ?\n      new RTCSessionDescription(description) : description);\n  }\n\n  async setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    const hasCrypto = description.sdp?.match(/a=crypto:/i);\n\n    if (hasCrypto) {\n      this._logger.warn('SDP a=crypto is not supported');\n    }\n\n    return this._peerConnection.setRemoteDescription(FeatureEnablement.promiseBasedPCMethodsDisabled ?\n      new RTCSessionDescription(description) : description);\n  }\n\n  getSenders(): RTCRtpSender[] {\n    return this._peerConnection.getSenders();\n  }\n\n  getStats(selector?: MediaStreamTrack | null): Promise<RTCStatsReport> {\n    return this._peerConnection.getStats(selector);\n  }\n\n  getStatsLegacy(): Promise<ILegacyRTCStatsReport> {\n    return new Promise(resolve => {\n      // Ignored due to typescript not having legacy 'getStats' method type definition\n      // This was a Chrome specific implementation of the 'getStats' method for\n      // Chrome@<= 66 detailed here: https://bugs.chromium.org/p/chromium/issues/detail?id=627816\n      // Requires a ts-ignore directive to prevent typescript errors\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const ignored = this._peerConnection.getStats(resolve);\n    });\n  }\n\n  addEventListener(type: PeerConnectionEvents, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\n    this._peerConnection.addEventListener(type, listener, options);\n  }\n\n  removeEventListener(type: PeerConnectionEvents, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void {\n    this._peerConnection.removeEventListener(type, listener, options);\n  }\n\n  addTransceiver(name: string, options: RTCRtpTransceiverInit): RTCRtpTransceiver {\n    return this._peerConnection.addTransceiver(name, options);\n  }\n\n  addStream(mediaStream: MediaStream): void {\n    mediaStream.getTracks().forEach(track => {\n      this._peerConnection.addTrack(track);\n    });\n  }\n\n  getConfiguration(): RTCConfiguration {\n    return this._peerConnection.getConfiguration();\n  }\n\n  setConfiguration(configuration: RTCConfiguration): void {\n    this._peerConnection.setConfiguration(configuration);\n  }\n\n  set ontrack(handler: ((this: RTCPeerConnection, ev: RTCTrackEvent) => unknown) | null) {\n    this._peerConnection.ontrack = handler;\n  }\n\n  get ontrack(): ((this: RTCPeerConnection, ev: RTCTrackEvent) => unknown) | null {\n    return this._peerConnection.ontrack;\n  }\n\n  set onicecandidate(handler: ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => unknown) | null) {\n    this._peerConnection.onicecandidate = handler;\n  }\n\n  get onicecandidate(): ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => unknown) | null {\n    return this._peerConnection.onicecandidate;\n  }\n\n  set oniceconnectionstatechange(handler: ((this: RTCPeerConnection, ev: Event) => unknown) | null) {\n    this._peerConnection.oniceconnectionstatechange = handler;\n  }\n\n  get oniceconnectionstatechange(): ((this: RTCPeerConnection, ev: Event) => unknown) | null {\n    return this._peerConnection.oniceconnectionstatechange;\n  }\n\n  close(): void {\n    this._peerConnection.close();\n  }\n}\n\nexport default VanillaPeerConnection;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport IPeerConnectionFactory from './IPeerConnectionFactory';\nimport IPeerConnection from './IPeerConnection';\nimport VanillaPeerConnection from './VanillaPeerConnection';\n\nclass VanillaPeerConnectionFactory implements IPeerConnectionFactory {\n  async createPeerConnection(configuration?: RTCConfiguration): Promise<IPeerConnection> {\n    return new VanillaPeerConnection(configuration);\n  }\n}\n\nexport default VanillaPeerConnectionFactory;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport Subject from './Subject';\nimport IDisposable from '../lang/IDisposable';\n\nexport default class ReadOnlySubject<T> {\n  private readonly _subject: Subject<T>;\n\n  constructor(subject: Subject<T>) {\n    this._subject = subject;\n  }\n\n  get value(): T {\n    return this._subject.value;\n  }\n\n  subscribe(listener: (T) => void): IDisposable {\n    return this._subject.subscribe(listener);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport IDisposable from '../lang/IDisposable';\nimport Disposable from '../lang/Disposable';\nimport IComparable from '../lang/IComparable';\n\nclass DisposableListener<T> extends Disposable {\n  constructor(listeners: Array<T>, listener: T) {\n    super(() => {\n      const idx = listeners.indexOf(listener);\n\n      if (idx >= 0) {\n        listeners.splice(idx, 1);\n      }\n    });\n  }\n}\n\nexport default class Subject<T> {\n  private readonly _listeners: Array<(T) => void>;\n  private _value: T;\n\n  constructor(value: T) {\n    this._listeners = [];\n    this._value = value;\n  }\n\n  set value(value: T) {\n    let changed = this._value !== value;\n\n    if (changed && value) {\n      const comparable = value as unknown as IComparable<T>;\n\n      if (typeof comparable.equals === 'function') {\n        changed = !comparable.equals(this._value);\n      }\n    }\n\n    if (!changed) {\n      return;\n    }\n\n    this._value = value;\n\n    this._listeners.forEach(listener => {\n      listener(value);\n    });\n  }\n\n  get value(): T {\n    return this._value;\n  }\n\n  subscribe(listener: (T) => void): IDisposable {\n    this._listeners.push(listener);\n\n    listener(this._value);\n\n    return new DisposableListener<(T) => void>(this._listeners, listener);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class Environment {\n  static getEnvironmentFromUrl(url: string): string {\n    try {\n      const baseURL = new URL(url);\n\n      return baseURL.origin;\n    } catch (e) {\n      return '';\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport Strings from '../lang/Strings';\nimport Subject from '../rx/Subject';\nimport ReadOnlySubject from '../rx/ReadOnlySubject';\nimport IPeerConnectionFactory from '../rtc/IPeerConnectionFactory';\nimport VanillaPeerConnectionFactory from '../rtc/VanillaPeerConnectionFactory';\nimport EdgeAuth from './edgeAuth/EdgeAuth';\nimport {ILogger} from '../logger/LoggerInterface';\nimport {LoggingLevel, LoggingLevelType} from '../logger/Logger';\nimport ConsoleAppender from '../logger/ConsoleAppender';\nimport TelemetryAppender from '../telemetry/TelemetryApender';\nimport ConfigurationParameterReader from '../dom/ConfigurationParameterReader';\nimport MetricsConfiguration, {TelemetryLevel, TelemetryLevelType} from '../metrics/MetricsConfiguration';\nimport MetricsService from '../metrics/MetricsService';\nimport TelemetryLevelMapping from '../metrics/TelemetricLevelMapping';\nimport LoggingLevelMapping from '../logger/LoggingLevelMapping';\nimport PrivacyMode from '../dom/PrivacyMode';\nimport BrowserDetector from '../dom/BrowserDetector';\nimport {IConfigurationParameterReader} from '../dom/IConfigurationParamaterReader';\nimport ApplicationActivityMonitor from '../dom/ApplicationActivityMonitor';\nimport TelemetryUrl from './TelemetryUrl';\nimport Environment from './Environment';\nimport {HlsPlayerType, ShakaType, WebPlayerType} from './streaming/StreamTypes';\nimport DiscoveryUri from './discovery/DiscoveryUri';\nimport MetricsFactory from '../metrics/MetricsFactory';\nimport TelemetryDefault from '../metrics/TelemetryDefault';\n\nconst pageLoadTime = window['__phenixPageLoadTime'] || window['__pageLoadTime'] || Date.now();\n\ninterface IInitOptions {\n  discoveryUri?: string;\n  peerConnectionFactory?: IPeerConnectionFactory;\n  telemetryLevel?: TelemetryLevelType;\n  loggingLevel?: LoggingLevelType;\n  consoleLoggingLevel?: LoggingLevelType;\n  automaticallyPlayMediaStream?: boolean;\n  automaticallyMuteVideoOnPlayFailure?: boolean;\n  webPlayerLoader?: (player: WebPlayerType) => void;\n  shakaPlayerLoader?: (player: ShakaType) => void;\n  hlsJsLoader?: (player: HlsPlayerType) => void;\n}\n\nexport default class SDK {\n  private static _automaticallyRetryOnFailure = true;\n  private static _automaticallyReconnectPeerConnection = true;\n  private static _automaticallyPlayMediaStream = true;\n  private static _automaticallyMuteVideoOnPlayFailure = true;\n  private static _webPlayerLoader = null;\n  private static _shakaPlayerLoader = null;\n  private static _hlsJsLoader = null;\n  private static _configurationParameterReader: IConfigurationParameterReader = new ConfigurationParameterReader();\n  private static _applicationActivityMonitor: ApplicationActivityMonitor;\n  private static _environment: Subject<string> = new Subject<string>('');\n  private static _telemetryUrl: Subject<string> = new Subject<string>('https://telemetry.phenixrts.com/telemetry');\n  private static _maximalNumberOfPeerConnectionReconnectAttempts = 8;\n  private static _telemetryLevel: Subject<TelemetryLevel> = new Subject<TelemetryLevel>(TelemetryDefault.defaultTelemetryLevel);\n  private static _metricsService: MetricsService;\n  private static _metricsConfiguration: MetricsConfiguration\n  private static readonly _sendLocalCandidates: Subject<boolean> = new Subject(!PrivacyMode.isPrivate);\n  private static readonly _tenancy: Subject<string> = new Subject<string>('');\n  private static readonly _clientSessionId: string = Strings.random(32);\n  private static readonly _loadedTimestamp: Date = new Date();\n  private static readonly _logger: ILogger = LoggerFactory.getLogger('SDK');\n  private static readonly _initialized: Subject<boolean> = new Subject<boolean>(false);\n  private static readonly _peerConnectionFactory: Subject<IPeerConnectionFactory> = new Subject<IPeerConnectionFactory>(new VanillaPeerConnectionFactory());\n  private static readonly _readOnlyInitialized: ReadOnlySubject<boolean> = new ReadOnlySubject<boolean>(SDK._initialized);\n  private static readonly _readOnlyDiscoveryUri: ReadOnlySubject<string> = new ReadOnlySubject<string>(DiscoveryUri.uri);\n  private static readonly _readOnlyPeerConnectionFactory: ReadOnlySubject<IPeerConnectionFactory> = new ReadOnlySubject<IPeerConnectionFactory>(SDK._peerConnectionFactory);\n\n  static get pageLoadTime(): number {\n    return pageLoadTime;\n  }\n\n  static get sendLocalCandidates(): Subject<boolean> {\n    return this._sendLocalCandidates;\n  }\n\n  static get tenancy(): Subject<string> {\n    return this._tenancy;\n  }\n\n  static get clientSessionId(): string {\n    return SDK._clientSessionId;\n  }\n\n  static get loadedTimestamp(): Date {\n    return SDK._loadedTimestamp;\n  }\n\n  static get initialized(): ReadOnlySubject<boolean> {\n    return SDK._readOnlyInitialized;\n  }\n\n  static get discoveryUri(): ReadOnlySubject<string> {\n    return SDK._readOnlyDiscoveryUri;\n  }\n\n  static get peerConnectionFactory(): ReadOnlySubject<IPeerConnectionFactory> {\n    return SDK._readOnlyPeerConnectionFactory;\n  }\n\n  static get automaticRetryOnFailure(): boolean {\n    return SDK._automaticallyRetryOnFailure;\n  }\n\n  static get automaticallyReconnectPeerConnection(): boolean {\n    return SDK._automaticallyReconnectPeerConnection;\n  }\n\n  static get automaticallyPlayMediaStream(): boolean {\n    return SDK._automaticallyPlayMediaStream;\n  }\n\n  static get automaticallyMuteVideoOnPlayFailure(): boolean {\n    return SDK._automaticallyMuteVideoOnPlayFailure;\n  }\n\n  static get webPlayerLoader(): (WebPlayerType) => void {\n    return this._webPlayerLoader;\n  }\n\n  static get shakaPlayerLoader(): (ShakaType) => void {\n    return this._shakaPlayerLoader;\n  }\n\n  static get hlsJsLoader(): (HlsPlayerType) => void {\n    return this._hlsJsLoader;\n  }\n\n  static get metricsService(): MetricsService {\n    return SDK._metricsService;\n  }\n\n  static get applicationActivityMonitor(): ApplicationActivityMonitor {\n    return this._applicationActivityMonitor;\n  }\n\n  static get telemetryUrl(): Subject<string> {\n    return this._telemetryUrl;\n  }\n\n  static get maximalNumberOfPeerConnectionReconnectAttempts(): number {\n    return this._maximalNumberOfPeerConnectionReconnectAttempts;\n  }\n\n  static set maximalNumberOfPeerConnectionReconnectAttempts(retriesAmount: number) {\n    this._maximalNumberOfPeerConnectionReconnectAttempts = retriesAmount;\n  }\n\n  static get loggingLevel(): LoggingLevelType {\n    return LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(this._logger.threshold.value);\n  }\n\n  static get telemetryLevel(): TelemetryLevelType {\n    return TelemetryLevelMapping.convertTelemetryLevelToTelemetryLevelType(SDK._telemetryLevel.value);\n  }\n\n  static get browserDetector(): BrowserDetector {\n    return BrowserDetector;\n  }\n\n  static applyTelemetryConfiguration(): void {\n    const telemetryConfiguration = LoggerFactory.telemetryConfiguration;\n\n    telemetryConfiguration.sessionId = SDK.clientSessionId;\n\n    const ignoredEnvironment = SDK._environment.subscribe(environment => {\n      telemetryConfiguration.environment = environment;\n    });\n    const ignoredDiscoveryUri = SDK.telemetryUrl.subscribe(value => {\n      const telemetryAppender = this._logger.appenders.value.find(appender => appender instanceof TelemetryAppender);\n\n      if (telemetryAppender) {\n        telemetryConfiguration.url = value;\n\n        this._logger.appenders.remove(telemetryAppender);\n        this._logger.appenders.add(new TelemetryAppender(telemetryConfiguration));\n        this._logger.info('Telemetry URL was set to [%s]', telemetryConfiguration.url);\n      }\n    });\n    const ignoredTenancy = SDK._tenancy.subscribe(tenancy => {\n      const telemetryAppender = this._logger.appenders.value.find(appender => appender instanceof TelemetryAppender);\n\n      if (telemetryAppender && tenancy) {\n        telemetryConfiguration.tenancy = tenancy;\n\n        this._logger.appenders.remove(telemetryAppender);\n        this._logger.appenders.add(new TelemetryAppender(telemetryConfiguration));\n        this._logger.info('Telemetry tenancy was set to [%s]', telemetryConfiguration.tenancy);\n      }\n    });\n  }\n\n  static applyMetricsConfiguration(): void {\n    SDK._metricsService = MetricsFactory.getMetricsService(DiscoveryUri.uri.value);\n    SDK._metricsConfiguration = SDK._metricsService.metricsConfiguration;\n\n    SDK._metricsConfiguration.sessionId = SDK.clientSessionId;\n\n    const ignoredEnvironment = SDK._environment.subscribe(environment => {\n      SDK._metricsConfiguration.environment = environment;\n    });\n    const ignoredDiscoveryUri = SDK.telemetryUrl.subscribe(value => {\n      SDK._metricsConfiguration.url = value;\n    });\n    const ignoredTenancy = SDK._tenancy.subscribe(tenancy => {\n      SDK._metricsConfiguration.tenancy = tenancy;\n    });\n    const value = this._configurationParameterReader.getStringValue('phenix-metrics-level');\n\n    if (value) {\n      MetricsFactory.setTelemetryLevel(TelemetryLevel[value]);\n    }\n\n    const ignoredTelemetryLevel = SDK._telemetryLevel.subscribe(telemetryLevel => {\n      MetricsFactory.setTelemetryLevel(telemetryLevel);\n    });\n  }\n\n  static applyAutomaticallyRetryOnFailureFromParameterConfiguration(): void {\n    this._automaticallyRetryOnFailure = this._configurationParameterReader.getBooleanValue('phenix-automatically-retry-on-failure');\n    this._logger.info('Automatically retry on failure is set to: [%s]', this._automaticallyRetryOnFailure);\n\n    return;\n  }\n\n  static applyAutomaticallyReconnectPeerConnectionFromParameterConfiguration(): void {\n    this._automaticallyReconnectPeerConnection = this._configurationParameterReader.getBooleanValue('phenix-automatically-reconnect-peer-connection');\n    this._logger.info('Automatically reconnect peer connection is set to: [%s]', this._automaticallyReconnectPeerConnection);\n\n    return;\n  }\n\n  static applyDiscoveryUriDefaultFromParameterConfiguration(): void {\n    SDK.discoveryUri.subscribe(value => {\n      SDK.telemetryUrl.value = SDK.getTelemetryUrl(value);\n      SDK._environment.value = Environment.getEnvironmentFromUrl(value);\n    });\n\n    const channelToken = this._configurationParameterReader.getStringValue('phenix-channel-token');\n\n    if (channelToken) {\n      const parsedToken = EdgeAuth.parseToken(channelToken);\n\n      SDK._tenancy.value = EdgeAuth.getTenancy(parsedToken);\n      DiscoveryUri.uri.value = (EdgeAuth.getUri(parsedToken) || SDK.discoveryUri.value).toString();\n\n      this._logger.info('Discovery URI set from configuration parameter to [%s]', SDK.discoveryUri.value);\n\n      return;\n    }\n\n    const uriValue = this._configurationParameterReader.getStringValue('phenix-uri');\n\n    if (uriValue) {\n      DiscoveryUri.uri.value = uriValue;\n      this._logger.info('Discovery URI set from \"phenix-uri\" configuration parameter tag to [%s]', SDK.discoveryUri.value);\n\n      return;\n    }\n\n    const baseURIValue = this._configurationParameterReader.getStringValue('phenix-base-uri');\n\n    if (baseURIValue) {\n      DiscoveryUri.uri.value = `${baseURIValue}/pcast/endPoints`;\n      this._logger.info('Discovery URI set from \"phenix-base-uri\" configuration parameter tag to [%s]', SDK.discoveryUri.value);\n\n      return;\n    }\n  }\n\n  static init(options?: IInitOptions): void {\n    if (!this._initialized.value) {\n      this._applicationActivityMonitor = new ApplicationActivityMonitor();\n    }\n\n    if (options) {\n      if (options.discoveryUri) {\n        DiscoveryUri.uri.value = options.discoveryUri;\n      }\n\n      if (options.peerConnectionFactory) {\n        SDK._peerConnectionFactory.value = options.peerConnectionFactory;\n      }\n\n      if (options.telemetryLevel && TelemetryLevel[options.telemetryLevel]) {\n        SDK._telemetryLevel.value = TelemetryLevelMapping.convertTelemetryLevelTypeToTelemetryLevel(options.telemetryLevel);\n      }\n\n      if (options.loggingLevel && LoggingLevel[options.loggingLevel]) {\n        this._logger.threshold.setThreshold(LoggingLevelMapping.convertLoggingLevelTypeToLoggingLevel(options.loggingLevel));\n      }\n\n      if (options.consoleLoggingLevel &&\n        LoggingLevel[options.consoleLoggingLevel]) {\n        const consoleAppender = this._logger.appenders.value.find(appender => appender instanceof ConsoleAppender);\n\n        if (consoleAppender) {\n          this._logger.appenders.remove(consoleAppender);\n        }\n\n        if (options.consoleLoggingLevel !== 'Off') {\n          this._logger.appenders.add(new ConsoleAppender(LoggingLevelMapping.convertLoggingLevelTypeToLoggingLevel(options.consoleLoggingLevel)));\n        }\n      }\n\n      if (typeof options.automaticallyPlayMediaStream === 'boolean') {\n        this._automaticallyPlayMediaStream = options.automaticallyPlayMediaStream;\n      }\n\n      if (typeof options.automaticallyMuteVideoOnPlayFailure === 'boolean') {\n        this._automaticallyMuteVideoOnPlayFailure = options.automaticallyMuteVideoOnPlayFailure;\n      }\n\n      if (options.webPlayerLoader) {\n        this._webPlayerLoader = options.webPlayerLoader;\n      }\n\n      if (options.shakaPlayerLoader) {\n        this._shakaPlayerLoader = options.shakaPlayerLoader;\n      }\n\n      if (options.hlsJsLoader) {\n        this._hlsJsLoader = options.hlsJsLoader;\n      }\n    }\n\n    SDK._initialized.value = true;\n  }\n\n  static dispose(): void {\n    SDK._initialized.value = false;\n    this._applicationActivityMonitor.dispose();\n    this._applicationActivityMonitor = null;\n  }\n\n  static getTelemetryUrl(url: string): string {\n    return TelemetryUrl.getTelemetryUrl(url);\n  }\n\n  private constructor() {\n    throw new Error('SDK is a static class that may not be instantiated');\n  }\n}\n\nwindow.addEventListener('unload', () => {\n  SDK.dispose();\n});\n\nSDK.applyDiscoveryUriDefaultFromParameterConfiguration();\nSDK.applyMetricsConfiguration();\nSDK.applyTelemetryConfiguration();\nSDK.applyAutomaticallyRetryOnFailureFromParameterConfiguration();\nSDK.applyAutomaticallyReconnectPeerConnectionFromParameterConfiguration();\nSDK.init();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class TelemetryUrl {\n  static getTelemetryUrl(url: string): string {\n    try {\n      const baseURL = new URL(url);\n      const segments = baseURL.hostname.split('.');\n\n      switch (baseURL.protocol) {\n        case 'ws:':\n          baseURL.protocol = 'http:';\n\n          break;\n        case 'wss:':\n          baseURL.protocol = 'https:';\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (segments.length === 2 ||\n          (segments.length === 3 && segments[segments.length - 2].length <= 2 && segments[segments.length - 1].length <= 3)\n      ) {\n        segments.unshift('telemetry');\n      } else if (segments[0].startsWith('stg-') || segments[0].endsWith('-stg') || segments[0].includes('-stg-') || segments[0] === 'stg') {\n        segments[0] = 'telemetry-stg';\n      } else if (segments[0].startsWith('local') || segments[0].endsWith('-local')) {\n        // Leave URL unchanged\n      } else {\n        segments[0] = 'telemetry';\n      }\n\n      baseURL.hostname = segments.join('.');\n\n      return `${baseURL.origin}/telemetry`;\n    } catch (e) {\n      return url;\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nenum ChannelState {\n  Offline = 1,\n  Starting,\n  Paused,\n  Playing,\n  Recovering,\n  Reconnecting,\n  StandBy,\n  Stopped,\n  Unauthorized,\n  GeoRestricted,\n  GeoBlocked,\n  Error,\n  UnsupportedFeature\n}\n\nexport default ChannelState;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport type BitrateStateType = 'Keep' | 'Reset';\nexport type BitrateModeType = 'Normal' | 'Force' | 'Reset';\n\nexport enum BitrateState {\n  Keep,\n  Reset\n}\n\nexport enum BitrateMode {\n  Normal,\n  Force,\n  Reset\n}\n\nexport interface ISetTemporaryMaximalBitrate {\n  apiVersion: number;\n  sharedSecret: string;\n  elapsedInMilliseconds: number;\n  bitrateInBitsPerSecond: number;\n  bitrateState: BitrateStateType;\n  bitrateMode: BitrateModeType;\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IComparable from '../lang/IComparable';\n\nexport default class Dimension implements IComparable<Dimension> {\n  readonly width: number;\n  readonly height: number;\n\n  static get empty(): Dimension {\n    return new Dimension(0, 0);\n  }\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  equals(other: Dimension): boolean {\n    return other && this.width === other.width && this.height === other.height;\n  }\n\n  toString(): string {\n    return `${this.width}x${this.height}`;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class Durations {\n  private readonly _duration: number;\n\n  constructor(duration = 0) {\n    this._duration = duration;\n  }\n\n  toIsoString(): string {\n    if (this._duration === 0) {\n      return 'P0S';\n    }\n\n    const isNegative = this._duration < 0;\n    const duration = isNegative ? Math.abs(this._duration) : this._duration;\n    let offset = Math.floor(duration);\n    const milliseconds = offset % 1000;\n\n    offset = Math.floor(offset / 1000);\n\n    const seconds = offset % 60;\n\n    offset = Math.floor(offset / 60);\n\n    const minutes = offset % 60;\n\n    offset = Math.floor(offset / 60);\n\n    const hours = offset % 24;\n    const parts = ['PT'];\n\n    if (isNegative) {\n      parts.unshift('-');\n    }\n\n    if (hours) {\n      parts.push(hours + 'H');\n    }\n\n    if (minutes) {\n      parts.push(minutes + 'M');\n    }\n\n    if (seconds || milliseconds) {\n      parts.push(String(seconds));\n\n      if (milliseconds) {\n        parts.push('.' + this.padStart(milliseconds.toString(), 3, '0'));\n      }\n\n      parts.push('S');\n    }\n\n    return parts.join('');\n  }\n\n  padStart(item: string, targetLength: number, padString: string): string {\n    targetLength = targetLength >> 0;\n    padString = String((typeof padString !== 'undefined' ? padString : ' '));\n\n    if (item.length > targetLength) {\n      return item;\n    }\n\n    targetLength = targetLength - item.length;\n\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n\n    return padString.slice(0, targetLength) + item;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport {ILogger} from '../logger/LoggerInterface';\nimport Durations from '../time/Duration';\nimport Disposable from '../lang/Disposable';\nimport IDisposable from '../lang/IDisposable';\nimport MetricsType from '../metrics/MetricsType';\nimport DisposableList from '../lang/DisposableList';\nimport MetricsService from '../metrics/MetricsService';\n\nexport default class VideoTelemetry implements IDisposable {\n  private readonly _pageLoadTime: number;\n  private readonly _channelStartTime: number;\n  private readonly _logger: ILogger = LoggerFactory.getLogger('StreamTelemetry');\n  private readonly _disposables: DisposableList = new DisposableList();\n  private readonly _streamId: string;\n  private readonly _metricsService: MetricsService;\n  private _listenToFirstTime: () => void;\n  private _listenForStall: () => void;\n  private _listenForContinuation: (event) => void;\n  private _timeToFirstFrame: number;\n  private _channelCreationTimeToFirstFrame: number;\n  private _startRecordingFirstFrame: number;\n  private _videoStalled: number;\n  private _lastProgress: number;\n  private _videoResolution: string;\n  private _clearTimeToFirstFrameListener: Disposable;\n  private _clearRebufferingListener: Disposable;\n\n  constructor(streamId: string, pageLoadTime: number, channelStartTime: number, metricsService: MetricsService) {\n    this._streamId = streamId;\n    this._pageLoadTime = pageLoadTime;\n    this._channelStartTime = channelStartTime;\n\n    this._metricsService = metricsService;\n  }\n\n  setupListenerForTimeToFirstTime(video: HTMLVideoElement): void {\n    this._startRecordingFirstFrame = Date.now();\n\n    this._listenToFirstTime = (): void => this.callTimeToFirstFrame();\n\n    video.addEventListener('loadeddata', this._listenToFirstTime);\n    video.addEventListener('loadedmetadata', this._listenToFirstTime);\n\n    this._clearTimeToFirstFrameListener = new Disposable(() => {\n      video.removeEventListener('loadeddata', this._listenToFirstTime);\n      video.removeEventListener('loadedmetadata', this._listenToFirstTime);\n    });\n    this._disposables.add(this._clearTimeToFirstFrameListener);\n  }\n\n  setupListenerForRebuffering(video: HTMLVideoElement): void {\n    this._listenForStall = (): void => this.onStall();\n\n    this._listenForContinuation = (event): void => this.onContinuation(event, video);\n\n    video.addEventListener('stalled', this._listenForStall);\n    video.addEventListener('pause', this._listenForStall);\n    video.addEventListener('suspend', this._listenForStall);\n    video.addEventListener('play', this._listenForContinuation);\n    video.addEventListener('playing', this._listenForContinuation);\n    video.addEventListener('progress', this._listenForContinuation);\n    video.addEventListener('timeupdate', this._listenForContinuation);\n\n    this._clearRebufferingListener = new Disposable(() => {\n      video.removeEventListener('stalled', this._listenForStall);\n      video.removeEventListener('pause', this._listenForStall);\n      video.removeEventListener('suspend', this._listenForStall);\n      video.removeEventListener('play', this._listenForContinuation);\n      video.removeEventListener('playing', this._listenForContinuation);\n      video.removeEventListener('progress', this._listenForContinuation);\n      video.removeEventListener('timeupdate', this._listenForContinuation);\n    });\n\n    this._disposables.add(this._clearRebufferingListener);\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private get durationSincePageLoad(): string {\n    const now = Date.now();\n\n    return new Durations(now - this._pageLoadTime).toIsoString();\n  }\n\n  private callTimeToFirstFrame(): void {\n    const now = Date.now();\n\n    this.pushTimeToFirstFrame(now);\n    this.pushChannelCreationTimeToFirstFrame(now);\n\n    this._clearTimeToFirstFrameListener.dispose();\n  }\n\n  private pushTimeToFirstFrame(now): void {\n    this._timeToFirstFrame = now - this._startRecordingFirstFrame;\n\n    this._metricsService.push({\n      metricType: MetricsType.TimeToFirstFrame,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: this._timeToFirstFrame},\n      streamId: this._streamId\n    });\n\n    this._logger.info(\n      '[%s] [%s] First frame [%s]',\n      this.durationSincePageLoad,\n      this._streamId,\n      new Durations(this._timeToFirstFrame).toIsoString()\n    );\n  }\n\n  private pushChannelCreationTimeToFirstFrame(now): void {\n    this._channelCreationTimeToFirstFrame = now - this._channelStartTime;\n\n    this._metricsService.push({\n      metricType: MetricsType.ChannelCreationTimeToFirstFrame,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: this._channelCreationTimeToFirstFrame},\n      streamId: this._streamId\n    });\n\n    this._logger.info(\n      '[%s] [%s] Channel creation to first frame [%s]',\n      this.durationSincePageLoad,\n      this._streamId,\n      new Durations(this._channelCreationTimeToFirstFrame).toIsoString()\n    );\n  }\n\n  private onStall(): void {\n    if (this._videoStalled) {\n      return;\n    }\n\n    this._metricsService.push({\n      metricType: MetricsType.Stalled,\n      runtime: (Date.now() - this._pageLoadTime) / 1000,\n      streamId: this._streamId\n    });\n\n    this._videoStalled = Date.now();\n\n    this._logger.info(\n      '[%s] [%s] [buffering] Stream has stalled',\n      this.durationSincePageLoad,\n      this._streamId\n    );\n  }\n\n  private onContinuation(event, video): void {\n    if (!video.buffered) {\n      return;\n    }\n\n    const bufferLength = video.buffered.length;\n    const hasNotProgressedSinceLastProgressEvent = event.type === 'playing'\n    || bufferLength > 0 ? (event.type === 'progress'\n      || event.type === 'timeupdate')\n      && video.buffered.end(bufferLength - 1) === this._lastProgress : true;\n\n    if (!this._videoStalled || hasNotProgressedSinceLastProgressEvent) {\n      return;\n    }\n\n    if (event.type === 'progress') {\n      this._lastProgress = video.buffered.end(bufferLength - 1);\n    }\n\n    const timeSinceStop = Date.now() - this._videoStalled;\n\n    this._metricsService.push({\n      metricType: MetricsType.Buffering,\n      runtime: (Date.now() - this._pageLoadTime) / 1000,\n      value: {uint64: timeSinceStop},\n      streamId: this._streamId\n    });\n\n    this._logger.info(\n      '[%s] [%s] [buffering] Stream has recovered from stall after [%s]',\n      this.durationSincePageLoad,\n      this._streamId,\n      new Durations(timeSinceStop).toIsoString()\n    );\n    this._videoStalled = null;\n  }\n\n  onVideoResolutionChanges(newResolution: string): void {\n    this._metricsService.push({\n      metricType: MetricsType.ResolutionChanged,\n      runtime: (Date.now() - this._pageLoadTime) / 1000,\n      value: {string: newResolution},\n      previousValue: this._videoResolution ? {string: this._videoResolution} : undefined,\n      streamId: this._streamId\n    });\n\n    this._videoResolution = newResolution;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport MetricsType from '../metrics/MetricsType';\nimport MetricType from '../metrics/MetricType';\nimport Durations from '../time/Duration';\nimport {ILogger} from '../logger/LoggerInterface';\nimport SDK from '../sdk/SDK';\nimport LoggerFactory from '../logger/LoggerFactory';\n\nexport class StreamSetupListener {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('StreamSetupListener');\n  private readonly metricsService = SDK.metricsService;\n  private readonly _pageLoadTime: number;\n  private readonly _startTime: number;\n  private _metricSubmitted = false;\n\n  constructor(pageLoadTime: number) {\n    this._startTime = Date.now();\n    this._pageLoadTime = pageLoadTime;\n  }\n\n  success(streamId): void {\n    this.recordStreamMetric(MetricsType.SetupCompleted, streamId);\n  }\n\n  fail(): void {\n    this.recordStreamMetric(MetricsType.SetupFailed);\n  }\n\n  private recordStreamMetric(metricType: MetricsType, streamId?: string): void {\n    if (this._metricSubmitted) {\n      return ;\n    }\n\n    this._metricSubmitted = true;\n\n    const now = Date.now();\n    const setupTime = now - this._startTime;\n    const metricName = new MetricType(metricType).getName();\n\n    this.metricsService.push({\n      metricType,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: setupTime},\n      streamId\n    });\n\n    this._logger.info(\n      '[%s] [%s] Stream metric [%s] in [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      streamId,\n      metricName,\n      new Durations(setupTime).toIsoString()\n    );\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport IDisposable from '../lang/IDisposable';\nimport Disposable from '../lang/Disposable';\nimport Subject from '../rx/Subject';\nimport DisposableList from '../lang/DisposableList';\n\nexport default class NetworkMonitor implements IDisposable {\n  private readonly _disposables: DisposableList = new DisposableList();\n  private readonly _isSupported = navigator && navigator['connection'];\n  private readonly _rtt: Subject<number> = new Subject(undefined);\n  private readonly _effectiveType: Subject<string> = new Subject(undefined);\n  private readonly _downlinkThroughputCapacity: Subject<number> = new Subject(undefined);\n\n  constructor() {\n    if (!this.isSupported) {\n      return;\n    }\n\n    this.setupNetworkChangeListeners();\n    this.updateStatistics();\n  }\n\n  get isSupported(): boolean {\n    return this._isSupported;\n  }\n\n  get rtt(): Subject<number> {\n    return this._rtt;\n  }\n\n  get effectiveType(): Subject<string> {\n    return this._effectiveType;\n  }\n\n  get downlinkThroughputCapacity(): Subject<number> {\n    return this._downlinkThroughputCapacity;\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private getDownlinkThroughputCapacity(): number {\n    if (!this.isSupported) {\n      return -1;\n    }\n\n    return navigator['connection'].downlink || navigator['connection'].downlinkMax;\n  }\n\n  private getEffectiveType(): string {\n    if (!this.isSupported) {\n      return 'Unknown';\n    }\n\n    return navigator['connection'].effectiveType || navigator['connection'].type;\n  }\n\n  private getRoundTripTime(): number {\n    return navigator['connection'].rtt;\n  }\n\n  private setupNetworkChangeListeners(): void {\n    const listener = (): void => {\n      this.updateStatistics();\n    };\n\n    navigator['connection'].addEventListener('change', listener);\n\n    this._disposables.add(new Disposable(() => {\n      navigator['connection'].removeEventListener('change', listener);\n    }));\n  }\n\n  private updateStatistics(): void {\n    this._rtt.value = this.getRoundTripTime();\n    this._effectiveType.value = this.getEffectiveType();\n    this._downlinkThroughputCapacity.value = this.getDownlinkThroughputCapacity();\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {StreamSetupListener} from '../dom/StreamSetupListener';\nimport {ILogger} from '../logger/LoggerInterface';\nimport LoggerFactory from '../logger/LoggerFactory';\nimport NetworkMonitor from '../dom/NetworkMonitor';\nimport SDK from '../sdk/SDK';\nimport MetricsType from '../metrics/MetricsType';\nimport Durations from '../time/Duration';\nimport IDisposable from '../lang/IDisposable';\nimport DisposableList from '../lang/DisposableList';\nimport MetricsService from '../metrics/MetricsService';\n\ninterface INetworkStatistics {\n  rtt?: number;\n  effectiveType?: string;\n  downlinkThroughputCapacity?: number;\n}\n\nexport default class SessionTelemetry implements IDisposable {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('SessionTelemetry');\n  private readonly _metricsService: MetricsService;\n  private readonly _applicationActivityMonitor = SDK.applicationActivityMonitor;\n  private readonly _networkMonitor: NetworkMonitor = new NetworkMonitor();\n  private readonly _pageLoadTime: number;\n  private readonly _disposables: DisposableList = new DisposableList();\n  private _lastNetworkStatistics: INetworkStatistics = {};\n\n  constructor(pageLoadTime: number, metricsService: MetricsService) {\n    this._pageLoadTime = pageLoadTime;\n    this._disposables.add(this._networkMonitor);\n    this._metricsService = metricsService;\n\n    if (!this._networkMonitor.isSupported) {\n      return;\n    }\n\n    this._disposables.add(this._applicationActivityMonitor.isForeground.subscribe(isForeground => {\n      this.recordForegroundChange(isForeground);\n    }));\n    this._disposables.add(this._networkMonitor.rtt.subscribe(value => {\n      this.recordNetworkRTTUpdate(value);\n    }));\n    this._disposables.add(this._networkMonitor.effectiveType.subscribe(value => {\n      this.recordNetworkTypeChangeUpdate(value);\n    }));\n    this._disposables.add(this._networkMonitor.downlinkThroughputCapacity.subscribe(value => {\n      this.recordNetworkDownlinkThroughputCapacityUpdate(value);\n    }));\n  }\n\n  listenOnStreamSetup(): StreamSetupListener {\n    return new StreamSetupListener(this._pageLoadTime);\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private recordForegroundChange(isForeground: boolean): void {\n    const now = Date.now();\n    const timeSinceLastChange = this._applicationActivityMonitor.getTimeSinceLastChange();\n\n    this._metricsService.push({\n      metricType: isForeground ? MetricsType.ApplicationForeground : MetricsType.ApplicationBackground,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: timeSinceLastChange}\n    });\n\n    this._logger.info(\n      'Application has gone into the [%s] after [%s] ms',\n      isForeground ? 'foreground' : 'background',\n      new Durations(timeSinceLastChange).toIsoString(),\n    );\n  }\n\n  private recordNetworkRTTUpdate(newRTT: number): void {\n    const now = Date.now();\n    const oldRtt = this._lastNetworkStatistics.rtt;\n\n    this._lastNetworkStatistics.rtt = newRTT;\n\n    this._metricsService.push({\n      metricType: MetricsType.RoundTripTime,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: newRTT},\n      previousValue: oldRtt ? {uint64: oldRtt} : undefined,\n      resource: 'navigator'\n    });\n\n    this._logger.info(\n      '[%s] Network RTT changed to [%s] from [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      newRTT,\n      oldRtt\n    );\n  }\n\n  private recordNetworkTypeChangeUpdate(newNetworkType: string): void {\n    const now = Date.now();\n    const oldNetworkType = this._lastNetworkStatistics.effectiveType;\n\n    this._lastNetworkStatistics.effectiveType = newNetworkType;\n\n    this._metricsService.push({\n      metricType: MetricsType.NetworkType,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {string: newNetworkType},\n      previousValue: oldNetworkType ? {string: oldNetworkType} : undefined\n    });\n\n    this._logger.info(\n      '[%s] Network effective type has changed to [%s] from [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      newNetworkType,\n      oldNetworkType\n    );\n  }\n\n  private recordNetworkDownlinkThroughputCapacityUpdate(newCapacity: number): void {\n    const now = Date.now();\n    const oldCapacity = this._lastNetworkStatistics.downlinkThroughputCapacity;\n\n    this._lastNetworkStatistics.downlinkThroughputCapacity = newCapacity;\n\n    this._metricsService.push({\n      metricType: MetricsType.DownlinkThroughputCapacity,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {float: newCapacity},\n      previousValue: oldCapacity ? {float: oldCapacity} : undefined\n    });\n\n    this._logger.info(\n      '[%s] Network downlink throughput capacity changed to [%s] from [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      newCapacity,\n      oldCapacity\n    );\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {EdgeToken} from '../sdk/edgeAuth/EdgeToken';\nimport Subject from '../rx/Subject';\n\nexport default class TokenContext {\n  token: Subject<EdgeToken>;\n  tokenExpiring: Subject<boolean>;\n\n  constructor(token: string) {\n    this.token = new Subject<EdgeToken>(token);\n    this.tokenExpiring = new Subject<boolean>(false);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../../rx/Subject';\nimport ChannelState from './ChannelState';\nimport Dimension from '../../video/Dimension';\nimport EndPoint, {IStream, SubscribeStatus} from '../discovery/EndPoint';\nimport VideoTelemetry from '../../video/VideoTelemetry';\nimport {IRtcMonitorStatistic, IRtcStatistic} from '../../rtc/RtcConnectionMonitor';\nimport SDK from '../SDK';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport DisposableList from '../../lang/DisposableList';\nimport {BitsPerSecond, Millisecond} from '../../units/Units';\n\nexport default class ChannelContext {\n  channelInitialization: Date;\n  disposables: DisposableList;\n  channelDisposables: DisposableList;\n  rendererDisposables: DisposableList;\n  videoElement: Subject<HTMLVideoElement>;\n  state: Subject<ChannelState>;\n  autoMuted: Subject<boolean>;\n  autoPaused: Subject<boolean>;\n  authorized: Subject<boolean>;\n  online: Subject<boolean>;\n  loading: Subject<boolean>;\n  playing: Subject<boolean>;\n  standby: Subject<boolean>;\n  stopped: Subject<boolean>;\n  targetLag: Subject<Millisecond>;\n  lag: Subject<Millisecond>;\n  bitrateLimit: Subject<BitsPerSecond>;\n  resolution: Subject<Dimension>;\n  failureCount: Subject<number>;\n  endPoint: Subject<EndPoint>;\n  stream: Subject<IStream>;\n  rtcStatistics: Subject<IRtcMonitorStatistic>;\n  videoTelemetry: VideoTelemetry;\n  rtcAudioStatistic: IRtcStatistic;\n  rtcVideoStatistic: IRtcStatistic;\n  clearFailureCountTimeout: number;\n\n  constructor(targetLag: number) {\n    this.disposables = new DisposableList();\n    this.channelDisposables = new DisposableList();\n    this.rendererDisposables = new DisposableList();\n    this.channelInitialization = new Date();\n    this.videoElement = new Subject<HTMLVideoElement>(null);\n    this.state = new Subject<ChannelState>(ChannelState.Starting);\n    this.autoMuted = new Subject<boolean>(false);\n    this.autoPaused = new Subject<boolean>(false);\n    this.authorized = new Subject<boolean>(true);\n    this.online = new Subject<boolean>(true);\n    this.loading = new Subject<boolean>(false);\n    this.playing = new Subject<boolean>(false);\n    this.standby = new Subject<boolean>(false);\n    this.stopped = new Subject<boolean>(false);\n    this.targetLag = new Subject<Millisecond>(targetLag);\n    this.lag = new Subject<Millisecond>(0);\n    this.bitrateLimit = new Subject<BitsPerSecond>(0);\n    this.resolution = new Subject<Dimension>(Dimension.empty);\n    this.failureCount = new Subject<number>(0);\n    this.endPoint = new Subject<EndPoint>(null);\n    this.stream = new Subject<IStream>(null);\n    this.rtcStatistics = new Subject<IRtcMonitorStatistic>(null);\n  }\n\n  get streamId(): string {\n    const stream = this.stream.value;\n\n    if (!stream) {\n      return '-';\n    }\n\n    return stream.streamId;\n  }\n\n  applyStatus(status: SubscribeStatus): void {\n    switch (status) {\n      case 'ok':\n        break;\n      case 'unauthorized':\n      case 'geo-restricted':\n      case 'geo-blocked':\n        this.authorized.value = false;\n\n      // eslint-disable-next-line no-fallthrough\n      case 'no-stream':\n      case 'not-found':\n        this.failureCount.value = 0;\n        this.playing.value = false;\n        this.standby.value = true;\n        this.stopped.value = false;\n        this.stream.value = null;\n\n        return;\n      default:\n        this.failureCount.value++;\n        this.playing.value = false;\n        this.standby.value = true;\n        this.stopped.value = false;\n        this.stream.value = null;\n        this.state.value = ChannelState.Error;\n\n        return;\n    }\n  }\n\n  applySessionAndStreamPropertiesToVideoElement(): void {\n    if (this.videoElement.value && this.videoElement.value.dataset) {\n      this.videoElement.value.dataset.sessionId = SDK.clientSessionId;\n      this.videoElement.value.dataset.streamId = this.streamId;\n    }\n  }\n\n  mapSubscribeStatusToChannelStatus(status: SubscribeStatus): ChannelState {\n    switch (status) {\n      case 'ok':\n        return ChannelState.Starting;\n      case 'no-stream':\n      case 'not-found':\n        return ChannelState.StandBy;\n      case 'geo-restricted':\n        return ChannelState.GeoRestricted;\n      case 'geo-blocked':\n        return ChannelState.GeoBlocked;\n      case 'unauthorized':\n        return ChannelState.Unauthorized;\n      case 'capacity':\n      case 'rate-limited':\n      case 'timeout':\n        return ChannelState.Recovering;\n      case 'failed':\n        return ChannelState.Error;\n      default:\n        assertUnreachable(status);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../rx/Subject';\nimport IPeerConnection from '../rtc/IPeerConnection';\n\nexport default class PeerConnectionContext {\n  mediaStream: Subject<MediaStream>;\n  peerConnection: Subject<IPeerConnection>;\n  peerConnectionReconnectAttempts: number;\n\n  constructor() {\n    this.mediaStream = new Subject<MediaStream>(null);\n    this.peerConnection = new Subject<IPeerConnection>(null);\n    this.peerConnectionReconnectAttempts = 0;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../rx/Subject';\n\nexport default class StateContext {\n  isStarting: Subject<boolean>;\n  isDisposed: boolean;\n\n  constructor() {\n    this.isStarting = new Subject<boolean>(false);\n    this.isDisposed = false;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {BitrateMode, BitrateModeType} from '../api/SetTemporaryMaximalBitrate';\nimport assertUnreachable from '../../lang/assertUnreachable';\n\nexport default class BitrateModeMapping {\n  static convertBitrateModeToBitrateModeType(bitrateMode: BitrateMode): BitrateModeType {\n    switch (bitrateMode) {\n      case BitrateMode.Normal:\n        return 'Normal';\n      case BitrateMode.Force:\n        return 'Force';\n      case BitrateMode.Reset:\n        return 'Reset';\n      default:\n        assertUnreachable(bitrateMode);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {BitrateState, BitrateStateType} from '../api/SetTemporaryMaximalBitrate';\nimport assertUnreachable from '../../lang/assertUnreachable';\n\nexport default class BitrateStateMapping {\n  static convertBitrateStateToBitrateStateType(bitrateState: BitrateState): BitrateStateType {\n    switch (bitrateState) {\n      case BitrateState.Keep:\n        return 'Keep';\n      case BitrateState.Reset:\n        return 'Reset';\n      default:\n        assertUnreachable(bitrateState);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport {ILogger} from '../../logger/LoggerInterface';\n\nimport {\n  ISubscribeResponse,\n  ISubscribeWithOfferRequest,\n  ISubscribeWithoutOfferRequest\n} from '../api/Subscribe';\nimport {ISetRemoteDescriptionRequest, ISetRemoteDescriptionResponse} from '../api/SetRemoteDescription';\nimport {IRtcConfiguration} from '../api/RtcConfiguration';\nimport {ISessionDescription, SdpType} from '../api/SessionDescription';\nimport {IDestroyStreamRequest, IDestroyStreamResponse} from '../api/DestroyStream';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport {IAddIceCandidatesRequest, IAddIceCandidatesResponse} from '../api/AddIceCandidates';\nimport VersionManager from '../version/VersionManager';\nimport EdgeAuth from '../edgeAuth/EdgeAuth';\nimport {BitrateMode, BitrateState, ISetTemporaryMaximalBitrate} from '../api/SetTemporaryMaximalBitrate';\nimport BitrateModeMapping from './BitrateModeMapping';\nimport BitrateStateMapping from './BitrateStateMapping';\nimport {BitsPerSecond, Millisecond} from '../../units/Units';\nimport {\n  IPublishResponse,\n  IPublishWithOfferRequest,\n  IPublishWithoutOfferRequest,\n  PublishStatus\n} from '../api/Publish';\n\nconst apiVersion = 6;\n\nexport type SubscribeStatus = 'ok' | 'no-stream' | 'not-found' | 'unauthorized' | 'geo-restricted' | 'geo-blocked' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type SetRemoteDescriptionStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type SetTemporaryMaximalBitrateStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type RemoveTemporaryMaximalBitrateStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type AddIceCandidatesStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type DestroyStreamStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport interface IStream {\n  streamId: string;\n  sharedSecret: string;\n  tenancy: string;\n}\n\nexport interface ISubscribeResponseInit {\n  status: SubscribeStatus;\n  stream?: IStream;\n  lag?: Millisecond;\n  rtcConfiguration?: RTCConfiguration;\n  setRemoteDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n  createOfferDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n  createAnswerDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n}\n\nexport type IPublishResponseInit = ISubscribeResponseInit;\n\ninterface ISetRemoteDescriptionResponseInit {\n  status: SetRemoteDescriptionStatus;\n  sessionDescription?: RTCSessionDescriptionInit;\n}\n\ninterface IAddIceCandidatesResponseInit {\n  status: AddIceCandidatesStatus;\n  options?: string[];\n}\n\ninterface ISetTemporaryMaximalBitrateResponseInit {\n  status: SetTemporaryMaximalBitrateStatus;\n}\n\ninterface IDestroyStreamResponseInit {\n  status: DestroyStreamStatus;\n}\n\nexport default class EndPoint {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('EndPoint');\n  private readonly _uri: string;\n  private readonly _timeout: number;\n  private _roundTripTime: number;\n\n  constructor(uri: string, timeout: number) {\n    this._uri = uri;\n    this._timeout = timeout;\n\n    if (!timeout) {\n      throw new Error(`End point requires a timeout`);\n    }\n  }\n\n  get roundTripTime(): number {\n    return this._roundTripTime;\n  }\n\n  toString(): string {\n    return `EndPoint[uri=${this._uri}]`;\n  }\n\n  async ping(): Promise<number> {\n    const url = this.buildPingUrl();\n    const start = Date.now();\n    const response = await Promise.race([\n      fetch(url, {\n        method: 'GET',\n        cache: 'no-cache'\n      }),\n      new Promise<Response>((_, reject) =>\n        setTimeout(() => reject(new Error(`Ping timed out [${url}]`)), this._timeout)\n      )\n    ]);\n    const finished = Date.now();\n\n    if (!response.ok) { /* Handle */\n      throw new Error(`Ping failed [${url}] [${response.status}]`);\n    }\n\n    this._roundTripTime = finished - start;\n\n    return this._roundTripTime;\n  }\n\n  async subscribe(token: string, localSessionDescription: RTCSessionDescriptionInit, failureCount: number): Promise<ISubscribeResponseInit> {\n    const parsedToken = EdgeAuth.parseToken(token);\n\n    if (!parsedToken || !parsedToken.applicationId) {\n      this._logger.error('Failed to parse token [%s]', token);\n\n      return {status: 'unauthorized'};\n    }\n\n    const tenancy = parsedToken.applicationId;\n    const url = this.buildUrl([tenancy, 'stream', 'subscribe']).toString();\n    const formData = new FormData();\n    const clientVersion = VersionManager.sdkVersion;\n\n    if (failureCount === 0 && localSessionDescription) {\n      const bodyWithOffer: ISubscribeWithOfferRequest = {\n        apiVersion,\n        clientVersion,\n        edgeAuthToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        setRemoteDescription: {\n          apiVersion,\n          sessionDescription: {\n            type: this.convertRTCSdpTypeToSdpType(localSessionDescription.type),\n            sdp: localSessionDescription.sdp\n          }\n        },\n        createAnswerDescription: {apiVersion}\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithOffer));\n    } else {\n      const bodyWithoutOffer: ISubscribeWithoutOfferRequest = {\n        apiVersion,\n        clientVersion,\n        edgeAuthToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        createOfferDescription: {apiVersion}\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithoutOffer));\n    }\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to subscribe', new Error(`Subscribe timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to subscribe', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: SubscribeStatus = this.mapHttpStatusToSubscribeStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const subscribeResponse = await this.convertHttpResponseToSubscribeResponse(tenancy, httpResponse);\n\n    this._logger.debug('Got subscribe response [%j] in [%s] ms', subscribeResponse, finished - start);\n\n    return subscribeResponse;\n  }\n\n  async publish(name: string, token: string, localSessionDescription: RTCSessionDescriptionInit, failureCount: number): Promise<IPublishResponseInit> {\n    const parsedToken = EdgeAuth.parseToken(token);\n\n    if (!parsedToken || !parsedToken.applicationId) {\n      this._logger.error('Failed to parse token [%s]', token);\n\n      return {status: 'unauthorized'};\n    }\n\n    const tenancy = parsedToken.applicationId;\n    const url = this.buildUrl([tenancy, 'stream', 'publish']).toString();\n    const formData = new FormData();\n    const clientVersion = VersionManager.sdkVersion;\n\n    if (failureCount === 0 && localSessionDescription) {\n      const bodyWithOffer: IPublishWithOfferRequest = {\n        apiVersion,\n        clientVersion,\n        edgeAuthToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        name,\n        setRemoteDescription: {\n          apiVersion,\n          sessionDescription: {\n            type: this.convertRTCSdpTypeToSdpType(localSessionDescription.type),\n            sdp: localSessionDescription.sdp\n          }\n        },\n        createAnswerDescription: {\n          streamId: '',\n          options: ['upload'],\n          apiVersion\n        }\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithOffer));\n    } else {\n      const bodyWithoutOffer: IPublishWithoutOfferRequest = {\n        apiVersion,\n        clientVersion,\n        edgeAuthToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        name,\n        createOfferDescription: {\n          streamId: '',\n          options: ['upload'],\n          apiVersion\n        }\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithoutOffer));\n    }\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to publish', new Error(`Publish timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to publish', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: PublishStatus = this.mapHttpStatusToPublishStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const subscribeResponse = await this.convertHttpResponseToPublishResponse(tenancy, httpResponse);\n\n    this._logger.debug('Got publish response [%j] in [%s] ms', subscribeResponse, finished - start);\n\n    return subscribeResponse;\n  }\n\n  async setRemoteDescription(stream: IStream, sessionDescription: RTCSessionDescriptionInit): Promise<ISetRemoteDescriptionResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'description', 'remote']).toString();\n    const formData = new FormData();\n    const body: ISetRemoteDescriptionRequest = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      sessionDescription: {\n        type: this.convertRTCSdpTypeToSdpType(sessionDescription.type),\n        sdp: sessionDescription.sdp\n      }\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to set remote description', new Error(`Set remote description timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to set remote description', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: SetRemoteDescriptionStatus = this.mapHttpStatusToSetRemoteDescriptionStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const setRemoteDescriptionResponse = await this.convertHttpResponseToSetRemoteDescriptionResponse(httpResponse);\n\n    this._logger.debug('Got set remote description response [%j] in [%s] ms', setRemoteDescriptionResponse, finished - start);\n\n    return setRemoteDescriptionResponse;\n  }\n\n  async limitBitrate(\n    stream: IStream,\n    elapsedInMilliseconds: number,\n    bitrateInBitsPerSecond: BitsPerSecond,\n    bitrateState: BitrateState,\n    bitrateMode: BitrateMode,\n  ): Promise<ISetTemporaryMaximalBitrateResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'bitrate']).toString();\n    const formData = new FormData();\n    const body: ISetTemporaryMaximalBitrate = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      elapsedInMilliseconds,\n      bitrateInBitsPerSecond,\n      bitrateState: BitrateStateMapping.convertBitrateStateToBitrateStateType(bitrateState),\n      bitrateMode: BitrateModeMapping.convertBitrateModeToBitrateModeType(bitrateMode)\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to set limit bitrate timed', new Error(`Set limit bitrate timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to set limit bitrate timed', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: SetTemporaryMaximalBitrateStatus = this.mapHttpStatusToSetTemporaryMaximalBitrateStatus(httpResponse);\n    const finished = Date.now();\n\n    this._logger.info('Got set limit bitrate response [%s] in [%s] ms', status, finished - start);\n\n    return {status};\n  }\n\n  async addIceCandidates(stream: IStream, candidates: RTCIceCandidate[], discoveryCompleted: boolean, options: string[] = []): Promise<IAddIceCandidatesResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'ice', 'candidates']).toString();\n    const formData = new FormData();\n    const body: IAddIceCandidatesRequest = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      candidates,\n      discoveryCompleted,\n      options\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to add ice candidates', new Error(`Add ice candidates timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to add ice candidates', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: AddIceCandidatesStatus = this.mapHttpStatusToAddIceCandidatesStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const addIceCandidatesResponse = await this.convertHttpResponseToAddIceCandidatesResponse(httpResponse);\n\n    this._logger.info('Got add ICE candidates response [%j] in [%s] ms', addIceCandidatesResponse, finished - start);\n\n    return addIceCandidatesResponse;\n  }\n\n  async destroyStream(stream: IStream, reason: string): Promise<IDestroyStreamResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'destroy']).toString();\n    const formData = new FormData();\n    const body: IDestroyStreamRequest = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      reason,\n      options: []\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData,\n          cache: 'no-cache'\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to subscribe', new Error(`Delete stream timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to delete stream', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: DestroyStreamStatus = this.mapHttpStatusToSetDestroyStreamStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const destroyStreamResponse = await this.convertHttpResponseToDestroyStreamResponse(httpResponse);\n\n    this._logger.info('Got destroy stream response [%j] in [%s] ms', destroyStreamResponse, finished - start);\n\n    return destroyStreamResponse;\n  }\n\n  private buildUrl(path: string[]): URL {\n    const uri = new URL(this._uri);\n    const pathAsArray = uri.pathname.split('/');\n\n    pathAsArray.length = pathAsArray.length - 1;\n\n    uri.pathname = pathAsArray.concat(...path).join('/');\n\n    return uri;\n  }\n\n  private buildPingUrl(): string {\n    const uri = new URL(this._uri);\n    const sdkVersion = VersionManager.sdkVersion;\n\n    uri.search = `?${new URLSearchParams([['type', 'http'], ['version', sdkVersion], ['_', `${Date.now()}`]]).toString()}`;\n\n    return uri.toString();\n  }\n\n  private mapHttpStatusToPublishStatus(response: Response): PublishStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 402:\n        return 'geo-restricted';\n      case 403:\n        return 'geo-blocked';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSubscribeStatus(response: Response): SubscribeStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 402:\n        return 'geo-restricted';\n      case 403:\n        return 'geo-blocked';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSetRemoteDescriptionStatus(response: Response): SetRemoteDescriptionStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSetTemporaryMaximalBitrateStatus(response: Response): SetTemporaryMaximalBitrateStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToAddIceCandidatesStatus(response: Response): AddIceCandidatesStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSetDestroyStreamStatus(response: Response): DestroyStreamStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private async convertHttpResponseToSubscribeResponse(tenancy: string, response: Response): Promise<ISubscribeResponseInit> {\n    const data = await response.json() as ISubscribeResponse;\n    const subscribeResponse: ISubscribeResponseInit = {status: data.status};\n\n    subscribeResponse.stream = {\n      tenancy,\n      streamId: data.streamId,\n      sharedSecret: data.sharedSecret\n    };\n\n    subscribeResponse.lag = data.lag;\n\n    if (data) {\n      if (data.rtcConfiguration) {\n        subscribeResponse.rtcConfiguration = this.convertIRtcConfigurationToRTCConfiguration(data.rtcConfiguration);\n      }\n\n      if (data.setRemoteDescriptionResponse && data.setRemoteDescriptionResponse.sessionDescription) {\n        subscribeResponse.setRemoteDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.setRemoteDescriptionResponse.sessionDescription)};\n      }\n\n      if (data.createAnswerDescriptionResponse && data.createAnswerDescriptionResponse.sessionDescription) {\n        subscribeResponse.createAnswerDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.createAnswerDescriptionResponse.sessionDescription)};\n      }\n\n      if (data.createOfferDescriptionResponse && data.createOfferDescriptionResponse.sessionDescription) {\n        subscribeResponse.createOfferDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.createOfferDescriptionResponse.sessionDescription)};\n      }\n    }\n\n    return subscribeResponse;\n  }\n\n  private async convertHttpResponseToPublishResponse(tenancy: string, response: Response): Promise<IPublishResponseInit> {\n    const data = await response.json() as IPublishResponse;\n    const publishResponse: IPublishResponseInit = {status: data.status};\n\n    publishResponse.stream = {\n      tenancy,\n      streamId: data.streamId,\n      sharedSecret: data.sharedSecret\n    };\n\n    if (data) {\n      if (data.rtcConfiguration) {\n        publishResponse.rtcConfiguration = this.convertIRtcConfigurationToRTCConfiguration(data.rtcConfiguration);\n      }\n\n      if (data.setRemoteDescriptionResponse && data.setRemoteDescriptionResponse.sessionDescription) {\n        publishResponse.setRemoteDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.setRemoteDescriptionResponse.sessionDescription)};\n      }\n\n      if (data.createAnswerDescriptionResponse && data.createAnswerDescriptionResponse.sessionDescription) {\n        publishResponse.createAnswerDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.createAnswerDescriptionResponse.sessionDescription)};\n      }\n\n      if (data.createOfferDescriptionResponse && data.createOfferDescriptionResponse.sessionDescription) {\n        publishResponse.createOfferDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.createOfferDescriptionResponse.sessionDescription)};\n      }\n    }\n\n    return publishResponse;\n  }\n\n  private convertIRtcConfigurationToRTCConfiguration(configuration: IRtcConfiguration): RTCConfiguration {\n    const rtcConfiguration: RTCConfiguration = {};\n\n    if (configuration.bundlePolicy) {\n      switch (configuration.bundlePolicy) {\n        case 'BundlePolicyBalanced':\n          rtcConfiguration.bundlePolicy = 'balanced';\n\n          break;\n        case 'BundlePolicyMaxCompat':\n          rtcConfiguration.bundlePolicy = 'max-compat';\n\n          break;\n        case 'BundlePolicyMaxBundle':\n          rtcConfiguration.bundlePolicy = 'max-bundle';\n\n          break;\n        default:\n          assertUnreachable(configuration.bundlePolicy);\n      }\n    }\n\n    if (typeof configuration.iceCandidatePoolSize === 'number') {\n      rtcConfiguration.iceCandidatePoolSize = configuration.iceCandidatePoolSize;\n    }\n\n    if (configuration.iceServers) {\n      const iceServers: RTCIceServer[] = [];\n\n      for (let i = 0; i < configuration.iceServers.length; i++) {\n        iceServers.push({\n          urls: configuration.iceServers[i].urls,\n          username: configuration.iceServers[i].username,\n          credential: configuration.iceServers[i].credential\n        });\n      }\n\n      rtcConfiguration.iceServers = iceServers;\n    }\n\n    if (configuration.iceTransportPolicy) {\n      switch (configuration.iceTransportPolicy) {\n        case 'IceTransportPolicyAll':\n          rtcConfiguration.iceTransportPolicy = 'all';\n\n          break;\n        case 'IceTransportPolicyRelay':\n          rtcConfiguration.iceTransportPolicy = 'relay';\n\n          break;\n        case 'IceTransportPolicyPublic':\n          // Deprecated - Not supported\n          break;\n        default:\n          assertUnreachable(configuration.iceTransportPolicy);\n      }\n    }\n\n    if (configuration.peerIdentity) {\n      rtcConfiguration.peerIdentity = configuration.peerIdentity;\n    }\n\n    if (configuration.rtcpMuxPolicy) {\n      switch (configuration.rtcpMuxPolicy) {\n        case 'RtcpMuxPolicyNegotiate':\n          rtcConfiguration.rtcpMuxPolicy = 'negotiate';\n\n          break;\n        case 'RtcpMuxPolicyRequire':\n          rtcConfiguration.rtcpMuxPolicy = 'require';\n\n          break;\n        default:\n          assertUnreachable(configuration.rtcpMuxPolicy);\n      }\n    }\n\n    return rtcConfiguration;\n  }\n\n  private convertISessionDescriptionToRTCSessionDescription(sessionDescription: ISessionDescription): RTCSessionDescriptionInit {\n    const rtcSessionDescription: RTCSessionDescriptionInit = {sdp: sessionDescription.sdp};\n\n    switch (sessionDescription.type) {\n      case 'Offer':\n        rtcSessionDescription.type = 'offer';\n\n        break;\n      case 'Answer':\n        rtcSessionDescription.type = 'answer';\n\n        break;\n      default:\n        assertUnreachable(sessionDescription.type);\n    }\n\n    return rtcSessionDescription;\n  }\n\n  private async convertHttpResponseToSetRemoteDescriptionResponse(response: Response): Promise<ISetRemoteDescriptionResponseInit> {\n    const data = await response.json() as ISetRemoteDescriptionResponse;\n    const setRemoteDescriptionResponse: ISetRemoteDescriptionResponseInit = {status: data.status};\n\n    if (data && data.sessionDescription) {\n      setRemoteDescriptionResponse.sessionDescription = this.convertISessionDescriptionToRTCSessionDescription(data.sessionDescription);\n    }\n\n    return setRemoteDescriptionResponse;\n  }\n\n  private async convertHttpResponseToAddIceCandidatesResponse(response: Response): Promise<IAddIceCandidatesResponseInit> {\n    const data = await response.json() as IAddIceCandidatesResponse;\n    const addIceCandidatesResponse: IAddIceCandidatesResponseInit = {\n      status: data.status,\n      options: []\n    };\n\n    if (data) {\n      if (data.options) {\n        addIceCandidatesResponse.options = data.options;\n      }\n    }\n\n    return addIceCandidatesResponse;\n  }\n\n  private async convertHttpResponseToDestroyStreamResponse(response: Response): Promise<IDestroyStreamResponseInit> {\n    const data = await response.json() as IDestroyStreamResponse;\n    const destroyStream: IDestroyStreamResponseInit = {status: data.status};\n\n    return destroyStream;\n  }\n\n  private convertRTCSdpTypeToSdpType(type: RTCSdpType): SdpType {\n    switch (type) {\n      case 'answer':\n        return 'Answer';\n      case 'offer':\n        return 'Offer';\n      case 'pranswer':\n      case 'rollback':\n        throw new Error(`SDP type [${type}] is not supported`);\n      default:\n        assertUnreachable(type);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport EndPoint from './EndPoint';\nimport SDK from '../SDK';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport MetricsType from '../../metrics/MetricsType';\nimport DiscoveryUri from './DiscoveryUri';\nimport MetricsService from '../../metrics/MetricsService';\nimport MetricsFactory from '../../metrics/MetricsFactory';\n\nconst defaultTimeout = 20000;\n\nexport default class DiscoveryService {\n  private _logger: ILogger = LoggerFactory.getLogger('Discovery');\n  private _metricsService: MetricsService;\n  private _uri: URL;\n\n  constructor(uri: URL) {\n    if (!uri) {\n      throw new Error('Discovery requires uri');\n    }\n\n    this._metricsService = MetricsFactory.getMetricsService(uri.toString());\n    this._uri = uri;\n  }\n\n  async discoverNearbyEndPoints(uri: URL, timeout: number): Promise<EndPoint[]> {\n    if (!timeout) {\n      throw new Error('Discovery requires timeout');\n    }\n\n    const url = uri.toString();\n    const response = await Promise.race([\n      fetch(url, {\n        method: 'GET',\n        cache: 'no-cache'\n      }),\n      new Promise<Response>((_, reject) =>\n        setTimeout(() => reject(new Error(`Discovery timed out [${url}]`)), timeout)\n      )\n    ]);\n\n    if (!response.ok) {\n      throw new Error(`Discovery failed [${url}] [${response.status}]`);\n    }\n\n    if (response.body === null) {\n      throw new Error(`Discovery failed with no data [${url}]`);\n    }\n\n    const asString = await response.text();\n    const endPoints = asString.split(',');\n\n    return endPoints.map(endPoint => new EndPoint(endPoint, timeout));\n  }\n\n  async discoverClosestEndPoint(timeout: number = defaultTimeout): Promise<EndPoint> {\n    const url = DiscoveryUri.buildDiscoveryUrl(this._uri);\n    const endPoints = await this.discoverNearbyEndPoints(new URL(url), timeout);\n    const neverResolve = (): Promise<void> => new Promise(() => {\n      this._logger.info('Request [%s] failed, preventing it from completing', url);\n    });\n    const endPoint = await Promise.race(endPoints.map(endPoint => endPoint\n      .ping()\n      .catch(e => {\n        this._logger.warn('Failed to ping end point [%s]', endPoint, e);\n\n        return neverResolve();\n      })\n      .then(time => {\n        const now = Date.now();\n\n        this._logger.info('Discovered end point [%s] with time [%s]', endPoint.toString(), time);\n        this._metricsService.push({\n          metricType: MetricsType.RoundTripTime,\n          runtime: (now - SDK.pageLoadTime) / 1000,\n          value: {uint64: time || 0},\n          resource: endPoint.toString(),\n          kind: 'ping'\n        });\n\n        return endPoint;\n      })));\n\n    return endPoint;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport EndPoint from './EndPoint';\nimport SDK from '../SDK';\nimport DiscoveryService from './DiscoveryService';\n\nconst discoveryCacheInterval = 60000;\n\ninterface IPerURIEndpoint { [x: string]: Promise<EndPoint> }\n\nexport default class Discovery {\n  private static _cache: IPerURIEndpoint = {};\n\n  static async precacheClosestEndPointDiscovery(): Promise<EndPoint> {\n    const uri = new URL(SDK.discoveryUri.value);\n\n    return Discovery.discoverClosestEndPointWithCaching(uri);\n  }\n\n  static async discoverClosestEndPointWithCaching(uri: URL): Promise<EndPoint> {\n    const url = uri.toString();\n\n    if (Discovery._cache[url]) {\n      return Discovery._cache[url];\n    }\n\n    const discoveryService = new DiscoveryService(uri);\n    const cachedValue = Discovery._cache[url] = discoveryService.discoverClosestEndPoint();\n\n    Discovery._cache[url].then(() => {\n      const ignored = setTimeout(() => {\n        if (Discovery._cache[url] === cachedValue) {\n          delete Discovery._cache[url];\n        }\n      }, discoveryCacheInterval);\n    }).catch(e => {\n      delete Discovery._cache[url];\n\n      throw e;\n    });\n\n    return cachedValue;\n  }\n\n  private constructor() {\n    throw new Error('Discovery is a static class that may not be instantiated');\n  }\n}\n\nconst ignored = Discovery.precacheClosestEndPointDiscovery();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport enum NetworkStates {\n  NetworkEmpty,\n  NetworkIdle,\n  NetworkLoading,\n  NetworkNoSource\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {ILogger} from '../../logger/LoggerInterface';\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport {LiveStreaming} from './LiveStreaming';\nimport {LiveStreamingOptions, LiveStreamingStatistics} from './StreamTypes';\nimport {NetworkStates} from './NetworkStates';\n\nconst bandwidthToStartAt = 3000000; // Corresponds to 720p in most setups\nconst minTimeBeforeNextReload = 15000;\n\ntype EventListenerForWebPlayer = (evt: WebPlayerEvent) => void;\ntype WebPlayerEvent = {\n  code: number;\n  severity: number;\n  error: string;\n}\n\nexport interface IWebPlayer {\n  start: (url: string) => void;\n  addEventListener(name: string, listener: EventListenerForWebPlayer): void;\n  dispose(): void;\n  errors: {\n    severity: {\n      RECOVERABLE: number;\n    };\n  };\n  getStats(): LiveStreamingStatistics;\n}\n\nexport default class WebPlayer {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('WebPlayer');\n  private readonly _videoElement: HTMLVideoElement;\n  private readonly _kind: string;\n  private readonly _streamId: string;\n  private readonly _manifestURI: string;\n  private readonly _options: LiveStreamingOptions;\n  private _player: IWebPlayer;\n  private _lastReloadTime: number;\n\n  constructor(videoElement: HTMLVideoElement, kind: string, streamId: string, manifestURI: string, options: LiveStreamingOptions) {\n    this._videoElement = videoElement;\n    this._kind = kind;\n    this._streamId = streamId;\n    this._manifestURI = encodeURI(manifestURI).replace(/[#]/g, '%23');\n    this._options = options;\n  }\n\n  start(): void {\n    if (LiveStreaming.phenixWebPlayer) {\n      const playerOptions = {\n        ...this._options,\n        bandwidthToStartAt\n      };\n\n      this._player = new LiveStreaming.phenixWebPlayer.WebPlayer(this._logger, this._videoElement, playerOptions);\n      this._player.start(this._manifestURI);\n\n      this._player.addEventListener('error', errorObject => {\n        if (this.canReload() && errorObject && (errorObject.code === 3 || errorObject.severity === LiveStreaming.phenixWebPlayer.errors.severity.RECOVERABLE)) {\n          this._logger.warn('Reloading unhealthy stream after error event [%j]', errorObject);\n          this.reloadIfAble();\n        }\n\n        this._logger.error('Cannot reload with error [%j]', errorObject);\n      });\n\n      return;\n    }\n  }\n\n  isSupported(): boolean {\n    return LiveStreaming.phenixWebPlayer && LiveStreaming.phenixWebPlayer.isSupported;\n  }\n\n  getStats(): LiveStreamingStatistics {\n    if (!this._player) {\n      return {\n        width: 0,\n        height: 0,\n        currentTime: 0.0,\n        lag: 0.0,\n        networkState: NetworkStates.NetworkNoSource,\n        dataBuffered: 0.0\n      };\n    }\n\n    const statistics = this._player.getStats();\n    const currentTime = statistics.currentTime || this._videoElement['currentTime'];\n    const trueCurrentTime = (Date.now() - this._options.originStartTime) / 1000;\n\n    if (this._videoElement.buffered && this._videoElement.buffered.length) {\n      statistics.dataBuffered = this._videoElement.buffered.end(0);\n    }\n\n    if (statistics.isNative && statistics.deliveryType === 'Hls') {\n      statistics.currentTime = currentTime - statistics.lag;\n    }\n\n    if (!statistics.currentTime) {\n      statistics.currentTime = currentTime;\n    }\n\n    if (!statistics.isNative) {\n      statistics.lag = Math.max(0.0, trueCurrentTime - currentTime);\n    }\n\n    if (statistics.estimatedBandwidth > 0) {\n      statistics.networkState = NetworkStates.NetworkLoading;\n    } else if (statistics.playTime > 0) {\n      statistics.networkState = NetworkStates.NetworkIdle;\n    } else if (statistics.video) {\n      statistics.networkState = NetworkStates.NetworkEmpty;\n    } else {\n      statistics.networkState = NetworkStates.NetworkNoSource;\n    }\n\n    return statistics;\n  }\n\n  dispose(): void {\n    if (this._player) {\n      this._player.dispose();\n    }\n\n    this._player = null;\n  }\n\n  private canReload(): boolean {\n    const hasElapsedMinTimeSinceLastReload = !this._lastReloadTime || Date.now() - this._lastReloadTime > minTimeBeforeNextReload;\n\n    return this._videoElement && this._player && this._videoElement.buffered.length !== 0 && hasElapsedMinTimeSinceLastReload;\n  }\n\n  private reloadIfAble(): void {\n    if (!this.canReload()) {\n      return;\n    }\n\n    this._logger.warn('[%s] Reloading unhealthy stream that was active for at least [%s] seconds', this._streamId, minTimeBeforeNextReload / 1000);\n\n    this._lastReloadTime = Date.now();\n\n    this.reload();\n  }\n\n  private reload(): void {\n    this._player.dispose();\n\n    this._player = null;\n\n    this.start();\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {ILogger} from '../../logger/LoggerInterface';\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport {LiveStreaming} from './LiveStreaming';\nimport {LiveStreamingOptions, LiveStreamingStatistics} from './StreamTypes';\nimport {NetworkStates} from './NetworkStates';\n\ntype ShakaOptions = {\n  abr: {\n    defaultBandwidthEstimate: number;\n  };\n  manifest: {\n    retryParameters: {\n      timeout: number;\n    };\n  };\n  streaming: {\n    rebufferingGoal: number;\n    bufferingGoal: number;\n    bufferBehind: number;\n    retryParameters: {\n      timeout: number;\n      maxAttempts: number;\n      backoffFactor: number;\n    };\n  };\n}\n\nexport interface IShaka {\n  configure: (o: ShakaOptions) => void;\n  load: (uri: string) => Promise<void>;\n  getStats: () => LiveStreamingStatistics;\n  destroy: () => void;\n  unload: () => void;\n}\n\nexport default class ShakaPlayer {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('ShakaPlayer');\n  private readonly _videoElement: HTMLVideoElement;\n  private readonly _kind: string;\n  private readonly _streamId: string;\n  private readonly _manifestURI: string;\n  private readonly _options: LiveStreamingOptions;\n  private _player: IShaka;\n\n  constructor(videoElement: HTMLVideoElement, kind: string, streamId: string, manifestURI: string, options: LiveStreamingOptions) {\n    this._videoElement = videoElement;\n    this._kind = kind;\n    this._streamId = streamId;\n    this._manifestURI = encodeURI(manifestURI).replace(/[#]/g, '%23');\n    this._options = options;\n  }\n\n  start(): void {\n    if (LiveStreaming.shaka) {\n      const playerOptions: ShakaOptions = {\n        abr: {defaultBandwidthEstimate: 2000000},\n        manifest: {retryParameters: {timeout: 10000}},\n        streaming: {\n          rebufferingGoal: 2,\n          bufferingGoal: 10,\n          bufferBehind: 30,\n          retryParameters: {\n            timeout: 10000,\n            maxAttempts: 10,\n            backoffFactor: 1.1\n          }\n        }\n      };\n\n      this._player = new LiveStreaming.shaka.Player(this._videoElement);\n      this.loadPlayer(playerOptions);\n\n      return;\n    }\n  }\n\n  getStats(): LiveStreamingStatistics {\n    if (!this._player) {\n      return {\n        width: 0,\n        height: 0,\n        currentTime: 0,\n        lag: 0,\n        networkState: NetworkStates.NetworkNoSource\n      };\n    }\n\n    const statistics = {\n      ...this._player.getStats(),\n      currentTime: 0,\n      lag: 0\n    };\n    const currentTime = this._videoElement['currentTime'] || 0;\n    const trueCurrentTime = (Date.now() - this._options.originStartTime) / 1000;\n    const lag = Math.max(0.0, trueCurrentTime - currentTime);\n\n    if (this._videoElement) {\n      statistics.currentTime = currentTime;\n      statistics.lag = lag;\n\n      if (this._videoElement.buffered && this._videoElement.buffered.length) {\n        statistics.dataBuffered = this._videoElement.buffered.end(0);\n      }\n    }\n\n    if (statistics.estimatedBandwidth > 0) {\n      statistics.networkState = NetworkStates.NetworkLoading;\n    } else if (statistics.playTime > 0) {\n      statistics.networkState = NetworkStates.NetworkIdle;\n    } else if (statistics.video) {\n      statistics.networkState = NetworkStates.NetworkEmpty;\n    } else {\n      statistics.networkState = NetworkStates.NetworkNoSource;\n    }\n\n    return statistics;\n  }\n\n  dispose(): void {\n    if (this._player) {\n      this._player.unload();\n      this._player.destroy();\n    }\n\n    this._player = null;\n  }\n\n  private loadPlayer(playerConfig: ShakaOptions): void {\n    this._player.configure(playerConfig);\n\n    const ignored = this._player.load(this._manifestURI).then(() => {\n      this._logger.info('[%s] DASH live stream has been loaded', this._streamId);\n\n      if (this._videoElement.play) {\n        this._videoElement.play();\n      }\n    }).catch(e => {\n      this._logger.error('[%s] Error while loading DASH live stream [%s]', this._streamId, e.code, e);\n    });\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {LiveStreaming} from './LiveStreaming';\nimport {LiveStreamingOptions, LiveStreamingStatistics} from './StreamTypes';\nimport {IHlsPlayerType} from './IHlsPlayer';\nimport {NetworkStates} from './NetworkStates';\n\nexport default class HlsPlayer {\n  private readonly _videoElement: HTMLVideoElement;\n  private readonly _kind: string;\n  private readonly _streamId: string;\n  private readonly _manifestURI: string;\n  private readonly _options: LiveStreamingOptions;\n  private _player: IHlsPlayerType;\n\n  constructor(videoElement: HTMLVideoElement, kind: string, streamId: string, manifestURI: string, options: LiveStreamingOptions) {\n    this._videoElement = videoElement;\n    this._kind = kind;\n    this._streamId = streamId;\n    this._manifestURI = encodeURI(manifestURI).replace(/[#]/g, '%23');\n    this._options = options;\n  }\n\n  start(): void {\n    if (LiveStreaming.hlsPlayer) {\n      if (LiveStreaming.hlsPlayer.isSupported()) {\n        this._player = new LiveStreaming.hlsPlayer({\n          enableWorker: true,\n          maxBufferLength: 1,\n          liveBackBufferLength: 0,\n          liveSyncDuration: 7,\n          liveDurationInfinity: true,\n          liveMaxLatencyDuration: Infinity,\n          highBufferWatchdogPeriod: 1\n        });\n        this._player.loadSource(this._manifestURI);\n        this._player.attachMedia(this._videoElement);\n      } else if (this._videoElement.canPlayType('application/vnd.apple.mpegurl')) {\n        this._videoElement.src = this._manifestURI;\n      }\n    }\n  }\n\n  isSupported(): boolean {\n    return LiveStreaming.hlsPlayer && LiveStreaming.hlsPlayer.isSupported();\n  }\n\n  getStats(): LiveStreamingStatistics {\n    if (!this._player) {\n      return {\n        width: 0,\n        height: 0,\n        currentTime: 0.0,\n        lag: 0.0,\n        networkState: NetworkStates.NetworkNoSource\n      };\n    }\n\n    const statistics = {\n      width: this._player.media.offsetWidth,\n      height: this._player.media.offsetHeight,\n      currentTime: this._player.media.currentTime,\n      lag: 0.0,\n      networkState: NetworkStates.NetworkIdle,\n      dataBuffered: 0.0\n    };\n\n    if (this._videoElement.buffered && this._videoElement.buffered.length) {\n      statistics.dataBuffered = this._videoElement.buffered.end(0);\n    }\n\n    if (this._player.streamController.state === 'IDLE') {\n      statistics.networkState = NetworkStates.NetworkIdle;\n    } else if (this._player.streamController.state === 'ERROR' || this._player.streamController.state === 'ENDED') {\n      statistics.networkState = NetworkStates.NetworkNoSource;\n    } else if (this._player.streamController.state.includes('LOADING') || this._player.streamController.state.includes('WAITING')) {\n      statistics.networkState = NetworkStates.NetworkLoading;\n    } else {\n      statistics.networkState = NetworkStates.NetworkEmpty;\n    }\n\n    const currentTime = this._videoElement['currentTime'] || 0;\n    const trueCurrentTime = (Date.now() - this._options.originStartTime) / 1000;\n\n    statistics.lag = Math.max(0.0, (currentTime + (this._options.lag / 1000)) - trueCurrentTime);\n\n    return statistics;\n  }\n\n  dispose(): void {\n    if (this._player && this._player.destroy) {\n      this._player.destroy();\n\n      this._player = null;\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport FeatureEnablement from '../feature/FeatureEnablement';\nimport WebPlayer from './WebPlayer';\nimport SDK from '../SDK';\nimport ShakaPlayer from './ShakaPlayer';\nimport HlsPlayer from './HlsPlayer';\nimport IDisposable from '../../lang/IDisposable';\nimport {HlsPlayerType, LiveStreamingOptions, LiveStreamingStatistics, ShakaType, WebPlayerType} from './StreamTypes';\n\nexport class LiveStreaming {\n  private static _pending = false;\n  private static _hlsPlayer: HlsPlayerType;\n  private static _phenixWebPlayer: WebPlayerType;\n  private static _shaka: ShakaType;\n  private static _options: LiveStreamingOptions;\n  private static _player: ShakaPlayer | WebPlayer | HlsPlayer;\n\n  static get hlsPlayer(): HlsPlayerType {\n    return this._hlsPlayer;\n  }\n\n  static get phenixWebPlayer(): WebPlayerType {\n    return this._phenixWebPlayer;\n  }\n\n  static get shaka(): ShakaType {\n    return this._shaka;\n  }\n\n  static async start(videoElement: HTMLVideoElement, streamId: string, offerSdp: string, options: LiveStreamingOptions): Promise<IDisposable> {\n    this._options = options;\n\n    if (this._hlsPlayer || this._shaka || this._phenixWebPlayer) {\n      return this.loaded(videoElement, streamId, offerSdp);\n    }\n\n    if (!SDK.webPlayerLoader && !SDK.shakaPlayerLoader && !SDK.hlsJsLoader) {\n      throw new Error('No player is provided');\n    }\n\n    if (!SDK.webPlayerLoader && !SDK.shakaPlayerLoader && !SDK.hlsJsLoader) {\n      throw new Error('Unsupported-feature, add stream player');\n    }\n\n    return new Promise(resolve => {\n      if (SDK.hlsJsLoader) {\n        this._pending = true;\n        SDK.hlsJsLoader(player => {\n          this._hlsPlayer = player;\n\n          if (this._pending) {\n            this._pending = false;\n\n            resolve(this.loaded(videoElement, streamId, offerSdp));\n          }\n        });\n      }\n\n      if (SDK.webPlayerLoader) {\n        this._pending = true;\n        SDK.webPlayerLoader(player => {\n          this._phenixWebPlayer = player;\n\n          if (this._pending) {\n            this._pending = false;\n\n            resolve(this.loaded(videoElement, streamId, offerSdp));\n          }\n        });\n      }\n\n      if (SDK.shakaPlayerLoader) {\n        this._pending = true;\n        SDK.shakaPlayerLoader(player => {\n          this._shaka = player;\n\n          if (this._pending) {\n            this._pending = false;\n\n            resolve(this.loaded(videoElement, streamId, offerSdp));\n          }\n        });\n      }\n    });\n  }\n\n  static getStats(): LiveStreamingStatistics {\n    if (this._player) {\n      return this._player.getStats();\n    }\n\n    return null;\n  }\n\n  private static play(Player: typeof WebPlayer | typeof ShakaPlayer | typeof HlsPlayer, videoElement: HTMLVideoElement, streamId: string, offerSdp: string, options: LiveStreamingOptions): IDisposable {\n    const dashManifestUrlMatch = offerSdp.match(/a=x-playlist:([^\\n]*[.]mpd\\??[^\\s]*)/m);\n    const hlsManifestUrlMatch = offerSdp.match(/a=x-playlist:([^\\n]*[.]m3u8\\??[^\\s]*)/m);\n    const manifestUrl = dashManifestUrlMatch && dashManifestUrlMatch[1] ? dashManifestUrlMatch[1] : '';\n    const playlistUrl = hlsManifestUrlMatch && hlsManifestUrlMatch[1] ? hlsManifestUrlMatch[1] : '';\n\n    if (FeatureEnablement.shouldUseNativeHls || (this._hlsPlayer && this._hlsPlayer.isSupported())) {\n      this._player = new Player(videoElement, 'hls', streamId, playlistUrl, options);\n\n      this._player.start();\n\n      return this._player;\n    }\n\n    this._player = new Player(videoElement, 'dash', streamId, manifestUrl, options);\n\n    this._player.start();\n\n    return this._player;\n  }\n\n  private static loaded(videoElement: HTMLVideoElement, streamId: string, offerSdp: string): IDisposable {\n    if (!this._shaka && !this._phenixWebPlayer && !this._hlsPlayer) {\n      return;\n    }\n\n    if (this._hlsPlayer) {\n      return this.play(HlsPlayer, videoElement, streamId, offerSdp, {\n        ...this._options,\n        preferNative: FeatureEnablement.shouldUseNativeHls\n      });\n    }\n\n    if (this._phenixWebPlayer) {\n      return this.play(WebPlayer, videoElement, streamId, offerSdp, {\n        ...this._options,\n        preferNative: FeatureEnablement.shouldUseNativeHls\n      });\n    }\n\n    if (this._shaka) {\n      return this.play(ShakaPlayer, videoElement, streamId, offerSdp, {\n        ...this._options,\n        preferNative: FeatureEnablement.shouldUseNativeHls\n      });\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport ChannelContext from '../channels/ChannelContext';\nimport Discovery from '../discovery/Discovery';\nimport Disposable from '../../lang/Disposable';\nimport DisposableList from '../../lang/DisposableList';\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport {ChannelState} from '../channels';\nimport {LiveStreaming} from './LiveStreaming';\nimport {LiveStreamingStatistics} from './StreamTypes';\nimport IDisposable from '../../lang/IDisposable';\nimport {IStream} from './IStream';\nimport {ILogger} from '../../logger/LoggerInterface';\n\nexport default class ChunkedStream implements IStream {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('ChunkedStream');\n  private readonly _channelContext: ChannelContext;\n  private readonly _monitorDisposables = new DisposableList();\n  private readonly _handleStreamFailure: () => Promise<void>;\n  private _streamStatistics: LiveStreamingStatistics;\n  private _monitorFailureCount = 0;\n\n  constructor(channelContext, handleStreamFailure: () => Promise<void>) {\n    this._channelContext = channelContext;\n    this._handleStreamFailure = handleStreamFailure;\n    this._channelContext.disposables.add(this);\n  }\n\n  start(uri: URL, token: string): Promise<void | IDisposable> {\n    return Discovery.discoverClosestEndPointWithCaching(uri)\n      .then(endPoint => {\n        this._channelContext.online.value = true;\n        this._channelContext.endPoint.value = endPoint;\n        this._logger.info('Connecting to [%s]', endPoint.toString());\n\n        return endPoint.subscribe(token, null, this._channelContext.failureCount.value);\n      })\n      .then(({status, stream, createOfferDescriptionResponse, lag}) => {\n        this._channelContext.stream.value = stream;\n        this._channelContext.lag.value = lag;\n\n        this._channelContext.applySessionAndStreamPropertiesToVideoElement();\n\n        this._logger.debug(\n          '[%s] Subscribe completed [%s] [%j] [%j] [%j] [%j]',\n          this._channelContext.streamId,\n          status,\n          createOfferDescriptionResponse,\n        );\n\n        this._channelContext.state.value = this._channelContext.mapSubscribeStatusToChannelStatus(status);\n\n        this._channelContext.applyStatus(status);\n\n        if (status !== 'ok') {\n          return;\n        }\n\n        const offerSdp = createOfferDescriptionResponse.sessionDescription.sdp;\n        const options = {\n          originStartTime: Date.now() - lag + this._channelContext.endPoint.value.roundTripTime / 2,\n          lag\n        };\n\n        return LiveStreaming.start(this._channelContext.videoElement.value, this._channelContext.streamId, offerSdp, options)\n          .then(player => {\n            this.monitor(player);\n\n            return player;\n          })\n          .catch(e => {\n            this._logger.error('LiveStreaming failed', e);\n            this._channelContext.loading.value = false;\n            this._channelContext.playing.value = false;\n            this._channelContext.state.value = ChannelState.Stopped;\n          });\n      });\n  }\n\n  private monitor(player: IDisposable): void {\n    this._monitorDisposables.dispose();\n\n    const timeout = window.setTimeout(() => {\n      const newStreamStatistics = LiveStreaming.getStats();\n\n      if (this._streamStatistics &&\n        this._streamStatistics.currentTime >= newStreamStatistics.currentTime &&\n        this._streamStatistics.dataBuffered >= newStreamStatistics.dataBuffered\n      ) {\n        this._monitorFailureCount++;\n\n        if (this._monitorFailureCount > 6) {\n          this._monitorFailureCount = 0;\n          this._channelContext.state.value = ChannelState.Error;\n\n          this._channelContext.playing.value = false;\n          this._channelContext.loading.value = true;\n          player.dispose();\n          this._monitorDisposables.dispose();\n\n          const ignored = this._handleStreamFailure()\n            .catch(e => {\n              this._logger.error('Failed handling stream failure', e);\n            });\n\n          return;\n        }\n      } else {\n        this._monitorFailureCount = 0;\n      }\n\n      if (this._channelContext.videoElement.value.paused && this._channelContext.state.value === ChannelState.Playing) {\n        this._channelContext.state.value = ChannelState.Paused;\n      }\n\n      if (!this._channelContext.videoElement.value.paused && this._channelContext.state.value !== ChannelState.Playing) {\n        this._channelContext.state.value = ChannelState.Playing;\n      }\n\n      this._streamStatistics = newStreamStatistics;\n      this.monitor(player);\n    }, 1000);\n\n    this._monitorDisposables.add(new Disposable(() => {\n      clearTimeout(timeout);\n    }));\n  }\n\n  dispose(): void {\n    this._monitorDisposables.dispose();\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport SDK from '../sdk/SDK';\nimport IPeerConnection from './IPeerConnection';\nimport {ILogger} from '../logger/LoggerInterface';\nimport FeatureEnablement from '../sdk/feature/FeatureEnablement';\n\nexport interface IPeerConnectionOfferInit {\n  audioTransceiver?: RTCRtpTransceiver;\n  videoTransceiver?: RTCRtpTransceiver;\n  peerConnection: IPeerConnection;\n  localOffer: RTCSessionDescriptionInit;\n}\n\nexport default class PeerConnectionService {\n  private static _logger: ILogger = LoggerFactory.getLogger('PeerConnectionService');\n  private static _cached: {\n    direction?: RTCRtpTransceiverDirection;\n    peerConnection: Promise<IPeerConnectionOfferInit>;\n  };\n\n  static initiateInitialPrecaching(): void {\n    if (FeatureEnablement.isPrecachingEnabled) {\n      const ignored = PeerConnectionService.precacheCreatePeerConnectionOffer()\n        .catch(e => PeerConnectionService._logger.error('Failed to pre-cache peer connection offer\"', e));\n    }\n  }\n\n  static async precacheCreatePeerConnectionOffer(): Promise<{ peerConnection: Promise<IPeerConnectionOfferInit | void> }> {\n    return PeerConnectionService._cached = {\n      direction: 'recvonly',\n      peerConnection: PeerConnectionService.createPeerConnectionOffer()\n        .catch(e => {\n          PeerConnectionService._cached = null;\n\n          throw e;\n        })\n    };\n  }\n\n  static async createPeerConnectionOffer(direction: RTCRtpTransceiverDirection = 'recvonly'): Promise<IPeerConnectionOfferInit> {\n    if (PeerConnectionService._cached && PeerConnectionService._cached.direction === direction) {\n      const value = PeerConnectionService._cached.peerConnection;\n\n      PeerConnectionService._cached = null;\n\n      return value;\n    }\n\n    const peerConnectionFactory = SDK.peerConnectionFactory.value;\n\n    return peerConnectionFactory.createPeerConnection()\n      .then(async peerConnection => {\n        const supportsAddTransceiver = peerConnection.supportsAddTransceiver;\n        let videoTransceiver, audioTransceiver;\n\n        if (supportsAddTransceiver) {\n          audioTransceiver = peerConnection.addTransceiver('audio', {direction});\n          videoTransceiver = peerConnection.addTransceiver('video', {direction});\n\n          return {\n            audioTransceiver,\n            videoTransceiver,\n            peerConnection: peerConnection,\n            localOffer: await peerConnection.createOffer(undefined)\n          };\n        }\n\n        const options = direction === 'recvonly' ? {\n          offerToReceiveAudio: true,\n          offerToReceiveVideo: true\n        } : {};\n\n        return {\n          peerConnection: peerConnection,\n          localOffer: await peerConnection.createOffer(options)\n        };\n      });\n  }\n\n  private constructor() {\n    throw new Error('PeerConnectionService is a static class that may not be instantiated');\n  }\n}\n\nPeerConnectionService.initiateInitialPrecaching();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class SdpParser {\n  private readonly _sdp: string;\n  private readonly _audioCodec: string;\n  private readonly _videoCodec: string;\n  private readonly _isAudioTrackEnabled: boolean;\n  private readonly _isVideoTrackEnabled: boolean;\n\n  constructor(sdp: string) {\n    this._sdp = sdp;\n\n    const sdpSplitByLines = this._sdp.split(/(\\r\\n|\\r|\\n)/);\n    const sdpSplitByTracks = this._sdp.split('m=');\n\n    this._audioCodec = this.applyCodec('audio', sdpSplitByLines);\n    this._videoCodec = this.applyCodec('video', sdpSplitByLines);\n    this._isAudioTrackEnabled = this.isTrackByTypeEnabled('audio', sdpSplitByTracks);\n    this._isVideoTrackEnabled = this.isTrackByTypeEnabled('video', sdpSplitByTracks);\n  }\n\n  get audioCodec(): string {\n    return this._audioCodec;\n  }\n\n  get videoCodec(): string {\n    return this._videoCodec;\n  }\n\n  get isAudioTrackEnabled(): boolean {\n    return this._isAudioTrackEnabled;\n  }\n\n  get isVideoTrackEnabled(): boolean {\n    return this._isVideoTrackEnabled;\n  }\n\n  private isTrackByTypeEnabled(type: string, sdpSplitByTracks: string[]): boolean {\n    const sdpSectionForType = sdpSplitByTracks.find(sdpTrack => sdpTrack.startsWith(type));\n\n    if (!sdpSectionForType) {\n      return false;\n    }\n\n    return !sdpSectionForType.includes(`a=inactive`);\n  }\n\n  private applyCodec(type: string, sdpSplitByLines: string []): string {\n    const usedCodecLine = sdpSplitByLines.find(sdpLine => sdpLine.includes(`a=rtpmap:${sdpSplitByLines.find(i => i.includes(`m=${type}`)).split(' ')[3]}`));\n    const usedCodec = usedCodecLine.split(' ')[1];\n    const codecName = usedCodec.split('/')[0];\n\n    return codecName;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IPeerConnection from './IPeerConnection';\nimport Subject from '../rx/Subject';\nimport FeatureEnablement from '../sdk/feature/FeatureEnablement';\nimport SdpParser from './SdpParser';\nimport IDisposable from '../lang/IDisposable';\n\nexport interface IRtcMonitorStatistic {\n  [kind: string]: IRtcStatistic;\n}\n\nexport interface ILegacyRTCStatsReport {\n  result: () => ILegacyRTCStatsReportItem[];\n}\n\nexport interface ILegacyRTCStatsReportItem extends RTCStatsReport {\n  type: string;\n  names: () => string[];\n  stat: (name) => number;\n}\n\nexport interface IRtcStatistic {\n  ssrc?: string;\n  mediaType?: string;\n  timestamp: number;\n  bitrate?: number;\n  bytesReceived?: number;\n  framesDecoded?: number;\n  packetsLost?: number;\n  packetsReceived?: number;\n  codec?: string;\n  fps?: number;\n  roundTripTime?: number;\n  lastPacketReceivedTimestamp?: number;\n}\n\nconst updateStatisticTimeOut = 1000;\n\nexport default class RtcConnectionMonitor implements IDisposable {\n  private readonly _estimatedRoundTripTime: number;\n  private readonly _estimatedVideoCodec: string;\n  private readonly _estimatedAudioCodec: string;\n  private readonly _rtcStatistic: Subject<IRtcMonitorStatistic> = new Subject<IRtcMonitorStatistic>({});\n  private _peerConnection: IPeerConnection;\n  private _isMonitorRunning = true;\n  private _updateTimeOut: number;\n  private _tracksToMonitor: string[];\n\n  constructor(peerConnection: IPeerConnection, mediaStream: MediaStream, estimatedRoundTripTime: number) {\n    this._peerConnection = peerConnection;\n    this._estimatedRoundTripTime = estimatedRoundTripTime;\n    this._tracksToMonitor = mediaStream.getTracks().map(track => track.kind) || [];\n\n    if (this._peerConnection) {\n      if (!FeatureEnablement.getCurrentOfferDisabled) {\n        const parsedSDP = new SdpParser(this._peerConnection.currentRemoteDescription.sdp);\n\n        this._estimatedAudioCodec = parsedSDP.audioCodec;\n        this._estimatedVideoCodec = parsedSDP.videoCodec;\n      }\n\n      this.updateStatistic();\n    }\n  }\n\n  get rtcStatistic(): Subject<IRtcMonitorStatistic> {\n    return this._rtcStatistic;\n  }\n\n  dispose(): void {\n    this._isMonitorRunning = false;\n    this._peerConnection = null;\n\n    if (this._updateTimeOut) {\n      clearTimeout(this._updateTimeOut);\n      this._updateTimeOut = null;\n    }\n  }\n\n  private async updateStatistic(): Promise<void> {\n    if (FeatureEnablement.getStatsPromiseBasedDisabled) {\n      const ignored = await this.updateStatisticLegacy();\n\n      return;\n    }\n\n    // Safari 11 doesnt have kind or mediaType so we need to take it from the inbound-rtp object id\n    const getKindForSafari11 = (item): string => item.id.includes('Audio') ? 'audio' : item.id.includes('Video') ? 'video' : '';\n    const ignored = await this._peerConnection.getStats(null)\n      .then(stats => {\n        const rtcStatistics: IRtcMonitorStatistic = {};\n\n        if (stats) {\n          let roundTripTime = this._estimatedRoundTripTime;\n          let lastPacketReceivedTimestamp;\n\n          stats.forEach(report => {\n            if (report.type === 'candidate-pair' && report.currentRoundTripTime) {\n              roundTripTime = report.currentRoundTripTime * 1000;\n\n              if (rtcStatistics['audio']) {\n                rtcStatistics['audio'].roundTripTime = roundTripTime;\n              }\n\n              if (rtcStatistics['video']) {\n                rtcStatistics['video'].roundTripTime = roundTripTime;\n              }\n            }\n\n            if (report.type === 'candidate-pair' && report.lastPacketReceivedTimestamp) {\n              lastPacketReceivedTimestamp = report.lastPacketReceivedTimestamp;\n\n              if (rtcStatistics['audio']) {\n                rtcStatistics['audio'].lastPacketReceivedTimestamp = lastPacketReceivedTimestamp;\n              }\n\n              if (rtcStatistics['video']) {\n                rtcStatistics['video'].lastPacketReceivedTimestamp = lastPacketReceivedTimestamp;\n              }\n            }\n\n            if (report.type === 'inbound-rtp') {\n              const kind = report.kind || report.mediaType || getKindForSafari11(report);\n              let codec = '';\n\n              stats.forEach(item => {\n                if (item.id === report.codecId) {\n                  codec = item.mimeType;\n                }\n              });\n\n              if (kind && this._tracksToMonitor.includes(kind)) {\n                const bytes = report.bytesReceived || 0;\n                const previousBytesReceived = this._rtcStatistic.value?.[kind]?.bytesReceived ?? 0;\n                const bytesDelta = bytes - previousBytesReceived;\n                const timeDelta = report.timestamp - this._rtcStatistic.value?.[kind]?.timestamp;\n                const bitrate = bytesDelta && timeDelta ? Math.floor(8 * bytesDelta /\n                  timeDelta * 1000) : 0;\n\n                rtcStatistics[kind] = {\n                  ssrc: report.ssrc,\n                  mediaType: kind,\n                  timestamp: report.timestamp,\n                  bitrate,\n                  bytesReceived: report.bytesReceived,\n                  packetsLost: report.packetsLost,\n                  packetsReceived: report.packetsReceived,\n                  codec: codec || this.getCodecByType(kind),\n                  roundTripTime\n                };\n\n                if (report.lastPacketReceivedTimestamp || lastPacketReceivedTimestamp) {\n                  rtcStatistics[kind].lastPacketReceivedTimestamp = report.lastPacketReceivedTimestamp || lastPacketReceivedTimestamp;\n                }\n\n                if (kind === 'video' && this._rtcStatistic.value && this._rtcStatistic.value.video) {\n                  rtcStatistics[kind]['framesDecoded'] = report.framesDecoded;\n\n                  const fps = (report.framesDecoded - this._rtcStatistic.value.video.framesDecoded) /\n                    (rtcStatistics[kind].timestamp - this._rtcStatistic.value.video.timestamp) *\n                    1000;\n\n                  rtcStatistics[kind]['fps'] = fps ? Math.round(fps * 100) / 100 : 0;\n                }\n              }\n            }\n          });\n        }\n\n        this._rtcStatistic.value = rtcStatistics;\n      }).then(() => {\n        if (this._isMonitorRunning) {\n          this._updateTimeOut = window.setTimeout(() => this.updateStatistic(), updateStatisticTimeOut);\n        }\n      });\n  }\n\n  private async updateStatisticLegacy(): Promise<void> {\n    const ignored = await this._peerConnection.getStatsLegacy().then(stats => {\n      const rtcStatistics: IRtcMonitorStatistic = {};\n      let roundTripTime = this._estimatedRoundTripTime;\n\n      stats.result().forEach(report => {\n        report.names().forEach(name => {\n          if (name === 'googRTT') {\n            roundTripTime = report.stat(name);\n          }\n        });\n\n        if (report.type === 'ssrc') {\n          const mediaType = report.stat('mediaType').toString();\n\n          rtcStatistics[mediaType] = {timestamp: Date.now()};\n          rtcStatistics[mediaType]['ssrc'] = report.stat('ssrc').toString();\n          rtcStatistics[mediaType]['mediaType'] = mediaType;\n          rtcStatistics[mediaType]['bytesReceived'] = report.stat('bytesReceived');\n          rtcStatistics[mediaType]['packetsLost'] = report.stat('packetsLost');\n          rtcStatistics[mediaType]['packetsReceived'] = report.stat('packetsReceived');\n          rtcStatistics[mediaType]['codec'] = report.stat('googCodecName').toString() || this.getCodecByType(mediaType);\n          rtcStatistics[mediaType]['roundTripTime'] = roundTripTime;\n\n          if (mediaType === 'video' && this._rtcStatistic.value && this._rtcStatistic.value.video) {\n            rtcStatistics[mediaType]['framesDecoded'] = report.stat('framesDecoded');\n            rtcStatistics[mediaType]['fps'] = (rtcStatistics[mediaType].framesDecoded - this._rtcStatistic.value.video.framesDecoded) /\n              (rtcStatistics[mediaType].timestamp - this._rtcStatistic.value.video.timestamp) *\n            1000 || 0;\n          }\n        }\n      });\n      this._rtcStatistic.value = rtcStatistics;\n    }).then(() => {\n      if (this._isMonitorRunning) {\n        this._updateTimeOut = window.setTimeout(() => this.updateStatistic(), updateStatisticTimeOut);\n      }\n    });\n  }\n\n  private getCodecByType(type: string): string {\n    switch (type) {\n      case 'audio':\n        return this._estimatedAudioCodec;\n      case 'video':\n        return this._estimatedVideoCodec;\n      default:\n        return 'unknown';\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport default class RtcConfigurationManager {\n  static truncateIceServers(configuration: RTCConfiguration): RTCConfiguration {\n    const iceServers: RTCIceServer[] = [];\n\n    for (let i = 0; i < configuration.iceServers.length; i++) {\n      const urls: string[] = [];\n\n      for (let index = 0; index < 2; index++) {\n        const url = configuration.iceServers[i].urls[index];\n\n        if (url) {\n          urls.push(configuration.iceServers[i].urls[index]);\n        }\n      }\n\n      iceServers.push({\n        urls: urls,\n        username: configuration.iceServers[i].username,\n        credential: configuration.iceServers[i].credential\n      });\n    }\n\n    configuration.iceServers = iceServers;\n\n    return configuration;\n  }\n\n  private constructor() {\n    throw new Error('RtcConfigurationManager is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IPeerConnection from '../../rtc/IPeerConnection';\nimport SDK from '../SDK';\nimport {IStream} from './IStream';\nimport EndPoint, {SetRemoteDescriptionStatus} from '../discovery/EndPoint';\nimport PeerConnectionService, {IPeerConnectionOfferInit} from '../../rtc/PeerConnectionService';\nimport Discovery from '../discovery/Discovery';\nimport FeatureEnablement from '../feature/FeatureEnablement';\nimport ChannelState from '../channels/ChannelState';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport RtcConnectionMonitor from '../../rtc/RtcConnectionMonitor';\nimport Durations from '../../time/Duration';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport ChannelContext from '../channels/ChannelContext';\nimport RtcConfigurationManager from '../../rtc/RtcConfigurationManager';\nimport PeerConnectionContext from '../../context/PeerConnectionContext';\n\nconst iceCandidateAccumulationInterval = 100;\nconst defaultStreamSetupTimeout = 30000;\n\nexport default class RealTimeStream implements IStream {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('RealTimeStream');\n  private readonly _channelContext: ChannelContext;\n  private readonly _peerConnectionContext: PeerConnectionContext;\n  private readonly _handleStreamFailure: () => Promise<void>;\n\n  constructor(channelContext, peerConnectionContext, handleStreamFailure: () => Promise<void>) {\n    this._channelContext = channelContext;\n    this._peerConnectionContext = peerConnectionContext;\n    this._handleStreamFailure = handleStreamFailure;\n  }\n\n  start(uri, token, listenOnStreamSetup, playMediaStreamInVideoElement): Promise<void> {\n    return Promise.all<EndPoint, IPeerConnectionOfferInit>([\n      Discovery.discoverClosestEndPointWithCaching(uri),\n      PeerConnectionService.createPeerConnectionOffer()\n    ])\n      .then(([endPoint, {localOffer, peerConnection}]) => {\n        this._channelContext.online.value = true;\n        this._channelContext.endPoint.value = endPoint;\n        this._logger.info('Connecting to [%s]', endPoint.toString());\n        this._logger.info('Local offer:\\n' + localOffer.sdp);\n\n        if (FeatureEnablement.clientOfferDisabled || !peerConnection.supportsSetConfiguration || !peerConnection.supportsGetConfiguration) {\n          peerConnection.close();\n          peerConnection = null;\n          localOffer = null;\n        }\n\n        this._peerConnectionContext.peerConnection.value = peerConnection;\n\n        return endPoint.subscribe(token, localOffer, this._channelContext.failureCount.value);\n      })\n      .then(({status, stream, rtcConfiguration, setRemoteDescriptionResponse, createOfferDescriptionResponse, createAnswerDescriptionResponse, lag}) => {\n        this._channelContext.stream.value = stream;\n        this._channelContext.lag.value = lag;\n\n        this._channelContext.applySessionAndStreamPropertiesToVideoElement();\n\n        this._logger.debug(\n          '[%s] Subscribe completed [%s] [%j] [%j] [%j] [%j]',\n          this._channelContext.streamId,\n          status,\n          rtcConfiguration,\n          setRemoteDescriptionResponse,\n          createOfferDescriptionResponse,\n          createAnswerDescriptionResponse\n        );\n\n        this._channelContext.state.value = this._channelContext.mapSubscribeStatusToChannelStatus(status);\n\n        this._channelContext.applyStatus(status);\n\n        if (status !== 'ok') {\n          return;\n        }\n\n        return this.applyRtcConfiguration(this._peerConnectionContext.peerConnection.value, rtcConfiguration)\n          .then(peerConnection => {\n            let submitCandidatesTimeout;\n            let cancelDiscovery = false;\n            let discoveryCompleted = false;\n            const candidates: RTCIceCandidate[] = [];\n\n            if (!this._peerConnectionContext.peerConnection.value) {\n              this._peerConnectionContext.peerConnection.value = peerConnection;\n            }\n\n            peerConnection.onicecandidate = (e): void => {\n              if (this._channelContext.stream.value !== stream) {\n                return;\n              }\n\n              if (this._peerConnectionContext.peerConnection.value !== peerConnection) {\n                return;\n              }\n\n              if (cancelDiscovery) {\n                return;\n              }\n\n              if (!SDK.sendLocalCandidates.value) {\n                return;\n              }\n\n              if (e.candidate && e.candidate.candidate) {\n                candidates.push(e.candidate);\n              } else {\n                discoveryCompleted = true;\n              }\n\n              if (!submitCandidatesTimeout) {\n                submitCandidatesTimeout = setTimeout(() => {\n                  if (this._channelContext.stream.value !== stream) {\n                    return;\n                  }\n\n                  if (cancelDiscovery) {\n                    return;\n                  }\n\n                  const ignored = this._channelContext.endPoint.value.addIceCandidates(stream, candidates, discoveryCompleted)\n                    .then(({status, options}) => {\n                      if (status !== 'ok') {\n                        this._logger.warn('[%s] Failed to add ICE candidates with reason [%s]', this._channelContext.streamId, status);\n\n                        return;\n                      }\n\n                      if (options.includes('cancel')) {\n                        cancelDiscovery = true;\n                      }\n\n                      this._logger.info('[%s] Added ICE candidates with reason [%s] and options [%s]', this._channelContext.streamId, status, options);\n                    })\n                    .catch(e => {\n                      this._logger.error('[%s] Failed to add ICE candidates', this._channelContext.streamId, e);\n                    });\n                }, iceCandidateAccumulationInterval);\n              }\n            };\n\n            peerConnection.oniceconnectionstatechange = (): void => {\n              if (this._channelContext.stream.value !== stream) {\n                return;\n              }\n\n              if (this._peerConnectionContext.peerConnection.value !== peerConnection) {\n                return;\n              }\n\n              const retryCallback = (): void => {\n                // If we stop normally the peer connection is unregistered first.\n                // Thus anytime we see a closed peer connection that is still valid, it is an error.\n                this._channelContext.state.value = ChannelState.Error;\n\n                if (this._channelContext.videoElement.value) {\n                  this._channelContext.videoElement.value.pause();\n                  this._channelContext.videoElement.value.srcObject = null;\n                }\n\n                this._channelContext.playing.value = false;\n                this._channelContext.loading.value = true;\n\n                const ignored = this._handleStreamFailure()\n                  .catch(e => {\n                    this._logger.error(\n                      '[%s] Failed handling stream failure after peer connection stopped with state [%s]',\n                      this._channelContext.streamId,\n                      peerConnection.iceConnectionState,\n                      e\n                    );\n                  });\n              };\n\n              switch (peerConnection.iceConnectionState) {\n                case 'checking':\n                case 'completed':\n                case 'connected':\n                case 'new':\n                  return;\n\n                case 'disconnected':\n                case 'failed':\n                  if (navigator.onLine) {\n                    this._logger.info('[%s] ICE connection state changed to [%s], trying to reconnect', this._channelContext.streamId, peerConnection.iceConnectionState);\n                    this.reconnectPeerConnection(peerConnection, retryCallback);\n                  }\n\n                  return;\n                case 'closed':\n                  this._logger.info('[%s] ICE connection state changed to [%s], retrying to connect', this._channelContext.streamId, peerConnection.iceConnectionState);\n                  retryCallback();\n\n                  return;\n                default:\n                  assertUnreachable(peerConnection.iceConnectionState);\n              }\n            };\n\n            const mediaStreamPromise = new Promise<MediaStream>((resolve, reject) => {\n              if (!FeatureEnablement.onTrackDisabled) {\n                const timeoutId = setTimeout(() => reject(new Error('Stream setup timed out')), defaultStreamSetupTimeout);\n\n                peerConnection.ontrack = (e): void => {\n                  clearTimeout(timeoutId);\n\n                  resolve(e.streams[0]);\n                };\n\n                return;\n              }\n\n              const trackListener = (e): void => {\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                clearTimeout(timeoutId);\n                peerConnection.removeEventListener('track', trackListener);\n                peerConnection.removeEventListener('addstream', trackListener);\n\n                if (e.streams) {\n                  resolve(e.streams[0]);\n                } else {\n                  resolve(e.stream);\n                }\n              };\n\n              const timeoutId = setTimeout(() => {\n                peerConnection.removeEventListener('track', trackListener);\n                peerConnection.removeEventListener('addstream', trackListener);\n                reject(new Error('Stream setup timed out'));\n              }, defaultStreamSetupTimeout);\n\n              peerConnection.addEventListener('track', trackListener);\n              peerConnection.addEventListener('addstream', trackListener);\n\n              return;\n            });\n\n            return new Promise(resolve => {\n              resolve();\n            }).then(() => {\n              if (!setRemoteDescriptionResponse) {\n                return;\n              }\n\n              this._logger.info('[%s] Set local SDP offer [%s]', this._channelContext.streamId, setRemoteDescriptionResponse.sessionDescription.sdp);\n\n              return peerConnection.setLocalDescription(setRemoteDescriptionResponse.sessionDescription)\n                .catch(e => {\n                  this._logger.info('[%s] Failed to set local description [%j] with message [%s]', this._channelContext.streamId, setRemoteDescriptionResponse.sessionDescription, e.message);\n\n                  throw e;\n                });\n            }).then(() => {\n              if (!createAnswerDescriptionResponse) {\n                return;\n              }\n\n              this._logger.info('[%s] Set remote SDP answer [%s]', this._channelContext.streamId, createAnswerDescriptionResponse.sessionDescription.sdp);\n\n              return peerConnection.setRemoteDescription(createAnswerDescriptionResponse.sessionDescription)\n                .catch(e => {\n                  this._logger.info('[%s] Failed to set remote description [%j] with message [%s]', this._channelContext.streamId, createAnswerDescriptionResponse.sessionDescription, e.message);\n\n                  throw e;\n                });\n            }).then(() => {\n              if (!createOfferDescriptionResponse) {\n                return;\n              }\n\n              this._logger.info('[%s] Set remote SDP offer [%s]', this._channelContext.streamId, createOfferDescriptionResponse.sessionDescription.sdp);\n\n              return peerConnection.setRemoteDescription(createOfferDescriptionResponse.sessionDescription)\n                .catch(e => {\n                  this._logger.info('[%s] Failed to set remote description [%j] with message [%s]', this._channelContext.streamId, createOfferDescriptionResponse.sessionDescription, e.message);\n\n                  throw e;\n                })\n                .then(() => {\n                  return peerConnection.createAnswer({\n                    offerToReceiveAudio: true,\n                    offerToReceiveVideo: true\n                  });\n                }).then(answer => {\n                  this._logger.info('[%s] Set local SDP answer [%j]', this._channelContext.streamId, answer);\n\n                  return this._channelContext.endPoint.value.setRemoteDescription(stream, answer);\n                }).then(({status, sessionDescription}) => {\n                  this._channelContext.state.value = this.mapSetRemoteDescriptionStatusToChannelStatus(status);\n\n                  if (status !== 'ok') {\n                    this._channelContext.playing.value = false;\n                    this._channelContext.standby.value = true;\n                    this._channelContext.stopped.value = false;\n\n                    return;\n                  }\n\n                  return peerConnection.setLocalDescription(sessionDescription)\n                    .catch(e => {\n                      this._logger.info('[%s] Failed to set local description [%j] with message [%s]', this._channelContext.streamId, sessionDescription, e.message);\n\n                      throw e;\n                    });\n                });\n            }).then(() => {\n              listenOnStreamSetup.success(this._channelContext.streamId);\n\n              return mediaStreamPromise;\n            }).then(mediaStream => {\n              this._peerConnectionContext.mediaStream.value = mediaStream;\n\n              const rtcConnectionMonitor = new RtcConnectionMonitor(peerConnection, mediaStream, this._channelContext.endPoint.value.roundTripTime / 4);\n\n              this._channelContext.disposables.add(rtcConnectionMonitor);\n\n              const ignored = rtcConnectionMonitor.rtcStatistic.subscribe(statistics => {\n                this._channelContext.rtcStatistics.value = statistics;\n\n                if (!this._channelContext.rtcVideoStatistic && !this._channelContext.rtcAudioStatistic) {\n                  this._channelContext.rtcAudioStatistic = statistics.audio;\n                  this._channelContext.rtcVideoStatistic = statistics.video;\n\n                  return;\n                }\n\n                let audioTrackFailed = false;\n                let videoTrackFailed = false;\n\n                if (statistics.audio) {\n                  if (this._channelContext.rtcAudioStatistic && this._channelContext.rtcAudioStatistic.timestamp !== statistics.audio.timestamp) {\n                    audioTrackFailed = this._channelContext.rtcAudioStatistic && this._channelContext.rtcAudioStatistic.bytesReceived === statistics.audio.bytesReceived;\n\n                    if (audioTrackFailed && navigator.onLine) {\n                      this._logger.info(\n                        '[%s] Audio track failed with last bytesReceived [%s] is equal to previous bytesReceived [%s] within [%s]',\n                        this._channelContext.streamId,\n                        statistics.audio.bytesReceived,\n                        this._channelContext.rtcAudioStatistic.bytesReceived,\n                        new Durations(statistics.audio.timestamp - this._channelContext.rtcAudioStatistic.timestamp).toIsoString()\n                      );\n                    }\n\n                    this._channelContext.rtcAudioStatistic = statistics.audio;\n                  }\n                }\n\n                if (statistics.video) {\n                  if (this._channelContext.rtcVideoStatistic && this._channelContext.rtcVideoStatistic.timestamp !== statistics.video.timestamp) {\n                    videoTrackFailed = this._channelContext.rtcVideoStatistic && this._channelContext.rtcVideoStatistic.bytesReceived === statistics.video.bytesReceived;\n\n                    if (videoTrackFailed && navigator.onLine) {\n                      this._logger.info(\n                        '[%s] Video track failed with last bytesReceived [%s] is equal to previous bytesReceived [%s] within [%s]',\n                        this._channelContext.streamId,\n                        statistics.video.bytesReceived,\n                        this._channelContext.rtcVideoStatistic.bytesReceived,\n                        new Durations(statistics.video.timestamp - this._channelContext.rtcVideoStatistic.timestamp).toIsoString()\n                      );\n                    }\n\n                    this._channelContext.rtcVideoStatistic = statistics.video;\n                  }\n                }\n\n                if ((videoTrackFailed || audioTrackFailed) && navigator.onLine) {\n                  const retryCallback = (): void => {\n                    this._channelContext.state.value = ChannelState.Error;\n\n                    if (this._channelContext.videoElement.value) {\n                      this._channelContext.videoElement.value.pause();\n                      this._channelContext.videoElement.value.srcObject = null;\n                    }\n\n                    this._channelContext.playing.value = false;\n                    this._channelContext.loading.value = true;\n\n                    rtcConnectionMonitor.dispose();\n\n                    const ignored = this._handleStreamFailure()\n                      .catch(e => {\n                        this._logger.error(\n                          '[%s] Failed handling stream failure after track stopped with state [%s]',\n                          this._channelContext.streamId,\n                          peerConnection.iceConnectionState,\n                          e\n                        );\n                      });\n                  };\n\n                  this.reconnectPeerConnection(peerConnection, retryCallback);\n                } else {\n                  this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n                }\n              });\n\n              if (!SDK.automaticallyPlayMediaStream) {\n                this._channelContext.autoMuted.value = false;\n                this._channelContext.autoPaused.value = true;\n                this._channelContext.loading.value = false;\n                this._channelContext.playing.value = false;\n                this._channelContext.state.value = ChannelState.Paused;\n\n                return;\n              }\n\n              return playMediaStreamInVideoElement(mediaStream);\n            });\n          });\n      });\n  }\n\n  private async applyRtcConfiguration(\n    optionalPeerConnection: IPeerConnection | null,\n    rtcConfiguration: RTCConfiguration): Promise<IPeerConnection> {\n    if (!optionalPeerConnection) {\n      rtcConfiguration = RtcConfigurationManager.truncateIceServers(rtcConfiguration);\n\n      return SDK.peerConnectionFactory.value.createPeerConnection(rtcConfiguration);\n    }\n\n    const newRtcConfiguration = {\n      ...optionalPeerConnection.getConfiguration(),\n      ...rtcConfiguration\n    };\n\n    optionalPeerConnection.setConfiguration(newRtcConfiguration);\n\n    return optionalPeerConnection;\n  }\n\n  private reconnectPeerConnection(peerConnection: IPeerConnection, retryCallback: () => void): void {\n    if (peerConnection.iceConnectionState === 'closed') {\n      return;\n    }\n\n    this._channelContext.state.value = ChannelState.Reconnecting;\n\n    if (this._peerConnectionContext.peerConnectionReconnectAttempts < SDK.maximalNumberOfPeerConnectionReconnectAttempts || !SDK.automaticallyReconnectPeerConnection) {\n      this._peerConnectionContext.peerConnectionReconnectAttempts++;\n\n      if (FeatureEnablement.clientOfferDisabled ||\n        !peerConnection.supportsSetConfiguration ||\n        !peerConnection.supportsGetConfiguration ||\n        this._channelContext.failureCount.value\n      ) {\n        return;\n      }\n\n      this._logger.info('Reconnecting peer connection by restarting ICE');\n\n      const localOffer = peerConnection.currentLocalDescription;\n      const ignored = peerConnection.createOffer({iceRestart: true}).then(offer => {\n        return peerConnection.setLocalDescription(offer).then(() => {\n          return peerConnection.setLocalDescription(localOffer);\n        });\n      })\n        .catch(e => {\n          this._logger.error('Failed to reconnect peer connection', e);\n          this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n          retryCallback();\n        });\n\n      return;\n    }\n\n    this._logger.info('Failed to reconnect peer connection after [%s] attempts, performing full recovery', this._peerConnectionContext.peerConnectionReconnectAttempts);\n    this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n    retryCallback();\n  }\n\n  private mapSetRemoteDescriptionStatusToChannelStatus(status: SetRemoteDescriptionStatus): ChannelState {\n    switch (status) {\n      case 'ok':\n        return ChannelState.Starting;\n      case 'unauthorized':\n        return ChannelState.Unauthorized;\n      case 'not-found':\n      case 'capacity':\n      case 'rate-limited':\n      case 'timeout':\n        return ChannelState.Recovering;\n      case 'failed':\n        return ChannelState.Error;\n      default:\n        assertUnreachable(status);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {IStream} from './IStream';\nimport EdgeAuth from '../edgeAuth/EdgeAuth';\nimport ChunkedStream from './ChunkedStream';\nimport RealTimeStream from './RealTimeStream';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport ChannelState from '../channels/ChannelState';\n\nexport default class StreamFactory {\n  private static _logger: ILogger = LoggerFactory.getLogger('Streaming');\n\n  static create(token: string, channelContext, peerConnectionContext, handleStreamFailure: () => Promise<void>): IStream {\n    const parsedToken = EdgeAuth.parseToken(token);\n    const isRtmp = parsedToken && parsedToken.token && parsedToken.token.capabilities && parsedToken.token.capabilities.includes('rtmp');\n\n    if (isRtmp) {\n      this._logger.error('This build does not support RTMP playback.');\n      channelContext.state.value = ChannelState.UnsupportedFeature;\n\n      return;\n    }\n\n    const isStreaming = parsedToken && parsedToken.token && parsedToken.token.capabilities && parsedToken.token.capabilities.includes('streaming');\n\n    if (isStreaming) {\n      return new ChunkedStream(channelContext, handleStreamFailure);\n    }\n\n    return new RealTimeStream(channelContext, peerConnectionContext, handleStreamFailure);\n  }\n\n  constructor() {\n    throw new Error('StreamFactory is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport IDisposable from '../../lang/IDisposable';\nimport ReadOnlySubject from '../../rx/ReadOnlySubject';\nimport Dimension from '../../video/Dimension';\nimport EndPoint, {IStream} from '../discovery/EndPoint';\nimport SDK from '../SDK';\nimport IPeerConnection from '../../rtc/IPeerConnection';\nimport ChannelState from './ChannelState';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport Disposable from '../../lang/Disposable';\nimport EdgeAuth from '../edgeAuth/EdgeAuth';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport VideoTelemetry from '../../video/VideoTelemetry';\nimport SessionTelemetry from '../../video/SessionTelemetry';\nimport {IRtcMonitorStatistic} from '../../rtc/RtcConnectionMonitor';\nimport {BitrateMode, BitrateState} from '../api/SetTemporaryMaximalBitrate';\n\nimport {EdgeToken} from '../edgeAuth/EdgeToken';\nimport {BitsPerSecond, Millisecond} from '../../units/Units';\nimport TokenContext from '../../context/TokenContext';\nimport ChannelContext from './ChannelContext';\nimport PeerConnectionContext from '../../context/PeerConnectionContext';\nimport StateContext from '../../context/StateContext';\nimport StreamFactory from '../streaming/StreamFactory';\nimport DiscoveryUri from '../discovery/DiscoveryUri';\nimport MetricsFactory from '../../metrics/MetricsFactory';\nimport MetricsService from '../../metrics/MetricsService';\n\nconst defaultTargetLag = 0;\nconst defaultStreamTerminationReason = 'client:termination';\nconst backoffIntervalInMilliseconds = 2000;\nconst failureCountCleanUpIntervalInMilliseconds = 3000;\nconst maxBackoffIntervalInMilliseconds = 300000;\nconst standbyPollingIntervalInMilliseconds = 15000;\n\nexport default class Channel implements IDisposable {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('Channel');\n  private readonly _tokenContext: TokenContext;\n  private readonly _channelContext: ChannelContext;\n  private readonly _peerConnectionContext: PeerConnectionContext;\n  private readonly _stateContext: StateContext;\n  private readonly _channelStartTime: number;\n  private readonly _readOnlyVideoElement: ReadOnlySubject<HTMLVideoElement>;\n  private readonly _readOnlyToken: ReadOnlySubject<EdgeToken>;\n  private readonly _readOnlyPeerConnection: ReadOnlySubject<IPeerConnection>;\n  private readonly _readOnlyState: ReadOnlySubject<ChannelState>;\n  private readonly _readOnlyAutoMuted: ReadOnlySubject<boolean>;\n  private readonly _readOnlyAutoPaused: ReadOnlySubject<boolean>;\n  private readonly _readOnlyTokenExpiring: ReadOnlySubject<boolean>;\n  private readonly _readOnlyAuthorized: ReadOnlySubject<boolean>;\n  private readonly _readOnlyOnline: ReadOnlySubject<boolean>;\n  private readonly _readOnlyLoading: ReadOnlySubject<boolean>;\n  private readonly _readOnlyPlaying: ReadOnlySubject<boolean>;\n  private readonly _readOnlyStandby: ReadOnlySubject<boolean>;\n  private readonly _readOnlyStopped: ReadOnlySubject<boolean>;\n  private readonly _readOnlyTargetLag: ReadOnlySubject<Millisecond>;\n  private readonly _readOnlyLag: ReadOnlySubject<Millisecond>;\n  private readonly _readOnlyBitrateLimit: ReadOnlySubject<BitsPerSecond>;\n  private readonly _readOnlyResolution: ReadOnlySubject<Dimension>;\n  private readonly _readOnlyFailureCount: ReadOnlySubject<number>;\n  private readonly _readOnlyEndPoint: ReadOnlySubject<EndPoint>;\n  private readonly _readOnlyStream: ReadOnlySubject<IStream>;\n  private readonly _readOnlyRtcStatistics: ReadOnlySubject<IRtcMonitorStatistic>;\n  private readonly _readOnlyMediaStream: ReadOnlySubject<MediaStream>;\n\n  private _metricsService: MetricsService;\n  private readonly _sessionTelemetry: SessionTelemetry;\n  private readonly _videoMetaDataChangedHandler: () => void;\n\n  constructor(videoElement: HTMLVideoElement, token: string, targetLag: number = defaultTargetLag) {\n    this._tokenContext = new TokenContext(token);\n    this._channelContext = new ChannelContext(targetLag);\n    this._peerConnectionContext = new PeerConnectionContext();\n    this._stateContext = new StateContext();\n    this._channelStartTime = Date.now();\n    this._readOnlyVideoElement = new ReadOnlySubject<HTMLVideoElement>(this._channelContext.videoElement);\n    this._readOnlyToken = new ReadOnlySubject<string>(this._tokenContext.token);\n    this._readOnlyPeerConnection = new ReadOnlySubject<IPeerConnection>(this._peerConnectionContext.peerConnection);\n    this._readOnlyState = new ReadOnlySubject<ChannelState>(this._channelContext.state);\n    this._readOnlyAutoMuted = new ReadOnlySubject<boolean>(this._channelContext.autoMuted);\n    this._readOnlyAutoPaused = new ReadOnlySubject<boolean>(this._channelContext.autoPaused);\n    this._readOnlyTokenExpiring = new ReadOnlySubject<boolean>(this._tokenContext.tokenExpiring);\n    this._readOnlyAuthorized = new ReadOnlySubject<boolean>(this._channelContext.authorized);\n    this._readOnlyOnline = new ReadOnlySubject<boolean>(this._channelContext.online);\n    this._readOnlyLoading = new ReadOnlySubject<boolean>(this._channelContext.loading);\n    this._readOnlyPlaying = new ReadOnlySubject<boolean>(this._channelContext.playing);\n    this._readOnlyStandby = new ReadOnlySubject<boolean>(this._channelContext.standby);\n    this._readOnlyStopped = new ReadOnlySubject<boolean>(this._channelContext.stopped);\n    this._readOnlyTargetLag = new ReadOnlySubject<number>(this._channelContext.targetLag);\n    this._readOnlyLag = new ReadOnlySubject<number>(this._channelContext.lag);\n    this._readOnlyBitrateLimit = new ReadOnlySubject<number>(this._channelContext.bitrateLimit);\n    this._readOnlyResolution = new ReadOnlySubject<Dimension>(this._channelContext.resolution);\n    this._readOnlyFailureCount = new ReadOnlySubject<number>(this._channelContext.failureCount);\n    this._readOnlyEndPoint = new ReadOnlySubject<EndPoint>(this._channelContext.endPoint);\n    this._readOnlyStream = new ReadOnlySubject<IStream>(this._channelContext.stream);\n    this._readOnlyRtcStatistics = new ReadOnlySubject<IRtcMonitorStatistic>(this._channelContext.rtcStatistics);\n    this._readOnlyMediaStream = new ReadOnlySubject<MediaStream>(this._peerConnectionContext.mediaStream);\n\n    const parsedToken = EdgeAuth.parseToken(this._tokenContext.token.value);\n    const discoveryUri = (EdgeAuth.getUri(parsedToken) || SDK.discoveryUri.value).toString();\n\n    SDK.tenancy.value = EdgeAuth.getTenancy(parsedToken) || SDK.tenancy.value;\n    DiscoveryUri.uri.value = discoveryUri;\n    this._metricsService = MetricsFactory.getMetricsService(discoveryUri);\n    this._sessionTelemetry = new SessionTelemetry(SDK.pageLoadTime, this._metricsService);\n    this._channelContext.channelDisposables.add(this._sessionTelemetry);\n    this._videoMetaDataChangedHandler = this.handleVideoMetaDataChanged.bind(this);\n    this.videoElement = videoElement;\n\n    this._channelContext.channelDisposables.add(\n      this._channelContext.videoElement.subscribe(videoElement => {\n        this._channelContext.rendererDisposables.dispose();\n\n        if (!videoElement) {\n          return;\n        }\n\n        this._channelContext.rendererDisposables.add(this._channelContext.stream.subscribe(stream => {\n          if (this._channelContext.videoTelemetry) {\n            this._channelContext.videoTelemetry.dispose();\n          }\n\n          if (!stream) {\n            return;\n          }\n\n          if (!this.videoElement) {\n            return;\n          }\n\n          if (this.videoElement.dataset) {\n            this.videoElement.dataset.sessionId = SDK.clientSessionId;\n            this.videoElement.dataset.streamId = this.streamId;\n          }\n\n          this._channelContext.videoTelemetry = new VideoTelemetry(this.streamId, SDK.pageLoadTime, this._channelStartTime, this._metricsService);\n          this._channelContext.videoTelemetry.setupListenerForTimeToFirstTime(this.videoElement);\n          this._channelContext.videoTelemetry.setupListenerForRebuffering(this.videoElement);\n\n          if (this._channelContext.state.value === ChannelState.Stopped) {\n            const ignored = this.restartAfterStop();\n          }\n        }));\n\n        this._channelContext.channelDisposables.add(this._channelContext.rendererDisposables);\n      }));\n    this._channelContext.channelDisposables.add(\n      this._channelContext.state.subscribe(state => {\n        if (this._channelContext.clearFailureCountTimeout) {\n          clearTimeout(this._channelContext.clearFailureCountTimeout);\n        }\n\n        if (!this._channelContext.failureCount.value) {\n          return;\n        }\n\n        if (state !== ChannelState.Playing) {\n          return;\n        }\n\n        this._channelContext.clearFailureCountTimeout = window.setTimeout(() => {\n          this._channelContext.failureCount.value = 0;\n        }, failureCountCleanUpIntervalInMilliseconds);\n      }));\n    this._channelContext.channelDisposables.add(\n      this._channelContext.resolution.subscribe(resolution => {\n        if (this._channelContext.videoTelemetry) {\n          this._channelContext.videoTelemetry.onVideoResolutionChanges(resolution.toString());\n        }\n      }));\n    this._channelContext.channelDisposables.add(\n      this._channelContext.bitrateLimit.subscribe(bitrateLimit => {\n        if (bitrateLimit && this._channelContext.endPoint.value && this._channelContext.stream.value) {\n          const elapsedInMilliseconds = Date.now() - this._channelContext.channelInitialization.getTime();\n          const ignored = this._channelContext.endPoint.value.limitBitrate(\n            this._channelContext.stream.value,\n            elapsedInMilliseconds,\n            bitrateLimit,\n            BitrateState.Keep,\n            BitrateMode.Normal\n          )\n            .catch(e => {\n              this._logger.error('Error while setting limit bitrate', e);\n            });\n        }\n      })\n    );\n\n    const destroyStreamOnUnmount = () => {\n      if (this._channelContext.stream.value && this._channelContext.endPoint.value) {\n        const ignored = this._channelContext.endPoint.value.destroyStream(this._channelContext.stream.value, 'client:termination-on-window-unload');\n      }\n    };\n\n    window.addEventListener('beforeunload', destroyStreamOnUnmount);\n\n    this._channelContext.channelDisposables.add(new Disposable(() => {\n      window.removeEventListener('beforeunload', destroyStreamOnUnmount);\n    }));\n\n    this.start();\n  }\n\n  get videoElement(): HTMLVideoElement {\n    return this._channelContext.videoElement.value;\n  }\n\n  set videoElement(videoElement: HTMLVideoElement) {\n    if (this._channelContext.videoElement.value) {\n      this._channelContext.videoElement.value.removeEventListener('loadeddata', this._videoMetaDataChangedHandler);\n      this._channelContext.videoElement.value.removeEventListener('loadedmetadata', this._videoMetaDataChangedHandler);\n      this._channelContext.videoElement.value.removeEventListener('resize', this._videoMetaDataChangedHandler);\n\n      if (this._channelContext.videoElement.value.dataset) {\n        this._channelContext.videoElement.value.dataset.sessionId = '';\n        this._channelContext.videoElement.value.dataset.streamId = '';\n      }\n\n      this._channelContext.rendererDisposables.dispose();\n\n      this._channelContext.videoElement.value.pause();\n      this._channelContext.videoElement.value.srcObject = null;\n    }\n\n    this._channelContext.autoMuted.value = false;\n    this._channelContext.autoPaused.value = false;\n    this._channelContext.loading.value = false;\n    this._channelContext.playing.value = false;\n    this._channelContext.state.value = ChannelState.Stopped;\n\n    this._channelContext.videoElement.value = videoElement;\n\n    if (this._channelContext.videoElement.value) {\n      this._channelContext.videoElement.value.addEventListener('loadeddata', this._videoMetaDataChangedHandler);\n      this._channelContext.videoElement.value.addEventListener('loadedmetadata', this._videoMetaDataChangedHandler);\n      this._channelContext.videoElement.value.addEventListener('resize', this._videoMetaDataChangedHandler);\n    }\n  }\n\n  private handleVideoMetaDataChanged(): void {\n    const videoElement = this._channelContext.videoElement.value;\n\n    if (videoElement) {\n      if (this.resolution.value.width !== videoElement.videoWidth || this.resolution.value.height !== videoElement.videoHeight) {\n        this._channelContext.resolution.value = new Dimension(videoElement.videoWidth, videoElement.videoHeight);\n      }\n    } else {\n      this._channelContext.resolution.value = Dimension.empty;\n    }\n  }\n\n  get token(): EdgeToken {\n    return this._tokenContext.token.value;\n  }\n\n  set token(token: EdgeToken) {\n    this._channelContext.disposables.dispose();\n\n    this._tokenContext.token.value = token;\n    this._tokenContext.tokenExpiring.value = false;\n\n    const parsedToken = EdgeAuth.parseToken(this._tokenContext.token.value);\n    const discoveryUri = (EdgeAuth.getUri(parsedToken) || SDK.discoveryUri.value).toString();\n\n    SDK.tenancy.value = EdgeAuth.getTenancy(parsedToken) || SDK.tenancy.value;\n    DiscoveryUri.uri.value = discoveryUri;\n\n    this._metricsService = MetricsFactory.getMetricsService(discoveryUri);\n\n    this.start();\n  }\n\n  get peerConnection(): ReadOnlySubject<IPeerConnection> {\n    return this._readOnlyPeerConnection;\n  }\n\n  get state(): ReadOnlySubject<ChannelState> {\n    return this._readOnlyState;\n  }\n\n  get autoMuted(): ReadOnlySubject<boolean> {\n    return this._readOnlyAutoMuted;\n  }\n\n  get autoPaused(): ReadOnlySubject<boolean> {\n    return this._readOnlyAutoPaused;\n  }\n\n  get tokenExpiring(): ReadOnlySubject<boolean> {\n    return this._readOnlyTokenExpiring;\n  }\n\n  get authorized(): ReadOnlySubject<boolean> {\n    return this._readOnlyAuthorized;\n  }\n\n  get online(): ReadOnlySubject<boolean> {\n    return this._readOnlyOnline;\n  }\n\n  get loading(): ReadOnlySubject<boolean> {\n    return this._readOnlyLoading;\n  }\n\n  get playing(): ReadOnlySubject<boolean> {\n    return this._readOnlyPlaying;\n  }\n\n  get standby(): ReadOnlySubject<boolean> {\n    return this._readOnlyStandby;\n  }\n\n  get stopped(): ReadOnlySubject<boolean> {\n    return this._readOnlyStopped;\n  }\n\n  get targetLag(): ReadOnlySubject<Millisecond> {\n    return this._readOnlyTargetLag;\n  }\n\n  get lag(): ReadOnlySubject<Millisecond> {\n    return this._readOnlyLag;\n  }\n\n  get bitrateLimit(): number {\n    return this._readOnlyBitrateLimit.value;\n  }\n\n  get resolution(): ReadOnlySubject<Dimension> {\n    return this._readOnlyResolution;\n  }\n\n  get failureCount(): ReadOnlySubject<number> {\n    return this._readOnlyFailureCount;\n  }\n\n  get endPoint(): ReadOnlySubject<EndPoint> {\n    return this._readOnlyEndPoint;\n  }\n\n  get stream(): ReadOnlySubject<IStream> {\n    return this._readOnlyStream;\n  }\n\n  get streamId(): string {\n    return this._channelContext.streamId;\n  }\n\n  get rtcStatistics(): ReadOnlySubject<IRtcMonitorStatistic> {\n    return this._readOnlyRtcStatistics;\n  }\n\n  get mediaStream(): ReadOnlySubject<MediaStream> {\n    return this._readOnlyMediaStream;\n  }\n\n  setBitrateLimit(bitrateLimit: BitsPerSecond): void {\n    this._channelContext.bitrateLimit.value = bitrateLimit;\n  }\n\n  clearBitrateLimit(): void {\n    if (this._channelContext.bitrateLimit.value && this._channelContext.endPoint.value && this._channelContext.stream.value) {\n      const elapsedInMilliseconds = Date.now() - this._channelContext.channelInitialization.getTime();\n      const bitrateInBitsPerSecond = 0;\n      const ignored = this._channelContext.endPoint.value.limitBitrate(\n        this._channelContext.stream.value,\n        elapsedInMilliseconds,\n        bitrateInBitsPerSecond,\n        BitrateState.Keep,\n        BitrateMode.Reset\n      )\n        .then(({status}) => {\n          if (status === 'ok') {\n            this._channelContext.bitrateLimit.value = 0;\n          }\n        })\n        .catch(e => {\n          this._logger.error('Error while setting limit bitrate', e);\n        });\n    }\n  }\n\n  updateTargetLag(lag: Millisecond): void {\n    this._channelContext.targetLag.value = lag;\n  }\n\n  async stop(reason: string): Promise<void> {\n    return new Promise(resolve => {\n      if (!this._stateContext.isStarting.value) {\n        this.processStop(reason);\n\n        resolve();\n\n        return;\n      }\n\n      this._channelContext.rendererDisposables.add(this._stateContext.isStarting.subscribe(isStarting => {\n        if (!isStarting) {\n          this.processStop(reason);\n          resolve();\n        }\n      }));\n    });\n  }\n\n  private processStop(reason: string): void {\n    if (this._channelContext.videoElement.value) {\n      this._channelContext.videoElement.value.pause();\n      this._channelContext.videoElement.value.srcObject = null;\n    }\n\n    this._channelContext.rendererDisposables.dispose();\n\n    this.cleanUpResources(reason);\n\n    this._channelContext.state.value = ChannelState.Stopped;\n  }\n\n  async resume(): Promise<void> {\n    if (this._peerConnectionContext.mediaStream.value) {\n      this._channelContext.autoPaused.value = false;\n\n      return this.playMediaStreamInVideoElement(this._peerConnectionContext.mediaStream.value);\n    }\n  }\n\n  mute(): void {\n    const videoElement = this._channelContext.videoElement.value;\n\n    if (videoElement) {\n      videoElement.muted = true;\n    }\n  }\n\n  unmute(): void {\n    const videoElement = this._channelContext.videoElement.value;\n\n    if (videoElement) {\n      videoElement.muted = false;\n      this._channelContext.autoMuted.value = false;\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return this.stop('client:channel-dispose').then(() => {\n      this._channelContext.channelDisposables.dispose();\n      this._stateContext.isDisposed = true;\n    });\n  }\n\n  getUri(token): URL {\n    const parsedToken = EdgeAuth.parseToken(token);\n    const url = EdgeAuth.getUri(parsedToken);\n\n    if (url) {\n      return url;\n    }\n\n    this._logger.info('Fall back to the default discover URI [%s]', SDK.discoveryUri.value);\n\n    return new URL(SDK.discoveryUri.value);\n  }\n\n  async start(): Promise<void> {\n    if (this._stateContext.isDisposed) {\n      throw new Error('Channel was already disposed');\n    }\n\n    if (this._stateContext.isStarting.value) {\n      this._logger.info('Channel is already starting, skipping start');\n\n      return;\n    }\n\n    this._stateContext.isStarting.value = true;\n\n    return this.processStart();\n  }\n\n  private async processStart(): Promise<void> {\n    const token = this._tokenContext.token.value;\n    const listenOnStreamSetup = this._sessionTelemetry.listenOnStreamSetup();\n\n    if (!EdgeAuth.isValidToken(token)) {\n      this._logger.error('Failed to parse token [%s]', token);\n      this._channelContext.state.value = ChannelState.Unauthorized;\n      this._channelContext.authorized.value = false;\n      this._stateContext.isStarting.value = false;\n\n      return;\n    }\n\n    this.cleanUpResources('client:start');\n    this._channelContext.state.value = ChannelState.Starting;\n    this._channelContext.loading.value = true;\n\n    const uri = this.getUri(token);\n    const handleStreamFailureCallback: () => Promise<void> = () => new Promise((resolve): void => {\n      // Need to set isStarting to false and call handleStreamFailure if stream monitors found an issue\n      this._stateContext.isStarting.value = false;\n\n      return resolve(this.handleStreamFailure());\n    });\n    const streamPlayer = StreamFactory.create(token, this._channelContext, this._peerConnectionContext, handleStreamFailureCallback);\n\n    if (!streamPlayer) {\n      this._stateContext.isStarting.value = false;\n\n      return;\n    }\n\n    return streamPlayer.start(\n      uri,\n      token,\n      listenOnStreamSetup,\n      this.playMediaStreamInVideoElement.bind(this))\n      .then(() => {\n        this._channelContext.loading.value = false;\n      })\n      .catch(e => {\n        listenOnStreamSetup.fail();\n\n        this._channelContext.failureCount.value++;\n\n        this._channelContext.online.value = false;\n\n        this.cleanUpResources('client:cleanup-after-failed-setup');\n\n        this._channelContext.state.value = ChannelState.Error;\n\n        this._logger.error('Failed to start channel', e);\n      })\n      .finally(() => {\n        this._stateContext.isStarting.value = false;\n\n        if (this._channelContext.state.value === ChannelState.Playing || !SDK.automaticRetryOnFailure) {\n          return;\n        }\n\n        const timeoutId = setTimeout(() => {\n          const ignored = this.handleStreamFailure()\n            .catch(e => {\n              this._logger.error('Failed handling stream failure', e);\n            });\n        }, this.getRetryInterval());\n\n        this._channelContext.disposables.add(new Disposable(() => {\n          clearTimeout(timeoutId);\n        }));\n      });\n  }\n\n  private async restartAfterStop(): Promise<void> {\n    if (this._stateContext.isDisposed) {\n      throw new Error('Channel was already disposed');\n    }\n\n    if (this._peerConnectionContext.mediaStream.value) {\n      return this.playMediaStreamInVideoElement(this._peerConnectionContext.mediaStream.value);\n    }\n\n    if (this._tokenContext.token.value) {\n      const ignored = this.start();\n    }\n  }\n\n  public async play(): Promise<void> {\n    const mediaStream = this._peerConnectionContext.mediaStream.value;\n\n    if (!mediaStream) {\n      return this.start();\n    }\n\n    return this.playMediaStreamInVideoElement(mediaStream);\n  }\n\n  private getRetryInterval(): number {\n    switch (this._channelContext.state.value) {\n      case ChannelState.StandBy:\n      case ChannelState.Offline:\n        return standbyPollingIntervalInMilliseconds;\n      case ChannelState.Error:\n      case ChannelState.Recovering:\n      case ChannelState.Unauthorized:\n      case ChannelState.GeoRestricted:\n      case ChannelState.GeoBlocked:\n      case ChannelState.Stopped:\n      case ChannelState.Starting:\n      case ChannelState.Playing:\n      case ChannelState.Paused:\n      case ChannelState.Reconnecting:\n      case ChannelState.UnsupportedFeature:\n        // First and second attempt fast, after that exponential with backoff interval\n        return Math.min(maxBackoffIntervalInMilliseconds, Math.pow(backoffIntervalInMilliseconds, Math.max(0, this._channelContext.failureCount.value - 1)));\n      default:\n        assertUnreachable(this._channelContext.state.value);\n    }\n  }\n\n  private async handleStreamFailure(): Promise<void> {\n    switch (this._channelContext.state.value) {\n      case ChannelState.Error:\n      case ChannelState.Reconnecting:\n      case ChannelState.StandBy:\n      case ChannelState.Offline:\n      case ChannelState.Recovering:\n        this._logger.info('Retry start with initial state [%s] [%s]', this._channelContext.state.value, ChannelState[this._channelContext.state.value]);\n\n        break;\n      case ChannelState.Unauthorized:\n        this._logger.info('Channel is unauthorized, skipping retry of start. Please provide a new token and invoke start()');\n\n        return;\n      case ChannelState.GeoRestricted:\n        this._logger.info('Channel is geo restricted, skipping retry of start. Please provide a new token and invoke start()');\n\n        return;\n      case ChannelState.GeoBlocked:\n        this._logger.info('Channel is geo blocked, skipping retry of start. Please provide a new token and invoke start()');\n\n        return;\n      case ChannelState.Stopped:\n        this._logger.info('Channel is stopped, skipping retry of start.');\n\n        return;\n      case ChannelState.Playing:\n        this._logger.info('Channel is playing, skipping retry of start');\n\n        return;\n      case ChannelState.Paused:\n        this._logger.info('Channel is paused, skipping retry of start. Please invoke play()');\n\n        return;\n      case ChannelState.Starting:\n        this._logger.info('Channel is already starting, skipping retry of start');\n\n        return;\n      case ChannelState.UnsupportedFeature:\n        this._logger.info('Channel is stopped due to unsupported feature, skipping retry of start.');\n\n        return;\n      default:\n        assertUnreachable(this._channelContext.state.value);\n    }\n\n    return this.start();\n  }\n\n  private cleanUpResources(reason: string = defaultStreamTerminationReason): void {\n    this._channelContext.disposables.dispose();\n\n    const peerConnection = this._peerConnectionContext.peerConnection.value;\n\n    if (peerConnection) {\n      this._peerConnectionContext.peerConnection.value = null;\n      peerConnection.close();\n    }\n\n    if (this._peerConnectionContext.mediaStream.value) {\n      this._peerConnectionContext.mediaStream.value.getTracks().forEach(track => track.stop());\n      this._peerConnectionContext.mediaStream.value = null;\n    }\n\n    this._channelContext.autoPaused.value = false;\n    this._channelContext.autoMuted.value = false;\n    this._channelContext.playing.value = false;\n    this._channelContext.stopped.value = true;\n    this._channelContext.standby.value = false;\n\n    if (this._channelContext.stream.value && this._channelContext.endPoint.value) {\n      const ignored = this._channelContext.endPoint.value.destroyStream(this._channelContext.stream.value, reason)\n        .then(({status}) => {\n          if (status !== 'ok') {\n            this._logger.warn('[%s] Failed to destroy stream with reason [%s]', this.streamId, status);\n\n            return;\n          }\n\n          this._logger.info('[%s] Destroyed stream with reason [%s]', this.streamId, status);\n        })\n        .catch(e => {\n          this._logger.error('[%s] Failed to destroy stream', this.streamId, e);\n        });\n    }\n\n    if (this.videoElement && this.videoElement.dataset) {\n      this.videoElement.dataset.sessionId = '';\n      this.videoElement.dataset.streamId = '';\n    }\n\n    this._channelContext.stream.value = null;\n    this._channelContext.endPoint.value = null;\n    this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n  }\n\n  private async playMediaStreamInVideoElement(mediaStream: MediaStream): Promise<void> {\n    const videoElement = this._channelContext.videoElement.value;\n\n    if (!videoElement) {\n      this._channelContext.autoMuted.value = false;\n      this._channelContext.autoPaused.value = false;\n      this._channelContext.loading.value = false;\n      this._channelContext.playing.value = false;\n      this._channelContext.state.value = ChannelState.Stopped;\n\n      return;\n    }\n\n    videoElement.srcObject = mediaStream;\n\n    const playPromise = videoElement.play();\n\n    if (playPromise === undefined) {\n      this._channelContext.autoMuted.value = false;\n      this._channelContext.autoPaused.value = false;\n      this._channelContext.loading.value = false;\n      this._channelContext.playing.value = true;\n      this._channelContext.state.value = ChannelState.Playing;\n\n      return;\n    }\n\n    return playPromise.then(() => {\n      this._channelContext.autoMuted.value = false;\n      this._channelContext.autoPaused.value = false;\n      this._channelContext.loading.value = false;\n      this._channelContext.playing.value = true;\n      this._channelContext.state.value = ChannelState.Playing;\n    }).catch(e => {\n      const hasAudioTrack = !!mediaStream.getTracks().filter(track => {\n        return track.kind === 'audio';\n      });\n      const automaticallyMuteVideoOnPlayFailureOff = !SDK.automaticallyMuteVideoOnPlayFailure;\n\n      if (automaticallyMuteVideoOnPlayFailureOff || videoElement.muted || !hasAudioTrack) {\n        this._channelContext.autoMuted.value = false;\n        this._channelContext.autoPaused.value = true;\n        this._channelContext.loading.value = false;\n        this._channelContext.playing.value = false;\n        this._channelContext.state.value = ChannelState.Paused;\n\n        if (automaticallyMuteVideoOnPlayFailureOff) {\n          this._logger.info('[%s] Paused video after play failed. Manual user action required.', this.streamId, e);\n          videoElement.srcObject = null;\n\n          return;\n        }\n\n        if (hasAudioTrack) {\n          this._logger.info('[%s] Failed to play video. Manual user action required.', this.streamId, e);\n\n          return;\n        }\n\n        this._logger.info('[%s] Failed to play muted video. Manual user action required.', this.streamId, e);\n\n        return;\n      }\n\n      videoElement.muted = true;\n\n      return videoElement.play()\n        .then(() => {\n          this._logger.info('[%s] Played video after auto muting. Manual user action required to unmute.', this.streamId);\n\n          this._channelContext.autoMuted.value = true;\n          this._channelContext.autoPaused.value = false;\n          this._channelContext.loading.value = false;\n          this._channelContext.playing.value = true;\n          this._channelContext.state.value = ChannelState.Playing;\n        }).catch(e => {\n          videoElement.muted = false;\n\n          this._logger.info('[%s] Failed to play video. Manual user action required.', this.streamId, e);\n\n          this._channelContext.autoMuted.value = false;\n          this._channelContext.autoPaused.value = true;\n          this._channelContext.loading.value = false;\n          this._channelContext.playing.value = false;\n          this._channelContext.state.value = ChannelState.Paused;\n        });\n    });\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport Channel from './Channel';\nimport SDK from '../SDK';\nimport {EdgeToken} from '../edgeAuth/EdgeToken';\nimport {Millisecond} from '../../units/Units';\n\ntype CreateChannelOptions = {\n  videoElement: HTMLVideoElement;\n  token: EdgeToken;\n  targetLag?: Millisecond;\n}\n\nexport default class Channels {\n  static createChannel(options: CreateChannelOptions): Channel {\n    if (!SDK.initialized.value) {\n      throw new Error('SDK is not loaded.');\n    }\n\n    return new Channel(options.videoElement, options.token, options.targetLag);\n  }\n\n  private constructor() {\n    throw new Error('Channels is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport SDK from '../SDK';\nimport Channels from './Channels';\nimport ChannelState from './ChannelState';\n\nexport {\n  SDK,\n  Channels,\n  ChannelState\n};\n\nexport default {\n  SDK,\n  Channels,\n  ChannelState\n};","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nconst defaultDiscoveryUri = 'https://pcast.phenixrts.com/pcast/endPoints';\n\nexport {defaultDiscoveryUri};","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport {defaultDiscoveryUri} from '../defaults';\nimport Subject from '../../rx/Subject';\nimport VersionManager from '../version/VersionManager';\n\nexport default class DiscoveryUri {\n  private static readonly _discoveryUri: Subject<string> = new Subject<string>(defaultDiscoveryUri);\n\n  static get uri(): Subject<string> {\n    return DiscoveryUri._discoveryUri;\n  }\n\n  static buildDiscoveryUrl(uri: URL): string {\n    const url = new URL(uri.toString());\n    const sdkVersion = VersionManager.sdkVersion;\n\n    url.search = `?${new URLSearchParams([['version', sdkVersion], ['_', `${Date.now()}`]]).toString()}`;\n\n    if (url.pathname === '/') {\n      url.pathname = '/pcast/endPoints';\n    }\n\n    return url.toString();\n  }\n\n  private constructor() {\n    throw new Error('DiscoveryUri is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport {IEdgeAuth} from './EdgeAuthToken';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport {EdgeToken} from './EdgeToken';\n\nconst edgeAuthTokenPrefix = 'DIGEST:';\n\nexport default class EdgeAuth {\n  private static _logger: ILogger = LoggerFactory.getLogger('EdgeAuth');\n\n  static parseToken(token: EdgeToken): IEdgeAuth {\n    if (!this.isValidToken(token)) {\n      EdgeAuth._logger.error('Token is not valid [%s]', token);\n\n      return undefined;\n    }\n\n    try {\n      const encodedEdgeAuthToken = atob(token.substr(edgeAuthTokenPrefix.length));\n      const edgeAuthToken = JSON.parse(encodedEdgeAuthToken);\n\n      edgeAuthToken.token = JSON.parse(edgeAuthToken.token);\n\n      return edgeAuthToken;\n    } catch (e) {\n      EdgeAuth._logger.error('Cannot parse token value', e);\n\n      return undefined;\n    }\n  }\n\n  static getUri(parsedToken: IEdgeAuth): URL {\n    return parsedToken && parsedToken.token && parsedToken.token.uri ?\n      new URL(parsedToken.token.uri) : null;\n  }\n\n  static getTenancy(parsedToken: IEdgeAuth): string {\n    return parsedToken && parsedToken.applicationId ?\n      parsedToken.applicationId : '';\n  }\n\n  static isValidToken(token: EdgeToken): boolean {\n    return !!token && token.startsWith(edgeAuthTokenPrefix);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport BrowserDetector from '../../dom/BrowserDetector';\n\nexport default class FeatureEnablement {\n  static get clientOfferDisabled(): boolean {\n    // Client offer workflow does not work correctly in the following browsers\n    return BrowserDetector.isChrome74 ||\n      BrowserDetector.isChrome75 ||\n      BrowserDetector.isChrome76 ||\n      BrowserDetector.isChrome77;\n  }\n\n  static get addTranceiverDisabled(): boolean {\n    // Chrome 69, 70, 71, 72 exposes `addTranceiver` but it does not work correctly\n    return BrowserDetector.isChrome69 ||\n      BrowserDetector.isChrome70 ||\n      BrowserDetector.isChrome71 ||\n      BrowserDetector.isChrome72;\n  }\n\n  static get getStatsPromiseBasedDisabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 66;\n  }\n\n  static get getCurrentOfferDisabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 69 ||\n      BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion <= 56;\n  }\n\n  static get onTrackDisabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 63 ||\n      BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion <= 52;\n  }\n\n  static get webkitRTCPeerConnectionEnabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 55;\n  }\n\n  static get promiseBasedPCMethodsDisabled(): boolean {\n    return BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion <= 52;\n  }\n\n  static get shouldUseNativeHls(): boolean {\n    return BrowserDetector.browserName === 'Safari' ||\n      BrowserDetector.browserName === 'SamsungBrowser';\n  }\n\n  static get isRTMPEnabled(): boolean {\n    return (BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion < 84) ||\n      (BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion < 70) ||\n      BrowserDetector.browserName === 'Edge' ||\n      BrowserDetector.browserName === 'IE';\n  }\n\n  static get isPrecachingEnabled(): boolean {\n    return BrowserDetector.browserName !== 'IE';\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\ndeclare const __SDKVERSION__: string;\n\nexport default class VersionManager {\n  private static _defaultVersion = new Date().toISOString();\n\n  static get sdkVersion(): string {\n    try {\n      return __SDKVERSION__;\n    } catch (e) {\n      return this._defaultVersion;\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport TelemetryService from './TelemetryService';\nimport TelemetryConfiguration from './TelemetryConfiguration';\nimport {IAppender} from '../logger/IAppender';\nimport {LoggingLevel} from '../logger/Logger';\n\nexport default class TelemetryAppender implements IAppender {\n  private readonly _telemetryService: TelemetryService;\n  private readonly _tenancy: string;\n  private readonly _sessionId: string;\n  private readonly _threshold: LoggingLevel;\n\n  constructor(telemetryConfiguration: TelemetryConfiguration) {\n    this._tenancy = telemetryConfiguration.tenancy;\n    this._sessionId = telemetryConfiguration.sessionId;\n    this._threshold = telemetryConfiguration.threshold;\n    this._telemetryService = new TelemetryService(telemetryConfiguration);\n  }\n\n  log(logLevel: LoggingLevel, message: string, category: string, date: Date): void {\n    if (logLevel < this._threshold) {\n      return;\n    }\n\n    this._telemetryService.push(logLevel, message, category, date);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {LoggingLevel} from '../logger/Logger';\nimport LoggerDefaults from '../logger/LoggerDefaults';\n\nexport default class TelemetryConfiguration {\n  private _url = 'https://telemetry.phenixrts.com/telemetry/logs';\n  private _tenancy: string;\n  private _sessionId: string;\n  private _environment: string;\n  private _threshold = LoggerDefaults.defaultTelemetryLoggingLevel;\n\n  get url(): string {\n    return this._url;\n  }\n\n  set url(url: string) {\n    const telemetryUrl = new URL(url);\n\n    telemetryUrl.pathname = telemetryUrl.pathname + '/logs';\n\n    this._url = telemetryUrl.toString();\n  }\n\n  get environment(): string {\n    return this._environment;\n  }\n\n  set environment(environment: string) {\n    this._environment = environment;\n  }\n\n  get tenancy(): string {\n    return this._tenancy;\n  }\n\n  set tenancy(tenancy: string) {\n    this._tenancy = tenancy;\n  }\n\n  get sessionId(): string {\n    return this._sessionId;\n  }\n\n  set sessionId(sessionId: string) {\n    this._sessionId = sessionId;\n  }\n\n  get threshold(): LoggingLevel {\n    return this._threshold;\n  }\n\n  set threshold(threshold: LoggingLevel) {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {LoggingLevel} from '../logger/Logger';\nimport VersionManager from '../sdk/version/VersionManager';\nimport TelemetryConfiguration from './TelemetryConfiguration';\n\nconst requestSizeLimit = 8192;\n\ninterface ILogItem {\n  timestamp: string;\n  tenancy: string;\n  level: string;\n  category: string;\n  message: string;\n  sessionId: string;\n  version: string;\n  environment: string;\n  fullQualifiedName: string;\n}\n\nexport default class TelemetryService {\n  private readonly _telemetryConfiguration: TelemetryConfiguration;\n\n  private _logs: Array<ILogItem> = [];\n  private _isSending: boolean;\n  private _domain = location.hostname;\n\n  constructor(telemetryConfiguration: TelemetryConfiguration) {\n    this._telemetryConfiguration = telemetryConfiguration;\n  }\n\n  push(logLevel: LoggingLevel, message: string, category: string, timestamp: Date): void {\n    const logRecord = {\n      timestamp: timestamp.toISOString(),\n      tenancy: this._telemetryConfiguration.tenancy,\n      level: LoggingLevel[logLevel],\n      category,\n      message,\n      sessionId: this._telemetryConfiguration.sessionId,\n      version: VersionManager.sdkVersion,\n      environment: this._telemetryConfiguration.environment,\n      fullQualifiedName: this._domain\n    };\n\n    if (logLevel < LoggingLevel.Error) {\n      this._logs.push(logRecord);\n    } else {\n      this._logs.unshift(logRecord);\n    }\n\n    const ignored = this.sendLogsIfAble();\n  }\n\n  private async sendLogs(logMessages: Array<ILogItem>): Promise<Response | void> {\n    const formData = new FormData();\n\n    formData.append('jsonBody', JSON.stringify({records: logMessages}));\n\n    return await fetch(this._telemetryConfiguration.url, {\n      method: 'POST',\n      body: formData\n    });\n  }\n\n  private async sendLogsIfAble(): Promise<Response | void> {\n    if (this._logs.length <= 0 || this._isSending) {\n      return;\n    }\n\n    let numberOfLogsToSend = 0;\n    let sizeOfLogsToSend = 0;\n\n    this._isSending = true;\n\n    const getLogSize = (log: ILogItem): number => Object.values(log)\n      .reduce((sum, item) => sum + (item ? item.length : 0), 0);\n\n    while (this._logs.length > numberOfLogsToSend && getLogSize(this._logs[numberOfLogsToSend]) + sizeOfLogsToSend < requestSizeLimit) {\n      sizeOfLogsToSend += getLogSize(this._logs[numberOfLogsToSend]);\n      numberOfLogsToSend++;\n    }\n\n    if (!numberOfLogsToSend) {\n      this._logs[numberOfLogsToSend].message = this._logs[numberOfLogsToSend].message.substring(0,\n        getLogSize(this._logs[numberOfLogsToSend]) + (requestSizeLimit - getLogSize(this._logs[numberOfLogsToSend])));\n      numberOfLogsToSend = 1;\n    }\n\n    const logMessages = this._logs.slice(0, numberOfLogsToSend);\n\n    this._logs = this._logs.slice(numberOfLogsToSend);\n\n    return this.sendLogs(logMessages).then(response => {\n      this._isSending = false;\n\n      const ignored = this.sendLogsIfAble();\n\n      return response;\n    }).catch(() => {\n      this._isSending = false;\n\n      const ignored = this.sendLogsIfAble();\n    });\n  }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(4146);\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}