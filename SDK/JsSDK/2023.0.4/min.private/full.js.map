{"version":3,"sources":["webpack://phenix/webpack/universalModuleDefinition","webpack://phenix/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://phenix/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://phenix/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://phenix/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://phenix/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://phenix/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://phenix/./node_modules/@babel/runtime/helpers/createClass.js","webpack://phenix/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://phenix/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://phenix/./node_modules/@babel/runtime/helpers/inherits.js","webpack://phenix/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://phenix/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://phenix/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://phenix/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://phenix/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://phenix/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://phenix/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://phenix/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://phenix/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://phenix/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://phenix/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://phenix/./node_modules/@babel/runtime/helpers/typeof.js","webpack://phenix/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://phenix/./node_modules/@babel/runtime/regenerator/index.js","webpack://phenix/./src/promise/PromiseHandler.ts","webpack://phenix/./src/promise/Promise.ts","webpack://phenix/./src/logger/Logger.ts","webpack://phenix/./src/logger/Appenders.ts","webpack://phenix/./src/dom/PrivacyMode.ts","webpack://phenix/./src/logger/LoggerDefaults.ts","webpack://phenix/./src/logger/LoggingThreshold.ts","webpack://phenix/./src/logger/ConsoleAppender.ts","webpack://phenix/./src/sdk/version/VersionManager.ts","webpack://phenix/./src/telemetry/TelemetryService.ts","webpack://phenix/./src/metrics/MetricsConfiguration.ts","webpack://phenix/./src/telemetry/TelemetryApender.ts","webpack://phenix/./src/telemetry/TelemetryConfiguration.ts","webpack://phenix/./src/metrics/TelemetryDefault.ts","webpack://phenix/./src/lang/assertUnreachable.ts","webpack://phenix/./src/metrics/TelemetricLevelMapping.ts","webpack://phenix/./src/logger/LoggingLevelMapping.ts","webpack://phenix/./src/dom/PlainConfigurationParameterReader.ts","webpack://phenix/./src/logger/LoggerFactory.ts","webpack://phenix/./src/lang/Strings.ts","webpack://phenix/./src/lang/Disposable.ts","webpack://phenix/./src/rx/Subject.ts","webpack://phenix/./src/rx/ReadOnlySubject.ts","webpack://phenix/./src/dom/BrowserDetector.ts","webpack://phenix/./src/sdk/feature/FeatureEnablement.ts","webpack://phenix/./src/rtc/VanillaPeerConnection.ts","webpack://phenix/./src/rtc/VanillaPeerConnectionFactory.ts","webpack://phenix/./src/sdk/edgeAuth/EdgeAuth.ts","webpack://phenix/./src/metrics/MetricsType.ts","webpack://phenix/./src/lang/DisposableList.ts","webpack://phenix/./src/dom/ApplicationActivityMonitor.ts","webpack://phenix/./src/sdk/TelemetryUrl.ts","webpack://phenix/./src/sdk/Environment.ts","webpack://phenix/./src/sdk/discovery/DiscoveryUri.ts","webpack://phenix/./src/sdk/defaults.ts","webpack://phenix/./src/metrics/MetricType.ts","webpack://phenix/./src/metrics/MetricsService.ts","webpack://phenix/./src/metrics/MetricsFactory.ts","webpack://phenix/./src/sdk/SDK.ts","webpack://phenix/./src/video/Dimension.ts","webpack://phenix/./src/sdk/channels/ChannelState.ts","webpack://phenix/./src/sdk/api/SetTemporaryMaximalBitrate.ts","webpack://phenix/./src/time/Duration.ts","webpack://phenix/./src/video/VideoTelemetry.ts","webpack://phenix/./src/dom/StreamSetupListener.ts","webpack://phenix/./src/dom/NetworkMonitor.ts","webpack://phenix/./src/video/SessionTelemetry.ts","webpack://phenix/./src/context/TokenContext.ts","webpack://phenix/./src/sdk/channels/ChannelContext.ts","webpack://phenix/./src/context/PeerConnectionContext.ts","webpack://phenix/./src/context/StateContext.ts","webpack://phenix/./src/rtc/PeerConnectionService.ts","webpack://phenix/./src/sdk/discovery/BitrateModeMapping.ts","webpack://phenix/./src/sdk/discovery/BitrateStateMapping.ts","webpack://phenix/./src/sdk/discovery/EndPoint.ts","webpack://phenix/./src/sdk/discovery/DiscoveryService.ts","webpack://phenix/./src/sdk/discovery/Discovery.ts","webpack://phenix/./src/rtc/SdpParser.ts","webpack://phenix/./src/rtc/RtcConnectionMonitor.ts","webpack://phenix/./src/rtc/RtcConfigurationManager.ts","webpack://phenix/./src/sdk/streaming/RealTimeStream.ts","webpack://phenix/./src/sdk/streaming/RealTimeStreamFactory.ts","webpack://phenix/./src/sdk/channels/Channel.ts","webpack://phenix/./src/sdk/channels/Channels.ts","webpack://phenix/./src/sdk/full/index.ts","webpack://phenix/webpack/bootstrap","webpack://phenix/webpack/startup","webpack://phenix/webpack/runtime/compat get default export","webpack://phenix/webpack/runtime/define property getters","webpack://phenix/webpack/runtime/hasOwnProperty shorthand","webpack://phenix/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","self","arr","len","length","i","arr2","Array","__esModule","isArray","arrayLikeToArray","ReferenceError","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","this","args","arguments","apply","err","undefined","instance","Constructor","TypeError","toPropertyKey","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","prototype","obj","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","bind","__proto__","subClass","superClass","create","constructor","iter","Symbol","iterator","from","_i","_s","_e","_x","_r","_arr","_n","_d","call","next","push","_typeof","assertThisInitialized","_regeneratorRuntime","Op","hasOwn","hasOwnProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","Error","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","displayName","isGeneratorFunction","genFun","ctor","name","mark","awrap","async","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_setPrototypeOf","p","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","input","hint","prim","toPrimitive","res","String","Number","minLen","n","toString","test","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","PromiseHandler","onFulfilled","onRejected","promise","callback","_state","_handled","_value","_deferreds","doResolve","promiseResolve","reason","promiseReject","newValue","finale","e","_immediate","_unhandledRejection","deferred","remaining","manageResponse","_","setTimeout","console","warn","LoggingLevel","Logger","category","appenders","threshold","_category","_appenders","_threshold","Trace","log","Debug","Info","Warn","Fatal","level","date","Date","message","replacePlaceholders","appender","replacePlaceholdersString","index","indexOf","substring","replaceArgument","splice","stringify","reduce","accumulator","currentValue","array","stack","cache","JSON","includes","argument","data","toStringStr","Appenders","items","item","PrivacyMode","_isPrivate","__PRIVACY_MODE__","applyIsPrivate","LoggerDefaults","isPrivate","Off","All","LoggingThreshold","defaultLoggingLevel","ConsoleAppender","logLevel","fullMessage","toISOString","VersionManager","__SDKVERSION__","_defaultVersion","TelemetryLevel","TelemetryService","telemetryConfiguration","location","hostname","_telemetryConfiguration","timestamp","logRecord","tenancy","sessionId","version","sdkVersion","environment","fullQualifiedName","_domain","_logs","unshift","sendLogsIfAble","logMessages","formData","FormData","append","records","fetch","url","body","_isSending","numberOfLogsToSend","sizeOfLogsToSend","getLogSize","sum","sendLogs","response","catch","TelemetryAppender","_tenancy","_sessionId","_telemetryService","TelemetryConfiguration","defaultTelemetryLoggingLevel","_url","telemetryUrl","URL","pathname","_environment","TelemetryDefault","Essential","MetricsConfiguration","defaultTelemetryLevel","metricsUrl","x","TelemetryLevelMapping","telemetryLevel","assertUnreachable","telemetryLevelType","LoggingLevelMapping","loggingLevel","loggingLevelType","PlainConfigurationParameterReader","defaultStringValue","defaultBooleanValue","convertTelemetryLevelToTelemetryLevelType","convertLoggingLevelToLoggingLevelType","defaultConsoleLoggingLevel","LoggerFactory","_loggers","applyLoggingLevel","applyAppenderLoggingLevel","applyConsoleLogger","applyTelemetryLogger","parameterValue","_configurationParameterReader","getStringValue","setThreshold","applyAppender","add","ConfigurationParameterReader","applyLoggerConfigFromParameterConfiguration","Strings","loops","Math","ceil","fill","random","string","func","Disposable","disposable","_disposed","_disposable","DisposableListener","listeners","listener","idx","Subject","_listeners","changed","comparable","equals","ReadOnlySubject","subject","_subject","subscribe","BrowserDetector","_browserNameAndVersion","_browserName","_browserMajorVersion","_isChrome69","_isChrome70","_isChrome71","_isChrome72","_isChrome74","_isChrome75","_isChrome76","_isChrome77","navigator","userAgent","browserNameAndVersion","match","_browserNameAndVersionRegex","parseBrowserNameAndVersionForIE","browserNameList","split","browserVersionList","fullVersion","msie","parseInt","parseBrowserNameAndVersion","parseBrowserName","parseBrowserMajorVersion","FeatureEnablement","isChrome74","isChrome75","isChrome76","isChrome77","isChrome69","isChrome70","isChrome71","isChrome72","browserName","browserMajorVersion","VanillaPeerConnection","configuration","getLogger","webkitRTCPeerConnectionEnabled","_peerConnection","webkitRTCPeerConnection","RTCPeerConnection","currentLocalDescription","currentRemoteDescription","iceConnectionState","getConfiguration","setConfiguration","addTranceiverDisabled","addTransceiver","options","promiseBasedPCMethodsDisabled","createOffer","createAnswer","description","setLocalDescription","RTCSessionDescription","sdp","_logger","setRemoteDescription","getSenders","selector","getStats","addEventListener","removeEventListener","mediaStream","getTracks","track","addTrack","ontrack","handler","onicecandidate","oniceconnectionstatechange","close","VanillaPeerConnectionFactory","edgeAuthTokenPrefix","EdgeAuth","token","isValidToken","encodedEdgeAuthToken","atob","substr","edgeAuthToken","parse","parsedToken","uri","applicationId","startsWith","MetricsType","DisposableList","_list","dispose","ApplicationActivityMonitor","now","_isForeground","_readOnlyIsForeground","detectTabFocusChange","_timeOfLastTabFocusChange","_disposables","hidden","visibilityChange","document","msHidden","webkitHidden","handleVisibilityChange","isForeground","setFocusState","listenForDocumentFocus","_documentFocusInterval","window","setInterval","hasFocus","clearInterval","TelemetryUrl","baseURL","segments","protocol","endsWith","join","origin","Environment","DiscoveryUri","_discoveryUri","search","URLSearchParams","MetricType","metrics","_metrics","MetricsService","metricsConfiguration","_metricsConfiguration","metric","streamId","previousValue","resource","kind","metricType","getTelemetryLevel","metricRecord","getName","sendMetricsIfAble","metricsMessages","sendMetrics","MetricsFactory","metricsServices","_metricsServices","SDK","clientSessionId","getTelemetryUrl","getEnvironmentFromUrl","convertTelemetryLevelTypeToTelemetryLevel","metricsService","pageLoadTime","_sendLocalCandidates","_clientSessionId","_loadedTimestamp","_readOnlyInitialized","_readOnlyDiscoveryUri","_readOnlyPeerConnectionFactory","_automaticallyRetryOnFailure","_automaticallyReconnectPeerConnection","_automaticallyPlayMediaStream","_automaticallyMuteVideoOnPlayFailure","_webPlayerLoader","_shakaPlayerLoader","_hlsJsLoader","_metricsService","_applicationActivityMonitor","_telemetryUrl","_maximalNumberOfPeerConnectionReconnectAttempts","retriesAmount","_telemetryLevel","telemetryAppender","find","remove","getMetricsService","setTelemetryLevel","getBooleanValue","discoveryUri","channelToken","parseToken","getTenancy","getUri","uriValue","baseURIValue","_initialized","peerConnectionFactory","_peerConnectionFactory","convertLoggingLevelTypeToLoggingLevel","consoleLoggingLevel","consoleAppender","automaticallyPlayMediaStream","automaticallyMuteVideoOnPlayFailure","webPlayerLoader","shakaPlayerLoader","hlsJsLoader","applyDiscoveryUriDefaultFromParameterConfiguration","applyMetricsConfiguration","applyTelemetryConfiguration","applyAutomaticallyRetryOnFailureFromParameterConfiguration","applyAutomaticallyReconnectPeerConnectionFromParameterConfiguration","init","ChannelState","Dimension","width","height","other","BitrateState","BitrateMode","Durations","duration","_duration","isNegative","abs","offset","floor","milliseconds","seconds","minutes","hours","parts","padStart","targetLength","padString","repeat","VideoTelemetry","channelStartTime","_streamId","_pageLoadTime","_channelStartTime","video","_startRecordingFirstFrame","_listenToFirstTime","callTimeToFirstFrame","_clearTimeToFirstFrameListener","_listenForStall","onStall","_listenForContinuation","event","onContinuation","_clearRebufferingListener","toIsoString","pushTimeToFirstFrame","pushChannelCreationTimeToFirstFrame","_timeToFirstFrame","uint64","durationSincePageLoad","_channelCreationTimeToFirstFrame","_videoStalled","buffered","bufferLength","hasNotProgressedSinceLastProgressEvent","end","_lastProgress","timeSinceStop","newResolution","_videoResolution","StreamSetupListener","_startTime","recordStreamMetric","_metricSubmitted","setupTime","metricName","NetworkMonitor","isSupported","setupNetworkChangeListeners","updateStatistics","_isSupported","_rtt","_effectiveType","_downlinkThroughputCapacity","downlink","downlinkMax","effectiveType","rtt","getRoundTripTime","getEffectiveType","getDownlinkThroughputCapacity","SessionTelemetry","applicationActivityMonitor","_networkMonitor","recordForegroundChange","recordNetworkRTTUpdate","recordNetworkTypeChangeUpdate","downlinkThroughputCapacity","recordNetworkDownlinkThroughputCapacityUpdate","timeSinceLastChange","getTimeSinceLastChange","newRTT","oldRtt","_lastNetworkStatistics","newNetworkType","oldNetworkType","newCapacity","oldCapacity","float","TokenContext","tokenExpiring","ChannelContext","targetLag","disposables","channelDisposables","rendererDisposables","channelInitialization","videoElement","autoMuted","autoPaused","authorized","online","loading","playing","standby","stopped","lag","bitrateLimit","resolution","empty","failureCount","endPoint","stream","rtcStatistics","status","dataset","PeerConnectionContext","peerConnection","peerConnectionReconnectAttempts","StateContext","isStarting","isDisposed","PeerConnectionService","isPrecachingEnabled","precacheCreatePeerConnectionOffer","_cached","direction","createPeerConnectionOffer","createPeerConnection","supportsAddTransceiver","audioTransceiver","videoTransceiver","localOffer","offerToReceiveAudio","offerToReceiveVideo","initiateInitialPrecaching","BitrateModeMapping","bitrateMode","Normal","Force","Reset","BitrateStateMapping","bitrateState","Keep","apiVersion","EndPoint","timeout","_uri","_timeout","_roundTripTime","buildPingUrl","start","race","finished","ok","localSessionDescription","buildUrl","clientVersion","bodyWithOffer","httpRoundTripTime","sessionDescription","convertRTCSdpTypeToSdpType","createAnswerDescription","bodyWithoutOffer","createOfferDescription","finally","clearTimeout","httpResponse","mapHttpStatusToSubscribeStatus","convertHttpResponseToSubscribeResponse","subscribeResponse","debug","mapHttpStatusToPublishStatus","convertHttpResponseToPublishResponse","sharedSecret","mapHttpStatusToSetRemoteDescriptionStatus","convertHttpResponseToSetRemoteDescriptionResponse","setRemoteDescriptionResponse","elapsedInMilliseconds","bitrateInBitsPerSecond","convertBitrateStateToBitrateStateType","convertBitrateModeToBitrateModeType","mapHttpStatusToSetTemporaryMaximalBitrateStatus","candidates","discoveryCompleted","mapHttpStatusToAddIceCandidatesStatus","convertHttpResponseToAddIceCandidatesResponse","addIceCandidatesResponse","mapHttpStatusToSetDestroyStreamStatus","convertHttpResponseToDestroyStreamResponse","destroyStreamResponse","path","pathAsArray","concat","json","rtcConfiguration","convertIRtcConfigurationToRTCConfiguration","convertISessionDescriptionToRTCSessionDescription","createAnswerDescriptionResponse","createOfferDescriptionResponse","publishResponse","bundlePolicy","iceCandidatePoolSize","iceServers","urls","username","credential","iceTransportPolicy","peerIdentity","rtcpMuxPolicy","rtcSessionDescription","destroyStream","defaultTimeout","DiscoveryService","text","asString","endPoints","map","buildDiscoveryUrl","discoverNearbyEndPoints","neverResolve","ping","time","Discovery","discoverClosestEndPointWithCaching","_cache","discoveryService","cachedValue","discoverClosestEndPoint","precacheClosestEndPointDiscovery","SdpParser","_sdp","sdpSplitByLines","sdpSplitByTracks","_audioCodec","applyCodec","_videoCodec","_isAudioTrackEnabled","isTrackByTypeEnabled","_isVideoTrackEnabled","sdpSectionForType","sdpTrack","sdpLine","RtcConnectionMonitor","estimatedRoundTripTime","_estimatedRoundTripTime","_tracksToMonitor","getCurrentOfferDisabled","parsedSDP","_estimatedAudioCodec","audioCodec","_estimatedVideoCodec","videoCodec","updateStatistic","_rtcStatistic","_isMonitorRunning","_updateTimeOut","getStatsPromiseBasedDisabled","updateStatisticLegacy","getKindForSafari11","id","stats","lastPacketReceivedTimestamp","roundTripTime","report","currentRoundTripTime","mediaType","codec","codecId","mimeType","bytesDelta","bytesReceived","timeDelta","bitrate","ssrc","packetsLost","packetsReceived","getCodecByType","framesDecoded","fps","round","getStatsLegacy","names","stat","RtcConfigurationManager","RealTimeStream","channelContext","peerConnectionContext","handleStreamFailure","_channelContext","_peerConnectionContext","_handleStreamFailure","listenOnStreamSetup","playMediaStreamInVideoElement","all","clientOfferDisabled","supportsSetConfiguration","supportsGetConfiguration","applySessionAndStreamPropertiesToVideoElement","mapSubscribeStatusToChannelStatus","applyStatus","applyRtcConfiguration","submitCandidatesTimeout","cancelDiscovery","sendLocalCandidates","candidate","addIceCandidates","retryCallback","pause","srcObject","onLine","reconnectPeerConnection","mediaStreamPromise","onTrackDisabled","trackListener","timeoutId","streams","answer","mapSetRemoteDescriptionStatusToChannelStatus","success","rtcConnectionMonitor","rtcStatistic","statistics","rtcVideoStatistic","rtcAudioStatistic","audio","audioTrackFailed","videoTrackFailed","optionalPeerConnection","truncateIceServers","newRtcConfiguration","maximalNumberOfPeerConnectionReconnectAttempts","automaticallyReconnectPeerConnection","iceRestart","offer","RealTimeStreamFactory","capabilities","defaultTargetLag","defaultStreamTerminationReason","failureCountCleanUpIntervalInMilliseconds","Channel","_tokenContext","_stateContext","_readOnlyVideoElement","_readOnlyToken","_readOnlyPeerConnection","_readOnlyState","_readOnlyAutoMuted","_readOnlyAutoPaused","_readOnlyTokenExpiring","_readOnlyAuthorized","_readOnlyOnline","_readOnlyLoading","_readOnlyPlaying","_readOnlyStandby","_readOnlyStopped","_readOnlyTargetLag","_readOnlyLag","_readOnlyBitrateLimit","_readOnlyResolution","_readOnlyFailureCount","_readOnlyEndPoint","_readOnlyStream","_readOnlyRtcStatistics","_readOnlyMediaStream","_sessionTelemetry","_videoMetaDataChangedHandler","handleVideoMetaDataChanged","videoTelemetry","setupListenerForTimeToFirstTime","setupListenerForRebuffering","restartAfterStop","clearFailureCountTimeout","onVideoResolutionChanges","getTime","limitBitrate","destroyStreamOnUnmount","videoWidth","videoHeight","processStop","cleanUpResources","muted","processStart","handleStreamFailureCallback","streamPlayer","StreamFactory","fail","automaticRetryOnFailure","getRetryInterval","min","pow","max","playPromise","play","hasAudioTrack","filter","automaticallyMuteVideoOnPlayFailureOff","Channels","initialized","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","d","a","definition","get","prop","r"],"mappings":"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","file":"full.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"phenix\"] = factory();\n\telse\n\t\troot[\"phenix\"] = factory();\n})(self, function() {\nreturn ","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Promise from './Promise';\n\nexport default class PromiseHandler {\n  onFulfilled: Function;\n  onRejected: Function;\n  promise: Promise;\n\n  constructor(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport PromiseHandler from './PromiseHandler';\n\nclass Promise {\n  _state: number;\n  _handled: boolean;\n  _value: Promise;\n  _deferreds: Array<PromiseHandler>;\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  then(onFulfilled: Function, onRejected: Function): Promise | void;\n\n  constructor(callback) {\n    if (!(this instanceof Promise)) {\n      throw new TypeError('Promises must be constructed via new');\n    }\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('not a function');\n    }\n\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    this.doResolve(callback);\n  }\n\n  doResolve(callback: Function): void {\n    let done = false;\n\n    try {\n      callback(\n        value => {\n          if (done) {\n            return;\n          }\n\n          done = true;\n          this.promiseResolve(value);\n        },\n        reason => {\n          if (done) {\n            return;\n          }\n\n          done = true;\n          this.promiseReject(reason);\n        }\n      );\n    } catch (error) {\n      if (done) {\n        return;\n      }\n\n      done = true;\n      this.promiseReject(error);\n    }\n  }\n\n  promiseResolve(newValue: Promise | undefined): void {\n    const promise = this as Promise;\n\n    try {\n      // Promise Resolution Procedure: https://github.com/Promises-aplus/Promises-spec#the-Promise-resolution-procedure\n      if (newValue === promise) {\n        throw new TypeError('A Promise cannot be resolved with it self.');\n      }\n\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        const then = newValue.then;\n\n        if (newValue instanceof Promise) {\n          promise._state = 3;\n          promise._value = newValue;\n          promise.finale();\n\n          return;\n        } else if (typeof then === 'function') {\n          promise.doResolve(function(): void {\n            // eslint-disable-next-line prefer-rest-params\n            then.apply(newValue, arguments);\n          });\n\n          return;\n        }\n      }\n\n      promise._state = 1;\n      promise._value = newValue;\n      promise.finale();\n    } catch (e) {\n      promise.promiseReject(e);\n    }\n  }\n\n  promiseReject(newValue: Promise | undefined): void {\n    this._state = 2;\n    this._value = newValue;\n    this.finale();\n  }\n\n  finale(): void {\n    if (this._state === 2 && this._deferreds.length === 0) {\n      Promise._immediate(() => {\n        if (!this._handled) {\n          Promise._unhandledRejection(this._value);\n        }\n      });\n    }\n\n    for (let i = 0, len = this._deferreds.length; i < len; i++) {\n      this.handle(this._deferreds[i]);\n    }\n\n    this._deferreds = null;\n  }\n\n  handle(deferred: PromiseHandler): void {\n    let promise = this as Promise;\n\n    while (promise._state === 3) {\n      promise = promise._value;\n    }\n\n    if (promise._state === 0) {\n      promise._deferreds.push(deferred);\n\n      return;\n    }\n\n    promise._handled = true;\n    Promise._immediate(() => {\n      const callback = promise._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\n      if (callback === null) {\n        if (promise._state === 1) {\n          deferred.promise.promiseResolve(promise._value);\n        } else {\n          deferred.promise.promiseReject(promise._value);\n        }\n\n        return;\n      }\n\n      let result;\n\n      try {\n        result = callback(promise._value);\n      } catch (e) {\n        deferred.promise.promiseReject(e);\n\n        return;\n      }\n\n      deferred.promise.promiseResolve(result);\n    });\n  }\n\n  static all(arr: Array<Promise>): Promise {\n    return new Promise((resolve, reject) => {\n      if (!Array.isArray(arr)) {\n        return reject(new TypeError('Promise.all accepts an array'));\n      }\n\n      const args = Array.prototype.slice.call(arr);\n\n      if (args.length === 0) {\n        return resolve([]);\n      }\n\n      let remaining = args.length;\n      const manageResponse = (i, value): void => {\n        try {\n          if (value && (typeof value === 'object' || typeof value === 'function')) {\n            const then = value.then;\n\n            if (typeof then === 'function') {\n              then.call(\n                value,\n                value => manageResponse(i, value),\n                reject\n              );\n\n              return;\n            }\n          }\n\n          args[i] = value;\n\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (error) {\n          reject(error);\n        }\n      };\n\n      for (let i = 0; i < args.length; i++) {\n        manageResponse(i, args[i]);\n      }\n    });\n  }\n\n  static resolve(value): Promise {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(resolve => resolve(value));\n  }\n\n  static reject(value): Promise {\n    return new Promise((_, reject) => reject(value));\n  }\n\n  static race(arr: Array<Promise>): Promise {\n    return new Promise((resolve, reject) => {\n      if (!Array.isArray(arr)) {\n        return reject(new TypeError('Promise.race accepts an array'));\n      }\n\n      for (let i = 0, len = arr.length; i < len; i++) {\n        Promise.resolve(arr[i]).then(resolve, reject);\n      }\n    });\n  }\n\n  static _immediate(callback: Function): void {\n    const ignored = setTimeout(callback, 0);\n  }\n\n  static _unhandledRejection(error): void {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', error); // eslint-disable-line no-console\n    }\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected: Function): Promise | void {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype['then'] = function(onFulfilled: Function, onRejected: Function): Promise | void {\n  const promise = new this.constructor(() => null);\n\n  this.handle(new PromiseHandler(onFulfilled, onRejected, promise));\n\n  return promise;\n};\n\nPromise.prototype['finally'] = function(callback: Function): Promise | void {\n  const constructor = this.constructor;\n\n  return this.then(\n    value => constructor.resolve(callback()).then(() => value),\n    reason => constructor.resolve(callback()).then(() => constructor.reject(reason))\n  );\n};\n\nexport default Promise;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {IAppender} from './IAppender';\nimport Appenders from './Appenders';\nimport LoggingThreshold from './LoggingThreshold';\n\nexport enum LoggingLevel {\n  All = -1,\n  Trace = 10,\n  Debug = 20,\n  Info = 30,\n  Warn = 40,\n  Error = 50,\n  Fatal = 60,\n  Off = 100,\n}\n\nexport type LoggingLevelType = 'Off' | 'Trace' | 'Debug' | 'Info' | 'Warn' | 'Error' | 'Fatal' | 'All';\n\nexport default class Logger {\n  private readonly _category: string;\n  private readonly _appenders: Appenders;\n  private readonly _threshold: LoggingThreshold;\n\n  get category(): string {\n    return this._category;\n  }\n\n  get appenders(): Appenders {\n    return this._appenders;\n  }\n\n  get threshold(): LoggingThreshold {\n    return this._threshold;\n  }\n\n  trace(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Trace) {\n      return;\n    }\n\n    this.log(LoggingLevel.Trace, args);\n  }\n\n  debug(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Debug) {\n      return;\n    }\n\n    this.log(LoggingLevel.Debug, args);\n  }\n\n  info(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Info) {\n      return;\n    }\n\n    this.log(LoggingLevel.Info, args);\n  }\n\n  warn(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Warn) {\n      return;\n    }\n\n    this.log(LoggingLevel.Warn, args);\n  }\n\n  error(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Error) {\n      return;\n    }\n\n    this.log(LoggingLevel.Error, args);\n  }\n\n  fatal(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Fatal) {\n      return;\n    }\n\n    this.log(LoggingLevel.Fatal, args);\n  }\n\n  private log(level: number, args: any): void {\n    const date = new Date();\n    const message = this.replacePlaceholders(args);\n\n    this._appenders.value.forEach((appender: IAppender) => {\n      appender.log(level, message, this.category, date);\n    });\n  }\n\n  private replacePlaceholders(args: any): string {\n    let replacePlaceholdersString = args[0];\n    let index = 0;\n\n    while (replacePlaceholdersString.indexOf && args.length > 1 && index >= 0) {\n      index = replacePlaceholdersString.indexOf('%', index);\n\n      if (index > 0) {\n        const type = replacePlaceholdersString.substring(index + 1, index + 2);\n\n        switch (type) {\n          case '%':\n            // Escaped '%%' turns into '%'\n            replacePlaceholdersString = replacePlaceholdersString.substring(0, index) + replacePlaceholdersString.substring(index + 1);\n            index++;\n\n            break;\n          case 's':\n          case 'd':\n            // Replace '%d' or '%s' with the argument\n            args[0] = replacePlaceholdersString = this.replaceArgument(\n              this.toString(args[1]),\n              replacePlaceholdersString,\n              index\n            );\n            args.splice(1, 1);\n\n            break;\n          case 'j':\n            // Replace %j' with the argument\n            args[0] = replacePlaceholdersString = this.replaceArgument(\n              this.stringify(args[1]),\n              replacePlaceholdersString,\n              index\n            );\n\n            args.splice(1, 1);\n\n            break;\n          default:\n            return args.toString();\n        }\n      }\n    }\n\n    if (args.length > 1) {\n      args = args.reduce((accumulator, currentValue, index, array) => {\n        if (index + 1 === array.length && currentValue instanceof Error) {\n          return accumulator + '\\n' + this.toString(currentValue.stack);\n        }\n\n        return accumulator + `[${this.toString(currentValue)}]`;\n      });\n    }\n\n    return args.toString();\n  }\n\n  private stringify(arg: any): string {\n    const cache = [];\n\n    try {\n      return JSON.stringify(\n        arg instanceof Error ? this.toString(arg) : arg,\n        (key, value) => {\n          if (!!value && value instanceof Object) {\n            if (cache.includes(value)) {\n              return '<recursive>';\n            }\n\n            cache.push(value);\n          }\n\n          return value;\n        },\n        2\n      );\n    } catch (e) {\n      return '[object invalid JSON.stringify]';\n    }\n  }\n\n  private replaceArgument(argument: any, replacePlaceholdersString: string, index: number): string {\n    return replacePlaceholdersString.substring(0, index) + this.toString(argument) + replacePlaceholdersString.substring(index + 2);\n  }\n\n  private toString(data: any): string {\n    if (typeof data === 'string') {\n      return data;\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'true' : 'false';\n    }\n\n    if (typeof data === 'number') {\n      return data.toString();\n    }\n\n    let toStringStr = '';\n\n    if (data) {\n      if (typeof data === 'function') {\n        toStringStr = data.toString();\n      } else if (data instanceof Object) {\n        try {\n          toStringStr = data.toString();\n        } catch (e) {\n          toStringStr = '[object invalid toString()]';\n        }\n      }\n    }\n\n    return toStringStr;\n  }\n\n  constructor(category: string, appenders: Appenders, threshold: LoggingThreshold) {\n    this._category = category;\n    this._appenders = appenders;\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {IAppender} from './IAppender';\n\nexport default class Appenders {\n  private _appenders: Array<IAppender> = [];\n\n  get value(): Array<IAppender> {\n    return this._appenders;\n  }\n\n  add(appender: IAppender): void {\n    this._appenders.push(appender);\n  }\n\n  remove(appender): void {\n    this._appenders = this._appenders.reduce((items, item) => {\n      if (!(item === appender)) {\n        items.push(item);\n      }\n\n      return items;\n    }, [] as Array<IAppender>);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\ndeclare const __PRIVACY_MODE__: boolean;\n\nexport default class PrivacyMode {\n  private static _isPrivate: boolean;\n\n  static get isPrivate(): boolean {\n    return this._isPrivate;\n  }\n\n  static applyIsPrivate(): void {\n    try {\n      this._isPrivate = __PRIVACY_MODE__;\n    } catch (e) {\n      this._isPrivate = false;\n    }\n  }\n}\n\nPrivacyMode.applyIsPrivate();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport PrivacyMode from '../dom/PrivacyMode';\nimport {LoggingLevel} from '../logger/Logger';\n\nexport default class LoggerDefaults {\n  static get defaultLoggingLevel(): LoggingLevel {\n    return PrivacyMode.isPrivate ? LoggingLevel.Off : LoggingLevel.All;\n  }\n\n  static get defaultConsoleLoggingLevel(): LoggingLevel {\n    return PrivacyMode.isPrivate ? LoggingLevel.Off : LoggingLevel.All;\n  }\n\n  static get defaultTelemetryLoggingLevel(): LoggingLevel {\n    return LoggingLevel.Info;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerDefaults from './LoggerDefaults';\nimport {LoggingLevel} from './Logger';\n\nexport default class LoggingThreshold {\n  private _threshold: LoggingLevel = LoggerDefaults.defaultLoggingLevel;\n\n  get value(): LoggingLevel {\n    return this._threshold;\n  }\n\n  setThreshold(threshold: LoggingLevel): void {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {IAppender} from './IAppender';\nimport {LoggingLevel} from './Logger';\n\nexport default class ConsoleAppender implements IAppender {\n  private readonly _threshold: LoggingLevel;\n\n  log(logLevel: LoggingLevel, message: string, category: string, date: Date): void {\n    if (logLevel < this._threshold) {\n      return;\n    }\n\n    const fullMessage = `${date.toISOString()} [${category}] [${LoggingLevel[logLevel]}] ${message}`;\n\n    if (logLevel < LoggingLevel.Warn) {\n      console.log(fullMessage);\n\n      return;\n    }\n\n    console.error(fullMessage);\n  }\n\n  constructor(threshold: LoggingLevel) {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\ndeclare const __SDKVERSION__: string;\n\nexport default class VersionManager {\n  private static _defaultVersion = new Date().toISOString();\n\n  static get sdkVersion(): string {\n    try {\n      return __SDKVERSION__;\n    } catch (e) {\n      return this._defaultVersion;\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {LoggingLevel} from '../logger/Logger';\nimport VersionManager from '../sdk/version/VersionManager';\nimport TelemetryConfiguration from './TelemetryConfiguration';\n\nconst requestSizeLimit = 8192;\n\ninterface ILogItem {\n  timestamp: string;\n  tenancy: string;\n  level: string;\n  category: string;\n  message: string;\n  sessionId: string;\n  version: string;\n  environment: string;\n  fullQualifiedName: string;\n}\n\nexport default class TelemetryService {\n  private readonly _telemetryConfiguration: TelemetryConfiguration;\n\n  private _logs: Array<ILogItem> = [];\n  private _isSending: boolean;\n  private _domain = location.hostname;\n\n  constructor(telemetryConfiguration: TelemetryConfiguration) {\n    this._telemetryConfiguration = telemetryConfiguration;\n  }\n\n  push(logLevel: LoggingLevel, message: string, category: string, timestamp: Date): void {\n    const logRecord = {\n      timestamp: timestamp.toISOString(),\n      tenancy: this._telemetryConfiguration.tenancy,\n      level: LoggingLevel[logLevel],\n      category,\n      message,\n      sessionId: this._telemetryConfiguration.sessionId,\n      version: VersionManager.sdkVersion,\n      environment: this._telemetryConfiguration.environment,\n      fullQualifiedName: this._domain\n    };\n\n    if (logLevel < LoggingLevel.Error) {\n      this._logs.push(logRecord);\n    } else {\n      this._logs.unshift(logRecord);\n    }\n\n    const ignored = this.sendLogsIfAble();\n  }\n\n  private async sendLogs(logMessages: Array<ILogItem>): Promise<Response | void> {\n    const formData = new FormData();\n\n    formData.append('jsonBody', JSON.stringify({records: logMessages}));\n\n    return await fetch(this._telemetryConfiguration.url, {\n      method: 'POST',\n      body: formData\n    });\n  }\n\n  private async sendLogsIfAble(): Promise<Response | void> {\n    if (this._logs.length <= 0 || this._isSending) {\n      return;\n    }\n\n    let numberOfLogsToSend = 0;\n    let sizeOfLogsToSend = 0;\n\n    this._isSending = true;\n\n    const getLogSize = (log: ILogItem): number => Object.values(log)\n      .reduce((sum, item) => sum + (item ? item.length : 0), 0);\n\n    while (this._logs.length > numberOfLogsToSend && getLogSize(this._logs[numberOfLogsToSend]) + sizeOfLogsToSend < requestSizeLimit) {\n      sizeOfLogsToSend += getLogSize(this._logs[numberOfLogsToSend]);\n      numberOfLogsToSend++;\n    }\n\n    if (!numberOfLogsToSend) {\n      this._logs[numberOfLogsToSend].message = this._logs[numberOfLogsToSend].message.substring(0,\n        getLogSize(this._logs[numberOfLogsToSend]) + (requestSizeLimit - getLogSize(this._logs[numberOfLogsToSend])));\n      numberOfLogsToSend = 1;\n    }\n\n    const logMessages = this._logs.slice(0, numberOfLogsToSend);\n\n    this._logs = this._logs.slice(numberOfLogsToSend);\n\n    return this.sendLogs(logMessages).then(response => {\n      this._isSending = false;\n\n      const ignored = this.sendLogsIfAble();\n\n      return response;\n    }).catch(() => {\n      this._isSending = false;\n\n      const ignored = this.sendLogsIfAble();\n    });\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport TelemetryDefault from './TelemetryDefault';\n\nexport enum TelemetryLevel {\n  Off = 100,\n  Essential = 10,\n  All = -1\n}\n\nexport type TelemetryLevelType = 'Off' | 'Essential' | 'All';\n\nexport default class MetricsConfiguration {\n  private _url = 'https://telemetry.phenixrts.com/telemetry/metrics';\n  private _tenancy: string;\n  private _sessionId: string;\n  private _environment: string;\n  private _threshold: TelemetryLevel = TelemetryDefault.defaultTelemetryLevel;\n\n  get url(): string {\n    return this._url;\n  }\n\n  set url(url: string) {\n    const metricsUrl = new URL(url);\n\n    metricsUrl.pathname = metricsUrl.pathname + '/metrics';\n\n    this._url = metricsUrl.toString();\n  }\n\n  get environment(): string {\n    return this._environment;\n  }\n\n  set environment(environment: string) {\n    this._environment = environment;\n  }\n\n  get tenancy(): string {\n    return this._tenancy;\n  }\n\n  set tenancy(tenancy: string) {\n    this._tenancy = tenancy;\n  }\n\n  get sessionId(): string {\n    return this._sessionId;\n  }\n\n  set sessionId(sessionId: string) {\n    this._sessionId = sessionId;\n  }\n\n  get threshold(): TelemetryLevel {\n    return this._threshold;\n  }\n\n  set threshold(threshold: TelemetryLevel) {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport TelemetryService from './TelemetryService';\nimport TelemetryConfiguration from './TelemetryConfiguration';\nimport {IAppender} from '../logger/IAppender';\nimport {LoggingLevel} from '../logger/Logger';\n\nexport default class TelemetryAppender implements IAppender {\n  private readonly _telemetryService: TelemetryService;\n  private readonly _tenancy: string;\n  private readonly _sessionId: string;\n  private readonly _threshold: LoggingLevel;\n\n  constructor(telemetryConfiguration: TelemetryConfiguration) {\n    this._tenancy = telemetryConfiguration.tenancy;\n    this._sessionId = telemetryConfiguration.sessionId;\n    this._threshold = telemetryConfiguration.threshold;\n    this._telemetryService = new TelemetryService(telemetryConfiguration);\n  }\n\n  log(logLevel: LoggingLevel, message: string, category: string, date: Date): void {\n    if (logLevel < this._threshold) {\n      return;\n    }\n\n    this._telemetryService.push(logLevel, message, category, date);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {LoggingLevel} from '../logger/Logger';\nimport LoggerDefaults from '../logger/LoggerDefaults';\n\nexport default class TelemetryConfiguration {\n  private _url = 'https://telemetry.phenixrts.com/telemetry/logs';\n  private _tenancy: string;\n  private _sessionId: string;\n  private _environment: string;\n  private _threshold = LoggerDefaults.defaultTelemetryLoggingLevel;\n\n  get url(): string {\n    return this._url;\n  }\n\n  set url(url: string) {\n    const telemetryUrl = new URL(url);\n\n    telemetryUrl.pathname = telemetryUrl.pathname + '/logs';\n\n    this._url = telemetryUrl.toString();\n  }\n\n  get environment(): string {\n    return this._environment;\n  }\n\n  set environment(environment: string) {\n    this._environment = environment;\n  }\n\n  get tenancy(): string {\n    return this._tenancy;\n  }\n\n  set tenancy(tenancy: string) {\n    this._tenancy = tenancy;\n  }\n\n  get sessionId(): string {\n    return this._sessionId;\n  }\n\n  set sessionId(sessionId: string) {\n    this._sessionId = sessionId;\n  }\n\n  get threshold(): LoggingLevel {\n    return this._threshold;\n  }\n\n  set threshold(threshold: LoggingLevel) {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport PrivacyMode from '../dom/PrivacyMode';\nimport {TelemetryLevel} from '../metrics/MetricsConfiguration';\n\nexport default class TelemetryDefault {\n  static get defaultTelemetryLevel(): TelemetryLevel {\n    return PrivacyMode.isPrivate ? TelemetryLevel.Essential : TelemetryLevel.All;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport function assertUnreachable(x: never): never {\n  throw new Error(`Unexpected value [${x}]. This should never be reached`);\n}\n\nexport default assertUnreachable;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {TelemetryLevel, TelemetryLevelType} from './MetricsConfiguration';\nimport assertUnreachable from '../lang/assertUnreachable';\n\nexport default class TelemetryLevelMapping {\n  static convertTelemetryLevelToTelemetryLevelType(telemetryLevel: TelemetryLevel): TelemetryLevelType {\n    switch (telemetryLevel) {\n      case TelemetryLevel.Off:\n        return 'Off';\n      case TelemetryLevel.Essential:\n        return 'Essential';\n      case TelemetryLevel.All:\n        return 'All';\n      default:\n        assertUnreachable(telemetryLevel);\n    }\n  }\n\n  static convertTelemetryLevelTypeToTelemetryLevel(telemetryLevelType: TelemetryLevelType): TelemetryLevel {\n    switch (telemetryLevelType) {\n      case 'Off':\n        return TelemetryLevel.Off;\n      case 'Essential':\n        return TelemetryLevel.Essential;\n      case 'All':\n        return TelemetryLevel.All;\n      default:\n        assertUnreachable(telemetryLevelType);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport assertUnreachable from '../lang/assertUnreachable';\nimport {LoggingLevel, LoggingLevelType} from './Logger';\n\nexport default class LoggingLevelMapping {\n  static convertLoggingLevelToLoggingLevelType(loggingLevel: LoggingLevel): LoggingLevelType {\n    switch (loggingLevel) {\n      case LoggingLevel.Off:\n        return 'Off';\n      case LoggingLevel.Trace:\n        return 'Trace';\n      case LoggingLevel.Debug:\n        return 'Debug';\n      case LoggingLevel.Info:\n        return 'Trace';\n      case LoggingLevel.Warn:\n        return 'Warn';\n      case LoggingLevel.Error:\n        return 'Error';\n      case LoggingLevel.Fatal:\n        return 'Fatal';\n      case LoggingLevel.All:\n        return 'All';\n      default:\n        assertUnreachable(loggingLevel);\n    }\n  }\n\n  static convertLoggingLevelTypeToLoggingLevel(loggingLevelType: LoggingLevelType): LoggingLevel {\n    switch (loggingLevelType) {\n      case 'Off':\n        return LoggingLevel.Off;\n      case 'Trace':\n        return LoggingLevel.Trace;\n      case 'Debug':\n        return LoggingLevel.Debug;\n      case 'Info':\n        return LoggingLevel.Info;\n      case 'Warn':\n        return LoggingLevel.Warn;\n      case 'Error':\n        return LoggingLevel.Error;\n      case 'Fatal':\n        return LoggingLevel.Fatal;\n      case 'All':\n        return LoggingLevel.All;\n      default:\n        assertUnreachable(loggingLevelType);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport TelemetryLevelMapping from '../metrics/TelemetricLevelMapping';\nimport TelemetryDefault from '../metrics/TelemetryDefault';\nimport LoggingLevelMapping from '../logger/LoggingLevelMapping';\nimport LoggerDefaults from '../logger/LoggerDefaults';\n\n// This file is used only for the silent build to mock ConfigurationParameterReader class\nexport default class PlainConfigurationParameterReader {\n  getStringValue(name: string): string {\n    return this.defaultStringValue[name];\n  }\n\n  getBooleanValue(name: string): boolean {\n    return this.defaultBooleanValue[name];\n  }\n\n  private get defaultStringValue(): { [name: string]: string } {\n    return {\n      'phenix-metrics-level': TelemetryLevelMapping.convertTelemetryLevelToTelemetryLevelType(TelemetryDefault.defaultTelemetryLevel),\n      'phenix-logging-level': LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(LoggerDefaults.defaultLoggingLevel),\n      'phenix-console-logging-level': LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(LoggerDefaults.defaultConsoleLoggingLevel),\n      'phenix-telemetry-logging-level': LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(LoggerDefaults.defaultTelemetryLoggingLevel),\n      'phenix-channel-token': '',\n      'phenix-uri': '',\n      'phenix-base-uri': ''\n    };\n  }\n\n  private get defaultBooleanValue(): { [name: string]: boolean } {\n    return {\n      'phenix-automatically-retry-on-failure': true,\n      'phenix-automatically-reconnect-peer-connection': true\n    };\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {ILogger} from './LoggerInterface';\nimport Logger, {LoggingLevel} from './Logger';\nimport Appenders from './Appenders';\nimport LoggingThreshold from './LoggingThreshold';\nimport ConsoleAppender from './ConsoleAppender';\nimport TelemetryAppender from '../telemetry/TelemetryApender';\nimport TelemetryConfiguration from '../telemetry/TelemetryConfiguration';\nimport ConfigurationParameterReader from '../dom/ConfigurationParameterReader';\nimport {IConfigurationParameterReader} from '../dom/IConfigurationParamaterReader';\nimport LoggerDefaults from './LoggerDefaults';\n\nexport default class LoggerFactory {\n  private static _configurationParameterReader: IConfigurationParameterReader = new ConfigurationParameterReader();\n  private static _loggers: {[category: string]: ILogger} = {};\n  private static _appenders: Appenders = new Appenders();\n  private static _threshold: LoggingThreshold = new LoggingThreshold();\n  private static _telemetryConfiguration: TelemetryConfiguration = new TelemetryConfiguration();\n\n  static get telemetryConfiguration(): TelemetryConfiguration {\n    return LoggerFactory._telemetryConfiguration;\n  }\n\n  static getLogger(category: string): ILogger {\n    if (typeof category !== 'string') {\n      category = 'SDK';\n    }\n\n    const logger = LoggerFactory._loggers[category];\n\n    if (logger) {\n      return logger;\n    }\n\n    return LoggerFactory._loggers[category] = new Logger(category, this._appenders, this._threshold);\n  }\n\n  static applyLoggerConfigFromParameterConfiguration(): void {\n    LoggerFactory.applyLoggingLevel();\n    LoggerFactory.applyAppenderLoggingLevel('console', LoggerFactory.applyConsoleLogger.bind(this));\n    LoggerFactory.applyAppenderLoggingLevel('telemetry', LoggerFactory.applyTelemetryLogger.bind(this));\n  }\n\n  private static applyLoggingLevel(): void {\n    const parameterValue = this._configurationParameterReader.getStringValue('phenix-logging-level');\n\n    if (LoggingLevel[parameterValue]) {\n      this._threshold.setThreshold(LoggingLevel[parameterValue]);\n    }\n\n    return;\n  }\n\n  private static applyAppenderLoggingLevel(name: string, applyAppender: (level: LoggingLevel) => void): void {\n    const parameterValue = this._configurationParameterReader.getStringValue(`phenix-${name}-logging-level`);\n\n    if (parameterValue === 'Off') {\n      return;\n    }\n\n    applyAppender(LoggingLevel[parameterValue]);\n  }\n\n  private static applyConsoleLogger(level: LoggingLevel): void {\n    this._appenders.add(new ConsoleAppender(level || LoggerDefaults.defaultConsoleLoggingLevel));\n  }\n\n  private static applyTelemetryLogger(level: LoggingLevel): void {\n    this._telemetryConfiguration.threshold = level || LoggerDefaults.defaultTelemetryLoggingLevel;\n\n    this._appenders.add(new TelemetryAppender(this._telemetryConfiguration));\n  }\n\n  private constructor() {\n    throw new Error('LoggerFactory is a static class that may not be instantiated');\n  }\n}\n\nLoggerFactory.applyLoggerConfigFromParameterConfiguration();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport default class Strings {\n  static random(length: number): string {\n    const random13Characters = (): string => {\n      return Math.random().toString(16).substring(2, 15);\n    };\n\n    const loops: number = Math.ceil(length / 13);\n\n    return new Array(loops).fill(random13Characters).reduce((string, func) => {\n      return string + func();\n    }, '').substring(0, length);\n  }\n\n  private constructor() {\n    throw new Error('Strings is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IDisposable from './IDisposable';\n\nexport default class Disposable implements IDisposable {\n  private _disposed: boolean;\n  private _disposable: () => void;\n\n  constructor(disposable: () => void) {\n    this._disposed = false;\n    this._disposable = disposable;\n  }\n\n  dispose(): void {\n    if (this._disposed) {\n      return;\n    }\n\n    this._disposed = true;\n\n    return this._disposable.call(this);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport IDisposable from '../lang/IDisposable';\nimport Disposable from '../lang/Disposable';\nimport IComparable from '../lang/IComparable';\n\nclass DisposableListener<T> extends Disposable {\n  constructor(listeners: Array<T>, listener: T) {\n    super(() => {\n      const idx = listeners.indexOf(listener);\n\n      if (idx >= 0) {\n        listeners.splice(idx, 1);\n      }\n    });\n  }\n}\n\nexport default class Subject<T> {\n  private readonly _listeners: Array<(T) => void>;\n  private _value: T;\n\n  constructor(value: T) {\n    this._listeners = [];\n    this._value = value;\n  }\n\n  set value(value: T) {\n    let changed = this._value !== value;\n\n    if (changed && value) {\n      const comparable = value as unknown as IComparable<T>;\n\n      if (typeof comparable.equals === 'function') {\n        changed = !comparable.equals(this._value);\n      }\n    }\n\n    if (!changed) {\n      return;\n    }\n\n    this._value = value;\n\n    this._listeners.forEach(listener => {\n      listener(value);\n    });\n  }\n\n  get value(): T {\n    return this._value;\n  }\n\n  subscribe(listener: (T) => void): IDisposable {\n    this._listeners.push(listener);\n\n    listener(this._value);\n\n    return new DisposableListener<(T) => void>(this._listeners, listener);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport Subject from './Subject';\nimport IDisposable from '../lang/IDisposable';\n\nexport default class ReadOnlySubject<T> {\n  private readonly _subject: Subject<T>;\n\n  constructor(subject: Subject<T>) {\n    this._subject = subject;\n  }\n\n  get value(): T {\n    return this._subject.value;\n  }\n\n  subscribe(listener: (T) => void): IDisposable {\n    return this._subject.subscribe(listener);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport default class BrowserDetector {\n  private static readonly _browserNameAndVersionRegex = /(MSIE|(?!Gecko.+)Firefox|(?!AppleWebKit.+Chrome.+)Safari|(?!AppleWebKit.+)Chrome|AppleWebKit(?!.+Chrome|.+Safari)|Gecko(?!.+Firefox))(?: |\\/)([\\d.apre]+)/g;\n  private static readonly _browserNameAndVersion = BrowserDetector.parseBrowserNameAndVersion();\n  private static readonly _browserName = BrowserDetector.parseBrowserName();\n  private static readonly _browserMajorVersion = BrowserDetector.parseBrowserMajorVersion();\n\n  private static readonly _isChrome69 = BrowserDetector._browserNameAndVersion.includes('Chrome/69.');\n  private static readonly _isChrome70 = BrowserDetector._browserNameAndVersion.includes('Chrome/70.');\n  private static readonly _isChrome71 = BrowserDetector._browserNameAndVersion.includes('Chrome/71.');\n  private static readonly _isChrome72 = BrowserDetector._browserNameAndVersion.includes('Chrome/72.');\n  private static readonly _isChrome74 = BrowserDetector._browserNameAndVersion.includes('Chrome/74.');\n  private static readonly _isChrome75 = BrowserDetector._browserNameAndVersion.includes('Chrome/75.');\n  private static readonly _isChrome76 = BrowserDetector._browserNameAndVersion.includes('Chrome/76.');\n  private static readonly _isChrome77 = BrowserDetector._browserNameAndVersion.includes('Chrome/77.');\n\n  static get browserNameAndVersion(): string {\n    return BrowserDetector._browserNameAndVersion;\n  }\n\n  static get browserName(): string {\n    return this._browserName;\n  }\n\n  static get browserMajorVersion(): number {\n    return this._browserMajorVersion;\n  }\n\n  static get isChrome69(): boolean {\n    return BrowserDetector._isChrome69;\n  }\n\n  static get isChrome70(): boolean {\n    return BrowserDetector._isChrome70;\n  }\n\n  static get isChrome71(): boolean {\n    return BrowserDetector._isChrome71;\n  }\n\n  static get isChrome72(): boolean {\n    return BrowserDetector._isChrome72;\n  }\n\n  static get isChrome74(): boolean {\n    return BrowserDetector._isChrome74;\n  }\n\n  static get isChrome75(): boolean {\n    return BrowserDetector._isChrome75;\n  }\n\n  static get isChrome76(): boolean {\n    return BrowserDetector._isChrome76;\n  }\n\n  static get isChrome77(): boolean {\n    return BrowserDetector._isChrome77;\n  }\n\n  private static parseBrowserNameAndVersion(): string {\n    if (!navigator || !navigator.userAgent) {\n      return '';\n    }\n\n    const browserNameAndVersion = navigator.userAgent.match(BrowserDetector._browserNameAndVersionRegex);\n\n    if (browserNameAndVersion && browserNameAndVersion[0]) {\n      return browserNameAndVersion[0];\n    }\n\n    return BrowserDetector.parseBrowserNameAndVersionForIE();\n  }\n\n  private static parseBrowserName(): string {\n    if (!BrowserDetector._browserNameAndVersion) {\n      return '';\n    }\n\n    const browserNameList = BrowserDetector._browserNameAndVersion.split('/');\n\n    if (!browserNameList || !browserNameList[0]) {\n      return '';\n    }\n\n    return browserNameList[0];\n  }\n\n  private static parseBrowserMajorVersion(): number {\n    if (!BrowserDetector._browserNameAndVersion) {\n      return 0;\n    }\n\n    const browserVersionList = BrowserDetector._browserNameAndVersion.split('/');\n\n    if (!browserVersionList || !browserVersionList[1]) {\n      return 0;\n    }\n\n    const fullVersion = browserVersionList[1];\n\n    if (!fullVersion) {\n      return 0;\n    }\n\n    return Number(fullVersion.split('.')[0]) || 0;\n  }\n\n  private static parseBrowserNameAndVersionForIE(): string {\n    if (!navigator || !navigator.userAgent) {\n      return '';\n    }\n\n    const userAgent = navigator.userAgent;\n    const msie = userAgent.indexOf('MSIE ');\n\n    if (msie > 0) {\n      // IE 10 or older => return version number\n      return `IE/${parseInt(userAgent.substring(msie + 5, userAgent.indexOf('.', msie)), 10)}`;\n    }\n\n    const trident = userAgent.indexOf('Trident/');\n\n    if (trident > 0) {\n      // IE 11 => return version number\n      const version = userAgent.indexOf('rv:');\n\n      return `IE/${parseInt(userAgent.substring(version + 3, userAgent.indexOf('.', version)), 10)}`;\n    }\n\n    return '';\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport BrowserDetector from '../../dom/BrowserDetector';\n\nexport default class FeatureEnablement {\n  static get clientOfferDisabled(): boolean {\n    // Client offer workflow does not work correctly in the following browsers\n    return BrowserDetector.isChrome74 ||\n      BrowserDetector.isChrome75 ||\n      BrowserDetector.isChrome76 ||\n      BrowserDetector.isChrome77;\n  }\n\n  static get addTranceiverDisabled(): boolean {\n    // Chrome 69, 70, 71, 72 exposes `addTranceiver` but it does not work correctly\n    return BrowserDetector.isChrome69 ||\n      BrowserDetector.isChrome70 ||\n      BrowserDetector.isChrome71 ||\n      BrowserDetector.isChrome72;\n  }\n\n  static get getStatsPromiseBasedDisabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 66;\n  }\n\n  static get getCurrentOfferDisabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 69 ||\n      BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion <= 56;\n  }\n\n  static get onTrackDisabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 63 ||\n      BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion <= 52;\n  }\n\n  static get webkitRTCPeerConnectionEnabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 55;\n  }\n\n  static get promiseBasedPCMethodsDisabled(): boolean {\n    return BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion <= 52;\n  }\n\n  static get shouldUseNativeHls(): boolean {\n    return BrowserDetector.browserName === 'Safari' ||\n      BrowserDetector.browserName === 'SamsungBrowser';\n  }\n\n  static get isRTMPEnabled(): boolean {\n    return (BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion < 84) ||\n      (BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion < 70) ||\n      BrowserDetector.browserName === 'Edge' ||\n      BrowserDetector.browserName === 'IE';\n  }\n\n  static get isPrecachingEnabled(): boolean {\n    return BrowserDetector.browserName !== 'IE';\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport IPeerConnection, {PeerConnectionEvents} from './IPeerConnection';\nimport {ILogger} from '../logger/LoggerInterface';\nimport FeatureEnablement from '../sdk/feature/FeatureEnablement';\nimport {ILegacyRTCStatsReport} from './RtcConnectionMonitor';\n\nclass VanillaPeerConnection implements IPeerConnection {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('VanillaPeerConnection');\n  private readonly _peerConnection: RTCPeerConnection;\n\n  constructor(configuration?: RTCConfiguration) {\n    if (FeatureEnablement.webkitRTCPeerConnectionEnabled) {\n      this._peerConnection = new webkitRTCPeerConnection(configuration);\n\n      return;\n    }\n\n    this._peerConnection = new RTCPeerConnection(configuration);\n  }\n\n  get native(): RTCPeerConnection {\n    return this._peerConnection;\n  }\n\n  get currentLocalDescription(): RTCSessionDescription | null {\n    return this._peerConnection.currentLocalDescription;\n  }\n\n  get currentRemoteDescription(): RTCSessionDescription | null {\n    return this._peerConnection.currentRemoteDescription;\n  }\n\n  get iceConnectionState(): RTCIceConnectionState {\n    return this._peerConnection.iceConnectionState;\n  }\n\n  get supportsGetConfiguration(): boolean {\n    return typeof this._peerConnection.getConfiguration === 'function';\n  }\n\n  get supportsSetConfiguration(): boolean {\n    return typeof this._peerConnection.setConfiguration === 'function';\n  }\n\n  get supportsAddTransceiver(): boolean {\n    return !FeatureEnablement.addTranceiverDisabled && typeof this._peerConnection.addTransceiver === 'function';\n  }\n\n  async createOffer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit> {\n    if (FeatureEnablement.promiseBasedPCMethodsDisabled) {\n      // Ignored as leagcy createOffer method with callbacks is deprecated\n      // Requires a ts-ignore directive to prevent typescript errors\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return new Promise((resolve, reject) => this._peerConnection.createOffer(resolve, reject, options));\n    }\n\n    return this._peerConnection.createOffer(options);\n  }\n\n  async createAnswer(options?: RTCAnswerOptions): Promise<RTCSessionDescriptionInit> {\n    if (FeatureEnablement.promiseBasedPCMethodsDisabled) {\n      // Ignored as leagcy createAnswer method with callbacks is deprecated\n      // Requires a ts-ignore directive to prevent typescript errors\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return new Promise((resolve, reject) => this._peerConnection.createAnswer(resolve, reject, options));\n    }\n\n    return this._peerConnection.createAnswer(options);\n  }\n\n  async setLocalDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    return this._peerConnection.setLocalDescription(FeatureEnablement.promiseBasedPCMethodsDisabled ?\n      new RTCSessionDescription(description) : description);\n  }\n\n  async setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    const hasCrypto = description.sdp?.match(/a=crypto:/i);\n\n    if (hasCrypto) {\n      this._logger.warn('SDP a=crypto is not supported');\n    }\n\n    return this._peerConnection.setRemoteDescription(FeatureEnablement.promiseBasedPCMethodsDisabled ?\n      new RTCSessionDescription(description) : description);\n  }\n\n  getSenders(): RTCRtpSender[] {\n    return this._peerConnection.getSenders();\n  }\n\n  getStats(selector?: MediaStreamTrack | null): Promise<RTCStatsReport> {\n    return this._peerConnection.getStats(selector);\n  }\n\n  getStatsLegacy(): Promise<ILegacyRTCStatsReport> {\n    return new Promise(resolve => {\n      // Ignored due to typescript not having legacy 'getStats' method type definition\n      // This was a Chrome specific implementation of the 'getStats' method for\n      // Chrome@<= 66 detailed here: https://bugs.chromium.org/p/chromium/issues/detail?id=627816\n      // Requires a ts-ignore directive to prevent typescript errors\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const ignored = this._peerConnection.getStats(resolve);\n    });\n  }\n\n  addEventListener(type: PeerConnectionEvents, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\n    this._peerConnection.addEventListener(type, listener, options);\n  }\n\n  removeEventListener(type: PeerConnectionEvents, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void {\n    this._peerConnection.removeEventListener(type, listener, options);\n  }\n\n  addTransceiver(name: string, options: RTCRtpTransceiverInit): RTCRtpTransceiver {\n    return this._peerConnection.addTransceiver(name, options);\n  }\n\n  addStream(mediaStream: MediaStream): void {\n    mediaStream.getTracks().forEach(track => {\n      this._peerConnection.addTrack(track);\n    });\n  }\n\n  getConfiguration(): RTCConfiguration {\n    return this._peerConnection.getConfiguration();\n  }\n\n  setConfiguration(configuration: RTCConfiguration): void {\n    this._peerConnection.setConfiguration(configuration);\n  }\n\n  set ontrack(handler: ((this: RTCPeerConnection, ev: RTCTrackEvent) => unknown) | null) {\n    this._peerConnection.ontrack = handler;\n  }\n\n  get ontrack(): ((this: RTCPeerConnection, ev: RTCTrackEvent) => unknown) | null {\n    return this._peerConnection.ontrack;\n  }\n\n  set onicecandidate(handler: ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => unknown) | null) {\n    this._peerConnection.onicecandidate = handler;\n  }\n\n  get onicecandidate(): ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => unknown) | null {\n    return this._peerConnection.onicecandidate;\n  }\n\n  set oniceconnectionstatechange(handler: ((this: RTCPeerConnection, ev: Event) => unknown) | null) {\n    this._peerConnection.oniceconnectionstatechange = handler;\n  }\n\n  get oniceconnectionstatechange(): ((this: RTCPeerConnection, ev: Event) => unknown) | null {\n    return this._peerConnection.oniceconnectionstatechange;\n  }\n\n  close(): void {\n    this._peerConnection.close();\n  }\n}\n\nexport default VanillaPeerConnection;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport IPeerConnectionFactory from './IPeerConnectionFactory';\nimport IPeerConnection from './IPeerConnection';\nimport VanillaPeerConnection from './VanillaPeerConnection';\n\nclass VanillaPeerConnectionFactory implements IPeerConnectionFactory {\n  async createPeerConnection(configuration?: RTCConfiguration): Promise<IPeerConnection> {\n    return new VanillaPeerConnection(configuration);\n  }\n}\n\nexport default VanillaPeerConnectionFactory;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport {IEdgeAuth} from './EdgeAuthToken';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport {EdgeToken} from './EdgeToken';\n\nconst edgeAuthTokenPrefix = 'DIGEST:';\n\nexport default class EdgeAuth {\n  private static _logger: ILogger = LoggerFactory.getLogger('EdgeAuth');\n\n  static parseToken(token: EdgeToken): IEdgeAuth {\n    if (!this.isValidToken(token)) {\n      EdgeAuth._logger.error('Token is not valid [%s]', token);\n\n      return undefined;\n    }\n\n    try {\n      const encodedEdgeAuthToken = atob(token.substr(edgeAuthTokenPrefix.length));\n      const edgeAuthToken = JSON.parse(encodedEdgeAuthToken);\n\n      edgeAuthToken.token = JSON.parse(edgeAuthToken.token);\n\n      return edgeAuthToken;\n    } catch (e) {\n      EdgeAuth._logger.error('Cannot parse token value', e);\n\n      return undefined;\n    }\n  }\n\n  static getUri(parsedToken: IEdgeAuth): URL {\n    return parsedToken && parsedToken.token && parsedToken.token.uri ?\n      new URL(parsedToken.token.uri) : null;\n  }\n\n  static getTenancy(parsedToken: IEdgeAuth): string {\n    return parsedToken && parsedToken.applicationId ?\n      parsedToken.applicationId : '';\n  }\n\n  static isValidToken(token: EdgeToken): boolean {\n    return !!token && token.startsWith(edgeAuthTokenPrefix);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nenum MetricsType {\n  TimeToFirstFrame,\n  ChannelCreationTimeToFirstFrame,\n  Stalled,\n  Buffering,\n  SetupCompleted,\n  SetupFailed,\n  RoundTripTime,\n  DownlinkThroughputCapacity,\n  NetworkType,\n  ResolutionChanged,\n  ApplicationForeground,\n  ApplicationBackground\n}\n\nexport default MetricsType;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IDisposable from './IDisposable';\n\nexport default class DisposableList {\n  private readonly _list: IDisposable[] = [];\n\n  add(disposable: IDisposable): void {\n    this._list.push(disposable);\n  }\n\n  dispose(): void {\n    this._list.forEach(disposable => disposable.dispose());\n    this._list.length = 0;\n  }\n\n  toString(): string {\n    return `DisposableList[disposables=${this._list.length}]`;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Disposable from '../lang/Disposable';\nimport Subject from '../rx/Subject';\nimport ReadOnlySubject from '../rx/ReadOnlySubject';\nimport DisposableList from '../lang/DisposableList';\n\nconst defaultDocumentFocusIntervalTimeout = 3000;\n\nexport default class ApplicationActivityMonitor {\n  private readonly _disposables: DisposableList = new DisposableList();\n  private readonly _readOnlyIsForeground: ReadOnlySubject<boolean>;\n  private readonly _isForeground: Subject<boolean>;\n  private _timeOfLastTabFocusChange: number = Date.now();\n  private _documentFocusInterval: number;\n\n  constructor() {\n    this._isForeground = new Subject<boolean>(true);\n    this._readOnlyIsForeground = new ReadOnlySubject(this._isForeground);\n    this.detectTabFocusChange();\n  }\n\n  get isForeground(): ReadOnlySubject<boolean> {\n    return this._readOnlyIsForeground;\n  }\n\n  getTimeSinceLastChange(): number {\n    return Date.now() - this._timeOfLastTabFocusChange;\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private detectTabFocusChange(): void {\n    let hidden;\n    let visibilityChange;\n\n    if (typeof document !== 'object') {\n      return;\n    }\n\n    // Due to typescript not having a definition for 'msHidden' or 'webkitHidden' types\n    // Required to @ts-ignore to prevent typescript errors\n    /* eslint-disable @typescript-eslint/ban-ts-comment */\n    // @ts-ignore\n    if (typeof document.msHidden !== 'undefined') {\n      hidden = 'msHidden';\n      visibilityChange = 'msvisibilitychange';\n      // @ts-ignore\n    } else if (typeof document.webkitHidden !== 'undefined') {\n      hidden = 'webkitHidden';\n      visibilityChange = 'webkitvisibilitychange';\n    } else if (typeof document.hidden !== 'undefined') { // Opera 12.10 and Firefox 18 and later support\n      hidden = 'hidden';\n      visibilityChange = 'visibilitychange';\n    }\n    /* eslint-enable @typescript-eslint/ban-ts-comment */\n\n    const handleVisibilityChange = (): void => {\n      const isForeground = !document[hidden];\n\n      this.setFocusState(isForeground);\n    };\n\n    if (typeof document.addEventListener !== 'undefined' && typeof document[hidden] !== 'undefined') {\n      document.addEventListener(visibilityChange, handleVisibilityChange, false);\n\n      this._disposables.add(new Disposable(() => {\n        document.removeEventListener(visibilityChange, handleVisibilityChange, false);\n      }));\n    } else {\n      this.listenForDocumentFocus.call(this);\n    }\n  }\n\n  private listenForDocumentFocus(): void {\n    this._documentFocusInterval = window.setInterval(() => {\n      const isForeground = document.hasFocus();\n\n      this.setFocusState(isForeground);\n    }, defaultDocumentFocusIntervalTimeout);\n\n    this._disposables.add(new Disposable(() => {\n      if (this._documentFocusInterval) {\n        clearInterval(this._documentFocusInterval);\n      }\n\n      this._documentFocusInterval = null;\n    }));\n  }\n\n  private setFocusState(isForeground): void {\n    if (this._isForeground === isForeground) {\n      return;\n    }\n\n    this._isForeground.value = isForeground;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class TelemetryUrl {\n  static getTelemetryUrl(url: string): string {\n    try {\n      const baseURL = new URL(url);\n      const segments = baseURL.hostname.split('.');\n\n      switch (baseURL.protocol) {\n        case 'ws:':\n          baseURL.protocol = 'http:';\n\n          break;\n        case 'wss:':\n          baseURL.protocol = 'https:';\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (segments.length === 2 ||\n          (segments.length === 3 && segments[segments.length - 2].length <= 2 && segments[segments.length - 1].length <= 3)\n      ) {\n        segments.unshift('telemetry');\n      } else if (segments[0].startsWith('stg-') || segments[0].endsWith('-stg') || segments[0].includes('-stg-') || segments[0] === 'stg') {\n        segments[0] = 'telemetry-stg';\n      } else if (segments[0].startsWith('local') || segments[0].endsWith('-local')) {\n        // Leave URL unchanged\n      } else {\n        segments[0] = 'telemetry';\n      }\n\n      baseURL.hostname = segments.join('.');\n\n      return `${baseURL.origin}/telemetry`;\n    } catch (e) {\n      return url;\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class Environment {\n  static getEnvironmentFromUrl(url: string): string {\n    try {\n      const baseURL = new URL(url);\n\n      return baseURL.origin;\n    } catch (e) {\n      return '';\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport {defaultDiscoveryUri} from '../defaults';\nimport Subject from '../../rx/Subject';\nimport VersionManager from '../version/VersionManager';\n\nexport default class DiscoveryUri {\n  private static readonly _discoveryUri: Subject<string> = new Subject<string>(defaultDiscoveryUri);\n\n  static get uri(): Subject<string> {\n    return DiscoveryUri._discoveryUri;\n  }\n\n  static buildDiscoveryUrl(uri: URL): string {\n    const url = new URL(uri.toString());\n    const sdkVersion = VersionManager.sdkVersion;\n\n    url.search = `?${new URLSearchParams([['version', sdkVersion], ['_', `${Date.now()}`]]).toString()}`;\n\n    if (url.pathname === '/') {\n      url.pathname = '/pcast/endPoints';\n    }\n\n    return url.toString();\n  }\n\n  private constructor() {\n    throw new Error('DiscoveryUri is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nconst defaultDiscoveryUri = 'https://pcast.phenixrts.com/pcast/endPoints';\n\nexport {defaultDiscoveryUri};","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {TelemetryLevel} from './MetricsConfiguration';\nimport assertUnreachable from '../lang/assertUnreachable';\nimport MetricsType from './MetricsType';\n\nexport default class MetricType {\n  private readonly _metrics: MetricsType;\n\n  constructor(metrics: MetricsType) {\n    this._metrics = metrics;\n  }\n\n  getName(): string {\n    return MetricsType[this._metrics];\n  }\n\n  getTelemetryLevel(): TelemetryLevel {\n    switch (this._metrics) {\n      case MetricsType.TimeToFirstFrame:\n        return TelemetryLevel.Essential;\n      case MetricsType.ChannelCreationTimeToFirstFrame:\n        return TelemetryLevel.Essential;\n      case MetricsType.Stalled:\n        return TelemetryLevel.All;\n      case MetricsType.Buffering:\n        return TelemetryLevel.All;\n      case MetricsType.SetupCompleted:\n        return TelemetryLevel.All;\n      case MetricsType.SetupFailed:\n        return TelemetryLevel.All;\n      case MetricsType.RoundTripTime:\n        return TelemetryLevel.All;\n      case MetricsType.DownlinkThroughputCapacity:\n        return TelemetryLevel.All;\n      case MetricsType.NetworkType:\n        return TelemetryLevel.All;\n      case MetricsType.ResolutionChanged:\n        return TelemetryLevel.All;\n      case MetricsType.ApplicationForeground:\n        return TelemetryLevel.All;\n      case MetricsType.ApplicationBackground:\n        return TelemetryLevel.All;\n      default:\n        assertUnreachable(this._metrics);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport VersionManager from '../sdk/version/VersionManager';\nimport MetricsConfiguration from './MetricsConfiguration';\nimport MetricType from './MetricType';\nimport MetricsType from './MetricsType';\n\nconst requestSizeLimit = 1024;\n\ninterface IValue {\n  string?: string;\n  uint64?: number;\n  float?: number;\n}\n\ninterface IMetricRecord {\n  timestamp: string;\n  tenancy: string;\n  sessionId: string;\n  streamId: string;\n  metric: string;\n  value: IValue;\n  previousValue: IValue;\n  fullQualifiedName: string;\n  environment: string;\n  version: string;\n  runtime: number;\n  resource?: string;\n  kind?: string;\n}\n\ninterface IMetric {\n  streamId?: string;\n  metricType: MetricsType;\n  value?: IValue;\n  previousValue?: IValue;\n  runtime: number;\n  resource?: string;\n  kind?: string;\n}\n\nexport default class MetricsService {\n  private readonly _metricsConfiguration: MetricsConfiguration;\n  private _metrics: Array<IMetricRecord> = [];\n  private _isSending: boolean;\n  private _domain = location.hostname;\n\n  constructor(metricsConfiguration: MetricsConfiguration) {\n    this._metricsConfiguration = metricsConfiguration;\n  }\n\n  get metricsConfiguration(): MetricsConfiguration {\n    return this._metricsConfiguration;\n  }\n\n  push(metric: IMetric): void {\n    const {streamId, value, previousValue, runtime, resource, kind} = metric;\n    const metricType = new MetricType(metric.metricType);\n\n    if (this._metricsConfiguration.threshold > metricType.getTelemetryLevel()) {\n      return;\n    }\n\n    const metricRecord = {\n      timestamp: new Date().toISOString(),\n      tenancy: this._metricsConfiguration.tenancy,\n      sessionId: this._metricsConfiguration.sessionId,\n      streamId,\n      metric: metricType.getName(),\n      value,\n      previousValue,\n      fullQualifiedName: this._domain,\n      environment: this._metricsConfiguration.environment,\n      version: VersionManager.sdkVersion,\n      runtime,\n      resource,\n      kind\n    };\n\n    this._metrics.push(metricRecord);\n\n    const ignored = this.sendMetricsIfAble();\n  }\n\n  private async sendMetrics(metricsMessages: Array<IMetricRecord>): Promise<Response | void> {\n    const formData = new FormData();\n\n    formData.append('jsonBody', JSON.stringify({records: metricsMessages}));\n\n    return await fetch(this._metricsConfiguration.url, {\n      method: 'POST',\n      body: formData\n    });\n  }\n\n  private async sendMetricsIfAble(): Promise<Response | void> {\n    if (this._metrics.length <= 0 || this._isSending) {\n      return;\n    }\n\n    this._isSending = true;\n\n    const metricsMessages = this._metrics.slice(0, requestSizeLimit);\n\n    this._metrics = this._metrics.slice(requestSizeLimit);\n\n    return this.sendMetrics(metricsMessages).then(response => {\n      this._isSending = false;\n\n      const ignored = this.sendMetricsIfAble();\n\n      return response;\n    }).catch(() => {\n      this._isSending = false;\n\n      const ignored = this.sendMetricsIfAble();\n    });\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport MetricsService from './MetricsService';\nimport MetricsConfiguration, {TelemetryLevel} from './MetricsConfiguration';\nimport SDK from '../sdk/SDK';\nimport TelemetryUrl from '../sdk/TelemetryUrl';\nimport Environment from '../sdk/Environment';\nimport TelemetryLevelMapping from './TelemetricLevelMapping';\n\nexport default class MetricsFactory {\n  private static _metricsServices: {[category: string]: MetricsService} = {};\n\n  static getMetricsService(url: string): MetricsService {\n    if (typeof url !== 'string') {\n      throw new Error('ur');\n    }\n\n    const metricsServices = MetricsFactory._metricsServices[url];\n\n    if (metricsServices) {\n      return metricsServices;\n    }\n\n    const metricsConfiguration = new MetricsConfiguration();\n\n    metricsConfiguration.sessionId = SDK.clientSessionId;\n    metricsConfiguration.tenancy = SDK.tenancy.value;\n    metricsConfiguration.url = TelemetryUrl.getTelemetryUrl(url);\n    metricsConfiguration.environment = Environment.getEnvironmentFromUrl(url);\n\n    metricsConfiguration.threshold = TelemetryLevelMapping.convertTelemetryLevelTypeToTelemetryLevel(SDK.telemetryLevel);\n\n    return MetricsFactory._metricsServices[url] = new MetricsService(metricsConfiguration);\n  }\n\n  static setTelemetryLevel(telemetryLevel: TelemetryLevel): void {\n    const metricsServices = Object.values(MetricsFactory._metricsServices);\n\n    if (metricsServices && metricsServices.length) {\n      metricsServices.forEach(metricsService => {\n        const metricsConfiguration = metricsService.metricsConfiguration;\n\n        metricsConfiguration.threshold = telemetryLevel;\n      });\n    }\n  }\n\n  private constructor() {\n    throw new Error('LoggerFactory is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport Strings from '../lang/Strings';\nimport Subject from '../rx/Subject';\nimport ReadOnlySubject from '../rx/ReadOnlySubject';\nimport IPeerConnectionFactory from '../rtc/IPeerConnectionFactory';\nimport VanillaPeerConnectionFactory from '../rtc/VanillaPeerConnectionFactory';\nimport EdgeAuth from './edgeAuth/EdgeAuth';\nimport {ILogger} from '../logger/LoggerInterface';\nimport {LoggingLevel, LoggingLevelType} from '../logger/Logger';\nimport ConsoleAppender from '../logger/ConsoleAppender';\nimport TelemetryAppender from '../telemetry/TelemetryApender';\nimport ConfigurationParameterReader from '../dom/ConfigurationParameterReader';\nimport MetricsConfiguration, {TelemetryLevel, TelemetryLevelType} from '../metrics/MetricsConfiguration';\nimport MetricsService from '../metrics/MetricsService';\nimport TelemetryLevelMapping from '../metrics/TelemetricLevelMapping';\nimport LoggingLevelMapping from '../logger/LoggingLevelMapping';\nimport PrivacyMode from '../dom/PrivacyMode';\nimport BrowserDetector from '../dom/BrowserDetector';\nimport {IConfigurationParameterReader} from '../dom/IConfigurationParamaterReader';\nimport ApplicationActivityMonitor from '../dom/ApplicationActivityMonitor';\nimport TelemetryUrl from './TelemetryUrl';\nimport Environment from './Environment';\nimport {HlsPlayerType, ShakaType, WebPlayerType} from './streaming/StreamTypes';\nimport DiscoveryUri from './discovery/DiscoveryUri';\nimport MetricsFactory from '../metrics/MetricsFactory';\nimport TelemetryDefault from '../metrics/TelemetryDefault';\n\nconst pageLoadTime = window['__phenixPageLoadTime'] || window['__pageLoadTime'] || Date.now();\n\ninterface IInitOptions {\n  discoveryUri?: string;\n  peerConnectionFactory?: IPeerConnectionFactory;\n  telemetryLevel?: TelemetryLevelType;\n  loggingLevel?: LoggingLevelType;\n  consoleLoggingLevel?: LoggingLevelType;\n  automaticallyPlayMediaStream?: boolean;\n  automaticallyMuteVideoOnPlayFailure?: boolean;\n  webPlayerLoader?: (player: WebPlayerType) => void;\n  shakaPlayerLoader?: (player: ShakaType) => void;\n  hlsJsLoader?: (player: HlsPlayerType) => void;\n}\n\nexport default class SDK {\n  private static _automaticallyRetryOnFailure = true;\n  private static _automaticallyReconnectPeerConnection = true;\n  private static _automaticallyPlayMediaStream = true;\n  private static _automaticallyMuteVideoOnPlayFailure = true;\n  private static _webPlayerLoader = null;\n  private static _shakaPlayerLoader = null;\n  private static _hlsJsLoader = null;\n  private static _configurationParameterReader: IConfigurationParameterReader = new ConfigurationParameterReader();\n  private static _applicationActivityMonitor: ApplicationActivityMonitor;\n  private static _environment: Subject<string> = new Subject<string>('');\n  private static _telemetryUrl: Subject<string> = new Subject<string>('https://telemetry.phenixrts.com/telemetry');\n  private static _maximalNumberOfPeerConnectionReconnectAttempts = 8;\n  private static _telemetryLevel: Subject<TelemetryLevel> = new Subject<TelemetryLevel>(TelemetryDefault.defaultTelemetryLevel);\n  private static _metricsService: MetricsService;\n  private static _metricsConfiguration: MetricsConfiguration\n  private static readonly _sendLocalCandidates: Subject<boolean> = new Subject(!PrivacyMode.isPrivate);\n  private static readonly _tenancy: Subject<string> = new Subject<string>('');\n  private static readonly _clientSessionId: string = Strings.random(32);\n  private static readonly _loadedTimestamp: Date = new Date();\n  private static readonly _logger: ILogger = LoggerFactory.getLogger('SDK');\n  private static readonly _initialized: Subject<boolean> = new Subject<boolean>(false);\n  private static readonly _peerConnectionFactory: Subject<IPeerConnectionFactory> = new Subject<IPeerConnectionFactory>(new VanillaPeerConnectionFactory());\n  private static readonly _readOnlyInitialized: ReadOnlySubject<boolean> = new ReadOnlySubject<boolean>(SDK._initialized);\n  private static readonly _readOnlyDiscoveryUri: ReadOnlySubject<string> = new ReadOnlySubject<string>(DiscoveryUri.uri);\n  private static readonly _readOnlyPeerConnectionFactory: ReadOnlySubject<IPeerConnectionFactory> = new ReadOnlySubject<IPeerConnectionFactory>(SDK._peerConnectionFactory);\n\n  static get pageLoadTime(): number {\n    return pageLoadTime;\n  }\n\n  static get sendLocalCandidates(): Subject<boolean> {\n    return this._sendLocalCandidates;\n  }\n\n  static get tenancy(): Subject<string> {\n    return this._tenancy;\n  }\n\n  static get clientSessionId(): string {\n    return SDK._clientSessionId;\n  }\n\n  static get loadedTimestamp(): Date {\n    return SDK._loadedTimestamp;\n  }\n\n  static get initialized(): ReadOnlySubject<boolean> {\n    return SDK._readOnlyInitialized;\n  }\n\n  static get discoveryUri(): ReadOnlySubject<string> {\n    return SDK._readOnlyDiscoveryUri;\n  }\n\n  static get peerConnectionFactory(): ReadOnlySubject<IPeerConnectionFactory> {\n    return SDK._readOnlyPeerConnectionFactory;\n  }\n\n  static get automaticRetryOnFailure(): boolean {\n    return SDK._automaticallyRetryOnFailure;\n  }\n\n  static get automaticallyReconnectPeerConnection(): boolean {\n    return SDK._automaticallyReconnectPeerConnection;\n  }\n\n  static get automaticallyPlayMediaStream(): boolean {\n    return SDK._automaticallyPlayMediaStream;\n  }\n\n  static get automaticallyMuteVideoOnPlayFailure(): boolean {\n    return SDK._automaticallyMuteVideoOnPlayFailure;\n  }\n\n  static get webPlayerLoader(): (WebPlayerType) => void {\n    return this._webPlayerLoader;\n  }\n\n  static get shakaPlayerLoader(): (ShakaType) => void {\n    return this._shakaPlayerLoader;\n  }\n\n  static get hlsJsLoader(): (HlsPlayerType) => void {\n    return this._hlsJsLoader;\n  }\n\n  static get metricsService(): MetricsService {\n    return SDK._metricsService;\n  }\n\n  static get applicationActivityMonitor(): ApplicationActivityMonitor {\n    return this._applicationActivityMonitor;\n  }\n\n  static get telemetryUrl(): Subject<string> {\n    return this._telemetryUrl;\n  }\n\n  static get maximalNumberOfPeerConnectionReconnectAttempts(): number {\n    return this._maximalNumberOfPeerConnectionReconnectAttempts;\n  }\n\n  static set maximalNumberOfPeerConnectionReconnectAttempts(retriesAmount: number) {\n    this._maximalNumberOfPeerConnectionReconnectAttempts = retriesAmount;\n  }\n\n  static get loggingLevel(): LoggingLevelType {\n    return LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(this._logger.threshold.value);\n  }\n\n  static get telemetryLevel(): TelemetryLevelType {\n    return TelemetryLevelMapping.convertTelemetryLevelToTelemetryLevelType(SDK._telemetryLevel.value);\n  }\n\n  static get browserDetector(): BrowserDetector {\n    return BrowserDetector;\n  }\n\n  static applyTelemetryConfiguration(): void {\n    const telemetryConfiguration = LoggerFactory.telemetryConfiguration;\n\n    telemetryConfiguration.sessionId = SDK.clientSessionId;\n\n    const ignoredEnvironment = SDK._environment.subscribe(environment => {\n      telemetryConfiguration.environment = environment;\n    });\n    const ignoredDiscoveryUri = SDK.telemetryUrl.subscribe(value => {\n      const telemetryAppender = this._logger.appenders.value.find(appender => appender instanceof TelemetryAppender);\n\n      if (telemetryAppender) {\n        telemetryConfiguration.url = value;\n\n        this._logger.appenders.remove(telemetryAppender);\n        this._logger.appenders.add(new TelemetryAppender(telemetryConfiguration));\n        this._logger.info('Telemetry URL was set to [%s]', telemetryConfiguration.url);\n      }\n    });\n    const ignoredTenancy = SDK._tenancy.subscribe(tenancy => {\n      const telemetryAppender = this._logger.appenders.value.find(appender => appender instanceof TelemetryAppender);\n\n      if (telemetryAppender && tenancy) {\n        telemetryConfiguration.tenancy = tenancy;\n\n        this._logger.appenders.remove(telemetryAppender);\n        this._logger.appenders.add(new TelemetryAppender(telemetryConfiguration));\n        this._logger.info('Telemetry tenancy was set to [%s]', telemetryConfiguration.tenancy);\n      }\n    });\n  }\n\n  static applyMetricsConfiguration(): void {\n    SDK._metricsService = MetricsFactory.getMetricsService(DiscoveryUri.uri.value);\n    SDK._metricsConfiguration = SDK._metricsService.metricsConfiguration;\n\n    SDK._metricsConfiguration.sessionId = SDK.clientSessionId;\n\n    const ignoredEnvironment = SDK._environment.subscribe(environment => {\n      SDK._metricsConfiguration.environment = environment;\n    });\n    const ignoredDiscoveryUri = SDK.telemetryUrl.subscribe(value => {\n      SDK._metricsConfiguration.url = value;\n    });\n    const ignoredTenancy = SDK._tenancy.subscribe(tenancy => {\n      SDK._metricsConfiguration.tenancy = tenancy;\n    });\n    const value = this._configurationParameterReader.getStringValue('phenix-metrics-level');\n\n    if (value) {\n      MetricsFactory.setTelemetryLevel(TelemetryLevel[value]);\n    }\n\n    const ignoredTelemetryLevel = SDK._telemetryLevel.subscribe(telemetryLevel => {\n      MetricsFactory.setTelemetryLevel(telemetryLevel);\n    });\n  }\n\n  static applyAutomaticallyRetryOnFailureFromParameterConfiguration(): void {\n    this._automaticallyRetryOnFailure = this._configurationParameterReader.getBooleanValue('phenix-automatically-retry-on-failure');\n    this._logger.info('Automatically retry on failure is set to: [%s]', this._automaticallyRetryOnFailure);\n\n    return;\n  }\n\n  static applyAutomaticallyReconnectPeerConnectionFromParameterConfiguration(): void {\n    this._automaticallyReconnectPeerConnection = this._configurationParameterReader.getBooleanValue('phenix-automatically-reconnect-peer-connection');\n    this._logger.info('Automatically reconnect peer connection is set to: [%s]', this._automaticallyReconnectPeerConnection);\n\n    return;\n  }\n\n  static applyDiscoveryUriDefaultFromParameterConfiguration(): void {\n    SDK.discoveryUri.subscribe(value => {\n      SDK.telemetryUrl.value = SDK.getTelemetryUrl(value);\n      SDK._environment.value = Environment.getEnvironmentFromUrl(value);\n    });\n\n    const channelToken = this._configurationParameterReader.getStringValue('phenix-channel-token');\n\n    if (channelToken) {\n      const parsedToken = EdgeAuth.parseToken(channelToken);\n\n      SDK._tenancy.value = EdgeAuth.getTenancy(parsedToken);\n      DiscoveryUri.uri.value = (EdgeAuth.getUri(parsedToken) || SDK.discoveryUri.value).toString();\n\n      this._logger.info('Discovery URI set from configuration parameter to [%s]', SDK.discoveryUri.value);\n\n      return;\n    }\n\n    const uriValue = this._configurationParameterReader.getStringValue('phenix-uri');\n\n    if (uriValue) {\n      DiscoveryUri.uri.value = uriValue;\n      this._logger.info('Discovery URI set from \"phenix-uri\" configuration parameter tag to [%s]', SDK.discoveryUri.value);\n\n      return;\n    }\n\n    const baseURIValue = this._configurationParameterReader.getStringValue('phenix-base-uri');\n\n    if (baseURIValue) {\n      DiscoveryUri.uri.value = `${baseURIValue}/pcast/endPoints`;\n      this._logger.info('Discovery URI set from \"phenix-base-uri\" configuration parameter tag to [%s]', SDK.discoveryUri.value);\n\n      return;\n    }\n  }\n\n  static init(options?: IInitOptions): void {\n    if (!this._initialized.value) {\n      this._applicationActivityMonitor = new ApplicationActivityMonitor();\n    }\n\n    if (options) {\n      if (options.discoveryUri) {\n        DiscoveryUri.uri.value = options.discoveryUri;\n      }\n\n      if (options.peerConnectionFactory) {\n        SDK._peerConnectionFactory.value = options.peerConnectionFactory;\n      }\n\n      if (options.telemetryLevel && TelemetryLevel[options.telemetryLevel]) {\n        SDK._telemetryLevel.value = TelemetryLevelMapping.convertTelemetryLevelTypeToTelemetryLevel(options.telemetryLevel);\n      }\n\n      if (options.loggingLevel && LoggingLevel[options.loggingLevel]) {\n        this._logger.threshold.setThreshold(LoggingLevelMapping.convertLoggingLevelTypeToLoggingLevel(options.loggingLevel));\n      }\n\n      if (options.consoleLoggingLevel &&\n        LoggingLevel[options.consoleLoggingLevel]) {\n        const consoleAppender = this._logger.appenders.value.find(appender => appender instanceof ConsoleAppender);\n\n        if (consoleAppender) {\n          this._logger.appenders.remove(consoleAppender);\n        }\n\n        if (options.consoleLoggingLevel !== 'Off') {\n          this._logger.appenders.add(new ConsoleAppender(LoggingLevelMapping.convertLoggingLevelTypeToLoggingLevel(options.consoleLoggingLevel)));\n        }\n      }\n\n      if (typeof options.automaticallyPlayMediaStream === 'boolean') {\n        this._automaticallyPlayMediaStream = options.automaticallyPlayMediaStream;\n      }\n\n      if (typeof options.automaticallyMuteVideoOnPlayFailure === 'boolean') {\n        this._automaticallyMuteVideoOnPlayFailure = options.automaticallyMuteVideoOnPlayFailure;\n      }\n\n      if (options.webPlayerLoader) {\n        this._webPlayerLoader = options.webPlayerLoader;\n      }\n\n      if (options.shakaPlayerLoader) {\n        this._shakaPlayerLoader = options.shakaPlayerLoader;\n      }\n\n      if (options.hlsJsLoader) {\n        this._hlsJsLoader = options.hlsJsLoader;\n      }\n    }\n\n    SDK._initialized.value = true;\n  }\n\n  static dispose(): void {\n    SDK._initialized.value = false;\n    this._applicationActivityMonitor.dispose();\n    this._applicationActivityMonitor = null;\n  }\n\n  static getTelemetryUrl(url: string): string {\n    return TelemetryUrl.getTelemetryUrl(url);\n  }\n\n  private constructor() {\n    throw new Error('SDK is a static class that may not be instantiated');\n  }\n}\n\nwindow.addEventListener('unload', () => {\n  SDK.dispose();\n});\n\nSDK.applyDiscoveryUriDefaultFromParameterConfiguration();\nSDK.applyMetricsConfiguration();\nSDK.applyTelemetryConfiguration();\nSDK.applyAutomaticallyRetryOnFailureFromParameterConfiguration();\nSDK.applyAutomaticallyReconnectPeerConnectionFromParameterConfiguration();\nSDK.init();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IComparable from '../lang/IComparable';\n\nexport default class Dimension implements IComparable<Dimension> {\n  readonly width: number;\n  readonly height: number;\n\n  static get empty(): Dimension {\n    return new Dimension(0, 0);\n  }\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  equals(other: Dimension): boolean {\n    return other && this.width === other.width && this.height === other.height;\n  }\n\n  toString(): string {\n    return `${this.width}x${this.height}`;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nenum ChannelState {\n  Offline = 1,\n  Starting,\n  Paused,\n  Playing,\n  Recovering,\n  Reconnecting,\n  StandBy,\n  Stopped,\n  Unauthorized,\n  GeoRestricted,\n  GeoBlocked,\n  Error,\n  UnsupportedFeature\n}\n\nexport default ChannelState;","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport type BitrateStateType = 'Keep' | 'Reset';\nexport type BitrateModeType = 'Normal' | 'Force' | 'Reset';\n\nexport enum BitrateState {\n  Keep,\n  Reset\n}\n\nexport enum BitrateMode {\n  Normal,\n  Force,\n  Reset\n}\n\nexport interface ISetTemporaryMaximalBitrate {\n  apiVersion: number;\n  sharedSecret: string;\n  elapsedInMilliseconds: number;\n  bitrateInBitsPerSecond: number;\n  bitrateState: BitrateStateType;\n  bitrateMode: BitrateModeType;\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class Durations {\n  private readonly _duration: number;\n\n  constructor(duration = 0) {\n    this._duration = duration;\n  }\n\n  toIsoString(): string {\n    if (this._duration === 0) {\n      return 'P0S';\n    }\n\n    const isNegative = this._duration < 0;\n    const duration = isNegative ? Math.abs(this._duration) : this._duration;\n    let offset = Math.floor(duration);\n    const milliseconds = offset % 1000;\n\n    offset = Math.floor(offset / 1000);\n\n    const seconds = offset % 60;\n\n    offset = Math.floor(offset / 60);\n\n    const minutes = offset % 60;\n\n    offset = Math.floor(offset / 60);\n\n    const hours = offset % 24;\n    const parts = ['PT'];\n\n    if (isNegative) {\n      parts.unshift('-');\n    }\n\n    if (hours) {\n      parts.push(hours + 'H');\n    }\n\n    if (minutes) {\n      parts.push(minutes + 'M');\n    }\n\n    if (seconds || milliseconds) {\n      parts.push(String(seconds));\n\n      if (milliseconds) {\n        parts.push('.' + this.padStart(milliseconds.toString(), 3, '0'));\n      }\n\n      parts.push('S');\n    }\n\n    return parts.join('');\n  }\n\n  padStart(item: string, targetLength: number, padString: string): string {\n    targetLength = targetLength >> 0;\n    padString = String((typeof padString !== 'undefined' ? padString : ' '));\n\n    if (item.length > targetLength) {\n      return item;\n    }\n\n    targetLength = targetLength - item.length;\n\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n\n    return padString.slice(0, targetLength) + item;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport {ILogger} from '../logger/LoggerInterface';\nimport Durations from '../time/Duration';\nimport Disposable from '../lang/Disposable';\nimport IDisposable from '../lang/IDisposable';\nimport MetricsType from '../metrics/MetricsType';\nimport DisposableList from '../lang/DisposableList';\nimport MetricsService from '../metrics/MetricsService';\n\nexport default class VideoTelemetry implements IDisposable {\n  private readonly _pageLoadTime: number;\n  private readonly _channelStartTime: number;\n  private readonly _logger: ILogger = LoggerFactory.getLogger('StreamTelemetry');\n  private readonly _disposables: DisposableList = new DisposableList();\n  private readonly _streamId: string;\n  private readonly _metricsService: MetricsService;\n  private _listenToFirstTime: () => void;\n  private _listenForStall: () => void;\n  private _listenForContinuation: (event) => void;\n  private _timeToFirstFrame: number;\n  private _channelCreationTimeToFirstFrame: number;\n  private _startRecordingFirstFrame: number;\n  private _videoStalled: number;\n  private _lastProgress: number;\n  private _videoResolution: string;\n  private _clearTimeToFirstFrameListener: Disposable;\n  private _clearRebufferingListener: Disposable;\n\n  constructor(streamId: string, pageLoadTime: number, channelStartTime: number, metricsService: MetricsService) {\n    this._streamId = streamId;\n    this._pageLoadTime = pageLoadTime;\n    this._channelStartTime = channelStartTime;\n\n    this._metricsService = metricsService;\n  }\n\n  setupListenerForTimeToFirstTime(video: HTMLVideoElement): void {\n    this._startRecordingFirstFrame = Date.now();\n\n    this._listenToFirstTime = (): void => this.callTimeToFirstFrame();\n\n    video.addEventListener('loadeddata', this._listenToFirstTime);\n    video.addEventListener('loadedmetadata', this._listenToFirstTime);\n\n    this._clearTimeToFirstFrameListener = new Disposable(() => {\n      video.removeEventListener('loadeddata', this._listenToFirstTime);\n      video.removeEventListener('loadedmetadata', this._listenToFirstTime);\n    });\n    this._disposables.add(this._clearTimeToFirstFrameListener);\n  }\n\n  setupListenerForRebuffering(video: HTMLVideoElement): void {\n    this._listenForStall = (): void => this.onStall();\n\n    this._listenForContinuation = (event): void => this.onContinuation(event, video);\n\n    video.addEventListener('stalled', this._listenForStall);\n    video.addEventListener('pause', this._listenForStall);\n    video.addEventListener('suspend', this._listenForStall);\n    video.addEventListener('play', this._listenForContinuation);\n    video.addEventListener('playing', this._listenForContinuation);\n    video.addEventListener('progress', this._listenForContinuation);\n    video.addEventListener('timeupdate', this._listenForContinuation);\n\n    this._clearRebufferingListener = new Disposable(() => {\n      video.removeEventListener('stalled', this._listenForStall);\n      video.removeEventListener('pause', this._listenForStall);\n      video.removeEventListener('suspend', this._listenForStall);\n      video.removeEventListener('play', this._listenForContinuation);\n      video.removeEventListener('playing', this._listenForContinuation);\n      video.removeEventListener('progress', this._listenForContinuation);\n      video.removeEventListener('timeupdate', this._listenForContinuation);\n    });\n\n    this._disposables.add(this._clearRebufferingListener);\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private get durationSincePageLoad(): string {\n    const now = Date.now();\n\n    return new Durations(now - this._pageLoadTime).toIsoString();\n  }\n\n  private callTimeToFirstFrame(): void {\n    const now = Date.now();\n\n    this.pushTimeToFirstFrame(now);\n    this.pushChannelCreationTimeToFirstFrame(now);\n\n    this._clearTimeToFirstFrameListener.dispose();\n  }\n\n  private pushTimeToFirstFrame(now): void {\n    this._timeToFirstFrame = now - this._startRecordingFirstFrame;\n\n    this._metricsService.push({\n      metricType: MetricsType.TimeToFirstFrame,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: this._timeToFirstFrame},\n      streamId: this._streamId\n    });\n\n    this._logger.info(\n      '[%s] [%s] First frame [%s]',\n      this.durationSincePageLoad,\n      this._streamId,\n      new Durations(this._timeToFirstFrame).toIsoString()\n    );\n  }\n\n  private pushChannelCreationTimeToFirstFrame(now): void {\n    this._channelCreationTimeToFirstFrame = now - this._channelStartTime;\n\n    this._metricsService.push({\n      metricType: MetricsType.ChannelCreationTimeToFirstFrame,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: this._channelCreationTimeToFirstFrame},\n      streamId: this._streamId\n    });\n\n    this._logger.info(\n      '[%s] [%s] Channel creation to first frame [%s]',\n      this.durationSincePageLoad,\n      this._streamId,\n      new Durations(this._channelCreationTimeToFirstFrame).toIsoString()\n    );\n  }\n\n  private onStall(): void {\n    if (this._videoStalled) {\n      return;\n    }\n\n    this._metricsService.push({\n      metricType: MetricsType.Stalled,\n      runtime: (Date.now() - this._pageLoadTime) / 1000,\n      streamId: this._streamId\n    });\n\n    this._videoStalled = Date.now();\n\n    this._logger.info(\n      '[%s] [%s] [buffering] Stream has stalled',\n      this.durationSincePageLoad,\n      this._streamId\n    );\n  }\n\n  private onContinuation(event, video): void {\n    if (!video.buffered) {\n      return;\n    }\n\n    const bufferLength = video.buffered.length;\n    const hasNotProgressedSinceLastProgressEvent = event.type === 'playing'\n    || bufferLength > 0 ? (event.type === 'progress'\n      || event.type === 'timeupdate')\n      && video.buffered.end(bufferLength - 1) === this._lastProgress : true;\n\n    if (!this._videoStalled || hasNotProgressedSinceLastProgressEvent) {\n      return;\n    }\n\n    if (event.type === 'progress') {\n      this._lastProgress = video.buffered.end(bufferLength - 1);\n    }\n\n    const timeSinceStop = Date.now() - this._videoStalled;\n\n    this._metricsService.push({\n      metricType: MetricsType.Buffering,\n      runtime: (Date.now() - this._pageLoadTime) / 1000,\n      value: {uint64: timeSinceStop},\n      streamId: this._streamId\n    });\n\n    this._logger.info(\n      '[%s] [%s] [buffering] Stream has recovered from stall after [%s]',\n      this.durationSincePageLoad,\n      this._streamId,\n      new Durations(timeSinceStop).toIsoString()\n    );\n    this._videoStalled = null;\n  }\n\n  onVideoResolutionChanges(newResolution: string): void {\n    this._metricsService.push({\n      metricType: MetricsType.ResolutionChanged,\n      runtime: (Date.now() - this._pageLoadTime) / 1000,\n      value: {string: newResolution},\n      previousValue: this._videoResolution ? {string: this._videoResolution} : undefined,\n      streamId: this._streamId\n    });\n\n    this._videoResolution = newResolution;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport MetricsType from '../metrics/MetricsType';\nimport MetricType from '../metrics/MetricType';\nimport Durations from '../time/Duration';\nimport {ILogger} from '../logger/LoggerInterface';\nimport SDK from '../sdk/SDK';\nimport LoggerFactory from '../logger/LoggerFactory';\n\nexport class StreamSetupListener {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('StreamSetupListener');\n  private readonly metricsService = SDK.metricsService;\n  private readonly _pageLoadTime: number;\n  private readonly _startTime: number;\n  private _metricSubmitted = false;\n\n  constructor(pageLoadTime: number) {\n    this._startTime = Date.now();\n    this._pageLoadTime = pageLoadTime;\n  }\n\n  success(streamId): void {\n    this.recordStreamMetric(MetricsType.SetupCompleted, streamId);\n  }\n\n  fail(): void {\n    this.recordStreamMetric(MetricsType.SetupFailed);\n  }\n\n  private recordStreamMetric(metricType: MetricsType, streamId?: string): void {\n    if (this._metricSubmitted) {\n      return ;\n    }\n\n    this._metricSubmitted = true;\n\n    const now = Date.now();\n    const setupTime = now - this._startTime;\n    const metricName = new MetricType(metricType).getName();\n\n    this.metricsService.push({\n      metricType,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: setupTime},\n      streamId\n    });\n\n    this._logger.info(\n      '[%s] [%s] Stream metric [%s] in [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      streamId,\n      metricName,\n      new Durations(setupTime).toIsoString()\n    );\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport IDisposable from '../lang/IDisposable';\nimport Disposable from '../lang/Disposable';\nimport Subject from '../rx/Subject';\nimport DisposableList from '../lang/DisposableList';\n\nexport default class NetworkMonitor implements IDisposable {\n  private readonly _disposables: DisposableList = new DisposableList();\n  private readonly _isSupported = navigator && navigator['connection'];\n  private readonly _rtt: Subject<number> = new Subject(undefined);\n  private readonly _effectiveType: Subject<string> = new Subject(undefined);\n  private readonly _downlinkThroughputCapacity: Subject<number> = new Subject(undefined);\n\n  constructor() {\n    if (!this.isSupported) {\n      return;\n    }\n\n    this.setupNetworkChangeListeners();\n    this.updateStatistics();\n  }\n\n  get isSupported(): boolean {\n    return this._isSupported;\n  }\n\n  get rtt(): Subject<number> {\n    return this._rtt;\n  }\n\n  get effectiveType(): Subject<string> {\n    return this._effectiveType;\n  }\n\n  get downlinkThroughputCapacity(): Subject<number> {\n    return this._downlinkThroughputCapacity;\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private getDownlinkThroughputCapacity(): number {\n    if (!this.isSupported) {\n      return -1;\n    }\n\n    return navigator['connection'].downlink || navigator['connection'].downlinkMax;\n  }\n\n  private getEffectiveType(): string {\n    if (!this.isSupported) {\n      return 'Unknown';\n    }\n\n    return navigator['connection'].effectiveType || navigator['connection'].type;\n  }\n\n  private getRoundTripTime(): number {\n    return navigator['connection'].rtt;\n  }\n\n  private setupNetworkChangeListeners(): void {\n    const listener = (): void => {\n      this.updateStatistics();\n    };\n\n    navigator['connection'].addEventListener('change', listener);\n\n    this._disposables.add(new Disposable(() => {\n      navigator['connection'].removeEventListener('change', listener);\n    }));\n  }\n\n  private updateStatistics(): void {\n    this._rtt.value = this.getRoundTripTime();\n    this._effectiveType.value = this.getEffectiveType();\n    this._downlinkThroughputCapacity.value = this.getDownlinkThroughputCapacity();\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {StreamSetupListener} from '../dom/StreamSetupListener';\nimport {ILogger} from '../logger/LoggerInterface';\nimport LoggerFactory from '../logger/LoggerFactory';\nimport NetworkMonitor from '../dom/NetworkMonitor';\nimport SDK from '../sdk/SDK';\nimport MetricsType from '../metrics/MetricsType';\nimport Durations from '../time/Duration';\nimport IDisposable from '../lang/IDisposable';\nimport DisposableList from '../lang/DisposableList';\nimport MetricsService from '../metrics/MetricsService';\n\ninterface INetworkStatistics {\n  rtt?: number;\n  effectiveType?: string;\n  downlinkThroughputCapacity?: number;\n}\n\nexport default class SessionTelemetry implements IDisposable {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('SessionTelemetry');\n  private readonly _metricsService: MetricsService;\n  private readonly _applicationActivityMonitor = SDK.applicationActivityMonitor;\n  private readonly _networkMonitor: NetworkMonitor = new NetworkMonitor();\n  private readonly _pageLoadTime: number;\n  private readonly _disposables: DisposableList = new DisposableList();\n  private _lastNetworkStatistics: INetworkStatistics = {};\n\n  constructor(pageLoadTime: number, metricsService: MetricsService) {\n    this._pageLoadTime = pageLoadTime;\n    this._disposables.add(this._networkMonitor);\n    this._metricsService = metricsService;\n\n    if (!this._networkMonitor.isSupported) {\n      return;\n    }\n\n    this._disposables.add(this._applicationActivityMonitor.isForeground.subscribe(isForeground => {\n      this.recordForegroundChange(isForeground);\n    }));\n    this._disposables.add(this._networkMonitor.rtt.subscribe(value => {\n      this.recordNetworkRTTUpdate(value);\n    }));\n    this._disposables.add(this._networkMonitor.effectiveType.subscribe(value => {\n      this.recordNetworkTypeChangeUpdate(value);\n    }));\n    this._disposables.add(this._networkMonitor.downlinkThroughputCapacity.subscribe(value => {\n      this.recordNetworkDownlinkThroughputCapacityUpdate(value);\n    }));\n  }\n\n  listenOnStreamSetup(): StreamSetupListener {\n    return new StreamSetupListener(this._pageLoadTime);\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private recordForegroundChange(isForeground: boolean): void {\n    const now = Date.now();\n    const timeSinceLastChange = this._applicationActivityMonitor.getTimeSinceLastChange();\n\n    this._metricsService.push({\n      metricType: isForeground ? MetricsType.ApplicationForeground : MetricsType.ApplicationBackground,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: timeSinceLastChange}\n    });\n\n    this._logger.info(\n      'Application has gone into the [%s] after [%s] ms',\n      isForeground ? 'foreground' : 'background',\n      new Durations(timeSinceLastChange).toIsoString(),\n    );\n  }\n\n  private recordNetworkRTTUpdate(newRTT: number): void {\n    const now = Date.now();\n    const oldRtt = this._lastNetworkStatistics.rtt;\n\n    this._lastNetworkStatistics.rtt = newRTT;\n\n    this._metricsService.push({\n      metricType: MetricsType.RoundTripTime,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: newRTT},\n      previousValue: oldRtt ? {uint64: oldRtt} : undefined,\n      resource: 'navigator'\n    });\n\n    this._logger.info(\n      '[%s] Network RTT changed to [%s] from [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      newRTT,\n      oldRtt\n    );\n  }\n\n  private recordNetworkTypeChangeUpdate(newNetworkType: string): void {\n    const now = Date.now();\n    const oldNetworkType = this._lastNetworkStatistics.effectiveType;\n\n    this._lastNetworkStatistics.effectiveType = newNetworkType;\n\n    this._metricsService.push({\n      metricType: MetricsType.NetworkType,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {string: newNetworkType},\n      previousValue: oldNetworkType ? {string: oldNetworkType} : undefined\n    });\n\n    this._logger.info(\n      '[%s] Network effective type has changed to [%s] from [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      newNetworkType,\n      oldNetworkType\n    );\n  }\n\n  private recordNetworkDownlinkThroughputCapacityUpdate(newCapacity: number): void {\n    const now = Date.now();\n    const oldCapacity = this._lastNetworkStatistics.downlinkThroughputCapacity;\n\n    this._lastNetworkStatistics.downlinkThroughputCapacity = newCapacity;\n\n    this._metricsService.push({\n      metricType: MetricsType.DownlinkThroughputCapacity,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {float: newCapacity},\n      previousValue: oldCapacity ? {float: oldCapacity} : undefined\n    });\n\n    this._logger.info(\n      '[%s] Network downlink throughput capacity changed to [%s] from [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      newCapacity,\n      oldCapacity\n    );\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {EdgeToken} from '../sdk/edgeAuth/EdgeToken';\nimport Subject from '../rx/Subject';\n\nexport default class TokenContext {\n  token: Subject<EdgeToken>;\n  tokenExpiring: Subject<boolean>;\n\n  constructor(token: string) {\n    this.token = new Subject<EdgeToken>(token);\n    this.tokenExpiring = new Subject<boolean>(false);\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../../rx/Subject';\nimport ChannelState from './ChannelState';\nimport Dimension from '../../video/Dimension';\nimport EndPoint, {IStream, SubscribeStatus} from '../discovery/EndPoint';\nimport VideoTelemetry from '../../video/VideoTelemetry';\nimport {IRtcMonitorStatistic, IRtcStatistic} from '../../rtc/RtcConnectionMonitor';\nimport SDK from '../SDK';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport DisposableList from '../../lang/DisposableList';\nimport {BitsPerSecond, Millisecond} from '../../units/Units';\n\nexport default class ChannelContext {\n  channelInitialization: Date;\n  disposables: DisposableList;\n  channelDisposables: DisposableList;\n  rendererDisposables: DisposableList;\n  videoElement: Subject<HTMLVideoElement>;\n  state: Subject<ChannelState>;\n  autoMuted: Subject<boolean>;\n  autoPaused: Subject<boolean>;\n  authorized: Subject<boolean>;\n  online: Subject<boolean>;\n  loading: Subject<boolean>;\n  playing: Subject<boolean>;\n  standby: Subject<boolean>;\n  stopped: Subject<boolean>;\n  targetLag: Subject<Millisecond>;\n  lag: Subject<Millisecond>;\n  bitrateLimit: Subject<BitsPerSecond>;\n  resolution: Subject<Dimension>;\n  failureCount: Subject<number>;\n  endPoint: Subject<EndPoint>;\n  stream: Subject<IStream>;\n  rtcStatistics: Subject<IRtcMonitorStatistic>;\n  videoTelemetry: VideoTelemetry;\n  rtcAudioStatistic: IRtcStatistic;\n  rtcVideoStatistic: IRtcStatistic;\n  clearFailureCountTimeout: number;\n\n  constructor(targetLag: number) {\n    this.disposables = new DisposableList();\n    this.channelDisposables = new DisposableList();\n    this.rendererDisposables = new DisposableList();\n    this.channelInitialization = new Date();\n    this.videoElement = new Subject<HTMLVideoElement>(null);\n    this.state = new Subject<ChannelState>(ChannelState.Starting);\n    this.autoMuted = new Subject<boolean>(false);\n    this.autoPaused = new Subject<boolean>(false);\n    this.authorized = new Subject<boolean>(true);\n    this.online = new Subject<boolean>(true);\n    this.loading = new Subject<boolean>(false);\n    this.playing = new Subject<boolean>(false);\n    this.standby = new Subject<boolean>(false);\n    this.stopped = new Subject<boolean>(false);\n    this.targetLag = new Subject<Millisecond>(targetLag);\n    this.lag = new Subject<Millisecond>(0);\n    this.bitrateLimit = new Subject<BitsPerSecond>(0);\n    this.resolution = new Subject<Dimension>(Dimension.empty);\n    this.failureCount = new Subject<number>(0);\n    this.endPoint = new Subject<EndPoint>(null);\n    this.stream = new Subject<IStream>(null);\n    this.rtcStatistics = new Subject<IRtcMonitorStatistic>(null);\n  }\n\n  get streamId(): string {\n    const stream = this.stream.value;\n\n    if (!stream) {\n      return '-';\n    }\n\n    return stream.streamId;\n  }\n\n  applyStatus(status: SubscribeStatus): void {\n    switch (status) {\n      case 'ok':\n        break;\n      case 'unauthorized':\n      case 'geo-restricted':\n      case 'geo-blocked':\n        this.authorized.value = false;\n\n      // eslint-disable-next-line no-fallthrough\n      case 'no-stream':\n      case 'not-found':\n        this.failureCount.value = 0;\n        this.playing.value = false;\n        this.standby.value = true;\n        this.stopped.value = false;\n        this.stream.value = null;\n\n        return;\n      default:\n        this.failureCount.value++;\n        this.playing.value = false;\n        this.standby.value = true;\n        this.stopped.value = false;\n        this.stream.value = null;\n        this.state.value = ChannelState.Error;\n\n        return;\n    }\n  }\n\n  applySessionAndStreamPropertiesToVideoElement(): void {\n    if (this.videoElement.value && this.videoElement.value.dataset) {\n      this.videoElement.value.dataset.sessionId = SDK.clientSessionId;\n      this.videoElement.value.dataset.streamId = this.streamId;\n    }\n  }\n\n  mapSubscribeStatusToChannelStatus(status: SubscribeStatus): ChannelState {\n    switch (status) {\n      case 'ok':\n        return ChannelState.Starting;\n      case 'no-stream':\n      case 'not-found':\n        return ChannelState.StandBy;\n      case 'geo-restricted':\n        return ChannelState.GeoRestricted;\n      case 'geo-blocked':\n        return ChannelState.GeoBlocked;\n      case 'unauthorized':\n        return ChannelState.Unauthorized;\n      case 'capacity':\n      case 'rate-limited':\n      case 'timeout':\n        return ChannelState.Recovering;\n      case 'failed':\n        return ChannelState.Error;\n      default:\n        assertUnreachable(status);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../rx/Subject';\nimport IPeerConnection from '../rtc/IPeerConnection';\n\nexport default class PeerConnectionContext {\n  mediaStream: Subject<MediaStream>;\n  peerConnection: Subject<IPeerConnection>;\n  peerConnectionReconnectAttempts: number;\n\n  constructor() {\n    this.mediaStream = new Subject<MediaStream>(null);\n    this.peerConnection = new Subject<IPeerConnection>(null);\n    this.peerConnectionReconnectAttempts = 0;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../rx/Subject';\n\nexport default class StateContext {\n  isStarting: Subject<boolean>;\n  isDisposed: boolean;\n\n  constructor() {\n    this.isStarting = new Subject<boolean>(false);\n    this.isDisposed = false;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport SDK from '../sdk/SDK';\nimport IPeerConnection from './IPeerConnection';\nimport {ILogger} from '../logger/LoggerInterface';\nimport FeatureEnablement from '../sdk/feature/FeatureEnablement';\n\nexport interface IPeerConnectionOfferInit {\n  audioTransceiver?: RTCRtpTransceiver;\n  videoTransceiver?: RTCRtpTransceiver;\n  peerConnection: IPeerConnection;\n  localOffer: RTCSessionDescriptionInit;\n}\n\nexport default class PeerConnectionService {\n  private static _logger: ILogger = LoggerFactory.getLogger('PeerConnectionService');\n  private static _cached: {\n    direction?: RTCRtpTransceiverDirection;\n    peerConnection: Promise<IPeerConnectionOfferInit>;\n  };\n\n  static initiateInitialPrecaching(): void {\n    if (FeatureEnablement.isPrecachingEnabled) {\n      const ignored = PeerConnectionService.precacheCreatePeerConnectionOffer()\n        .catch(e => PeerConnectionService._logger.error('Failed to pre-cache peer connection offer\"', e));\n    }\n  }\n\n  static async precacheCreatePeerConnectionOffer(): Promise<{ peerConnection: Promise<IPeerConnectionOfferInit | void> }> {\n    return PeerConnectionService._cached = {\n      direction: 'recvonly',\n      peerConnection: PeerConnectionService.createPeerConnectionOffer()\n        .catch(e => {\n          PeerConnectionService._cached = null;\n\n          throw e;\n        })\n    };\n  }\n\n  static async createPeerConnectionOffer(direction: RTCRtpTransceiverDirection = 'recvonly'): Promise<IPeerConnectionOfferInit> {\n    if (PeerConnectionService._cached && PeerConnectionService._cached.direction === direction) {\n      const value = PeerConnectionService._cached.peerConnection;\n\n      PeerConnectionService._cached = null;\n\n      return value;\n    }\n\n    const peerConnectionFactory = SDK.peerConnectionFactory.value;\n\n    return peerConnectionFactory.createPeerConnection()\n      .then(async peerConnection => {\n        const supportsAddTransceiver = peerConnection.supportsAddTransceiver;\n        let videoTransceiver, audioTransceiver;\n\n        if (supportsAddTransceiver) {\n          audioTransceiver = peerConnection.addTransceiver('audio', {direction});\n          videoTransceiver = peerConnection.addTransceiver('video', {direction});\n\n          return {\n            audioTransceiver,\n            videoTransceiver,\n            peerConnection: peerConnection,\n            localOffer: await peerConnection.createOffer(undefined)\n          };\n        }\n\n        const options = direction === 'recvonly' ? {\n          offerToReceiveAudio: true,\n          offerToReceiveVideo: true\n        } : {};\n\n        return {\n          peerConnection: peerConnection,\n          localOffer: await peerConnection.createOffer(options)\n        };\n      });\n  }\n\n  private constructor() {\n    throw new Error('PeerConnectionService is a static class that may not be instantiated');\n  }\n}\n\nPeerConnectionService.initiateInitialPrecaching();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {BitrateMode, BitrateModeType} from '../api/SetTemporaryMaximalBitrate';\nimport assertUnreachable from '../../lang/assertUnreachable';\n\nexport default class BitrateModeMapping {\n  static convertBitrateModeToBitrateModeType(bitrateMode: BitrateMode): BitrateModeType {\n    switch (bitrateMode) {\n      case BitrateMode.Normal:\n        return 'Normal';\n      case BitrateMode.Force:\n        return 'Force';\n      case BitrateMode.Reset:\n        return 'Reset';\n      default:\n        assertUnreachable(bitrateMode);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {BitrateState, BitrateStateType} from '../api/SetTemporaryMaximalBitrate';\nimport assertUnreachable from '../../lang/assertUnreachable';\n\nexport default class BitrateStateMapping {\n  static convertBitrateStateToBitrateStateType(bitrateState: BitrateState): BitrateStateType {\n    switch (bitrateState) {\n      case BitrateState.Keep:\n        return 'Keep';\n      case BitrateState.Reset:\n        return 'Reset';\n      default:\n        assertUnreachable(bitrateState);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport {ILogger} from '../../logger/LoggerInterface';\n\nimport {\n  ISubscribeResponse,\n  ISubscribeWithOfferRequest,\n  ISubscribeWithoutOfferRequest\n} from '../api/Subscribe';\nimport {ISetRemoteDescriptionRequest, ISetRemoteDescriptionResponse} from '../api/SetRemoteDescription';\nimport {IRtcConfiguration} from '../api/RtcConfiguration';\nimport {ISessionDescription, SdpType} from '../api/SessionDescription';\nimport {IDestroyStreamRequest, IDestroyStreamResponse} from '../api/DestroyStream';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport {IAddIceCandidatesRequest, IAddIceCandidatesResponse} from '../api/AddIceCandidates';\nimport VersionManager from '../version/VersionManager';\nimport EdgeAuth from '../edgeAuth/EdgeAuth';\nimport {BitrateMode, BitrateState, ISetTemporaryMaximalBitrate} from '../api/SetTemporaryMaximalBitrate';\nimport BitrateModeMapping from './BitrateModeMapping';\nimport BitrateStateMapping from './BitrateStateMapping';\nimport {BitsPerSecond, Millisecond} from '../../units/Units';\nimport {\n  IPublishResponse,\n  IPublishWithOfferRequest,\n  IPublishWithoutOfferRequest,\n  PublishStatus\n} from '../api/Publish';\n\nconst apiVersion = 6;\n\nexport type SubscribeStatus = 'ok' | 'no-stream' | 'not-found' | 'unauthorized' | 'geo-restricted' | 'geo-blocked' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type SetRemoteDescriptionStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type SetTemporaryMaximalBitrateStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type RemoveTemporaryMaximalBitrateStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type AddIceCandidatesStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type DestroyStreamStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport interface IStream {\n  streamId: string;\n  sharedSecret: string;\n  tenancy: string;\n}\n\nexport interface ISubscribeResponseInit {\n  status: SubscribeStatus;\n  stream?: IStream;\n  lag?: Millisecond;\n  rtcConfiguration?: RTCConfiguration;\n  setRemoteDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n  createOfferDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n  createAnswerDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n}\n\nexport type IPublishResponseInit = ISubscribeResponseInit;\n\ninterface ISetRemoteDescriptionResponseInit {\n  status: SetRemoteDescriptionStatus;\n  sessionDescription?: RTCSessionDescriptionInit;\n}\n\ninterface IAddIceCandidatesResponseInit {\n  status: AddIceCandidatesStatus;\n  options?: string[];\n}\n\ninterface ISetTemporaryMaximalBitrateResponseInit {\n  status: SetTemporaryMaximalBitrateStatus;\n}\n\ninterface IDestroyStreamResponseInit {\n  status: DestroyStreamStatus;\n}\n\nexport default class EndPoint {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('EndPoint');\n  private readonly _uri: string;\n  private readonly _timeout: number;\n  private _roundTripTime: number;\n\n  constructor(uri: string, timeout: number) {\n    this._uri = uri;\n    this._timeout = timeout;\n\n    if (!timeout) {\n      throw new Error(`End point requires a timeout`);\n    }\n  }\n\n  get roundTripTime(): number {\n    return this._roundTripTime;\n  }\n\n  toString(): string {\n    return `EndPoint[uri=${this._uri}]`;\n  }\n\n  async ping(): Promise<number> {\n    const url = this.buildPingUrl();\n    const start = Date.now();\n    const response = await Promise.race([\n      fetch(url, {\n        method: 'GET',\n        cache: 'no-cache'\n      }),\n      new Promise<Response>((_, reject) =>\n        setTimeout(() => reject(new Error(`Ping timed out [${url}]`)), this._timeout)\n      )\n    ]);\n    const finished = Date.now();\n\n    if (!response.ok) { /* Handle */\n      throw new Error(`Ping failed [${url}] [${response.status}]`);\n    }\n\n    this._roundTripTime = finished - start;\n\n    return this._roundTripTime;\n  }\n\n  async subscribe(token: string, localSessionDescription: RTCSessionDescriptionInit, failureCount: number): Promise<ISubscribeResponseInit> {\n    const parsedToken = EdgeAuth.parseToken(token);\n\n    if (!parsedToken || !parsedToken.applicationId) {\n      this._logger.error('Failed to parse token [%s]', token);\n\n      return {status: 'unauthorized'};\n    }\n\n    const tenancy = parsedToken.applicationId;\n    const url = this.buildUrl([tenancy, 'stream', 'subscribe']).toString();\n    const formData = new FormData();\n    const clientVersion = VersionManager.sdkVersion;\n\n    if (failureCount === 0 && localSessionDescription) {\n      const bodyWithOffer: ISubscribeWithOfferRequest = {\n        apiVersion,\n        clientVersion,\n        edgeAuthToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        setRemoteDescription: {\n          apiVersion,\n          sessionDescription: {\n            type: this.convertRTCSdpTypeToSdpType(localSessionDescription.type),\n            sdp: localSessionDescription.sdp\n          }\n        },\n        createAnswerDescription: {apiVersion}\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithOffer));\n    } else {\n      const bodyWithoutOffer: ISubscribeWithoutOfferRequest = {\n        apiVersion,\n        clientVersion,\n        edgeAuthToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        createOfferDescription: {apiVersion}\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithoutOffer));\n    }\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to subscribe', new Error(`Subscribe timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to subscribe', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: SubscribeStatus = this.mapHttpStatusToSubscribeStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const subscribeResponse = await this.convertHttpResponseToSubscribeResponse(tenancy, httpResponse);\n\n    this._logger.debug('Got subscribe response [%j] in [%s] ms', subscribeResponse, finished - start);\n\n    return subscribeResponse;\n  }\n\n  async publish(name: string, token: string, localSessionDescription: RTCSessionDescriptionInit, failureCount: number): Promise<IPublishResponseInit> {\n    const parsedToken = EdgeAuth.parseToken(token);\n\n    if (!parsedToken || !parsedToken.applicationId) {\n      this._logger.error('Failed to parse token [%s]', token);\n\n      return {status: 'unauthorized'};\n    }\n\n    const tenancy = parsedToken.applicationId;\n    const url = this.buildUrl([tenancy, 'stream', 'publish']).toString();\n    const formData = new FormData();\n    const clientVersion = VersionManager.sdkVersion;\n\n    if (failureCount === 0 && localSessionDescription) {\n      const bodyWithOffer: IPublishWithOfferRequest = {\n        apiVersion,\n        clientVersion,\n        edgeAuthToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        name,\n        setRemoteDescription: {\n          apiVersion,\n          sessionDescription: {\n            type: this.convertRTCSdpTypeToSdpType(localSessionDescription.type),\n            sdp: localSessionDescription.sdp\n          }\n        },\n        createAnswerDescription: {\n          streamId: '',\n          options: ['upload'],\n          apiVersion\n        }\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithOffer));\n    } else {\n      const bodyWithoutOffer: IPublishWithoutOfferRequest = {\n        apiVersion,\n        clientVersion,\n        edgeAuthToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        name,\n        createOfferDescription: {\n          streamId: '',\n          options: ['upload'],\n          apiVersion\n        }\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithoutOffer));\n    }\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to publish', new Error(`Publish timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to publish', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: PublishStatus = this.mapHttpStatusToPublishStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const subscribeResponse = await this.convertHttpResponseToPublishResponse(tenancy, httpResponse);\n\n    this._logger.debug('Got publish response [%j] in [%s] ms', subscribeResponse, finished - start);\n\n    return subscribeResponse;\n  }\n\n  async setRemoteDescription(stream: IStream, sessionDescription: RTCSessionDescriptionInit): Promise<ISetRemoteDescriptionResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'description', 'remote']).toString();\n    const formData = new FormData();\n    const body: ISetRemoteDescriptionRequest = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      sessionDescription: {\n        type: this.convertRTCSdpTypeToSdpType(sessionDescription.type),\n        sdp: sessionDescription.sdp\n      }\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to set remote description', new Error(`Set remote description timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to set remote description', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: SetRemoteDescriptionStatus = this.mapHttpStatusToSetRemoteDescriptionStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const setRemoteDescriptionResponse = await this.convertHttpResponseToSetRemoteDescriptionResponse(httpResponse);\n\n    this._logger.debug('Got set remote description response [%j] in [%s] ms', setRemoteDescriptionResponse, finished - start);\n\n    return setRemoteDescriptionResponse;\n  }\n\n  async limitBitrate(\n    stream: IStream,\n    elapsedInMilliseconds: number,\n    bitrateInBitsPerSecond: BitsPerSecond,\n    bitrateState: BitrateState,\n    bitrateMode: BitrateMode,\n  ): Promise<ISetTemporaryMaximalBitrateResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'bitrate']).toString();\n    const formData = new FormData();\n    const body: ISetTemporaryMaximalBitrate = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      elapsedInMilliseconds,\n      bitrateInBitsPerSecond,\n      bitrateState: BitrateStateMapping.convertBitrateStateToBitrateStateType(bitrateState),\n      bitrateMode: BitrateModeMapping.convertBitrateModeToBitrateModeType(bitrateMode)\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to set limit bitrate timed', new Error(`Set limit bitrate timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to set limit bitrate timed', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: SetTemporaryMaximalBitrateStatus = this.mapHttpStatusToSetTemporaryMaximalBitrateStatus(httpResponse);\n    const finished = Date.now();\n\n    this._logger.info('Got set limit bitrate response [%s] in [%s] ms', status, finished - start);\n\n    return {status};\n  }\n\n  async addIceCandidates(stream: IStream, candidates: RTCIceCandidate[], discoveryCompleted: boolean, options: string[] = []): Promise<IAddIceCandidatesResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'ice', 'candidates']).toString();\n    const formData = new FormData();\n    const body: IAddIceCandidatesRequest = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      candidates,\n      discoveryCompleted,\n      options\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to add ice candidates', new Error(`Add ice candidates timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to add ice candidates', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: AddIceCandidatesStatus = this.mapHttpStatusToAddIceCandidatesStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const addIceCandidatesResponse = await this.convertHttpResponseToAddIceCandidatesResponse(httpResponse);\n\n    this._logger.info('Got add ICE candidates response [%j] in [%s] ms', addIceCandidatesResponse, finished - start);\n\n    return addIceCandidatesResponse;\n  }\n\n  async destroyStream(stream: IStream, reason: string): Promise<IDestroyStreamResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'destroy']).toString();\n    const formData = new FormData();\n    const body: IDestroyStreamRequest = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      reason,\n      options: []\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData,\n          cache: 'no-cache'\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to subscribe', new Error(`Delete stream timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to delete stream', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: DestroyStreamStatus = this.mapHttpStatusToSetDestroyStreamStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const destroyStreamResponse = await this.convertHttpResponseToDestroyStreamResponse(httpResponse);\n\n    this._logger.info('Got destroy stream response [%j] in [%s] ms', destroyStreamResponse, finished - start);\n\n    return destroyStreamResponse;\n  }\n\n  private buildUrl(path: string[]): URL {\n    const uri = new URL(this._uri);\n    const pathAsArray = uri.pathname.split('/');\n\n    pathAsArray.length = pathAsArray.length - 1;\n\n    uri.pathname = pathAsArray.concat(...path).join('/');\n\n    return uri;\n  }\n\n  private buildPingUrl(): string {\n    const uri = new URL(this._uri);\n    const sdkVersion = VersionManager.sdkVersion;\n\n    uri.search = `?${new URLSearchParams([['type', 'http'], ['version', sdkVersion], ['_', `${Date.now()}`]]).toString()}`;\n\n    return uri.toString();\n  }\n\n  private mapHttpStatusToPublishStatus(response: Response): PublishStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 402:\n        return 'geo-restricted';\n      case 403:\n        return 'geo-blocked';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSubscribeStatus(response: Response): SubscribeStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 402:\n        return 'geo-restricted';\n      case 403:\n        return 'geo-blocked';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSetRemoteDescriptionStatus(response: Response): SetRemoteDescriptionStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSetTemporaryMaximalBitrateStatus(response: Response): SetTemporaryMaximalBitrateStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToAddIceCandidatesStatus(response: Response): AddIceCandidatesStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSetDestroyStreamStatus(response: Response): DestroyStreamStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private async convertHttpResponseToSubscribeResponse(tenancy: string, response: Response): Promise<ISubscribeResponseInit> {\n    const data = await response.json() as ISubscribeResponse;\n    const subscribeResponse: ISubscribeResponseInit = {status: data.status};\n\n    subscribeResponse.stream = {\n      tenancy,\n      streamId: data.streamId,\n      sharedSecret: data.sharedSecret\n    };\n\n    subscribeResponse.lag = data.lag;\n\n    if (data) {\n      if (data.rtcConfiguration) {\n        subscribeResponse.rtcConfiguration = this.convertIRtcConfigurationToRTCConfiguration(data.rtcConfiguration);\n      }\n\n      if (data.setRemoteDescriptionResponse && data.setRemoteDescriptionResponse.sessionDescription) {\n        subscribeResponse.setRemoteDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.setRemoteDescriptionResponse.sessionDescription)};\n      }\n\n      if (data.createAnswerDescriptionResponse && data.createAnswerDescriptionResponse.sessionDescription) {\n        subscribeResponse.createAnswerDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.createAnswerDescriptionResponse.sessionDescription)};\n      }\n\n      if (data.createOfferDescriptionResponse && data.createOfferDescriptionResponse.sessionDescription) {\n        subscribeResponse.createOfferDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.createOfferDescriptionResponse.sessionDescription)};\n      }\n    }\n\n    return subscribeResponse;\n  }\n\n  private async convertHttpResponseToPublishResponse(tenancy: string, response: Response): Promise<IPublishResponseInit> {\n    const data = await response.json() as IPublishResponse;\n    const publishResponse: IPublishResponseInit = {status: data.status};\n\n    publishResponse.stream = {\n      tenancy,\n      streamId: data.streamId,\n      sharedSecret: data.sharedSecret\n    };\n\n    if (data) {\n      if (data.rtcConfiguration) {\n        publishResponse.rtcConfiguration = this.convertIRtcConfigurationToRTCConfiguration(data.rtcConfiguration);\n      }\n\n      if (data.setRemoteDescriptionResponse && data.setRemoteDescriptionResponse.sessionDescription) {\n        publishResponse.setRemoteDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.setRemoteDescriptionResponse.sessionDescription)};\n      }\n\n      if (data.createAnswerDescriptionResponse && data.createAnswerDescriptionResponse.sessionDescription) {\n        publishResponse.createAnswerDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.createAnswerDescriptionResponse.sessionDescription)};\n      }\n\n      if (data.createOfferDescriptionResponse && data.createOfferDescriptionResponse.sessionDescription) {\n        publishResponse.createOfferDescriptionResponse = {sessionDescription: this.convertISessionDescriptionToRTCSessionDescription(data.createOfferDescriptionResponse.sessionDescription)};\n      }\n    }\n\n    return publishResponse;\n  }\n\n  private convertIRtcConfigurationToRTCConfiguration(configuration: IRtcConfiguration): RTCConfiguration {\n    const rtcConfiguration: RTCConfiguration = {};\n\n    if (configuration.bundlePolicy) {\n      switch (configuration.bundlePolicy) {\n        case 'BundlePolicyBalanced':\n          rtcConfiguration.bundlePolicy = 'balanced';\n\n          break;\n        case 'BundlePolicyMaxCompat':\n          rtcConfiguration.bundlePolicy = 'max-compat';\n\n          break;\n        case 'BundlePolicyMaxBundle':\n          rtcConfiguration.bundlePolicy = 'max-bundle';\n\n          break;\n        default:\n          assertUnreachable(configuration.bundlePolicy);\n      }\n    }\n\n    if (typeof configuration.iceCandidatePoolSize === 'number') {\n      rtcConfiguration.iceCandidatePoolSize = configuration.iceCandidatePoolSize;\n    }\n\n    if (configuration.iceServers) {\n      const iceServers: RTCIceServer[] = [];\n\n      for (let i = 0; i < configuration.iceServers.length; i++) {\n        iceServers.push({\n          urls: configuration.iceServers[i].urls,\n          username: configuration.iceServers[i].username,\n          credential: configuration.iceServers[i].credential\n        });\n      }\n\n      rtcConfiguration.iceServers = iceServers;\n    }\n\n    if (configuration.iceTransportPolicy) {\n      switch (configuration.iceTransportPolicy) {\n        case 'IceTransportPolicyAll':\n          rtcConfiguration.iceTransportPolicy = 'all';\n\n          break;\n        case 'IceTransportPolicyRelay':\n          rtcConfiguration.iceTransportPolicy = 'relay';\n\n          break;\n        case 'IceTransportPolicyPublic':\n          // Deprecated - Not supported\n          break;\n        default:\n          assertUnreachable(configuration.iceTransportPolicy);\n      }\n    }\n\n    if (configuration.peerIdentity) {\n      rtcConfiguration.peerIdentity = configuration.peerIdentity;\n    }\n\n    if (configuration.rtcpMuxPolicy) {\n      switch (configuration.rtcpMuxPolicy) {\n        case 'RtcpMuxPolicyNegotiate':\n          rtcConfiguration.rtcpMuxPolicy = 'negotiate';\n\n          break;\n        case 'RtcpMuxPolicyRequire':\n          rtcConfiguration.rtcpMuxPolicy = 'require';\n\n          break;\n        default:\n          assertUnreachable(configuration.rtcpMuxPolicy);\n      }\n    }\n\n    return rtcConfiguration;\n  }\n\n  private convertISessionDescriptionToRTCSessionDescription(sessionDescription: ISessionDescription): RTCSessionDescriptionInit {\n    const rtcSessionDescription: RTCSessionDescriptionInit = {sdp: sessionDescription.sdp};\n\n    switch (sessionDescription.type) {\n      case 'Offer':\n        rtcSessionDescription.type = 'offer';\n\n        break;\n      case 'Answer':\n        rtcSessionDescription.type = 'answer';\n\n        break;\n      default:\n        assertUnreachable(sessionDescription.type);\n    }\n\n    return rtcSessionDescription;\n  }\n\n  private async convertHttpResponseToSetRemoteDescriptionResponse(response: Response): Promise<ISetRemoteDescriptionResponseInit> {\n    const data = await response.json() as ISetRemoteDescriptionResponse;\n    const setRemoteDescriptionResponse: ISetRemoteDescriptionResponseInit = {status: data.status};\n\n    if (data && data.sessionDescription) {\n      setRemoteDescriptionResponse.sessionDescription = this.convertISessionDescriptionToRTCSessionDescription(data.sessionDescription);\n    }\n\n    return setRemoteDescriptionResponse;\n  }\n\n  private async convertHttpResponseToAddIceCandidatesResponse(response: Response): Promise<IAddIceCandidatesResponseInit> {\n    const data = await response.json() as IAddIceCandidatesResponse;\n    const addIceCandidatesResponse: IAddIceCandidatesResponseInit = {\n      status: data.status,\n      options: []\n    };\n\n    if (data) {\n      if (data.options) {\n        addIceCandidatesResponse.options = data.options;\n      }\n    }\n\n    return addIceCandidatesResponse;\n  }\n\n  private async convertHttpResponseToDestroyStreamResponse(response: Response): Promise<IDestroyStreamResponseInit> {\n    const data = await response.json() as IDestroyStreamResponse;\n    const destroyStream: IDestroyStreamResponseInit = {status: data.status};\n\n    return destroyStream;\n  }\n\n  private convertRTCSdpTypeToSdpType(type: RTCSdpType): SdpType {\n    switch (type) {\n      case 'answer':\n        return 'Answer';\n      case 'offer':\n        return 'Offer';\n      case 'pranswer':\n      case 'rollback':\n        throw new Error(`SDP type [${type}] is not supported`);\n      default:\n        assertUnreachable(type);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport EndPoint from './EndPoint';\nimport SDK from '../SDK';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport MetricsType from '../../metrics/MetricsType';\nimport DiscoveryUri from './DiscoveryUri';\nimport MetricsService from '../../metrics/MetricsService';\nimport MetricsFactory from '../../metrics/MetricsFactory';\n\nconst defaultTimeout = 20000;\n\nexport default class DiscoveryService {\n  private _logger: ILogger = LoggerFactory.getLogger('Discovery');\n  private _metricsService: MetricsService;\n  private _uri: URL;\n\n  constructor(uri: URL) {\n    if (!uri) {\n      throw new Error('Discovery requires uri');\n    }\n\n    this._metricsService = MetricsFactory.getMetricsService(uri.toString());\n    this._uri = uri;\n  }\n\n  async discoverNearbyEndPoints(uri: URL, timeout: number): Promise<EndPoint[]> {\n    if (!timeout) {\n      throw new Error('Discovery requires timeout');\n    }\n\n    const url = uri.toString();\n    const response = await Promise.race([\n      fetch(url, {\n        method: 'GET',\n        cache: 'no-cache'\n      }),\n      new Promise<Response>((_, reject) =>\n        setTimeout(() => reject(new Error(`Discovery timed out [${url}]`)), timeout)\n      )\n    ]);\n\n    if (!response.ok) {\n      throw new Error(`Discovery failed [${url}] [${response.status}]`);\n    }\n\n    if (response.body === null) {\n      throw new Error(`Discovery failed with no data [${url}]`);\n    }\n\n    const asString = await response.text();\n    const endPoints = asString.split(',');\n\n    return endPoints.map(endPoint => new EndPoint(endPoint, timeout));\n  }\n\n  async discoverClosestEndPoint(timeout: number = defaultTimeout): Promise<EndPoint> {\n    const url = DiscoveryUri.buildDiscoveryUrl(this._uri);\n    const endPoints = await this.discoverNearbyEndPoints(new URL(url), timeout);\n    const neverResolve = (): Promise<void> => new Promise(() => {\n      this._logger.info('Request [%s] failed, preventing it from completing', url);\n    });\n    const endPoint = await Promise.race(endPoints.map(endPoint => endPoint\n      .ping()\n      .catch(e => {\n        this._logger.warn('Failed to ping end point [%s]', endPoint, e);\n\n        return neverResolve();\n      })\n      .then(time => {\n        const now = Date.now();\n\n        this._logger.info('Discovered end point [%s] with time [%s]', endPoint.toString(), time);\n        this._metricsService.push({\n          metricType: MetricsType.RoundTripTime,\n          runtime: (now - SDK.pageLoadTime) / 1000,\n          value: {uint64: time || 0},\n          resource: endPoint.toString(),\n          kind: 'ping'\n        });\n\n        return endPoint;\n      })));\n\n    return endPoint;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport EndPoint from './EndPoint';\nimport SDK from '../SDK';\nimport DiscoveryService from './DiscoveryService';\n\nconst discoveryCacheInterval = 60000;\n\ninterface IPerURIEndpoint { [x: string]: Promise<EndPoint> }\n\nexport default class Discovery {\n  private static _cache: IPerURIEndpoint = {};\n\n  static async precacheClosestEndPointDiscovery(): Promise<EndPoint> {\n    const uri = new URL(SDK.discoveryUri.value);\n\n    return Discovery.discoverClosestEndPointWithCaching(uri);\n  }\n\n  static async discoverClosestEndPointWithCaching(uri: URL): Promise<EndPoint> {\n    const url = uri.toString();\n\n    if (Discovery._cache[url]) {\n      return Discovery._cache[url];\n    }\n\n    const discoveryService = new DiscoveryService(uri);\n    const cachedValue = Discovery._cache[url] = discoveryService.discoverClosestEndPoint();\n\n    Discovery._cache[url].then(() => {\n      const ignored = setTimeout(() => {\n        if (Discovery._cache[url] === cachedValue) {\n          delete Discovery._cache[url];\n        }\n      }, discoveryCacheInterval);\n    }).catch(e => {\n      delete Discovery._cache[url];\n\n      throw e;\n    });\n\n    return cachedValue;\n  }\n\n  private constructor() {\n    throw new Error('Discovery is a static class that may not be instantiated');\n  }\n}\n\nconst ignored = Discovery.precacheClosestEndPointDiscovery();","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class SdpParser {\n  private readonly _sdp: string;\n  private readonly _audioCodec: string;\n  private readonly _videoCodec: string;\n  private readonly _isAudioTrackEnabled: boolean;\n  private readonly _isVideoTrackEnabled: boolean;\n\n  constructor(sdp: string) {\n    this._sdp = sdp;\n\n    const sdpSplitByLines = this._sdp.split(/(\\r\\n|\\r|\\n)/);\n    const sdpSplitByTracks = this._sdp.split('m=');\n\n    this._audioCodec = this.applyCodec('audio', sdpSplitByLines);\n    this._videoCodec = this.applyCodec('video', sdpSplitByLines);\n    this._isAudioTrackEnabled = this.isTrackByTypeEnabled('audio', sdpSplitByTracks);\n    this._isVideoTrackEnabled = this.isTrackByTypeEnabled('video', sdpSplitByTracks);\n  }\n\n  get audioCodec(): string {\n    return this._audioCodec;\n  }\n\n  get videoCodec(): string {\n    return this._videoCodec;\n  }\n\n  get isAudioTrackEnabled(): boolean {\n    return this._isAudioTrackEnabled;\n  }\n\n  get isVideoTrackEnabled(): boolean {\n    return this._isVideoTrackEnabled;\n  }\n\n  private isTrackByTypeEnabled(type: string, sdpSplitByTracks: string[]): boolean {\n    const sdpSectionForType = sdpSplitByTracks.find(sdpTrack => sdpTrack.startsWith(type));\n\n    if (!sdpSectionForType) {\n      return false;\n    }\n\n    return !sdpSectionForType.includes(`a=inactive`);\n  }\n\n  private applyCodec(type: string, sdpSplitByLines: string []): string {\n    const usedCodecLine = sdpSplitByLines.find(sdpLine => sdpLine.includes(`a=rtpmap:${sdpSplitByLines.find(i => i.includes(`m=${type}`)).split(' ')[3]}`));\n    const usedCodec = usedCodecLine.split(' ')[1];\n    const codecName = usedCodec.split('/')[0];\n\n    return codecName;\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IPeerConnection from './IPeerConnection';\nimport Subject from '../rx/Subject';\nimport FeatureEnablement from '../sdk/feature/FeatureEnablement';\nimport SdpParser from './SdpParser';\nimport IDisposable from '../lang/IDisposable';\n\nexport interface IRtcMonitorStatistic {\n  [kind: string]: IRtcStatistic;\n}\n\nexport interface ILegacyRTCStatsReport {\n  result: () => ILegacyRTCStatsReportItem[];\n}\n\nexport interface ILegacyRTCStatsReportItem extends RTCStatsReport {\n  type: string;\n  names: () => string[];\n  stat: (name) => number;\n}\n\nexport interface IRtcStatistic {\n  ssrc?: string;\n  mediaType?: string;\n  timestamp: number;\n  bitrate?: number;\n  bytesReceived?: number;\n  framesDecoded?: number;\n  packetsLost?: number;\n  packetsReceived?: number;\n  codec?: string;\n  fps?: number;\n  roundTripTime?: number;\n  lastPacketReceivedTimestamp?: number;\n}\n\nconst updateStatisticTimeOut = 1000;\n\nexport default class RtcConnectionMonitor implements IDisposable {\n  private readonly _estimatedRoundTripTime: number;\n  private readonly _estimatedVideoCodec: string;\n  private readonly _estimatedAudioCodec: string;\n  private readonly _rtcStatistic: Subject<IRtcMonitorStatistic> = new Subject<IRtcMonitorStatistic>({});\n  private _peerConnection: IPeerConnection;\n  private _isMonitorRunning = true;\n  private _updateTimeOut: number;\n  private _tracksToMonitor: string[];\n\n  constructor(peerConnection: IPeerConnection, mediaStream: MediaStream, estimatedRoundTripTime: number) {\n    this._peerConnection = peerConnection;\n    this._estimatedRoundTripTime = estimatedRoundTripTime;\n    this._tracksToMonitor = mediaStream.getTracks().map(track => track.kind) || [];\n\n    if (this._peerConnection) {\n      if (!FeatureEnablement.getCurrentOfferDisabled) {\n        const parsedSDP = new SdpParser(this._peerConnection.currentRemoteDescription.sdp);\n\n        this._estimatedAudioCodec = parsedSDP.audioCodec;\n        this._estimatedVideoCodec = parsedSDP.videoCodec;\n      }\n\n      this.updateStatistic();\n    }\n  }\n\n  get rtcStatistic(): Subject<IRtcMonitorStatistic> {\n    return this._rtcStatistic;\n  }\n\n  dispose(): void {\n    this._isMonitorRunning = false;\n    this._peerConnection = null;\n\n    if (this._updateTimeOut) {\n      clearTimeout(this._updateTimeOut);\n      this._updateTimeOut = null;\n    }\n  }\n\n  private async updateStatistic(): Promise<void> {\n    if (FeatureEnablement.getStatsPromiseBasedDisabled) {\n      const ignored = await this.updateStatisticLegacy();\n\n      return;\n    }\n\n    // Safari 11 doesnt have kind or mediaType so we need to take it from the inbound-rtp object id\n    const getKindForSafari11 = (item): string => item.id.includes('Audio') ? 'audio' : item.id.includes('Video') ? 'video' : '';\n    const ignored = await this._peerConnection.getStats(null)\n      .then(stats => {\n        const rtcStatistics: IRtcMonitorStatistic = {};\n\n        if (stats) {\n          let roundTripTime = this._estimatedRoundTripTime;\n          let lastPacketReceivedTimestamp;\n\n          stats.forEach(report => {\n            if (report.type === 'candidate-pair' && report.currentRoundTripTime) {\n              roundTripTime = report.currentRoundTripTime * 1000;\n\n              if (rtcStatistics['audio']) {\n                rtcStatistics['audio'].roundTripTime = roundTripTime;\n              }\n\n              if (rtcStatistics['video']) {\n                rtcStatistics['video'].roundTripTime = roundTripTime;\n              }\n            }\n\n            if (report.type === 'candidate-pair' && report.lastPacketReceivedTimestamp) {\n              lastPacketReceivedTimestamp = report.lastPacketReceivedTimestamp;\n\n              if (rtcStatistics['audio']) {\n                rtcStatistics['audio'].lastPacketReceivedTimestamp = lastPacketReceivedTimestamp;\n              }\n\n              if (rtcStatistics['video']) {\n                rtcStatistics['video'].lastPacketReceivedTimestamp = lastPacketReceivedTimestamp;\n              }\n            }\n\n            if (report.type === 'inbound-rtp') {\n              const kind = report.kind || report.mediaType || getKindForSafari11(report);\n              let codec = '';\n\n              stats.forEach(item => {\n                if (item.id === report.codecId) {\n                  codec = item.mimeType;\n                }\n              });\n\n              if (kind && this._tracksToMonitor.includes(kind)) {\n                const bytes = report.bytesReceived || 0;\n                const previousBytesReceived = this._rtcStatistic.value?.[kind]?.bytesReceived ?? 0;\n                const bytesDelta = bytes - previousBytesReceived;\n                const timeDelta = report.timestamp - this._rtcStatistic.value?.[kind]?.timestamp;\n                const bitrate = bytesDelta && timeDelta ? Math.floor(8 * bytesDelta /\n                  timeDelta * 1000) : 0;\n\n                rtcStatistics[kind] = {\n                  ssrc: report.ssrc,\n                  mediaType: kind,\n                  timestamp: report.timestamp,\n                  bitrate,\n                  bytesReceived: report.bytesReceived,\n                  packetsLost: report.packetsLost,\n                  packetsReceived: report.packetsReceived,\n                  codec: codec || this.getCodecByType(kind),\n                  roundTripTime\n                };\n\n                if (report.lastPacketReceivedTimestamp || lastPacketReceivedTimestamp) {\n                  rtcStatistics[kind].lastPacketReceivedTimestamp = report.lastPacketReceivedTimestamp || lastPacketReceivedTimestamp;\n                }\n\n                if (kind === 'video' && this._rtcStatistic.value && this._rtcStatistic.value.video) {\n                  rtcStatistics[kind]['framesDecoded'] = report.framesDecoded;\n\n                  const fps = (report.framesDecoded - this._rtcStatistic.value.video.framesDecoded) /\n                    (rtcStatistics[kind].timestamp - this._rtcStatistic.value.video.timestamp) *\n                    1000;\n\n                  rtcStatistics[kind]['fps'] = fps ? Math.round(fps * 100) / 100 : 0;\n                }\n              }\n            }\n          });\n        }\n\n        this._rtcStatistic.value = rtcStatistics;\n      }).then(() => {\n        if (this._isMonitorRunning) {\n          this._updateTimeOut = window.setTimeout(() => this.updateStatistic(), updateStatisticTimeOut);\n        }\n      });\n  }\n\n  private async updateStatisticLegacy(): Promise<void> {\n    const ignored = await this._peerConnection.getStatsLegacy().then(stats => {\n      const rtcStatistics: IRtcMonitorStatistic = {};\n      let roundTripTime = this._estimatedRoundTripTime;\n\n      stats.result().forEach(report => {\n        report.names().forEach(name => {\n          if (name === 'googRTT') {\n            roundTripTime = report.stat(name);\n          }\n        });\n\n        if (report.type === 'ssrc') {\n          const mediaType = report.stat('mediaType').toString();\n\n          rtcStatistics[mediaType] = {timestamp: Date.now()};\n          rtcStatistics[mediaType]['ssrc'] = report.stat('ssrc').toString();\n          rtcStatistics[mediaType]['mediaType'] = mediaType;\n          rtcStatistics[mediaType]['bytesReceived'] = report.stat('bytesReceived');\n          rtcStatistics[mediaType]['packetsLost'] = report.stat('packetsLost');\n          rtcStatistics[mediaType]['packetsReceived'] = report.stat('packetsReceived');\n          rtcStatistics[mediaType]['codec'] = report.stat('googCodecName').toString() || this.getCodecByType(mediaType);\n          rtcStatistics[mediaType]['roundTripTime'] = roundTripTime;\n\n          if (mediaType === 'video' && this._rtcStatistic.value && this._rtcStatistic.value.video) {\n            rtcStatistics[mediaType]['framesDecoded'] = report.stat('framesDecoded');\n            rtcStatistics[mediaType]['fps'] = (rtcStatistics[mediaType].framesDecoded - this._rtcStatistic.value.video.framesDecoded) /\n              (rtcStatistics[mediaType].timestamp - this._rtcStatistic.value.video.timestamp) *\n            1000 || 0;\n          }\n        }\n      });\n      this._rtcStatistic.value = rtcStatistics;\n    }).then(() => {\n      if (this._isMonitorRunning) {\n        this._updateTimeOut = window.setTimeout(() => this.updateStatistic(), updateStatisticTimeOut);\n      }\n    });\n  }\n\n  private getCodecByType(type: string): string {\n    switch (type) {\n      case 'audio':\n        return this._estimatedAudioCodec;\n      case 'video':\n        return this._estimatedVideoCodec;\n      default:\n        return 'unknown';\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport default class RtcConfigurationManager {\n  static truncateIceServers(configuration: RTCConfiguration): RTCConfiguration {\n    const iceServers: RTCIceServer[] = [];\n\n    for (let i = 0; i < configuration.iceServers.length; i++) {\n      const urls: string[] = [];\n\n      for (let index = 0; index < 2; index++) {\n        const url = configuration.iceServers[i].urls[index];\n\n        if (url) {\n          urls.push(configuration.iceServers[i].urls[index]);\n        }\n      }\n\n      iceServers.push({\n        urls: urls,\n        username: configuration.iceServers[i].username,\n        credential: configuration.iceServers[i].credential\n      });\n    }\n\n    configuration.iceServers = iceServers;\n\n    return configuration;\n  }\n\n  private constructor() {\n    throw new Error('RtcConfigurationManager is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IPeerConnection from '../../rtc/IPeerConnection';\nimport SDK from '../SDK';\nimport {IStream} from './IStream';\nimport EndPoint, {SetRemoteDescriptionStatus} from '../discovery/EndPoint';\nimport PeerConnectionService, {IPeerConnectionOfferInit} from '../../rtc/PeerConnectionService';\nimport Discovery from '../discovery/Discovery';\nimport FeatureEnablement from '../feature/FeatureEnablement';\nimport ChannelState from '../channels/ChannelState';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport RtcConnectionMonitor from '../../rtc/RtcConnectionMonitor';\nimport Durations from '../../time/Duration';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport ChannelContext from '../channels/ChannelContext';\nimport RtcConfigurationManager from '../../rtc/RtcConfigurationManager';\nimport PeerConnectionContext from '../../context/PeerConnectionContext';\n\nconst iceCandidateAccumulationInterval = 100;\nconst defaultStreamSetupTimeout = 30000;\n\nexport default class RealTimeStream implements IStream {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('RealTimeStream');\n  private readonly _channelContext: ChannelContext;\n  private readonly _peerConnectionContext: PeerConnectionContext;\n  private readonly _handleStreamFailure: () => Promise<void>;\n\n  constructor(channelContext, peerConnectionContext, handleStreamFailure: () => Promise<void>) {\n    this._channelContext = channelContext;\n    this._peerConnectionContext = peerConnectionContext;\n    this._handleStreamFailure = handleStreamFailure;\n  }\n\n  start(uri, token, listenOnStreamSetup, playMediaStreamInVideoElement): Promise<void> {\n    return Promise.all<EndPoint, IPeerConnectionOfferInit>([\n      Discovery.discoverClosestEndPointWithCaching(uri),\n      PeerConnectionService.createPeerConnectionOffer()\n    ])\n      .then(([endPoint, {localOffer, peerConnection}]) => {\n        this._channelContext.online.value = true;\n        this._channelContext.endPoint.value = endPoint;\n        this._logger.info('Connecting to [%s]', endPoint.toString());\n        this._logger.info('Local offer:\\n' + localOffer.sdp);\n\n        if (FeatureEnablement.clientOfferDisabled || !peerConnection.supportsSetConfiguration || !peerConnection.supportsGetConfiguration) {\n          peerConnection.close();\n          peerConnection = null;\n          localOffer = null;\n        }\n\n        this._peerConnectionContext.peerConnection.value = peerConnection;\n\n        return endPoint.subscribe(token, localOffer, this._channelContext.failureCount.value);\n      })\n      .then(({status, stream, rtcConfiguration, setRemoteDescriptionResponse, createOfferDescriptionResponse, createAnswerDescriptionResponse, lag}) => {\n        this._channelContext.stream.value = stream;\n        this._channelContext.lag.value = lag;\n\n        this._channelContext.applySessionAndStreamPropertiesToVideoElement();\n\n        this._logger.debug(\n          '[%s] Subscribe completed [%s] [%j] [%j] [%j] [%j]',\n          this._channelContext.streamId,\n          status,\n          rtcConfiguration,\n          setRemoteDescriptionResponse,\n          createOfferDescriptionResponse,\n          createAnswerDescriptionResponse\n        );\n\n        this._channelContext.state.value = this._channelContext.mapSubscribeStatusToChannelStatus(status);\n\n        this._channelContext.applyStatus(status);\n\n        if (status !== 'ok') {\n          return;\n        }\n\n        return this.applyRtcConfiguration(this._peerConnectionContext.peerConnection.value, rtcConfiguration)\n          .then(peerConnection => {\n            let submitCandidatesTimeout;\n            let cancelDiscovery = false;\n            let discoveryCompleted = false;\n            const candidates: RTCIceCandidate[] = [];\n\n            if (!this._peerConnectionContext.peerConnection.value) {\n              this._peerConnectionContext.peerConnection.value = peerConnection;\n            }\n\n            peerConnection.onicecandidate = (e): void => {\n              if (this._channelContext.stream.value !== stream) {\n                return;\n              }\n\n              if (this._peerConnectionContext.peerConnection.value !== peerConnection) {\n                return;\n              }\n\n              if (cancelDiscovery) {\n                return;\n              }\n\n              if (!SDK.sendLocalCandidates.value) {\n                return;\n              }\n\n              if (e.candidate && e.candidate.candidate) {\n                candidates.push(e.candidate);\n              } else {\n                discoveryCompleted = true;\n              }\n\n              if (!submitCandidatesTimeout) {\n                submitCandidatesTimeout = setTimeout(() => {\n                  if (this._channelContext.stream.value !== stream) {\n                    return;\n                  }\n\n                  if (cancelDiscovery) {\n                    return;\n                  }\n\n                  const ignored = this._channelContext.endPoint.value.addIceCandidates(stream, candidates, discoveryCompleted)\n                    .then(({status, options}) => {\n                      if (status !== 'ok') {\n                        this._logger.warn('[%s] Failed to add ICE candidates with reason [%s]', this._channelContext.streamId, status);\n\n                        return;\n                      }\n\n                      if (options.includes('cancel')) {\n                        cancelDiscovery = true;\n                      }\n\n                      this._logger.info('[%s] Added ICE candidates with reason [%s] and options [%s]', this._channelContext.streamId, status, options);\n                    })\n                    .catch(e => {\n                      this._logger.error('[%s] Failed to add ICE candidates', this._channelContext.streamId, e);\n                    });\n                }, iceCandidateAccumulationInterval);\n              }\n            };\n\n            peerConnection.oniceconnectionstatechange = (): void => {\n              if (this._channelContext.stream.value !== stream) {\n                return;\n              }\n\n              if (this._peerConnectionContext.peerConnection.value !== peerConnection) {\n                return;\n              }\n\n              const retryCallback = (): void => {\n                // If we stop normally the peer connection is unregistered first.\n                // Thus anytime we see a closed peer connection that is still valid, it is an error.\n                this._channelContext.state.value = ChannelState.Error;\n\n                if (this._channelContext.videoElement.value) {\n                  this._channelContext.videoElement.value.pause();\n                  this._channelContext.videoElement.value.srcObject = null;\n                }\n\n                this._channelContext.playing.value = false;\n                this._channelContext.loading.value = true;\n\n                const ignored = this._handleStreamFailure()\n                  .catch(e => {\n                    this._logger.error(\n                      '[%s] Failed handling stream failure after peer connection stopped with state [%s]',\n                      this._channelContext.streamId,\n                      peerConnection.iceConnectionState,\n                      e\n                    );\n                  });\n              };\n\n              switch (peerConnection.iceConnectionState) {\n                case 'checking':\n                case 'completed':\n                case 'connected':\n                case 'new':\n                  return;\n\n                case 'disconnected':\n                case 'failed':\n                  if (navigator.onLine) {\n                    this._logger.info('[%s] ICE connection state changed to [%s], trying to reconnect', this._channelContext.streamId, peerConnection.iceConnectionState);\n                    this.reconnectPeerConnection(peerConnection, retryCallback);\n                  }\n\n                  return;\n                case 'closed':\n                  this._logger.info('[%s] ICE connection state changed to [%s], retrying to connect', this._channelContext.streamId, peerConnection.iceConnectionState);\n                  retryCallback();\n\n                  return;\n                default:\n                  assertUnreachable(peerConnection.iceConnectionState);\n              }\n            };\n\n            const mediaStreamPromise = new Promise<MediaStream>((resolve, reject) => {\n              if (!FeatureEnablement.onTrackDisabled) {\n                const timeoutId = setTimeout(() => reject(new Error('Stream setup timed out')), defaultStreamSetupTimeout);\n\n                peerConnection.ontrack = (e): void => {\n                  clearTimeout(timeoutId);\n\n                  resolve(e.streams[0]);\n                };\n\n                return;\n              }\n\n              const trackListener = (e): void => {\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                clearTimeout(timeoutId);\n                peerConnection.removeEventListener('track', trackListener);\n                peerConnection.removeEventListener('addstream', trackListener);\n\n                if (e.streams) {\n                  resolve(e.streams[0]);\n                } else {\n                  resolve(e.stream);\n                }\n              };\n\n              const timeoutId = setTimeout(() => {\n                peerConnection.removeEventListener('track', trackListener);\n                peerConnection.removeEventListener('addstream', trackListener);\n                reject(new Error('Stream setup timed out'));\n              }, defaultStreamSetupTimeout);\n\n              peerConnection.addEventListener('track', trackListener);\n              peerConnection.addEventListener('addstream', trackListener);\n\n              return;\n            });\n\n            return new Promise(resolve => {\n              resolve();\n            }).then(() => {\n              if (!setRemoteDescriptionResponse) {\n                return;\n              }\n\n              this._logger.info('[%s] Set local SDP offer [%s]', this._channelContext.streamId, setRemoteDescriptionResponse.sessionDescription.sdp);\n\n              return peerConnection.setLocalDescription(setRemoteDescriptionResponse.sessionDescription)\n                .catch(e => {\n                  this._logger.info('[%s] Failed to set local description [%j] with message [%s]', this._channelContext.streamId, setRemoteDescriptionResponse.sessionDescription, e.message);\n\n                  throw e;\n                });\n            }).then(() => {\n              if (!createAnswerDescriptionResponse) {\n                return;\n              }\n\n              this._logger.info('[%s] Set remote SDP answer [%s]', this._channelContext.streamId, createAnswerDescriptionResponse.sessionDescription.sdp);\n\n              return peerConnection.setRemoteDescription(createAnswerDescriptionResponse.sessionDescription)\n                .catch(e => {\n                  this._logger.info('[%s] Failed to set remote description [%j] with message [%s]', this._channelContext.streamId, createAnswerDescriptionResponse.sessionDescription, e.message);\n\n                  throw e;\n                });\n            }).then(() => {\n              if (!createOfferDescriptionResponse) {\n                return;\n              }\n\n              this._logger.info('[%s] Set remote SDP offer [%s]', this._channelContext.streamId, createOfferDescriptionResponse.sessionDescription.sdp);\n\n              return peerConnection.setRemoteDescription(createOfferDescriptionResponse.sessionDescription)\n                .catch(e => {\n                  this._logger.info('[%s] Failed to set remote description [%j] with message [%s]', this._channelContext.streamId, createOfferDescriptionResponse.sessionDescription, e.message);\n\n                  throw e;\n                })\n                .then(() => {\n                  return peerConnection.createAnswer({\n                    offerToReceiveAudio: true,\n                    offerToReceiveVideo: true\n                  });\n                }).then(answer => {\n                  this._logger.info('[%s] Set local SDP answer [%j]', this._channelContext.streamId, answer);\n\n                  return this._channelContext.endPoint.value.setRemoteDescription(stream, answer);\n                }).then(({status, sessionDescription}) => {\n                  this._channelContext.state.value = this.mapSetRemoteDescriptionStatusToChannelStatus(status);\n\n                  if (status !== 'ok') {\n                    this._channelContext.playing.value = false;\n                    this._channelContext.standby.value = true;\n                    this._channelContext.stopped.value = false;\n\n                    return;\n                  }\n\n                  return peerConnection.setLocalDescription(sessionDescription)\n                    .catch(e => {\n                      this._logger.info('[%s] Failed to set local description [%j] with message [%s]', this._channelContext.streamId, sessionDescription, e.message);\n\n                      throw e;\n                    });\n                });\n            }).then(() => {\n              listenOnStreamSetup.success(this._channelContext.streamId);\n\n              return mediaStreamPromise;\n            }).then(mediaStream => {\n              this._peerConnectionContext.mediaStream.value = mediaStream;\n\n              const rtcConnectionMonitor = new RtcConnectionMonitor(peerConnection, mediaStream, this._channelContext.endPoint.value.roundTripTime / 4);\n\n              this._channelContext.disposables.add(rtcConnectionMonitor);\n\n              const ignored = rtcConnectionMonitor.rtcStatistic.subscribe(statistics => {\n                this._channelContext.rtcStatistics.value = statistics;\n\n                if (!this._channelContext.rtcVideoStatistic && !this._channelContext.rtcAudioStatistic) {\n                  this._channelContext.rtcAudioStatistic = statistics.audio;\n                  this._channelContext.rtcVideoStatistic = statistics.video;\n\n                  return;\n                }\n\n                let audioTrackFailed = false;\n                let videoTrackFailed = false;\n\n                if (statistics.audio) {\n                  if (this._channelContext.rtcAudioStatistic && this._channelContext.rtcAudioStatistic.timestamp !== statistics.audio.timestamp) {\n                    audioTrackFailed = this._channelContext.rtcAudioStatistic && this._channelContext.rtcAudioStatistic.bytesReceived === statistics.audio.bytesReceived;\n\n                    if (audioTrackFailed && navigator.onLine) {\n                      this._logger.info(\n                        '[%s] Audio track failed with last bytesReceived [%s] is equal to previous bytesReceived [%s] within [%s]',\n                        this._channelContext.streamId,\n                        statistics.audio.bytesReceived,\n                        this._channelContext.rtcAudioStatistic.bytesReceived,\n                        new Durations(statistics.audio.timestamp - this._channelContext.rtcAudioStatistic.timestamp).toIsoString()\n                      );\n                    }\n\n                    this._channelContext.rtcAudioStatistic = statistics.audio;\n                  }\n                }\n\n                if (statistics.video) {\n                  if (this._channelContext.rtcVideoStatistic && this._channelContext.rtcVideoStatistic.timestamp !== statistics.video.timestamp) {\n                    videoTrackFailed = this._channelContext.rtcVideoStatistic && this._channelContext.rtcVideoStatistic.bytesReceived === statistics.video.bytesReceived;\n\n                    if (videoTrackFailed && navigator.onLine) {\n                      this._logger.info(\n                        '[%s] Video track failed with last bytesReceived [%s] is equal to previous bytesReceived [%s] within [%s]',\n                        this._channelContext.streamId,\n                        statistics.video.bytesReceived,\n                        this._channelContext.rtcVideoStatistic.bytesReceived,\n                        new Durations(statistics.video.timestamp - this._channelContext.rtcVideoStatistic.timestamp).toIsoString()\n                      );\n                    }\n\n                    this._channelContext.rtcVideoStatistic = statistics.video;\n                  }\n                }\n\n                if ((videoTrackFailed || audioTrackFailed) && navigator.onLine) {\n                  const retryCallback = (): void => {\n                    this._channelContext.state.value = ChannelState.Error;\n\n                    if (this._channelContext.videoElement.value) {\n                      this._channelContext.videoElement.value.pause();\n                      this._channelContext.videoElement.value.srcObject = null;\n                    }\n\n                    this._channelContext.playing.value = false;\n                    this._channelContext.loading.value = true;\n\n                    rtcConnectionMonitor.dispose();\n\n                    const ignored = this._handleStreamFailure()\n                      .catch(e => {\n                        this._logger.error(\n                          '[%s] Failed handling stream failure after track stopped with state [%s]',\n                          this._channelContext.streamId,\n                          peerConnection.iceConnectionState,\n                          e\n                        );\n                      });\n                  };\n\n                  this.reconnectPeerConnection(peerConnection, retryCallback);\n                } else {\n                  this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n                }\n              });\n\n              if (!SDK.automaticallyPlayMediaStream) {\n                this._channelContext.autoMuted.value = false;\n                this._channelContext.autoPaused.value = true;\n                this._channelContext.loading.value = false;\n                this._channelContext.playing.value = false;\n                this._channelContext.state.value = ChannelState.Paused;\n\n                return;\n              }\n\n              return playMediaStreamInVideoElement(mediaStream);\n            });\n          });\n      });\n  }\n\n  private async applyRtcConfiguration(\n    optionalPeerConnection: IPeerConnection | null,\n    rtcConfiguration: RTCConfiguration): Promise<IPeerConnection> {\n    if (!optionalPeerConnection) {\n      rtcConfiguration = RtcConfigurationManager.truncateIceServers(rtcConfiguration);\n\n      return SDK.peerConnectionFactory.value.createPeerConnection(rtcConfiguration);\n    }\n\n    const newRtcConfiguration = {\n      ...optionalPeerConnection.getConfiguration(),\n      ...rtcConfiguration\n    };\n\n    optionalPeerConnection.setConfiguration(newRtcConfiguration);\n\n    return optionalPeerConnection;\n  }\n\n  private reconnectPeerConnection(peerConnection: IPeerConnection, retryCallback: () => void): void {\n    if (peerConnection.iceConnectionState === 'closed') {\n      return;\n    }\n\n    this._channelContext.state.value = ChannelState.Reconnecting;\n\n    if (this._peerConnectionContext.peerConnectionReconnectAttempts < SDK.maximalNumberOfPeerConnectionReconnectAttempts || !SDK.automaticallyReconnectPeerConnection) {\n      this._peerConnectionContext.peerConnectionReconnectAttempts++;\n\n      if (FeatureEnablement.clientOfferDisabled ||\n        !peerConnection.supportsSetConfiguration ||\n        !peerConnection.supportsGetConfiguration ||\n        this._channelContext.failureCount.value\n      ) {\n        return;\n      }\n\n      this._logger.info('Reconnecting peer connection by restarting ICE');\n\n      const localOffer = peerConnection.currentLocalDescription;\n      const ignored = peerConnection.createOffer({iceRestart: true}).then(offer => {\n        return peerConnection.setLocalDescription(offer).then(() => {\n          return peerConnection.setLocalDescription(localOffer);\n        });\n      })\n        .catch(e => {\n          this._logger.error('Failed to reconnect peer connection', e);\n          this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n          retryCallback();\n        });\n\n      return;\n    }\n\n    this._logger.info('Failed to reconnect peer connection after [%s] attempts, performing full recovery', this._peerConnectionContext.peerConnectionReconnectAttempts);\n    this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n    retryCallback();\n  }\n\n  private mapSetRemoteDescriptionStatusToChannelStatus(status: SetRemoteDescriptionStatus): ChannelState {\n    switch (status) {\n      case 'ok':\n        return ChannelState.Starting;\n      case 'unauthorized':\n        return ChannelState.Unauthorized;\n      case 'not-found':\n      case 'capacity':\n      case 'rate-limited':\n      case 'timeout':\n        return ChannelState.Recovering;\n      case 'failed':\n        return ChannelState.Error;\n      default:\n        assertUnreachable(status);\n    }\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {IStream} from './IStream';\nimport EdgeAuth from '../edgeAuth/EdgeAuth';\nimport RealTimeStream from './RealTimeStream';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport ChannelState from '../channels/ChannelState';\n\nexport default class RealTimeStreamFactory {\n  private static _logger: ILogger = LoggerFactory.getLogger('Streaming');\n\n  static create(token: string, channelContext, peerConnectionContext, handleStreamFailure: () => Promise<void>): IStream {\n    const parsedToken = EdgeAuth.parseToken(token);\n    const isRtmp = parsedToken && parsedToken.token && parsedToken.token.capabilities && parsedToken.token.capabilities.includes('rtmp');\n\n    if (isRtmp) {\n      this._logger.error('This build does not support RTMP playback.');\n      channelContext.state.value = ChannelState.UnsupportedFeature;\n\n      return;\n    }\n\n    const isStreaming = parsedToken && parsedToken.token && parsedToken.token.capabilities && parsedToken.token.capabilities.includes('streaming');\n\n    if (isStreaming) {\n      this._logger.error('This build does not support Live Stream playback.');\n      channelContext.state.value = ChannelState.UnsupportedFeature;\n\n      return;\n    }\n\n    return new RealTimeStream(channelContext, peerConnectionContext, handleStreamFailure);\n  }\n\n  constructor() {\n    throw new Error('RealTimeStreamFactory is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport IDisposable from '../../lang/IDisposable';\nimport ReadOnlySubject from '../../rx/ReadOnlySubject';\nimport Dimension from '../../video/Dimension';\nimport EndPoint, {IStream} from '../discovery/EndPoint';\nimport SDK from '../SDK';\nimport IPeerConnection from '../../rtc/IPeerConnection';\nimport ChannelState from './ChannelState';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport Disposable from '../../lang/Disposable';\nimport EdgeAuth from '../edgeAuth/EdgeAuth';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport VideoTelemetry from '../../video/VideoTelemetry';\nimport SessionTelemetry from '../../video/SessionTelemetry';\nimport {IRtcMonitorStatistic} from '../../rtc/RtcConnectionMonitor';\nimport {BitrateMode, BitrateState} from '../api/SetTemporaryMaximalBitrate';\n\nimport {EdgeToken} from '../edgeAuth/EdgeToken';\nimport {BitsPerSecond, Millisecond} from '../../units/Units';\nimport TokenContext from '../../context/TokenContext';\nimport ChannelContext from './ChannelContext';\nimport PeerConnectionContext from '../../context/PeerConnectionContext';\nimport StateContext from '../../context/StateContext';\nimport StreamFactory from '../streaming/StreamFactory';\nimport DiscoveryUri from '../discovery/DiscoveryUri';\nimport MetricsFactory from '../../metrics/MetricsFactory';\nimport MetricsService from '../../metrics/MetricsService';\n\nconst defaultTargetLag = 0;\nconst defaultStreamTerminationReason = 'client:termination';\nconst backoffIntervalInMilliseconds = 2000;\nconst failureCountCleanUpIntervalInMilliseconds = 3000;\nconst maxBackoffIntervalInMilliseconds = 300000;\nconst standbyPollingIntervalInMilliseconds = 15000;\n\nexport default class Channel implements IDisposable {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('Channel');\n  private readonly _tokenContext: TokenContext;\n  private readonly _channelContext: ChannelContext;\n  private readonly _peerConnectionContext: PeerConnectionContext;\n  private readonly _stateContext: StateContext;\n  private readonly _channelStartTime: number;\n  private readonly _readOnlyVideoElement: ReadOnlySubject<HTMLVideoElement>;\n  private readonly _readOnlyToken: ReadOnlySubject<EdgeToken>;\n  private readonly _readOnlyPeerConnection: ReadOnlySubject<IPeerConnection>;\n  private readonly _readOnlyState: ReadOnlySubject<ChannelState>;\n  private readonly _readOnlyAutoMuted: ReadOnlySubject<boolean>;\n  private readonly _readOnlyAutoPaused: ReadOnlySubject<boolean>;\n  private readonly _readOnlyTokenExpiring: ReadOnlySubject<boolean>;\n  private readonly _readOnlyAuthorized: ReadOnlySubject<boolean>;\n  private readonly _readOnlyOnline: ReadOnlySubject<boolean>;\n  private readonly _readOnlyLoading: ReadOnlySubject<boolean>;\n  private readonly _readOnlyPlaying: ReadOnlySubject<boolean>;\n  private readonly _readOnlyStandby: ReadOnlySubject<boolean>;\n  private readonly _readOnlyStopped: ReadOnlySubject<boolean>;\n  private readonly _readOnlyTargetLag: ReadOnlySubject<Millisecond>;\n  private readonly _readOnlyLag: ReadOnlySubject<Millisecond>;\n  private readonly _readOnlyBitrateLimit: ReadOnlySubject<BitsPerSecond>;\n  private readonly _readOnlyResolution: ReadOnlySubject<Dimension>;\n  private readonly _readOnlyFailureCount: ReadOnlySubject<number>;\n  private readonly _readOnlyEndPoint: ReadOnlySubject<EndPoint>;\n  private readonly _readOnlyStream: ReadOnlySubject<IStream>;\n  private readonly _readOnlyRtcStatistics: ReadOnlySubject<IRtcMonitorStatistic>;\n  private readonly _readOnlyMediaStream: ReadOnlySubject<MediaStream>;\n\n  private _metricsService: MetricsService;\n  private readonly _sessionTelemetry: SessionTelemetry;\n  private readonly _videoMetaDataChangedHandler: () => void;\n\n  constructor(videoElement: HTMLVideoElement, token: string, targetLag: number = defaultTargetLag) {\n    this._tokenContext = new TokenContext(token);\n    this._channelContext = new ChannelContext(targetLag);\n    this._peerConnectionContext = new PeerConnectionContext();\n    this._stateContext = new StateContext();\n    this._channelStartTime = Date.now();\n    this._readOnlyVideoElement = new ReadOnlySubject<HTMLVideoElement>(this._channelContext.videoElement);\n    this._readOnlyToken = new ReadOnlySubject<string>(this._tokenContext.token);\n    this._readOnlyPeerConnection = new ReadOnlySubject<IPeerConnection>(this._peerConnectionContext.peerConnection);\n    this._readOnlyState = new ReadOnlySubject<ChannelState>(this._channelContext.state);\n    this._readOnlyAutoMuted = new ReadOnlySubject<boolean>(this._channelContext.autoMuted);\n    this._readOnlyAutoPaused = new ReadOnlySubject<boolean>(this._channelContext.autoPaused);\n    this._readOnlyTokenExpiring = new ReadOnlySubject<boolean>(this._tokenContext.tokenExpiring);\n    this._readOnlyAuthorized = new ReadOnlySubject<boolean>(this._channelContext.authorized);\n    this._readOnlyOnline = new ReadOnlySubject<boolean>(this._channelContext.online);\n    this._readOnlyLoading = new ReadOnlySubject<boolean>(this._channelContext.loading);\n    this._readOnlyPlaying = new ReadOnlySubject<boolean>(this._channelContext.playing);\n    this._readOnlyStandby = new ReadOnlySubject<boolean>(this._channelContext.standby);\n    this._readOnlyStopped = new ReadOnlySubject<boolean>(this._channelContext.stopped);\n    this._readOnlyTargetLag = new ReadOnlySubject<number>(this._channelContext.targetLag);\n    this._readOnlyLag = new ReadOnlySubject<number>(this._channelContext.lag);\n    this._readOnlyBitrateLimit = new ReadOnlySubject<number>(this._channelContext.bitrateLimit);\n    this._readOnlyResolution = new ReadOnlySubject<Dimension>(this._channelContext.resolution);\n    this._readOnlyFailureCount = new ReadOnlySubject<number>(this._channelContext.failureCount);\n    this._readOnlyEndPoint = new ReadOnlySubject<EndPoint>(this._channelContext.endPoint);\n    this._readOnlyStream = new ReadOnlySubject<IStream>(this._channelContext.stream);\n    this._readOnlyRtcStatistics = new ReadOnlySubject<IRtcMonitorStatistic>(this._channelContext.rtcStatistics);\n    this._readOnlyMediaStream = new ReadOnlySubject<MediaStream>(this._peerConnectionContext.mediaStream);\n\n    const parsedToken = EdgeAuth.parseToken(this._tokenContext.token.value);\n    const discoveryUri = (EdgeAuth.getUri(parsedToken) || SDK.discoveryUri.value).toString();\n\n    SDK.tenancy.value = EdgeAuth.getTenancy(parsedToken) || SDK.tenancy.value;\n    DiscoveryUri.uri.value = discoveryUri;\n    this._metricsService = MetricsFactory.getMetricsService(discoveryUri);\n    this._sessionTelemetry = new SessionTelemetry(SDK.pageLoadTime, this._metricsService);\n    this._channelContext.channelDisposables.add(this._sessionTelemetry);\n    this._videoMetaDataChangedHandler = this.handleVideoMetaDataChanged.bind(this);\n    this.videoElement = videoElement;\n\n    this._channelContext.channelDisposables.add(\n      this._channelContext.videoElement.subscribe(videoElement => {\n        this._channelContext.rendererDisposables.dispose();\n\n        if (!videoElement) {\n          return;\n        }\n\n        this._channelContext.rendererDisposables.add(this._channelContext.stream.subscribe(stream => {\n          if (this._channelContext.videoTelemetry) {\n            this._channelContext.videoTelemetry.dispose();\n          }\n\n          if (!stream) {\n            return;\n          }\n\n          if (!this.videoElement) {\n            return;\n          }\n\n          if (this.videoElement.dataset) {\n            this.videoElement.dataset.sessionId = SDK.clientSessionId;\n            this.videoElement.dataset.streamId = this.streamId;\n          }\n\n          this._channelContext.videoTelemetry = new VideoTelemetry(this.streamId, SDK.pageLoadTime, this._channelStartTime, this._metricsService);\n          this._channelContext.videoTelemetry.setupListenerForTimeToFirstTime(this.videoElement);\n          this._channelContext.videoTelemetry.setupListenerForRebuffering(this.videoElement);\n\n          if (this._channelContext.state.value === ChannelState.Stopped) {\n            const ignored = this.restartAfterStop();\n          }\n        }));\n\n        this._channelContext.channelDisposables.add(this._channelContext.rendererDisposables);\n      }));\n    this._channelContext.channelDisposables.add(\n      this._channelContext.state.subscribe(state => {\n        if (this._channelContext.clearFailureCountTimeout) {\n          clearTimeout(this._channelContext.clearFailureCountTimeout);\n        }\n\n        if (!this._channelContext.failureCount.value) {\n          return;\n        }\n\n        if (state !== ChannelState.Playing) {\n          return;\n        }\n\n        this._channelContext.clearFailureCountTimeout = window.setTimeout(() => {\n          this._channelContext.failureCount.value = 0;\n        }, failureCountCleanUpIntervalInMilliseconds);\n      }));\n    this._channelContext.channelDisposables.add(\n      this._channelContext.resolution.subscribe(resolution => {\n        if (this._channelContext.videoTelemetry) {\n          this._channelContext.videoTelemetry.onVideoResolutionChanges(resolution.toString());\n        }\n      }));\n    this._channelContext.channelDisposables.add(\n      this._channelContext.bitrateLimit.subscribe(bitrateLimit => {\n        if (bitrateLimit && this._channelContext.endPoint.value && this._channelContext.stream.value) {\n          const elapsedInMilliseconds = Date.now() - this._channelContext.channelInitialization.getTime();\n          const ignored = this._channelContext.endPoint.value.limitBitrate(\n            this._channelContext.stream.value,\n            elapsedInMilliseconds,\n            bitrateLimit,\n            BitrateState.Keep,\n            BitrateMode.Normal\n          )\n            .catch(e => {\n              this._logger.error('Error while setting limit bitrate', e);\n            });\n        }\n      })\n    );\n\n    const destroyStreamOnUnmount = () => {\n      if (this._channelContext.stream.value && this._channelContext.endPoint.value) {\n        const ignored = this._channelContext.endPoint.value.destroyStream(this._channelContext.stream.value, 'client:termination-on-window-unload');\n      }\n    };\n\n    window.addEventListener('beforeunload', destroyStreamOnUnmount);\n\n    this._channelContext.channelDisposables.add(new Disposable(() => {\n      window.removeEventListener('beforeunload', destroyStreamOnUnmount);\n    }));\n\n    this.start();\n  }\n\n  get videoElement(): HTMLVideoElement {\n    return this._channelContext.videoElement.value;\n  }\n\n  set videoElement(videoElement: HTMLVideoElement) {\n    if (this._channelContext.videoElement.value) {\n      this._channelContext.videoElement.value.removeEventListener('loadeddata', this._videoMetaDataChangedHandler);\n      this._channelContext.videoElement.value.removeEventListener('loadedmetadata', this._videoMetaDataChangedHandler);\n      this._channelContext.videoElement.value.removeEventListener('resize', this._videoMetaDataChangedHandler);\n\n      if (this._channelContext.videoElement.value.dataset) {\n        this._channelContext.videoElement.value.dataset.sessionId = '';\n        this._channelContext.videoElement.value.dataset.streamId = '';\n      }\n\n      this._channelContext.rendererDisposables.dispose();\n\n      this._channelContext.videoElement.value.pause();\n      this._channelContext.videoElement.value.srcObject = null;\n    }\n\n    this._channelContext.autoMuted.value = false;\n    this._channelContext.autoPaused.value = false;\n    this._channelContext.loading.value = false;\n    this._channelContext.playing.value = false;\n    this._channelContext.state.value = ChannelState.Stopped;\n\n    this._channelContext.videoElement.value = videoElement;\n\n    if (this._channelContext.videoElement.value) {\n      this._channelContext.videoElement.value.addEventListener('loadeddata', this._videoMetaDataChangedHandler);\n      this._channelContext.videoElement.value.addEventListener('loadedmetadata', this._videoMetaDataChangedHandler);\n      this._channelContext.videoElement.value.addEventListener('resize', this._videoMetaDataChangedHandler);\n    }\n  }\n\n  private handleVideoMetaDataChanged(): void {\n    const videoElement = this._channelContext.videoElement.value;\n\n    if (videoElement) {\n      if (this.resolution.value.width !== videoElement.videoWidth || this.resolution.value.height !== videoElement.videoHeight) {\n        this._channelContext.resolution.value = new Dimension(videoElement.videoWidth, videoElement.videoHeight);\n      }\n    } else {\n      this._channelContext.resolution.value = Dimension.empty;\n    }\n  }\n\n  get token(): EdgeToken {\n    return this._tokenContext.token.value;\n  }\n\n  set token(token: EdgeToken) {\n    this._channelContext.disposables.dispose();\n\n    this._tokenContext.token.value = token;\n    this._tokenContext.tokenExpiring.value = false;\n\n    const parsedToken = EdgeAuth.parseToken(this._tokenContext.token.value);\n    const discoveryUri = (EdgeAuth.getUri(parsedToken) || SDK.discoveryUri.value).toString();\n\n    SDK.tenancy.value = EdgeAuth.getTenancy(parsedToken) || SDK.tenancy.value;\n    DiscoveryUri.uri.value = discoveryUri;\n\n    this._metricsService = MetricsFactory.getMetricsService(discoveryUri);\n\n    this.start();\n  }\n\n  get peerConnection(): ReadOnlySubject<IPeerConnection> {\n    return this._readOnlyPeerConnection;\n  }\n\n  get state(): ReadOnlySubject<ChannelState> {\n    return this._readOnlyState;\n  }\n\n  get autoMuted(): ReadOnlySubject<boolean> {\n    return this._readOnlyAutoMuted;\n  }\n\n  get autoPaused(): ReadOnlySubject<boolean> {\n    return this._readOnlyAutoPaused;\n  }\n\n  get tokenExpiring(): ReadOnlySubject<boolean> {\n    return this._readOnlyTokenExpiring;\n  }\n\n  get authorized(): ReadOnlySubject<boolean> {\n    return this._readOnlyAuthorized;\n  }\n\n  get online(): ReadOnlySubject<boolean> {\n    return this._readOnlyOnline;\n  }\n\n  get loading(): ReadOnlySubject<boolean> {\n    return this._readOnlyLoading;\n  }\n\n  get playing(): ReadOnlySubject<boolean> {\n    return this._readOnlyPlaying;\n  }\n\n  get standby(): ReadOnlySubject<boolean> {\n    return this._readOnlyStandby;\n  }\n\n  get stopped(): ReadOnlySubject<boolean> {\n    return this._readOnlyStopped;\n  }\n\n  get targetLag(): ReadOnlySubject<Millisecond> {\n    return this._readOnlyTargetLag;\n  }\n\n  get lag(): ReadOnlySubject<Millisecond> {\n    return this._readOnlyLag;\n  }\n\n  get bitrateLimit(): number {\n    return this._readOnlyBitrateLimit.value;\n  }\n\n  get resolution(): ReadOnlySubject<Dimension> {\n    return this._readOnlyResolution;\n  }\n\n  get failureCount(): ReadOnlySubject<number> {\n    return this._readOnlyFailureCount;\n  }\n\n  get endPoint(): ReadOnlySubject<EndPoint> {\n    return this._readOnlyEndPoint;\n  }\n\n  get stream(): ReadOnlySubject<IStream> {\n    return this._readOnlyStream;\n  }\n\n  get streamId(): string {\n    return this._channelContext.streamId;\n  }\n\n  get rtcStatistics(): ReadOnlySubject<IRtcMonitorStatistic> {\n    return this._readOnlyRtcStatistics;\n  }\n\n  get mediaStream(): ReadOnlySubject<MediaStream> {\n    return this._readOnlyMediaStream;\n  }\n\n  setBitrateLimit(bitrateLimit: BitsPerSecond): void {\n    this._channelContext.bitrateLimit.value = bitrateLimit;\n  }\n\n  clearBitrateLimit(): void {\n    if (this._channelContext.bitrateLimit.value && this._channelContext.endPoint.value && this._channelContext.stream.value) {\n      const elapsedInMilliseconds = Date.now() - this._channelContext.channelInitialization.getTime();\n      const bitrateInBitsPerSecond = 0;\n      const ignored = this._channelContext.endPoint.value.limitBitrate(\n        this._channelContext.stream.value,\n        elapsedInMilliseconds,\n        bitrateInBitsPerSecond,\n        BitrateState.Keep,\n        BitrateMode.Reset\n      )\n        .then(({status}) => {\n          if (status === 'ok') {\n            this._channelContext.bitrateLimit.value = 0;\n          }\n        })\n        .catch(e => {\n          this._logger.error('Error while setting limit bitrate', e);\n        });\n    }\n  }\n\n  updateTargetLag(lag: Millisecond): void {\n    this._channelContext.targetLag.value = lag;\n  }\n\n  async stop(reason: string): Promise<void> {\n    return new Promise(resolve => {\n      if (!this._stateContext.isStarting.value) {\n        this.processStop(reason);\n\n        resolve();\n\n        return;\n      }\n\n      this._channelContext.rendererDisposables.add(this._stateContext.isStarting.subscribe(isStarting => {\n        if (!isStarting) {\n          this.processStop(reason);\n          resolve();\n        }\n      }));\n    });\n  }\n\n  private processStop(reason: string): void {\n    if (this._channelContext.videoElement.value) {\n      this._channelContext.videoElement.value.pause();\n      this._channelContext.videoElement.value.srcObject = null;\n    }\n\n    this._channelContext.rendererDisposables.dispose();\n\n    this.cleanUpResources(reason);\n\n    this._channelContext.state.value = ChannelState.Stopped;\n  }\n\n  async resume(): Promise<void> {\n    if (this._peerConnectionContext.mediaStream.value) {\n      this._channelContext.autoPaused.value = false;\n\n      return this.playMediaStreamInVideoElement(this._peerConnectionContext.mediaStream.value);\n    }\n  }\n\n  mute(): void {\n    const videoElement = this._channelContext.videoElement.value;\n\n    if (videoElement) {\n      videoElement.muted = true;\n    }\n  }\n\n  unmute(): void {\n    const videoElement = this._channelContext.videoElement.value;\n\n    if (videoElement) {\n      videoElement.muted = false;\n      this._channelContext.autoMuted.value = false;\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return this.stop('client:channel-dispose').then(() => {\n      this._channelContext.channelDisposables.dispose();\n      this._stateContext.isDisposed = true;\n    });\n  }\n\n  getUri(token): URL {\n    const parsedToken = EdgeAuth.parseToken(token);\n    const url = EdgeAuth.getUri(parsedToken);\n\n    if (url) {\n      return url;\n    }\n\n    this._logger.info('Fall back to the default discover URI [%s]', SDK.discoveryUri.value);\n\n    return new URL(SDK.discoveryUri.value);\n  }\n\n  async start(): Promise<void> {\n    if (this._stateContext.isDisposed) {\n      throw new Error('Channel was already disposed');\n    }\n\n    if (this._stateContext.isStarting.value) {\n      this._logger.info('Channel is already starting, skipping start');\n\n      return;\n    }\n\n    this._stateContext.isStarting.value = true;\n\n    return this.processStart();\n  }\n\n  private async processStart(): Promise<void> {\n    const token = this._tokenContext.token.value;\n    const listenOnStreamSetup = this._sessionTelemetry.listenOnStreamSetup();\n\n    if (!EdgeAuth.isValidToken(token)) {\n      this._logger.error('Failed to parse token [%s]', token);\n      this._channelContext.state.value = ChannelState.Unauthorized;\n      this._channelContext.authorized.value = false;\n      this._stateContext.isStarting.value = false;\n\n      return;\n    }\n\n    this.cleanUpResources('client:start');\n    this._channelContext.state.value = ChannelState.Starting;\n    this._channelContext.loading.value = true;\n\n    const uri = this.getUri(token);\n    const handleStreamFailureCallback: () => Promise<void> = () => new Promise((resolve): void => {\n      // Need to set isStarting to false and call handleStreamFailure if stream monitors found an issue\n      this._stateContext.isStarting.value = false;\n\n      return resolve(this.handleStreamFailure());\n    });\n    const streamPlayer = StreamFactory.create(token, this._channelContext, this._peerConnectionContext, handleStreamFailureCallback);\n\n    if (!streamPlayer) {\n      this._stateContext.isStarting.value = false;\n\n      return;\n    }\n\n    return streamPlayer.start(\n      uri,\n      token,\n      listenOnStreamSetup,\n      this.playMediaStreamInVideoElement.bind(this))\n      .then(() => {\n        this._channelContext.loading.value = false;\n      })\n      .catch(e => {\n        listenOnStreamSetup.fail();\n\n        this._channelContext.failureCount.value++;\n\n        this._channelContext.online.value = false;\n\n        this.cleanUpResources('client:cleanup-after-failed-setup');\n\n        this._channelContext.state.value = ChannelState.Error;\n\n        this._logger.error('Failed to start channel', e);\n      })\n      .finally(() => {\n        this._stateContext.isStarting.value = false;\n\n        if (this._channelContext.state.value === ChannelState.Playing || !SDK.automaticRetryOnFailure) {\n          return;\n        }\n\n        const timeoutId = setTimeout(() => {\n          const ignored = this.handleStreamFailure()\n            .catch(e => {\n              this._logger.error('Failed handling stream failure', e);\n            });\n        }, this.getRetryInterval());\n\n        this._channelContext.disposables.add(new Disposable(() => {\n          clearTimeout(timeoutId);\n        }));\n      });\n  }\n\n  private async restartAfterStop(): Promise<void> {\n    if (this._stateContext.isDisposed) {\n      throw new Error('Channel was already disposed');\n    }\n\n    if (this._peerConnectionContext.mediaStream.value) {\n      return this.playMediaStreamInVideoElement(this._peerConnectionContext.mediaStream.value);\n    }\n\n    if (this._tokenContext.token.value) {\n      const ignored = this.start();\n    }\n  }\n\n  public async play(): Promise<void> {\n    const mediaStream = this._peerConnectionContext.mediaStream.value;\n\n    if (!mediaStream) {\n      return this.start();\n    }\n\n    return this.playMediaStreamInVideoElement(mediaStream);\n  }\n\n  private getRetryInterval(): number {\n    switch (this._channelContext.state.value) {\n      case ChannelState.StandBy:\n      case ChannelState.Offline:\n        return standbyPollingIntervalInMilliseconds;\n      case ChannelState.Error:\n      case ChannelState.Recovering:\n      case ChannelState.Unauthorized:\n      case ChannelState.GeoRestricted:\n      case ChannelState.GeoBlocked:\n      case ChannelState.Stopped:\n      case ChannelState.Starting:\n      case ChannelState.Playing:\n      case ChannelState.Paused:\n      case ChannelState.Reconnecting:\n      case ChannelState.UnsupportedFeature:\n        // First and second attempt fast, after that exponential with backoff interval\n        return Math.min(maxBackoffIntervalInMilliseconds, Math.pow(backoffIntervalInMilliseconds, Math.max(0, this._channelContext.failureCount.value - 1)));\n      default:\n        assertUnreachable(this._channelContext.state.value);\n    }\n  }\n\n  private async handleStreamFailure(): Promise<void> {\n    switch (this._channelContext.state.value) {\n      case ChannelState.Error:\n      case ChannelState.Reconnecting:\n      case ChannelState.StandBy:\n      case ChannelState.Offline:\n      case ChannelState.Recovering:\n        this._logger.info('Retry start with initial state [%s] [%s]', this._channelContext.state.value, ChannelState[this._channelContext.state.value]);\n\n        break;\n      case ChannelState.Unauthorized:\n        this._logger.info('Channel is unauthorized, skipping retry of start. Please provide a new token and invoke start()');\n\n        return;\n      case ChannelState.GeoRestricted:\n        this._logger.info('Channel is geo restricted, skipping retry of start. Please provide a new token and invoke start()');\n\n        return;\n      case ChannelState.GeoBlocked:\n        this._logger.info('Channel is geo blocked, skipping retry of start. Please provide a new token and invoke start()');\n\n        return;\n      case ChannelState.Stopped:\n        this._logger.info('Channel is stopped, skipping retry of start.');\n\n        return;\n      case ChannelState.Playing:\n        this._logger.info('Channel is playing, skipping retry of start');\n\n        return;\n      case ChannelState.Paused:\n        this._logger.info('Channel is paused, skipping retry of start. Please invoke play()');\n\n        return;\n      case ChannelState.Starting:\n        this._logger.info('Channel is already starting, skipping retry of start');\n\n        return;\n      case ChannelState.UnsupportedFeature:\n        this._logger.info('Channel is stopped due to unsupported feature, skipping retry of start.');\n\n        return;\n      default:\n        assertUnreachable(this._channelContext.state.value);\n    }\n\n    return this.start();\n  }\n\n  private cleanUpResources(reason: string = defaultStreamTerminationReason): void {\n    this._channelContext.disposables.dispose();\n\n    const peerConnection = this._peerConnectionContext.peerConnection.value;\n\n    if (peerConnection) {\n      this._peerConnectionContext.peerConnection.value = null;\n      peerConnection.close();\n    }\n\n    if (this._peerConnectionContext.mediaStream.value) {\n      this._peerConnectionContext.mediaStream.value.getTracks().forEach(track => track.stop());\n      this._peerConnectionContext.mediaStream.value = null;\n    }\n\n    this._channelContext.autoPaused.value = false;\n    this._channelContext.autoMuted.value = false;\n    this._channelContext.playing.value = false;\n    this._channelContext.stopped.value = true;\n    this._channelContext.standby.value = false;\n\n    if (this._channelContext.stream.value && this._channelContext.endPoint.value) {\n      const ignored = this._channelContext.endPoint.value.destroyStream(this._channelContext.stream.value, reason)\n        .then(({status}) => {\n          if (status !== 'ok') {\n            this._logger.warn('[%s] Failed to destroy stream with reason [%s]', this.streamId, status);\n\n            return;\n          }\n\n          this._logger.info('[%s] Destroyed stream with reason [%s]', this.streamId, status);\n        })\n        .catch(e => {\n          this._logger.error('[%s] Failed to destroy stream', this.streamId, e);\n        });\n    }\n\n    if (this.videoElement && this.videoElement.dataset) {\n      this.videoElement.dataset.sessionId = '';\n      this.videoElement.dataset.streamId = '';\n    }\n\n    this._channelContext.stream.value = null;\n    this._channelContext.endPoint.value = null;\n    this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n  }\n\n  private async playMediaStreamInVideoElement(mediaStream: MediaStream): Promise<void> {\n    const videoElement = this._channelContext.videoElement.value;\n\n    if (!videoElement) {\n      this._channelContext.autoMuted.value = false;\n      this._channelContext.autoPaused.value = false;\n      this._channelContext.loading.value = false;\n      this._channelContext.playing.value = false;\n      this._channelContext.state.value = ChannelState.Stopped;\n\n      return;\n    }\n\n    videoElement.srcObject = mediaStream;\n\n    const playPromise = videoElement.play();\n\n    if (playPromise === undefined) {\n      this._channelContext.autoMuted.value = false;\n      this._channelContext.autoPaused.value = false;\n      this._channelContext.loading.value = false;\n      this._channelContext.playing.value = true;\n      this._channelContext.state.value = ChannelState.Playing;\n\n      return;\n    }\n\n    return playPromise.then(() => {\n      this._channelContext.autoMuted.value = false;\n      this._channelContext.autoPaused.value = false;\n      this._channelContext.loading.value = false;\n      this._channelContext.playing.value = true;\n      this._channelContext.state.value = ChannelState.Playing;\n    }).catch(e => {\n      const hasAudioTrack = !!mediaStream.getTracks().filter(track => {\n        return track.kind === 'audio';\n      });\n      const automaticallyMuteVideoOnPlayFailureOff = !SDK.automaticallyMuteVideoOnPlayFailure;\n\n      if (automaticallyMuteVideoOnPlayFailureOff || videoElement.muted || !hasAudioTrack) {\n        this._channelContext.autoMuted.value = false;\n        this._channelContext.autoPaused.value = true;\n        this._channelContext.loading.value = false;\n        this._channelContext.playing.value = false;\n        this._channelContext.state.value = ChannelState.Paused;\n\n        if (automaticallyMuteVideoOnPlayFailureOff) {\n          this._logger.info('[%s] Paused video after play failed. Manual user action required.', this.streamId, e);\n          videoElement.srcObject = null;\n\n          return;\n        }\n\n        if (hasAudioTrack) {\n          this._logger.info('[%s] Failed to play video. Manual user action required.', this.streamId, e);\n\n          return;\n        }\n\n        this._logger.info('[%s] Failed to play muted video. Manual user action required.', this.streamId, e);\n\n        return;\n      }\n\n      videoElement.muted = true;\n\n      return videoElement.play()\n        .then(() => {\n          this._logger.info('[%s] Played video after auto muting. Manual user action required to unmute.', this.streamId);\n\n          this._channelContext.autoMuted.value = true;\n          this._channelContext.autoPaused.value = false;\n          this._channelContext.loading.value = false;\n          this._channelContext.playing.value = true;\n          this._channelContext.state.value = ChannelState.Playing;\n        }).catch(e => {\n          videoElement.muted = false;\n\n          this._logger.info('[%s] Failed to play video. Manual user action required.', this.streamId, e);\n\n          this._channelContext.autoMuted.value = false;\n          this._channelContext.autoPaused.value = true;\n          this._channelContext.loading.value = false;\n          this._channelContext.playing.value = false;\n          this._channelContext.state.value = ChannelState.Paused;\n        });\n    });\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport Channel from './Channel';\nimport SDK from '../SDK';\nimport {EdgeToken} from '../edgeAuth/EdgeToken';\nimport {Millisecond} from '../../units/Units';\n\ntype CreateChannelOptions = {\n  videoElement: HTMLVideoElement;\n  token: EdgeToken;\n  targetLag?: Millisecond;\n}\n\nexport default class Channels {\n  static createChannel(options: CreateChannelOptions): Channel {\n    if (!SDK.initialized.value) {\n      throw new Error('SDK is not loaded.');\n    }\n\n    return new Channel(options.videoElement, options.token, options.targetLag);\n  }\n\n  private constructor() {\n    throw new Error('Channels is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2023 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport SDK from '../SDK';\nimport Channels from '../channels/Channels';\nimport ChannelState from '../channels/ChannelState';\n\nexport {\n  SDK,\n  Channels,\n  ChannelState\n};\n\nexport default {\n  SDK,\n  Channels,\n  ChannelState\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(238);\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}