{"version":3,"sources":["webpack://phenix-web-sdk/webpack/universalModuleDefinition","webpack://phenix-web-sdk/webpack/bootstrap","webpack://phenix-web-sdk/./node_modules/phenix-web-lodash-light/dist/phenix-web-lodash-light.js","webpack://phenix-web-sdk/./node_modules/phenix-web-assert/dist/phenix-web-assert.js","webpack://phenix-web-sdk/./node_modules/phenix-web-disposable/dist/phenix-web-disposable.js","webpack://phenix-web-sdk/./node_modules/phenix-rtc/dist/phenix-rtc.js","webpack://phenix-web-sdk/./node_modules/phenix-web-event/dist/phenix-web-event.js","webpack://phenix-web-sdk/./node_modules/phenix-web-observable/src/index.js","webpack://phenix-web-sdk/./src/sdk/streaming/stream.json.js","webpack://phenix-web-sdk/./node_modules/webrtc-adapter/src/js/utils.js","webpack://phenix-web-sdk/./node_modules/phenix-web-global/src/index.js","webpack://phenix-web-sdk/./node_modules/phenix-web-http/src/index.js","webpack://phenix-web-sdk/./src/dummy.js","webpack://phenix-web-sdk/./node_modules/phenix-web-logging/src/index.js","webpack://phenix-web-sdk/./src/sdk/DimensionsChangedMonitor.js","webpack://phenix-web-sdk/./src/sdk/environment.js","webpack://phenix-web-sdk/./node_modules/phenix-web-application-activity-detector/src/index.js","webpack://phenix-web-sdk/./src/sdk/streaming/FeatureDetector.js","webpack://phenix-web-sdk/./src/sdk/room/member.json.js","webpack://phenix-web-sdk/./src/sdk/room/room.json.js","webpack://phenix-web-sdk/./node_modules/phenix-web-detect-browser/dist/phenix-web-detect-browser.js","webpack://phenix-web-sdk/./node_modules/phenix-web-logging/src/logging.json.js","webpack://phenix-web-sdk/./node_modules/phenix-web-proto/src/index.js","webpack://phenix-web-sdk/./src/sdk/streaming/PeerConnection.js","webpack://phenix-web-sdk/./src/sdk/room/Stream.js","webpack://phenix-web-sdk/./src/sdk/room/stream.json.js","webpack://phenix-web-sdk/(webpack)/buildin/global.js","webpack://phenix-web-sdk/./src/sdk/PCast.js","webpack://phenix-web-sdk/./node_modules/phenix-web-observable/src/Observable.js","webpack://phenix-web-sdk/./node_modules/phenix-web-network-connection-monitor/src/index.js","webpack://phenix-web-sdk/./node_modules/phenix-web-proto/src/MQService.js","webpack://phenix-web-sdk/./node_modules/phenix-web-proto/src/MQProtocol.js","webpack://phenix-web-sdk/./src/sdk/protocol/telemetryProto.json.js","webpack://phenix-web-sdk/./src/sdk/streaming/PeerConnectionMonitor.js","webpack://phenix-web-sdk/./src/sdk/sdpUtil.js","webpack://phenix-web-sdk/./src/sdk/streaming/PhenixLiveStream.js","webpack://phenix-web-sdk/./src/sdk/streaming/BitRateMonitor.js","webpack://phenix-web-sdk/./src/sdk/room/RoomService.js","webpack://phenix-web-sdk/./src/sdk/authentication/AuthenticationService.js","webpack://phenix-web-sdk/./src/sdk/room/Room.js","webpack://phenix-web-sdk/./src/sdk/room/Member.js","webpack://phenix-web-sdk/./src/sdk/room/track.json.js","webpack://phenix-web-sdk/./src/sdk/express/PCastExpress.js","webpack://phenix-web-sdk/./src/sdk/AdminApiProxyClient.js","webpack://phenix-web-sdk/./src/sdk/express/RoomExpress.js","webpack://phenix-web-sdk/./src/sdk/express/MemberSelector.js","webpack://phenix-web-sdk/./src/sdk/room/Channel.js","webpack://phenix-web-sdk/./src/web-sdk.js","webpack://phenix-web-sdk/./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack://phenix-web-sdk/./node_modules/webrtc-adapter/src/js/adapter_factory.js","webpack://phenix-web-sdk/./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","webpack://phenix-web-sdk/./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack://phenix-web-sdk/./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack://phenix-web-sdk/./node_modules/webrtc-adapter/src/js/edge/rtcpeerconnection_shim.js","webpack://phenix-web-sdk/./node_modules/sdp/sdp.js","webpack://phenix-web-sdk/./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack://phenix-web-sdk/./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack://phenix-web-sdk/./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack://phenix-web-sdk/./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack://phenix-web-sdk/./node_modules/phenix-web-logging/src/Logger.js","webpack://phenix-web-sdk/./node_modules/phenix-web-global/src/getGlobal.js","webpack://phenix-web-sdk/./node_modules/phenix-web-logging/src/ConsoleAppender.js","webpack://phenix-web-sdk/./node_modules/phenix-web-observable/src/ObservableArray.js","webpack://phenix-web-sdk/./node_modules/phenix-web-observable/src/ObservableMonitor.js","webpack://phenix-web-sdk/./src/sdk/logging/pcastLoggerFactory.js","webpack://phenix-web-sdk/./src/sdk/logging/telemetryAppenderFactory.js","webpack://phenix-web-sdk/./src/sdk/logging/TelemetryAppender.js","webpack://phenix-web-sdk/./node_modules/phenix-web-proto/src/MQWebSocket.js","webpack://phenix-web-sdk/./node_modules/phenix-web-reconnecting-websocket/src/index.js","webpack://phenix-web-sdk/./node_modules/phenix-web-reconnecting-websocket/src/ReconnectingWebSocket.js","webpack://phenix-web-sdk/./node_modules/phenix-web-network-connection-monitor/src/networkConnectionMonitor.js","webpack://phenix-web-sdk/./node_modules/pbf/index.js","webpack://phenix-web-sdk/./node_modules/ieee754/index.js","webpack://phenix-web-sdk/./node_modules/phenix-web-proto/src/Schema.js","webpack://phenix-web-sdk/./node_modules/phenix-web-proto/src/mqProto.json.js","webpack://phenix-web-sdk/./node_modules/phenix-web-proto/src/Base64.js","webpack://phenix-web-sdk/./node_modules/lxiv/index.js","webpack://phenix-web-sdk/./node_modules/lxiv/dist/lxiv.js","webpack://phenix-web-sdk/./node_modules/phenix-web-proto/src/BatchHttpProto.js","webpack://phenix-web-sdk/./node_modules/phenix-web-batch-http/src/index.js","webpack://phenix-web-sdk/./node_modules/phenix-web-batch-http/src/BatchHttp.js","webpack://phenix-web-sdk/./node_modules/phenix-web-http/src/http.js","webpack://phenix-web-sdk/./node_modules/phenix-web-proto/src/Binary.js","webpack://phenix-web-sdk/./node_modules/phenix-web-application-activity-detector/src/ApplicationActivityDetector.js","webpack://phenix-web-sdk/./src/sdk/audio/AudioContext.js","webpack://phenix-web-sdk/./src/sdk/PCastProtocol.js","webpack://phenix-web-sdk/./src/sdk/protocol/pcastProto.json.js","webpack://phenix-web-sdk/./src/sdk/protocol/chatProto.json.js","webpack://phenix-web-sdk/./src/sdk/PCastEndPoint.js","webpack://phenix-web-sdk/./node_modules/phenix-web-closest-endpoint-resolver/src/index.js","webpack://phenix-web-sdk/./node_modules/phenix-web-closest-endpoint-resolver/src/ClosestEndPointResolver.js","webpack://phenix-web-sdk/./src/sdk/telemetry/metricsTransmitterFactory.js","webpack://phenix-web-sdk/./src/sdk/telemetry/MetricsTransmitter.js","webpack://phenix-web-sdk/./src/sdk/telemetry/StreamTelemetry.js","webpack://phenix-web-sdk/./src/sdk/telemetry/SessionTelemetry.js","webpack://phenix-web-sdk/./src/sdk/telemetry/NetworkMonitor.js","webpack://phenix-web-sdk/./src/sdk/streaming/StreamWrapper.js","webpack://phenix-web-sdk/./src/sdk/streaming/ShakaRenderer.js","webpack://phenix-web-sdk/./src/sdk/streaming/PhenixPlayerRenderer.js","webpack://phenix-web-sdk/./src/sdk/streaming/FlashRenderer.js","webpack://phenix-web-sdk/./src/sdk/streaming/PhenixRealTimeStream.js","webpack://phenix-web-sdk/./src/sdk/streaming/PhenixRealTimeRenderer.js","webpack://phenix-web-sdk/./src/sdk/room/ImmutableRoom.js","webpack://phenix-web-sdk/./src/sdk/chat/RoomChatService.js","webpack://phenix-web-sdk/./src/sdk/chat/ChatService.js","webpack://phenix-web-sdk/./src/sdk/streaming/shaka.json.js","webpack://phenix-web-sdk/./src/sdk/express/ChannelExpress.js","webpack://phenix-web-sdk/./src/sdk/room/ChannelService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,EAKmE;AACzE,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,uBAAuB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uBAAuB,iBAAiB;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,+BAA+B;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA,CAAC;AACD,mD;;;;;;AC71BA;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,EAKwE;AAC9E,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA,gEAAgE;AAChgEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,uBAAuB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uBAAuB,iBAAiB;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,+BAA+B;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA,CAAC;AACD,6C;;;;;;AC7/BA;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,EAK4E;AAClF,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChgEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,uBAAuB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uBAAuB,iBAAiB;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,+BAA+B;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA,CAAC;AACD,iD;;;;;;ACpoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAyD;AAC7D,2BAA2B,mBAAO,CAAC,CAAyB,GAAG,mBAAO,CAAC,EAA2B,GAAG,mBAAO,CAAC,CAAuB,GAAG,mBAAO,CAAC,EAAgB,GAAG,mBAAO,CAAC,CAAkB;AAC5L,MAAM,aAKJ;AACF,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,kBAAkB;AAClF;AACA,yDAAyD,cAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iCAAiC;AAClF,wHAAwH,mBAAmB,EAAE;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;AACP;AACA;;AAEA;;AAEA,OAAO;AACP;AACA;;AAEA,8CAA8C,gEAAgE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC;AACrC,sBAAsB;AACtB;;AAEA;AACA,sBAAsB;AACtB;;AAEA;AACA,CAAC;AACD;AACA,4BAA4B;;AAE5B,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sEAAsE,qBAAqB,sBAAsB;AACjH,uCAAuC,uBAAuB;AAC9D,8CAA8C,4BAA4B;AAC1E,0CAA0C,0BAA0B;;AAEpE;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb,oCAAoC;;AAEpC;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gCAAgC;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;AAGA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG;AACvG;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B,mBAAmB;AAC9C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;;AAEb;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAiE;AACjE;;AAEA;AACA,uCAAuC,IAAI;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qDAAqD,eAAe;AACpE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb,oCAAoC;;AAEpC;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA;;AAEA,OAAO;AACP;AACA,CAAC;AACD,sC;;;;;;ACxxDA;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,EAKuE;AAC7E,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qEAAqE;AACrE;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChgEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,uBAAuB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uBAAuB,iBAAiB;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,+BAA+B;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA,CAAC;AACD,4C;;;;;;AC70CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,uBAAc;AAClB,IAAI,uBAAmB;AACvB,IAAI,uBAAqB;AACzB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC3BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;;AC5FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO,OAAO;AACd;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,0DAA0D;AAC1D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO;AACZ;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO,CAAC,uBAAa,CAAC,mCAAE;AACxB;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACnBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,uBAAQ;AACZ,CAAC,mCAAE;AACH;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACrBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO,EAAE,mCAAE;AACX;;AAEA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACrBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,uBAAU;AACd,IAAI,uBAAmB;AACvB,IAAI,uBAAgB;AACpB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC9BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAkB;AACtB,CAAC,mCAAE;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACtHF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,uBAA2B;AAC/B,CAAC,mCAAE;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,gFAAgF,IAAI,2BAA2B;;AAE/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AChIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,uBAA+B;AACnC,CAAC,mCAAE;AACH;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACrBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAY;AAChB,IAAI,sBAAmB;AACvB,IAAI,uBAAoB;AACxB,IAAI,sBAAe;AACnB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACnMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AChEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACpEF;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,EAK+E;AACrF,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA,2CAA2C;AAC3C;;AAEA,4EAA4E;AAC5E;;AAEA;AACA,6FAA6F;AAC7F;AACA;AACA,iBAAiB,gEAAgE;AACjF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,6DAA6D;AAC7D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,uBAAuB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uBAAuB,iBAAiB;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,+BAA+B;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA,OAAO;AACP;AACA,CAAC;AACD,qD;;;;;;AC/9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC/BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,uBAAe;AACnB,IAAI,uBAAkB;AACtB,IAAI,uBAAa;AACjB,CAAC,mCAAE;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACzBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAY;AAChB,CAAC,mCAAE;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA,+DAA+D;AAC/D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC5VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,uBAAe;AACnB,IAAI,uBAAc;AAClB,CAAC,moGAAC,C;;;;;;AC5KF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACtCF;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,sBAAuB;AAC3B,IAAI,uBAA8B;AAClC,IAAI,sBAAiB;AACrB,IAAI,uBAA0C;AAC9C,IAAI,uBAAe;AACnB,IAAI,uBAAsB;AAC1B,IAAI,uBAAiB;AACrB,IAAI,uBAAiB;AACrB,IAAI,uBAAyC;AAC7C,IAAI,uBAA+B;AACnC,IAAI,uBAAmC;AACvC,IAAI,uBAA4B;AAChC,IAAI,uBAAuC;AAC3C,IAAI,uBAA6B;AACjC,IAAI,uBAA8B;AAClC,IAAI,uBAA4B;AAChC,IAAI,uBAA2B;AAC/B,IAAI,uBAA8B;AAClC,IAAI,uBAAkC;AACtC,IAAI,uBAA6B;AACjC,IAAI,sBAAyB;AAC7B,IAAI,uBAA4B;AAChC,IAAI,sBAAY;AAChB,IAAI,uBAAW;AACf,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,YAAY,gBAAgB;;AAExE;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,+DAA+D,uCAAuC;AACtG;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wEAAwE,gCAAgC;;AAExG;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA,oEAAoE,gCAAgC;;AAEpG;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gDAAgD,YAAY,uCAAuC;AACnG;AACA,iDAAiD;;AAEjD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,uCAAuC;AACtG;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oEAAoE,gCAAgC;;AAEpG;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC,KAAkF;AACzH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;;AAEA;;AAEA;;AAEA,0CAA0C,uCAAuC;AACjF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uEAAuE;AACvE;AACA;;AAEA,uFAAuF;AACvF;AACA;;AAEA,qFAAqF;AACrF;AACA;;AAEA,+EAA+E;AAC/E;AACA;;AAEA,iFAAiF;AACjF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA,aAAa;;AAEb;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iCAAiC,GAAG;AACrD;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA;;AAEA;AACA,qBAAqB;;AAErB;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,gHAAgH;AAChH;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,qBAAqB;;AAErB;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,yBAAyB;AACzB,qBAAqB;;AAErB;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,qBAAqB;;AAErB;AACA,iBAAiB;;AAEjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT,gCAAgC;;AAEhC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iCAAiC,GAAG;AACrD;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT,gCAAgC;;AAEhC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,4FAA4F;AAC5F;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gFAAgF;AAChF,sFAAsF;;AAEtF;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA,2IAA2I,SAAS;AACpJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,6IAA6I,iDAAiD;AAC9L;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACnoEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACvLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,uBAA4B;AAChC,CAAC,mCAAE;AACH;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACrBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAkB;AACtB,IAAI,sBAAuB;AAC3B,IAAI,uBAAc;AAClB,IAAI,uBAAU;AACd,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA,mCAAmC,yBAAyB;AAC5D;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC,yBAAyB;AAC5D;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,+BAA+B,aAAa;AAC5C;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iDAAiD;AACjD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,+BAA+B,kBAAkB;AACjD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACxYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,uBAAK;AACT,IAAI,uBAAU;AACd,IAAI,uBAAgB;AACpB,CAAC,mCAAE;AACH;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC7EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACpcF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAkB;AACtB,IAAI,sBAAY;AAChB,IAAI,uBAAY;AAChB,IAAI,uBAAkB;AACtB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,2EAA2E;AAC3E;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACjdF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,CAAC,mCAAE;AACH;;AAEA,kDAAkD;AAClD;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACvNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAkB;AACtB,IAAI,sBAAY;AAChB,IAAI,uBAAiB;AACrB,IAAI,uBAAwB;AAC5B,IAAI,uBAAiB;AACrB,IAAI,sBAAe;AACnB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA,8EAA8E;AAC9E;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACvLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,CAAC,mCAAE;AACH;;AAEA,kCAAkC;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;;AAEA,2BAA2B,sBAAsB;AACjD;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA,+CAA+C;;AAE/C;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC/HF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,sBAAuB;AAC3B,IAAI,uBAAyC;AAC7C,IAAI,uBAAQ;AACZ,IAAI,wBAAiB;AACrB,IAAI,uBAAU;AACd,IAAI,wBAAyB;AAC7B,IAAI,uBAAa;AACjB,IAAI,uBAAe;AACnB,CAAC,mCAAE;AACH;;AAEA,sCAAsC,sBAAsB;AAC5D,0CAA0C,0BAA0B;AACpE,0CAA0C,0BAA0B;;AAEpE;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,GAAG,cAAc;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gDAAgD,iBAAiB;AACjE;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC,wBAAwB;AAC/D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACt4BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AChGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,uBAAU;AACd,IAAI,uBAAa;AACjB,CAAC,mCAAE;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACnOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,uBAAU;AACd,IAAI,uBAAe;AACnB,CAAC,mCAAE;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yFAAyF,eAAe;AACxG;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACvMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACtCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,uBAAwB;AAC5B,IAAI,uBAAgC;AACpC,IAAI,uBAAU;AACd,IAAI,sBAAY;AAChB,IAAI,wBAAyB;AAC7B,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wEAAwE,aAAa;AACrF,4EAA4E,aAAa;AACzaAAa;AACb,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA,6CAA6C,mBAAmB,cAAc;;AAE9E,uEAAuE;AACvE;AACA;AACA;AACA,SAAS,wDAAwD;;AAEjE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA,kDAAkD;;AAElD,2EAA2E;AAC3E;AACA;AACA;AACA,SAAS,4DAA4D;;AAErE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,GAAG,kBAAkB;AAClC;;AAEA,sFAAsF,kBAAkB;AACxG;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,qBAAqB;;AAE9D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,qCAAqC;AACtE;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,aAAa;AAClD,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb,qEAAqE,oBAAoB;AACzF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb,oEAAoE,oBAAoB;AACxF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC,eAAe;AACtD;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,+DAA+D;;AAE/D;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA,kHAAkH,uCAAuC;AACzJ,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,qBAAqB;;AAElE;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC,eAAe;AACtD;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gEAAgE;;AAEhE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;;AAEA;AACA;;AAEA,kDAAkD,qBAAqB;;AAEvE;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2EAA2E;;AAE3E;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACraAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC12CF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAiB;AACrB,IAAI,sBAAuB;AAC3B,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC;AACzC;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kEAAkE;AAClE;;AAEA;AACA,4BAA4B,uBAAuB;;AAEnD;AACA;;AAEA,sKAAsK;;AAEtK;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,uBAAuB;;AAEnD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,uBAAuB;;AAEnD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,uBAAuB;AAC9D;AACA,uCAAuC,2BAA2B;AAClE;AACA,uCAAuC,uBAAuB;AAC9D;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA,yCAAyC;;AAEzC;AACA;;AAEA,0BAA0B,GAAG,kCAAkC;AAC/D;;AAEA;AACA;AACA,qCAAqC;AACrC;;AAEA;;AAEA;AACA,mCAAmC,4CAA4C;AAC/E;;AAEA;AACA;;AAEA;AACA;AACA,oCAAoC,iBAAiB;AACrD;;AAEA,wBAAwB;;AAExB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AChVF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,sBAAuB;AAC3B,IAAI,uBAAgB;AACpB,IAAI,uBAAqB;AACzB,IAAI,uBAAkB;AACtB,IAAI,uBAAgB;AACpB,IAAI,uBAAmB;AACvB,IAAI,uBAAqB;AACzB,IAAI,uBAAqB;AACzB,IAAI,uBAAoB;AACxB,IAAI,uBAA8B;AAClC,CAAC,mCAAE;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,iBAAiB;AACjB;AACA,aAAa;;AAEb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,kBAAkB;AAC3E;;AAEA;AACA;;AAEA;AACA,qDAAqD,0CAA0C;AAC/F;;AAEA;AACA;;AAEA;AACA;;AAEA,6CAA6C,+BAA+B;;AAE5E;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA,6CAA6C,mBAAmB,cAAc;;AAE9E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iEAAiE,oBAAoB;AACrF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,gCAAgC;AAC3E;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uCAAuC,kCAAkC;AACzE;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA,uCAAuC,+BAA+B;AACtE;;AAEA;AACA;;AAEA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,GAAG,kBAAkB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,GAAG,kBAAkB;AACtC;;AAEA;AACA,wCAAwC,0BAA0B;AAClE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uDAAuD,yBAAyB;;AAEhF;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,qGAAqG,kBAAkB;;AAEvH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4GAA4G,kBAAkB;AAC9H,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA,0DAA0D,yBAAyB;;AAEnF;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mDAAmD,yBAAyB;AAC5E;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,4DAA4D;;AAE5D;;AAEA;AACA;AACA,0DAA0D,yBAAyB;;AAEnF;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;AACA,aAAa;AACb,uCAAuC,wBAAwB;AAC/D;;AAEA,+CAA+C,aAAa,aAAa;;AAEzE;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAiD,qBAAqB;AACtE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iEAAiE,oBAAoB;AACrF;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA,+CAA+C,YAAY,gFAAgF;;AAE3I;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qEAAqE,oBAAoB;AACzF;;AAEA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,YAAY,gFAAgF;;AAE3I;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,gCAAgC,aAAa;AAC7C;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACpgDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC3PF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,CAAC,mCAAE;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACrGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAyB;AACzB,IAAI,sBAAY;AAChB,IAAI,uBAAoB;AACxB,IAAI,uBAAa;AACjB,IAAI,uBAAwB;AAC5B,IAAI,uBAAkC;AACtC,IAAI,uBAAkC;AACtC,IAAI,uBAAmC;AACvC,IAAI,uBAA4B;AAChC,IAAI,uBAA2B;AAC/B,IAAI,wBAA8B;AAClC,IAAI,uBAA2B;AAC/B,CAAC,mCAAE;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,cAAc,yCAAyC;AACvD;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,oGAAC,C;;;;;;;AC/DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,qBAAqB,mBAAO,CAAC,EAAsB;AACnD,iCAAiC,sBAAsB;;;;;;;;;ACZvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,mBAAO,CAAC,CAAS;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAO,CAAC,EAAsB;AACjD,iBAAiB,mBAAO,CAAC,EAAkB;AAC3C,oBAAoB,mBAAO,CAAC,EAAwB;AACpD,mBAAmB,mBAAO,CAAC,EAAsB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;AC7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,YAAY,mBAAO,CAAC,CAAa;AACjC;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,+DAA+D;AAC/D;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,EAAgB;AAC5C;;;;;;;;ACtkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,YAAY,mBAAO,CAAC,CAAa;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,YAAY;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA,gDAAgD;AAChD;AACA;AACA,yDAAyD,oBAAoB;AAC7E,yDAAyD;AACzD;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,CAAU;AAC9B,4BAA4B,mBAAO,CAAC,EAA0B;;AAE9D;AACA,oBAAoB,mBAAO,CAAC,EAAgB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,eAAe,mBAAO,CAAC,EAAK;;AAE5B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sCAAsC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,KAAK;;AAEL,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,8BAA8B;AACnD,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;AC52CA;AACa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB,0BAA0B;AAC1B;AACA;AACA;AACA,yDAAyD;AACzD,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,IAA0B;AAC9B;AACA;;;;;;;;ACxzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb;AACA;AACA;;AAEA;AACA;AACA,aAAa,yCAAyC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,CAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA,+BAA+B,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,EAAgB;AAC5C;;;;;;;;ACrMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,CAAU;AAC9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,8BAA8B;AAC9B,oCAAoC,EAAE;AACtC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAgE;AAC7E,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,YAAY,mBAAO,CAAC,CAAU;;AAE9B;AACA;;AAEA;AACA;AACA,qCAAqC,EAAE;;AAEvuBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAmB;AACvB,IAAI,uBAAgB;AACpB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA,gDAAgD,KAAG;AACnD,uCAAuC,KAAG;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,2BAA2B;AACrE;;AAEA;AACA,0CAA0C,2BAA2B;AACrE;;AAEA;AACA,0CAA0C,0BAA0B;AACpE;;AAEA;AACA,0CAA0C,0BAA0B;AACpE;;AAEA;AACA,0CAA0C,2BAA2B;AACrE;;AAEA;AACA,0CAA0C,2BAA2B;AACrE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gHAAgH,kBAAkB;AAClI;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY,EAAE;AAC3B,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AClNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO,EAAE,mCAAE;AACX;;AAEA;AACA,4CAA4C;AAC5C,0BAA0B;AAC1B;;AAEA;AACA,0BAA0B;AAC1B;;AAEA,yCAAyC;AACzC,wBAAwB;AACxB;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;;ACnCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,uBAAgB;AACpB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,KAAK,gBAAgB;;AAErB;AACA;AACA,KAAK;;AAEL;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC3DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,uBAAc;AAClB,CAAC,mCAAE;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACrGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,CAAC,mCAAE;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACvDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,uBAAoB;AACxB,IAAI,uBAAgB;AACpB,IAAI,uBAA4B;AAChC,CAAC,mCAAE;AACH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC1DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,uBAAgB;AACpB,IAAI,uBAAqB;AACzB,CAAC,mCAAE;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AChDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAY;AAChB,IAAI,uBAAoB;AACxB,IAAI,uBAAkB;AACtB,IAAI,uBAAiC;AACrC,CAAC,mCAAE;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AChHF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAkB;AACtB,IAAI,uBAAmC;AACvC,IAAI,uBAAa;AACjB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;;AAEA,+BAA+B;AAC/B;AACA;;AAEA,iCAAiC;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC7HF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,uBAAyB;AAC7B,CAAC,mCAAE;AACH;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACrBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,uBAAuC;AAC3C,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4DAA4D;AAC5D;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACtXF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAkB;AACtB,IAAI,sBAAuB;AAC3B,IAAI,sBAAuB;AAC3B,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;;AAEA,+EAA+E,WAAW;AAC1F;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;;ACjFW;;AAEb;;AAEA,cAAc,mBAAO,CAAC,EAAS;;AAE/B;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;;AAEhB;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,4BAA4B,kBAAkB;AAC9C,4BAA4B,wBAAwB;AACpD,4BAA4B,yBAAyB;AACrD,4BAA4B,yBAAyB;AACrD,0BAA0B;;AAE1B;AACA,KAAK;;AAEL,8BAA8B;AAC9B;AACA,KAAK;;AAEL;AACA;AACA,wDAAwD;AACxD,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,+EAA+E;AAC/E,+EAA+E;AAC/E,+EAA+E;AAC/E;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC,KAAK;;AAEL;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL,6CAA6C,gDAAgD,IAAI;AACjG,6CAA6C,iDAAiD,GAAG;AACjG,6CAA6C,iDAAiD,GAAG;AACjG,6CAA6C,+CAA+C,KAAK;AACjG,6CAA6C,gDAAgD,IAAI;AACjG,6CAA6C,iDAAiD,GAAG;AACjG,6CAA6C,kDAAkD,EAAE;AACjG,6CAA6C,iDAAiD,GAAG;AACjG,6CAA6C,kDAAkD,EAAE;;AAEjG;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,sBAAsB;AAC3C,qBAAqB,sBAAsB;AAC3C,qBAAqB,uBAAuB;AAC5C,qBAAqB,uBAAuB;AAC5C,qBAAqB,uBAAuB;AAC5C,qBAAqB,uBAAuB;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C,2CAA2C;AAC3C,2CAA2C;AAC3C,2CAA2C;AAC3C;AACA;;AAEA;AACA;;AAEA,mEAAmE;AACnE,mEAAmE;AACnE,mEAAmE;AACnE,mEAAmE;AACnE,mEAAmE;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,eAAe;AAC5C;;AAEA,wCAAwC,gBAAgB,gBAAgB,8BAA8B;AACtG,wCAAwC,gBAAgB,gBAAgB,+BAA+B;AACvG,wCAAwC,gBAAgB,gBAAgB,6BAA6B;AACrG,wCAAwC,gBAAgB,gBAAgB,8BAA8B;AACtG,wCAAwC,gBAAgB,gBAAgB,+BAA+B;AACvG,wCAAwC,gBAAgB,gBAAgB,+BAA+B;AACvG,wCAAwC,gBAAgB,gBAAgB,gCAAgC;AACxG,wCAAwC,gBAAgB,gBAAgB,+BAA+B;AACvG,wCAAwC,gBAAgB,gBAAgB,gCAAgC;;AAExG;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,gBAAgB;AAC5C,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qIAAqI;;AAErI;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,IAAI;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS,IAAI;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,IAAI;;AAEjB;AACA,SAAS,IAAI;AACbb;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC3UF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACzHF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAmB;AACvB,IAAI,uBAAM;AACV,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC1EF;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,EAAgB;;;;;;;AChBzC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,gCAAgC,KAAK;AACrC;;AAEA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA,eAAe,kBAAkB;AACjC,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,kCAAkC,EAAE,mBAAmB,EAAE,iBAAiB,EAAE;AAC5E;;AAEA,uBAAuB,KAA6B;AACpD;AACA,uBAAuB,IAA8C;AACrE,QAAQ,mCAAO,YAAY,aAAa,EAAE;AAAA,oGAAC;AAC3C;AACA,QAAQ,EAA6D;;AAErE,CAAC;;;;;;;ACtID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,uBAAuB;AAC3B,IAAI,uBAAc;AAClB,IAAI,uBAAU;AACd,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,eAAe,GAAG,oCAAoC;AACnG;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC7CF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,uBAAa;AACjB,CAAC,mCAAE;AACH;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACrBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAkB;AACtB,IAAI,sBAAmB;AACvB,IAAI,uBAAuC;AAC3C,IAAI,sBAAiB;AACrB,IAAI,sBAAuB;AAC3B,IAAI,sBAAuB;AAC3B,CAAC,mCAAE;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iEAAiE,sCAAsC;AACvG;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,4BAA4B;;AAE5B;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,8EAA8E;;AAE9E;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACtTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,6EAA6E;AAC7E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,6EAA6E;AAC7E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA;AACA,SAAS,iCAAiC;;AAE1C;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,IAAI;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC1WF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAmB;AACvB,IAAI,sBAAmB;AACvB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AChEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAkB;AACtB,IAAI,sBAAuB;AAC3B,CAAC,mCAAE;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+FAA+F;AAC/F;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wFAAwF;AACxF;AACA,4DAA4D;AAC5D;;AAEA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,mDAAmD;AAC5D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC9KF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAY;AAChB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC1CF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,uBAAkB;AACtB,IAAI,sBAAY;AAChB,IAAI,uBAA4B;AAChC,IAAI,uBAA2B;AAC/B,CAAC,mCAAE;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4EAA4E,aAAa;AACzF;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC3YF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,CAAC,mCAAE;AACH;;AAEA;AACA;AACA,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AClgEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,CAAC,mCAAE;AACH;;AAEA;AACA;AACA,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC54BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAmB;AACvB,IAAI,sBAAyB;AAC7B,IAAI,sBAAuB;AAC3B,IAAI,uBAAsC;AAC1C,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,uEAAuE,mBAAmB;AAC1F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;;AAEA,0EAA0E,sBAAsB;AAChG;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;;AAEA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,IAAI;AACb;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACzLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,uBAA2B;AAC/B,CAAC,mCAAE;AACH;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACnBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qDAAqD,mBAAmB;AACxE,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,IAAI;AACb;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACrKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,uBAAgB;AACpB,IAAI,uBAAsB;AAC1B,CAAC,mCAAE;AACH;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACjDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,uBAAkB;AACtB,IAAI,sBAAY;AAChB,IAAI,uBAAiC;AACrC,CAAC,mCAAE;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACpGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,sBAAY;AAChB,CAAC,mCAAE;AACH;;AAEA;AACA,uCAAuC,KAAG;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,SAAS,4BAA4B;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qCAAqC,oBAAoB;AACzD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mDAAmD,+BAA+B;AAClF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,oDAAoD,mDAAmD,GAAG,2DAA2D;;AAErK;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,4CAA4C,sBAAsB;;AAElE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;AACA;AACA,8CAA8C,eAAe;AAC7D,aAAa;AACb,8CAA8C,cAAc;AAC5D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,yCAAyC;;AAEzC;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC7TF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,uBAA0C;AAC9C,IAAI,uBAAkB;AACtB,IAAI,sBAAY;AAChB,CAAC,mCAAE;AACH;;AAEA;AACA,uCAAuC,KAAG;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,SAAS,4BAA4B;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,4BAA4B;;AAE/D;AACA;;AAEA;AACA;;AAEA,mCAAmC,4BAA4B;;AAE/D;AACA;;AAEA;AACA;;AAEA,0CAA0C,aAAa,SAAS,4BAA4B;;AAE5F;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,uBAAuB,GAAG,4BAA4B,GAAG,4BAA4B;;AAE/H;AACA;;AAEA;AACA;AACA;;AAEA,4CAA4C,eAAe,GAAG,eAAe,GAAG,4BAA4B;;AAE5G;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yDAAyD,mBAAmB,GAAG,mBAAmB,GAAG,4BAA4B;;AAEjI;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,yCAAyC;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACzPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAkB;AACtB,IAAI,sBAAuB;AAC3B,IAAI,sBAAY;AAChB,CAAC,mCAAE;AACH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACtGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAe;AACnB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AClJF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAkB;AACtB,IAAI,sBAAiB;AACrB,IAAI,sBAAuB;AAC3B,IAAI,sBAAY;AAChB,IAAI,uBAA6B;AACjC,IAAI,sBAAe;AACnB,CAAC,mCAAE;AACH;;AAEA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,8DAA8D;AAChF,uBAAuB,kBAAkB,gBAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+BAA+B,2BAA2B;AAC1D;AACA;;AAEA;AACA,sCAAsC,+CAA+C;AACrF;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,wEAAwE;;AAExE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT,6DAA6D,sBAAsB,yBAAyB;AAC5G;AACA;;AAEA;AACA;AACA,0CAA0C;;AAE1C,uBAAuB,SAAS;AAChC;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACrZF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,uBAAoB;AACxB,IAAI,sBAAkB;AACtB,IAAI,sBAAiB;AACrB,IAAI,sBAAuB;AAC3B,IAAI,sBAAY;AAChB,IAAI,uBAA6B;AACjC,IAAI,sBAAe;AACnB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,mCAAmC;;AAEzE;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,qBAAqB;AACrB,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC9WF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,uBAAoB;AACxB,IAAI,sBAAkB;AACtB,IAAI,sBAAiB;AACrB,IAAI,sBAAuB;AAC3B,IAAI,sBAAY;AAChB,IAAI,uBAA6B;AACjC,IAAI,sBAAe;AACnB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC7RF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAkB;AACtB,IAAI,sBAAY;AAChB,IAAI,sBAAuB;AAC3B,IAAI,uBAA0C;AAC9C,IAAI,uBAAkB;AACtB,IAAI,uBAAyB;AAC7B,IAAI,uBAAkB;AACtB,IAAI,uBAA0B;AAC9B,IAAI,uBAAmB;AACvB,IAAI,sBAAe;AACnB,CAAC,mCAAE;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC3WF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAkB;AACtB,IAAI,sBAAiB;AACrB,IAAI,sBAAuB;AAC3B,IAAI,sBAAY;AAChB,IAAI,uBAA0C;AAC9C,IAAI,uBAA2B;AAC/B,IAAI,sBAAmB;AACvB,IAAI,uBAA6B;AACjC,IAAI,sBAAe;AACnB,IAAI,uBAAmB;AACvB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC9SF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,uBAAQ;AACZ,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AC1HF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,sBAAuB;AAC3B,IAAI,wBAAe;AACnB,CAAC,mCAAE;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACrNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,sBAAuB;AAC3B,IAAI,uBAAyC;AAC7C,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACrUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;AClCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,sBAAuB;AAC3B,IAAI,sBAAuB;AAC3B,IAAI,uBAAe;AACnB,IAAI,wBAAwB;AAC5B,IAAI,uBAAiB;AACrB,IAAI,uBAAkB;AACtB,IAAI,uBAAgB;AACpB,IAAI,uBAAmB;AACvB,IAAI,uBAAqB;AACzB,IAAI,uBAAqB;AACzB,CAAC,mCAAE;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,sBAAsB;;AAEhE;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B,gCAAgC;AAC3D;AACA;;AAEA;AACA;;AAEA;AACA,0DAA0D;;AAE1D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD,4BAA4B;AACrF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yDAAyD,iDAAiD;AAC1G;;AAEA,qDAAqD,4BAA4B;AACjF;;AAEA;AACA;;AAEA,qDAAqD,4BAA4B;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,mCAAmC;AACnC;;AAEA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,mDAAmD;;AAE1G;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,kDAAkD;AAClD;AACA;AACA,kCAAkC;AAClC;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,mDAAmD;;AAE1G;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mGAAmG,8BAA8B;;AAEjI;AACA;;AAEA;AACA;;AAEA,kGAAkG,8BAA8B;;AAEhI;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C;;;;;;ACxbF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAO;AACP,IAAI,sBAAyB;AAC7B,IAAI,sBAAmB;AACvB,IAAI,uBAAW;AACf,CAAC,mCAAE;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,oGAAC,C","file":"phenix-web-sdk-no-publish.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"phenix-web-sdk\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"phenix-web-sdk\"] = factory();\n\telse\n\t\troot[\"phenix-web-sdk\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 45);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"_\"] = factory();\n\telse\n\t\troot[\"phenix\"] = root[\"phenix\"] || {}, root[\"phenix\"][\"_\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n    'use strict';\n\n    var _ = function() {\n\n    };\n\n    _.clone = function clone(value) {\n        if (_.isArray(value)) {\n            return value.slice();\n        }\n\n        if (_.isObject(value)) {\n            return _.assign({}, value);\n        }\n\n        return value;\n    };\n\n    _.get = function get(objectToTraverse, path, defaultValue) {\n        if (_.isNullOrUndefined(objectToTraverse)) {\n            return defaultValue;\n        }\n\n        assertIsObject(objectToTraverse, 'objectToTraverse');\n\n        var properties = path;\n\n        if (_.isString(properties)) {\n            properties = buildPathFromString(path);\n        } else if (!_.isArray(properties)) {\n            throw new Error('Unsupported path type ' + typeof path);\n        }\n\n        var valueAtPath = _.reduce(properties, function(valueAtPath, prop) {\n            if (_.isObject(valueAtPath) || _.isArray(valueAtPath)) {\n                return valueAtPath[prop];\n            }\n\n            return;\n        }, objectToTraverse);\n\n        return _.isUndefined(valueAtPath) ? defaultValue : valueAtPath;\n    };\n\n    _.set = function get(objectToTraverse, path, value) {\n        if (!_.isObject(objectToTraverse)) {\n            return objectToTraverse;\n        }\n\n        assertIsObject(objectToTraverse, 'objectToTraverse');\n\n        var currentLocation = objectToTraverse;\n        var properties = path;\n\n        if (_.isString(properties)) {\n            properties = buildPathFromString(path);\n        } else if (!_.isArray(properties)) {\n            throw new Error('Unsupported path type ' + typeof path);\n        }\n\n        _.forEach(properties, function(prop, index) {\n            setNextValue(currentLocation, prop, getNextValue(properties, index, currentLocation, value));\n\n            currentLocation = currentLocation[prop];\n        });\n\n        return objectToTraverse;\n    };\n\n    _.bind = function bind(callback, that) {\n        var argsAfterContext = Array.prototype.slice.call(arguments, 2);\n\n        return function boundFunction() {\n            if (!_.isFunction(callback)) {\n                throw new TypeError('_.bind - callback must be a function. Received [' + typeof callback + ']');\n            }\n\n            var combinedArguments = argsAfterContext.concat(Array.prototype.slice.call(arguments));\n\n            return callback.apply(that, combinedArguments);\n        };\n    };\n\n    _.now = function now() {\n        return new Date().getTime();\n    };\n\n    _.utc = function utc(date) {\n        if (_.isNumber(date)) {\n            return date;\n        } else if (!date) {\n            return NaN;\n        }\n\n        return Math.floor(date);\n    };\n\n    _.isoString = function isoString() {\n        var now = new Date();\n\n        if (now.toISOString) {\n            return now.toISOString();\n        }\n\n        return now.getUTCFullYear() +\n            '-' + _.pad(now.getUTCMonth() + 1, 2) +\n            '-' + _.pad(now.getUTCDate(), 2) +\n            'T' + _.pad(now.getUTCHours(), 2) +\n            ':' + _.pad(now.getUTCMinutes(), 2) +\n            ':' + _.pad(now.getUTCSeconds(), 2) +\n            '.' + (now.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n            'Z';\n    };\n\n    _.map = function map(collection, callback) {\n        assertIsObject(collection, 'collection');\n\n        var newArray = [];\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, function mapCollection(item, index) {\n                if (_.isString(callback) && _.isObject(item)) {\n                    newArray.push(item[callback]);\n                } else if (_.isFunction(callback)) {\n                    newArray.push(callback(item, index));\n                }\n            });\n        } else {\n            _.forOwn(collection, function mapCollection(value, key) {\n                if (_.isFunction(callback)) {\n                    newArray.push(callback(value, key));\n                }\n            });\n        }\n\n        return newArray;\n    };\n\n    _.values = function(collection) {\n        if (!_.isObject(collection) || _.isArray(collection)) {\n            return [];\n        }\n\n        return _.map(collection, function(value) {\n            return value;\n        });\n    };\n\n    _.keys = function(collection) {\n        if (!_.isObject(collection) && !_.isArray(collection)) {\n            return [];\n        }\n\n        return _.map(collection, function(value, key) {\n            return key;\n        });\n    };\n\n    _.forEach = function forEach(collection, callback) {\n        if (!_.isFunction(callback)) {\n            throw new Error('_.forEach argument, Callback, must be a function. Received [' + typeof callback + ']');\n        }\n\n        assertIsArray(collection, 'collection');\n\n        for (var i = 0; i < collection.length; i++) {\n            var callbackResponse = callback(collection[i], i);\n\n            if (callbackResponse === false) {\n                return;\n            }\n        }\n    };\n\n    _.forOwn = function forOwn(objectWithProperties, callback) {\n        if (!_.isFunction(callback)) {\n            throw new Error('Callback must be a function. Received [' + typeof callback + ']');\n        }\n\n        assertIsObject(objectWithProperties, 'objectWithProperties');\n\n        var keys = Object.keys(objectWithProperties);\n\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n\n            if (objectWithProperties.hasOwnProperty(key) || Object.prototype.hasOwnProperty.call(objectWithProperties, key)) {\n                var callbackResponse = callback(objectWithProperties[key], key);\n\n                if (callbackResponse === false) {\n                    return;\n                }\n            }\n        }\n    };\n\n    _.argumentsToArray = function(args) {\n        if (!_.isObject(args) || !args.length) {\n            throw new Error('Collection must be arguments. Received [' + typeof args + ']');\n        }\n\n        var collection = [];\n\n        for (var i = 0; i < args.length; i++) {\n            collection.push(args[i]);\n        }\n\n        return collection;\n    };\n\n    _.assign = function assign(target) {\n        if (_.isNullOrUndefined(target)) {\n            target = {};\n        }\n\n        assertIsObject(target, 'target');\n\n        var sources = _.argumentsToArray(arguments);\n\n        sources.shift();\n\n        _.forEach(sources, function(source, index) {\n            if (_.isNullOrUndefined(source)) {\n                return;\n            }\n\n            assertIsObject(source, '_.assign(sources[' + index + '])');\n\n            _.forOwn(source, function(value, key) {\n                target[key] = value;\n            });\n        });\n\n        return target;\n    };\n\n    _.includes = function includes(collection, value) {\n        if (_.isString(collection)) {\n            assertIsString(value, 'Includes value and search parameter');\n\n            return collection.indexOf(value) > -1;\n        }\n\n        if (_.isUndefined(collection) || _.isUndefined(value)) {\n            return false;\n        }\n\n        assertIsObject(collection, 'collection');\n\n        var hasValue = false;\n\n        var checkCollection = function checkCollection(currentValue) {\n            if (currentValue === value) {\n                hasValue = true;\n\n                return false;\n            }\n        };\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, checkCollection);\n        } else {\n            _.forOwn(collection, checkCollection);\n        }\n\n        return hasValue;\n    };\n\n    _.reduce = function reduce(collection, callback, initialValue) {\n        assertIsObject(collection, 'collection');\n\n        var result = initialValue === _.noop() ? null : initialValue;\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, function(item, index) {\n                result = callback(result, item, index);\n            });\n        } else {\n            _.forOwn(collection, function(value, key) {\n                result = callback(result, value, key);\n            });\n        }\n\n        return result;\n    };\n\n    _.sample = function sample(collection) {\n        assertIsArray(collection, 'collection');\n\n        return collection[Math.floor(Math.random() * collection.length)];\n    };\n\n    _.uniqueId = function() {\n        return (_.now() * Math.random()).toString();\n    };\n\n    _.find = function find(collection, callback, initialIndex) {\n        assertIsArray(collection, 'collection');\n\n        var item = undefined;\n\n        _.forEach(collection, function findInCollection(value, index) {\n            if (callback(value) && index >= (initialIndex || 0)) {\n                item = value;\n\n                return false;\n            }\n        });\n\n        return item;\n    };\n\n    _.findIndex = function find(collection, callback, initialIndex) {\n        assertIsArray(collection, 'collection');\n\n        var itemIndex = -1;\n\n        _.forEach(collection, function findInCollection(value, index) {\n            if (callback(value, index) && index >= (initialIndex || 0)) {\n                itemIndex = index;\n\n                return false;\n            }\n        });\n\n        return itemIndex;\n    };\n\n    _.filter = function filter(collection, callback) {\n        assertIsArray(collection, 'collection');\n\n        var newCollection = [];\n\n        _.forEach(collection, function findInCollection(value) {\n            if (callback(value)) {\n                newCollection.push(value);\n            }\n        });\n\n        return newCollection;\n    };\n\n    _.remove = function remove(collection, callback) {\n        assertIsArray(collection, 'collection');\n\n        var filterCallback = function filterCallback(value) {\n            return !callback(value);\n        };\n\n        return _.filter(collection, filterCallback);\n    };\n\n    _.take = function take(collection, size) {\n        assertIsArray(collection, 'collection');\n\n        return collection.slice(0, size);\n    };\n\n    _.hasDifferences = function hasDifferences(collectionA, collectionB, deep) {\n        return _.findDifferences(collectionA, collectionB, deep).length > 0;\n    };\n\n    _.findDifferences = function findDifferences(collectionA, collectionB, deep) {\n        var differences = [];\n        var visitedKeys = {};\n\n        function getDifferences(value, indexOrKey) {\n            visitedKeys[indexOrKey] = 1;\n\n            if ((_.isObject(value) || _.isArray(value)) && deep) {\n                if (!_.hasIndexOrKey(collectionB, indexOrKey)) {\n                    differences.push(indexOrKey);\n                } else if (!_.sameTypes(collectionA[indexOrKey], collectionB[indexOrKey])) {\n                    differences.push(indexOrKey);\n                } else if (_.hasDifferences(collectionA[indexOrKey], collectionB[indexOrKey], deep)) {\n                    differences.push(indexOrKey);\n                }\n            } else if (collectionA[indexOrKey] !== collectionB[indexOrKey]) {\n                differences.push(indexOrKey);\n            }\n        }\n\n        if (_.isArray(collectionA) && _.isArray(collectionB)) {\n            if (collectionA.length > collectionB.length) {\n                _.forEach(collectionA, getDifferences);\n            } else {\n                _.forEach(collectionB, getDifferences);\n            }\n        } else if (_.isObject(collectionA) && _.isObject(collectionB) && !_.isArray(collectionA) && !_.isArray(collectionB)) {\n            _.forOwn(collectionA, getDifferences);\n\n            _.forOwn(collectionB, function(value, key) {\n                if (!visitedKeys.hasOwnProperty(key)) {\n                    differences.push(key);\n                }\n            });\n        } else {\n            throw new Error('Object types do not match');\n        }\n\n        return differences;\n    };\n\n    _.hasIndexOrKey = function hasIndexOrKey(collection, indexOrKey) {\n        if (_.isArray(collection)) {\n            return collection.length > parseInt(indexOrKey);\n        } else if (_.isObject(collection)) {\n            return collection.hasOwnProperty(indexOrKey);\n        }\n\n        return false;\n    };\n\n    _.startsWith = function startsWith(value, prefix) {\n        assertIsString(value, 'value');\n        assertIsString(prefix, 'prefix');\n\n        return value.indexOf(prefix) === 0;\n    };\n\n    _.endsWith = function endsWith(value, postfix) {\n        assertIsString(value, 'value');\n        assertIsString(postfix, 'postfix');\n\n        var start = value.length - postfix.length;\n\n        return start >= 0 && value.indexOf(postfix, start) === start;\n    };\n\n    _.sameTypes = function sameTypes(first, second) {\n        if (_.isNullOrUndefined(first) || _.isNullOrUndefined(second)) {\n            return _.isNullOrUndefined(first) && _.isNullOrUndefined(second);\n        }\n\n        if (_.isArray(first) || _.isArray(second)) {\n            return _.isArray(first) && _.isArray(second);\n        }\n\n        return typeof first === typeof second;\n    };\n\n    _.freeze = function freeze(obj) {\n        if ('freeze' in Object) {\n            return Object.freeze(obj);\n        }\n\n        return obj;\n    };\n\n    _.noop = function() {\n        return undefined;\n    };\n\n    _.isObject = function isObject(obj) {\n        if (obj === null) {\n            return false;\n        }\n\n        return typeof obj === 'object';\n    };\n\n    _.isArray = function isArray(array) {\n        if (!_.isObject(array)) {\n            return false;\n        }\n\n        return array.constructor === Array;\n    };\n\n    _.isString = function isString(string) {\n        return typeof string === 'string';\n    };\n\n    _.isNumber = function isNumber(number) {\n        if (isNaN(number)) {\n            return false;\n        }\n\n        return typeof number === 'number';\n    };\n\n    _.isBoolean = function isBoolean(bool) {\n        return typeof bool === 'boolean';\n    };\n\n    _.isFunction = function isFunction(func) {\n        return typeof func === 'function';\n    };\n\n    _.isNullOrUndefined = function isNullOrUndefined(value) {\n        return value === null || _.isUndefined(value);\n    };\n\n    _.isUndefined = function isUndefined(value) {\n        return typeof value === 'undefined';\n    };\n\n    _.getEnumName = function getEnumName(enums, nameOrId) {\n        var enumObject = null;\n\n        var enumArray = _.map(enums, function(value) {\n            return value;\n        });\n\n        if (_.isNumber(nameOrId)) {\n            enumObject = _.find(enumArray, function(current) {\n                return current.id === nameOrId;\n            });\n        } else if (_.isString(nameOrId)) {\n            enumObject = _.find(enumArray, function(current) {\n                return current.name.toLowerCase() === nameOrId.toLowerCase();\n            });\n        }\n\n        if (enumObject) {\n            return enumObject.name;\n        }\n\n        return null;\n    };\n\n    _.toString = function toString(data) {\n        if (_.isString(data)) {\n            return data;\n        }\n\n        if (_.isBoolean(data)) {\n            return data ? 'true' : 'false';\n        }\n\n        if (_.isNumber(data)) {\n            return data.toString();\n        }\n\n        var toStringStr = '';\n\n        if (data) {\n            if (_.isFunction(data.toString)) {\n                toStringStr = data.toString();\n            } else if (_.isObject(data.toString)) {\n                try {\n                    toStringStr = data.toString();\n                } catch (e) {\n                    toStringStr = '[object invalid toString()]';\n                }\n            }\n        }\n\n        if (toStringStr.indexOf('[object') !== 0) {\n            return toStringStr;\n        }\n\n        var cache = [];\n\n        return toStringStr + JSON.stringify(data, function(key, value) {\n            if (_.isObject(value) && !_.isNullOrUndefined(value)) {\n                if (_.includes(cache, value)) {\n                    return '<recursive>';\n                }\n\n                cache.push(value);\n            }\n\n            return key === '' ? value : _.toString(value);\n        });\n    };\n\n    _.pad = function padNumber(value, numberToPad) {\n        assertIsNumber(value, 'value');\n        assertIsNumber(numberToPad, 'numberToPad');\n\n        var valueLength = value.toString().length;\n\n        for (var i = 0; i < numberToPad - valueLength; i++) {\n            value = '0' + value.toString();\n        }\n\n        return value.toString();\n    };\n\n    _.addEventListener = function addEventListener(target, eventName, listener, useCapture) {\n        assertIsObject(target, 'target');\n        assertIsString(eventName, 'eventName');\n        assertIsFunction(listener, 'listener');\n\n        if (target.phenixAddEventListener) {\n            target.phenixAddEventListener.call(target, eventName, listener, !!useCapture);\n        } else if (target.addEventListener) {\n            target.addEventListener(eventName, listener, !!useCapture);\n        } else if (target.attachEvent) {\n            target.attachEvent(\"on\" + eventName, listener);\n        }\n    };\n\n    _.removeEventListener = function removeEventListener(target, eventName, listener, useCapture) {\n        assertIsObject(target, 'target');\n        assertIsString(eventName, 'eventName');\n        assertIsFunction(listener, 'listener');\n\n        if (target.phenixRemoveEventListener) {\n            target.phenixRemoveEventListener.call(target, eventName, listener, !!useCapture);\n        } else if (target.removeEventListener) {\n            target.removeEventListener(eventName, listener, !!useCapture);\n        } else if (target.detachEvent) {\n            target.detachEvent(\"on\" + eventName, listener);\n        }\n    };\n\n    var assertIsArray = function assertIsArray(collection) {\n        if (!_.isArray(collection)) {\n            throw new Error('Input must be an array. Received [' + typeof collection + ']');\n        }\n    };\n\n    var assertIsNumber = function assertIsNumber(number, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isNumber(number)) {\n            throw new Error(name + ' must be a number. Received [' + typeof number + ']');\n        }\n    };\n\n    var assertIsObject = function assertIsObject(collection, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isObject(collection)) {\n            throw new Error('collection type not supported - ' + name + ' must be an array or object. Received [' + typeof collection + ']');\n        }\n    };\n\n    var assertIsFunction = function assertIsFunction(callback, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isFunction(callback)) {\n            throw new Error(name + ' must be a function. Received [' + typeof callback + ']');\n        }\n    };\n\n    var assertIsString = function assertIsString(value, name) {\n        if (!_.isString(name)) {\n            throw new Error('Name must be a string. Received [' + typeof name + ']');\n        }\n\n        if (!_.isString(value)) {\n            throw new Error(name + ' must be a string. Received [' + typeof value + ']');\n        }\n    };\n\n    function buildPathFromString(stringPath) {\n        var properties = stringPath.split('.');\n        var path = [];\n\n        _.forEach(properties, function(prop) {\n            path = path.concat(buildSubPathFromString(prop));\n        });\n\n        return path;\n    }\n\n    function buildSubPathFromString(stringPath) {\n        var possibleSubPath = '';\n        var path = [];\n        var countOfOpeningBrackets = 0;\n\n        for (var i = 0; i < stringPath.length; i++) {\n            if (stringPath[i] === '[') {\n                countOfOpeningBrackets++;\n\n                if (!_.isString(possibleSubPath) || countOfOpeningBrackets > 1) {\n                    return [stringPath];\n                }\n\n                if (possibleSubPath) {\n                    path.push(possibleSubPath);\n                    possibleSubPath = '';\n                }\n            } else if (stringPath[i] === ']') {\n                countOfOpeningBrackets--;\n\n                if (countOfOpeningBrackets !== 0) {\n                    return [stringPath];\n                }\n\n                path.push(possibleSubPath);\n                possibleSubPath = '';\n            } else if (i === stringPath.length - 1) {\n                return [stringPath];\n            } else {\n                possibleSubPath += stringPath[i];\n            }\n        }\n\n        return path;\n    }\n\n    function getNextValue(path, index, currentLocation, value) {\n        if (path.length - 1 === index) {\n            return value;\n        }\n\n        var currentPropOrIndex = path[index];\n        var nextPropOrIndex = path[index + 1];\n\n        if (_.isArray(currentLocation[currentPropOrIndex]) || _.isObject(currentLocation[currentPropOrIndex])) {\n            return currentLocation[currentPropOrIndex];\n        }\n\n        if (!_.isArray(currentLocation[currentPropOrIndex]) && _.isNumber(parseInt(nextPropOrIndex))) {\n            return [];\n        } else if (!_.isObject(currentLocation[currentPropOrIndex]) && _.isString(nextPropOrIndex)) {\n            return {};\n        }\n\n        throw new Error('Unsupported type ' + typeof currentPropOrIndex + ' when setting property or index');\n    }\n\n    function setNextValue(objectToTraverse, propertyOrIndex, value) {\n        if (_.isNumber(parseInt(propertyOrIndex)) && _.isArray(objectToTraverse)) {\n            return objectToTraverse[propertyOrIndex] = value;\n        } else if (_.isString(propertyOrIndex) && _.isObject(objectToTraverse)) {\n            return objectToTraverse[propertyOrIndex] = value;\n        }\n\n        throw new Error('Unsupported type ' + typeof propertyOrIndex + ' when setting property or index');\n    }\n\n    return _;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(LodashLight) {\n    'use strict';\n\n    return LodashLight;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=phenix-web-lodash-light.js.map","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"assert\"] = factory();\n\telse\n\t\troot[\"phenix\"] = root[\"phenix\"] || {}, root[\"phenix\"][\"assert\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(2)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(_) {\n    var Assert = function() {\n\n    };\n\n    Assert.prototype.isObject = function isObject(obj, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isObject(obj)) {\n            throw new Error('\"' + name + '\" must be an object. Received [' + typeof obj + ']');\n        }\n    };\n\n    Assert.prototype.isArray = function isArray(array, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isArray(array)) {\n            throw new Error('\"' + name + '\" must be an array. Received [' + typeof array + ']');\n        }\n    };\n\n    Assert.prototype.isString = function isString(string, name) {\n        if (!_.isString(name)) {\n            throw new Error('\"name\" must be a string. Received [' + typeof name + ']');\n        }\n\n        if (!_.isString(string)) {\n            throw new Error('\"' + name + '\" must be a string. Received [' + typeof string + ']');\n        }\n    };\n\n    Assert.prototype.isBoolean = function isBoolean(bool, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isBoolean(bool)) {\n            throw new Error('\"' + name + '\" must be a boolean. Received [' + typeof bool + ']');\n        }\n    };\n\n    Assert.prototype.isNumber = function isNumber(number, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isNumber(number)) {\n            throw new Error('\"' + name + '\" must be a number. Received [' + typeof number + ']');\n        }\n    };\n\n    Assert.prototype.isFunction = function isFunction(callback, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isFunction(callback)) {\n            throw new Error('\"' + name + '\" must be a function. Received [' + typeof callback + ']');\n        }\n    };\n\n    // TODO (dcy) remove once all dependencies have been updated\n    Assert.prototype.stringNotEmpty = function stringNotEmpty(string, name) {\n        Assert.prototype.isStringNotEmpty(string, name);\n    };\n\n    Assert.prototype.isStringNotEmpty = function stringNotEmpty(string, name) {\n        Assert.prototype.isString('name', name);\n        Assert.prototype.isString(string, name);\n\n        if (string === '') {\n            throw new Error('\"' + name + '\" must not be empty');\n        }\n    };\n\n    Assert.prototype.isInstanceOf = function(object, clazz, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isObject(object)) {\n            throw new Error('\"' + name + '\" must be an instance. Received [' + typeof object + ']');\n        }\n\n        if (!(object instanceof clazz)) {\n            throw new Error('\"' + name + '\" must be a valid instance of class ' + _.get(clazz, ['name'], 'undefined'));\n        }\n    };\n\n    Assert.prototype.isNotUndefined = function(value, name) {\n        Assert.prototype.isString('name', name);\n\n        if (_.isUndefined(value)) {\n            throw new Error('\"' + name + '\" must not be undefined');\n        }\n    };\n\n    Assert.prototype.isValidType = function(type, types, name) {\n        Assert.prototype.isStringNotEmpty(name, 'name');\n\n        var typeName = _.getEnumName(types, type);\n\n        if (_.isNullOrUndefined(typeName)) {\n            throw new Error('\"' + name + '\" must be a valid type. Unable to locate type [' + type + ']');\n        }\n\n        return typeName;\n    };\n\n    Assert.prototype.isArrayOfString = function(value, name) {\n        Assert.prototype.isString(name, 'name');\n        Assert.prototype.isArray(value, name);\n\n        _.forEach(value, function(val, key) {\n            Assert.prototype.isString(val, name + '[' + key + ']');\n        });\n    };\n\n    return new Assert();\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n    'use strict';\n\n    var _ = function() {\n\n    };\n\n    _.clone = function clone(value) {\n        if (_.isArray(value)) {\n            return value.slice();\n        }\n\n        if (_.isObject(value)) {\n            return _.assign({}, value);\n        }\n\n        return value;\n    };\n\n    _.get = function get(objectToTraverse, path, defaultValue) {\n        if (_.isNullOrUndefined(objectToTraverse)) {\n            return defaultValue;\n        }\n\n        assertIsObject(objectToTraverse, 'objectToTraverse');\n\n        var properties = path;\n\n        if (_.isString(properties)) {\n            properties = buildPathFromString(path);\n        } else if (!_.isArray(properties)) {\n            throw new Error('Unsupported path type ' + typeof path);\n        }\n\n        var valueAtPath = _.reduce(properties, function(valueAtPath, prop) {\n            if (_.isObject(valueAtPath) || _.isArray(valueAtPath)) {\n                return valueAtPath[prop];\n            }\n\n            return;\n        }, objectToTraverse);\n\n        return _.isUndefined(valueAtPath) ? defaultValue : valueAtPath;\n    };\n\n    _.set = function get(objectToTraverse, path, value) {\n        if (!_.isObject(objectToTraverse)) {\n            return objectToTraverse;\n        }\n\n        assertIsObject(objectToTraverse, 'objectToTraverse');\n\n        var currentLocation = objectToTraverse;\n        var properties = path;\n\n        if (_.isString(properties)) {\n            properties = buildPathFromString(path);\n        } else if (!_.isArray(properties)) {\n            throw new Error('Unsupported path type ' + typeof path);\n        }\n\n        _.forEach(properties, function(prop, index) {\n            setNextValue(currentLocation, prop, getNextValue(properties, index, currentLocation, value));\n\n            currentLocation = currentLocation[prop];\n        });\n\n        return objectToTraverse;\n    };\n\n    _.bind = function bind(callback, that) {\n        var argsAfterContext = Array.prototype.slice.call(arguments, 2);\n\n        return function boundFunction() {\n            if (!_.isFunction(callback)) {\n                throw new TypeError('_.bind - callback must be a function. Received [' + typeof callback + ']');\n            }\n\n            var combinedArguments = argsAfterContext.concat(Array.prototype.slice.call(arguments));\n\n            return callback.apply(that, combinedArguments);\n        };\n    };\n\n    _.now = function now() {\n        return new Date().getTime();\n    };\n\n    _.utc = function utc(date) {\n        if (_.isNumber(date)) {\n            return date;\n        } else if (!date) {\n            return NaN;\n        }\n\n        return Math.floor(date);\n    };\n\n    _.isoString = function isoString() {\n        var now = new Date();\n\n        if (now.toISOString) {\n            return now.toISOString();\n        }\n\n        return now.getUTCFullYear() +\n            '-' + _.pad(now.getUTCMonth() + 1, 2) +\n            '-' + _.pad(now.getUTCDate(), 2) +\n            'T' + _.pad(now.getUTCHours(), 2) +\n            ':' + _.pad(now.getUTCMinutes(), 2) +\n            ':' + _.pad(now.getUTCSeconds(), 2) +\n            '.' + (now.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n            'Z';\n    };\n\n    _.map = function map(collection, callback) {\n        assertIsObject(collection, 'collection');\n\n        var newArray = [];\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, function mapCollection(item, index) {\n                if (_.isString(callback) && _.isObject(item)) {\n                    newArray.push(item[callback]);\n                } else if (_.isFunction(callback)) {\n                    newArray.push(callback(item, index));\n                }\n            });\n        } else {\n            _.forOwn(collection, function mapCollection(value, key) {\n                if (_.isFunction(callback)) {\n                    newArray.push(callback(value, key));\n                }\n            });\n        }\n\n        return newArray;\n    };\n\n    _.values = function(collection) {\n        if (!_.isObject(collection) || _.isArray(collection)) {\n            throw new Error('_.values argument, Collection, must be an object. Received [' + typeof collection + ']');\n        }\n\n        return _.map(collection, function(value) {\n            return value;\n        });\n    };\n\n    _.keys = function(collection) {\n        if (!_.isObject(collection) || _.isArray(collection)) {\n            throw new Error('_.keys argument, Collection, must be an object. Received [' + typeof collection + ']');\n        }\n\n        return _.map(collection, function(value, key) {\n            return key;\n        });\n    };\n\n    _.forEach = function forEach(collection, callback) {\n        if (!_.isFunction(callback)) {\n            throw new Error('_.forEach argument, Callback, must be a function. Received [' + typeof callback + ']');\n        }\n\n        assertIsArray(collection, 'collection');\n\n        for (var i = 0; i < collection.length; i++) {\n            var callbackResponse = callback(collection[i], i);\n\n            if (callbackResponse === false) {\n                return;\n            }\n        }\n    };\n\n    _.forOwn = function forOwn(objectWithProperties, callback) {\n        if (!_.isFunction(callback)) {\n            throw new Error('Callback must be a function. Received [' + typeof callback + ']');\n        }\n\n        assertIsObject(objectWithProperties, 'objectWithProperties');\n\n        var keys = Object.keys(objectWithProperties);\n\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n\n            if (objectWithProperties.hasOwnProperty(key) || Object.prototype.hasOwnProperty.call(objectWithProperties, key)) {\n                var callbackResponse = callback(objectWithProperties[key], key);\n\n                if (callbackResponse === false) {\n                    return;\n                }\n            }\n        }\n    };\n\n    _.argumentsToArray = function(args) {\n        if (!_.isObject(args) || !args.length) {\n            throw new Error('Collection must be arguments. Received [' + typeof args + ']');\n        }\n\n        var collection = [];\n\n        for (var i = 0; i < args.length; i++) {\n            collection.push(args[i]);\n        }\n\n        return collection;\n    };\n\n    _.assign = function assign(target) {\n        if (_.isNullOrUndefined(target)) {\n            target = {};\n        }\n\n        assertIsObject(target, 'target');\n\n        var sources = _.argumentsToArray(arguments);\n\n        sources.shift();\n\n        _.forEach(sources, function(source, index) {\n            if (_.isNullOrUndefined(source)) {\n                return;\n            }\n\n            assertIsObject(source, '_.assign(sources[' + index + '])');\n\n            _.forOwn(source, function(value, key) {\n                target[key] = value;\n            });\n        });\n\n        return target;\n    };\n\n    _.includes = function includes(collection, value) {\n        if (_.isString(collection)) {\n            assertIsString(value, 'Includes value and search parameter');\n\n            return collection.indexOf(value) > -1;\n        }\n\n        if (_.isUndefined(collection) || _.isUndefined(value)) {\n            return false;\n        }\n\n        assertIsObject(collection, 'collection');\n\n        var hasValue = false;\n\n        var checkCollection = function checkCollection(currentValue) {\n            if (currentValue === value) {\n                hasValue = true;\n\n                return false;\n            }\n        };\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, checkCollection);\n        } else {\n            _.forOwn(collection, checkCollection);\n        }\n\n        return hasValue;\n    };\n\n    _.reduce = function reduce(collection, callback, initialValue) {\n        assertIsObject(collection, 'collection');\n\n        var result = initialValue === _.noop() ? null : initialValue;\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, function(item, index) {\n                result = callback(result, item, index);\n            });\n        } else {\n            _.forOwn(collection, function(value, key) {\n                result = callback(result, value, key);\n            });\n        }\n\n        return result;\n    };\n\n    _.sample = function sample(collection) {\n        assertIsArray(collection, 'collection');\n\n        return collection[Math.floor(Math.random() * collection.length)];\n    };\n\n    _.uniqueId = function() {\n        return (_.now() * Math.random()).toString();\n    };\n\n    _.find = function find(collection, callback, initialIndex) {\n        assertIsArray(collection, 'collection');\n\n        var item = undefined;\n\n        _.forEach(collection, function findInCollection(value, index) {\n            if (callback(value) && index >= (initialIndex || 0)) {\n                item = value;\n\n                return false;\n            }\n        });\n\n        return item;\n    };\n\n    _.findIndex = function find(collection, callback, initialIndex) {\n        assertIsArray(collection, 'collection');\n\n        var itemIndex = -1;\n\n        _.forEach(collection, function findInCollection(value, index) {\n            if (callback(value, index) && index >= (initialIndex || 0)) {\n                itemIndex = index;\n\n                return false;\n            }\n        });\n\n        return itemIndex;\n    };\n\n    _.filter = function filter(collection, callback) {\n        assertIsArray(collection, 'collection');\n\n        var newCollection = [];\n\n        _.forEach(collection, function findInCollection(value) {\n            if (callback(value)) {\n                newCollection.push(value);\n            }\n        });\n\n        return newCollection;\n    };\n\n    _.remove = function remove(collection, callback) {\n        assertIsArray(collection, 'collection');\n\n        var filterCallback = function filterCallback(value) {\n            return !callback(value);\n        };\n\n        return _.filter(collection, filterCallback);\n    };\n\n    _.take = function take(collection, size) {\n        assertIsArray(collection, 'collection');\n\n        return collection.slice(0, size);\n    };\n\n    _.hasDifferences = function hasDifferences(collectionA, collectionB, deep) {\n        return _.findDifferences(collectionA, collectionB, deep).length > 0;\n    };\n\n    _.findDifferences = function findDifferences(collectionA, collectionB, deep) {\n        var differences = [];\n        var visitedKeys = {};\n\n        function getDifferences(value, indexOrKey) {\n            visitedKeys[indexOrKey] = 1;\n\n            if ((_.isObject(value) || _.isArray(value)) && deep) {\n                if (!_.hasIndexOrKey(collectionB, indexOrKey)) {\n                    differences.push(indexOrKey);\n                } else if (!_.sameTypes(collectionA[indexOrKey], collectionB[indexOrKey])) {\n                    differences.push(indexOrKey);\n                } else if (_.hasDifferences(collectionA[indexOrKey], collectionB[indexOrKey], deep)) {\n                    differences.push(indexOrKey);\n                }\n            } else if (collectionA[indexOrKey] !== collectionB[indexOrKey]) {\n                differences.push(indexOrKey);\n            }\n        }\n\n        if (_.isArray(collectionA) && _.isArray(collectionB)) {\n            if (collectionA.length > collectionB.length) {\n                _.forEach(collectionA, getDifferences);\n            } else {\n                _.forEach(collectionB, getDifferences);\n            }\n        } else if (_.isObject(collectionA) && _.isObject(collectionB) && !_.isArray(collectionA) && !_.isArray(collectionB)) {\n            _.forOwn(collectionA, getDifferences);\n\n            _.forOwn(collectionB, function(value, key) {\n                if (!visitedKeys.hasOwnProperty(key)) {\n                    differences.push(key);\n                }\n            });\n        } else {\n            throw new Error('Object types do not match');\n        }\n\n        return differences;\n    };\n\n    _.hasIndexOrKey = function hasIndexOrKey(collection, indexOrKey) {\n        if (_.isArray(collection)) {\n            return collection.length > parseInt(indexOrKey);\n        } else if (_.isObject(collection)) {\n            return collection.hasOwnProperty(indexOrKey);\n        }\n\n        return false;\n    };\n\n    _.startsWith = function startsWith(value, prefix) {\n        assertIsString(value, 'value');\n        assertIsString(prefix, 'prefix');\n\n        return value.indexOf(prefix) === 0;\n    };\n\n    _.endsWith = function endsWith(value, postfix) {\n        assertIsString(value, 'value');\n        assertIsString(postfix, 'postfix');\n\n        var start = value.length - postfix.length;\n\n        return value.indexOf(postfix, start) === start;\n    };\n\n    _.sameTypes = function sameTypes(first, second) {\n        if (_.isNullOrUndefined(first) || _.isNullOrUndefined(second)) {\n            return _.isNullOrUndefined(first) && _.isNullOrUndefined(second);\n        }\n\n        if (_.isArray(first) || _.isArray(second)) {\n            return _.isArray(first) && _.isArray(second);\n        }\n\n        return typeof first === typeof second;\n    };\n\n    _.freeze = function freeze(obj) {\n        if ('freeze' in Object) {\n            return Object.freeze(obj);\n        }\n\n        return obj;\n    };\n\n    _.noop = function() {\n        return undefined;\n    };\n\n    _.isObject = function isObject(obj) {\n        if (obj === null) {\n            return false;\n        }\n\n        return typeof obj === 'object';\n    };\n\n    _.isArray = function isArray(array) {\n        if (!_.isObject(array)) {\n            return false;\n        }\n\n        return array.constructor === Array;\n    };\n\n    _.isString = function isString(string) {\n        return typeof string === 'string';\n    };\n\n    _.isNumber = function isNumber(number) {\n        if (isNaN(number)) {\n            return false;\n        }\n\n        return typeof number === 'number';\n    };\n\n    _.isBoolean = function isBoolean(bool) {\n        return typeof bool === 'boolean';\n    };\n\n    _.isFunction = function isFunction(func) {\n        return typeof func === 'function';\n    };\n\n    _.isNullOrUndefined = function isNullOrUndefined(value) {\n        return value === null || _.isUndefined(value);\n    };\n\n    _.isUndefined = function isUndefined(value) {\n        return typeof value === 'undefined';\n    };\n\n    _.getEnumName = function getEnumName(enums, nameOrId) {\n        var enumObject = null;\n\n        var enumArray = _.map(enums, function(value) {\n            return value;\n        });\n\n        if (_.isNumber(nameOrId)) {\n            enumObject = _.find(enumArray, function(current) {\n                return current.id === nameOrId;\n            });\n        } else if (_.isString(nameOrId)) {\n            enumObject = _.find(enumArray, function(current) {\n                return current.name.toLowerCase() === nameOrId.toLowerCase();\n            });\n        }\n\n        if (enumObject) {\n            return enumObject.name;\n        }\n\n        return null;\n    };\n\n    _.toString = function toString(data) {\n        if (_.isString(data)) {\n            return data;\n        }\n\n        if (_.isBoolean(data)) {\n            return data ? 'true' : 'false';\n        }\n\n        if (_.isNumber(data)) {\n            return data.toString();\n        }\n\n        var toStringStr = '';\n\n        if (data) {\n            if (_.isFunction(data.toString)) {\n                toStringStr = data.toString();\n            } else if (_.isObject(data.toString)) {\n                try {\n                    toStringStr = data.toString();\n                } catch (e) {\n                    toStringStr = '[object invalid toString()]';\n                }\n            }\n        }\n\n        if (toStringStr.indexOf('[object') !== 0) {\n            return toStringStr;\n        }\n\n        var cache = [];\n\n        return toStringStr + JSON.stringify(data, function(key, value) {\n            if (_.isObject(value) && !_.isNullOrUndefined(value)) {\n                if (_.includes(cache, value)) {\n                    return '<recursive>';\n                }\n\n                cache.push(value);\n            }\n\n            return key === '' ? value : _.toString(value);\n        });\n    };\n\n    _.pad = function padNumber(value, numberToPad) {\n        assertIsNumber(value, 'value');\n        assertIsNumber(numberToPad, 'numberToPad');\n\n        var valueLength = value.toString().length;\n\n        for (var i = 0; i < numberToPad - valueLength; i++) {\n            value = '0' + value.toString();\n        }\n\n        return value.toString();\n    };\n\n    _.addEventListener = function addEventListener(target, eventName, listener, useCapture) {\n        assertIsObject(target, 'target');\n        assertIsString(eventName, 'eventName');\n        assertIsFunction(listener, 'listener');\n\n        if (target.phenixAddEventListener) {\n            target.phenixAddEventListener.call(target, eventName, listener, !!useCapture);\n        } else if (target.addEventListener) {\n            target.addEventListener(eventName, listener, !!useCapture);\n        } else if (target.attachEvent) {\n            target.attachEvent(\"on\" + eventName, listener);\n        }\n    };\n\n    _.removeEventListener = function removeEventListener(target, eventName, listener, useCapture) {\n        assertIsObject(target, 'target');\n        assertIsString(eventName, 'eventName');\n        assertIsFunction(listener, 'listener');\n\n        if (target.phenixRemoveEventListener) {\n            target.phenixRemoveEventListener.call(target, eventName, listener, !!useCapture);\n        } else if (target.removeEventListener) {\n            target.removeEventListener(eventName, listener, !!useCapture);\n        } else if (target.detachEvent) {\n            target.detachEvent(\"on\" + eventName, listener);\n        }\n    };\n\n    var assertIsArray = function assertIsArray(collection) {\n        if (!_.isArray(collection)) {\n            throw new Error('Input must be an array. Received [' + typeof collection + ']');\n        }\n    };\n\n    var assertIsNumber = function assertIsNumber(number, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isNumber(number)) {\n            throw new Error(name + ' must be a number. Received [' + typeof number + ']');\n        }\n    };\n\n    var assertIsObject = function assertIsObject(collection, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isObject(collection)) {\n            throw new Error('collection type not supported - ' + name + ' must be an array or object. Received [' + typeof collection + ']');\n        }\n    };\n\n    var assertIsFunction = function assertIsFunction(callback, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isFunction(callback)) {\n            throw new Error(name + ' must be a function. Received [' + typeof callback + ']');\n        }\n    };\n\n    var assertIsString = function assertIsString(value, name) {\n        if (!_.isString(name)) {\n            throw new Error('Name must be a string. Received [' + typeof name + ']');\n        }\n\n        if (!_.isString(value)) {\n            throw new Error(name + ' must be a string. Received [' + typeof value + ']');\n        }\n    };\n\n    function buildPathFromString(stringPath) {\n        var properties = stringPath.split('.');\n        var path = [];\n\n        _.forEach(properties, function(prop) {\n            path = path.concat(buildSubPathFromString(prop));\n        });\n\n        return path;\n    }\n\n    function buildSubPathFromString(stringPath) {\n        var possibleSubPath = '';\n        var path = [];\n        var countOfOpeningBrackets = 0;\n\n        for (var i = 0; i < stringPath.length; i++) {\n            if (stringPath[i] === '[') {\n                countOfOpeningBrackets++;\n\n                if (!_.isString(possibleSubPath) || countOfOpeningBrackets > 1) {\n                    return [stringPath];\n                }\n\n                if (possibleSubPath) {\n                    path.push(possibleSubPath);\n                    possibleSubPath = '';\n                }\n            } else if (stringPath[i] === ']') {\n                countOfOpeningBrackets--;\n\n                if (countOfOpeningBrackets !== 0) {\n                    return [stringPath];\n                }\n\n                path.push(possibleSubPath);\n                possibleSubPath = '';\n            } else if (i === stringPath.length - 1) {\n                return [stringPath];\n            } else {\n                possibleSubPath += stringPath[i];\n            }\n        }\n\n        return path;\n    }\n\n    function getNextValue(path, index, currentLocation, value) {\n        if (path.length - 1 === index) {\n            return value;\n        }\n\n        var currentPropOrIndex = path[index];\n        var nextPropOrIndex = path[index + 1];\n\n        if (_.isArray(currentLocation[currentPropOrIndex]) || _.isObject(currentLocation[currentPropOrIndex])) {\n            return currentLocation[currentPropOrIndex];\n        }\n\n        if (!_.isArray(currentLocation[currentPropOrIndex]) && _.isNumber(parseInt(nextPropOrIndex))) {\n            return [];\n        } else if (!_.isObject(currentLocation[currentPropOrIndex]) && _.isString(nextPropOrIndex)) {\n            return {};\n        }\n\n        throw new Error('Unsupported type ' + typeof currentPropOrIndex + ' when setting property or index');\n    }\n\n    function setNextValue(objectToTraverse, propertyOrIndex, value) {\n        if (_.isNumber(parseInt(propertyOrIndex)) && _.isArray(objectToTraverse)) {\n            return objectToTraverse[propertyOrIndex] = value;\n        } else if (_.isString(propertyOrIndex) && _.isObject(objectToTraverse)) {\n            return objectToTraverse[propertyOrIndex] = value;\n        }\n\n        throw new Error('Unsupported type ' + typeof propertyOrIndex + ' when setting property or index');\n    }\n\n    return _;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(1)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(LodashLight) {\n    'use strict';\n\n    return LodashLight;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(assert) {\n    return assert;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=phenix-web-assert.js.map","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"disposable\"] = factory();\n\telse\n\t\troot[\"phenix\"] = root[\"phenix\"] || {}, root[\"phenix\"][\"disposable\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(5)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(LodashLight) {\n    'use strict';\n\n    return LodashLight;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0),\n    __webpack_require__(4)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(_, assert) {\n    'use strict';\n\n    /**\n     * Create a new disposable object.\n     *\n     * @param cleanup The callback to perform whatever cleanup is required when this object is disposed.\n     * @constructor\n     */\n    function Disposable(cleanup) {\n        assert.isFunction(cleanup, 'cleanup');\n\n        this._cleanup = cleanup;\n    }\n\n    Disposable.prototype.dispose = function() {\n        return this._cleanup.call();\n    };\n\n    Disposable.prototype.toString = function() {\n        return _.toString(this);\n    };\n\n    return Disposable;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(_) {\n    'use strict';\n\n    function DisposableList() {\n        this._list = [];\n    }\n\n    DisposableList.prototype.add = function(disposable) {\n        if (!disposable || !_.isFunction(disposable.dispose)) {\n            throw new Error('\"disposable\" must be a disposable or implement dispose');\n        }\n\n        this._list.push(disposable);\n    };\n\n    DisposableList.prototype.dispose = function() {\n        var results = [];\n\n        _.forEach(this._list, function(disposable) {\n            results.push(disposable.dispose());\n        });\n\n        this._list = [];\n\n        return results;\n    };\n\n    DisposableList.prototype.toString = function() {\n        return _.toString(this);\n    };\n\n    return DisposableList;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(_) {\n    var Assert = function() {\n\n    };\n\n    Assert.prototype.isObject = function isObject(obj, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isObject(obj)) {\n            throw new Error('\"' + name + '\" must be an object. Received [' + typeof obj + ']');\n        }\n    };\n\n    Assert.prototype.isArray = function isArray(array, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isArray(array)) {\n            throw new Error('\"' + name + '\" must be an array. Received [' + typeof array + ']');\n        }\n    };\n\n    Assert.prototype.isString = function isString(string, name) {\n        if (!_.isString(name)) {\n            throw new Error('\"name\" must be a string. Received [' + typeof name + ']');\n        }\n\n        if (!_.isString(string)) {\n            throw new Error('\"' + name + '\" must be a string. Received [' + typeof string + ']');\n        }\n    };\n\n    Assert.prototype.isBoolean = function isBoolean(bool, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isBoolean(bool)) {\n            throw new Error('\"' + name + '\" must be a boolean. Received [' + typeof bool + ']');\n        }\n    };\n\n    Assert.prototype.isNumber = function isNumber(number, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isNumber(number)) {\n            throw new Error('\"' + name + '\" must be a number. Received [' + typeof number + ']');\n        }\n    };\n\n    Assert.prototype.isFunction = function isFunction(callback, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isFunction(callback)) {\n            throw new Error('\"' + name + '\" must be a function. Received [' + typeof callback + ']');\n        }\n    };\n\n    // TODO (dcy) remove once all dependencies have been updated\n    Assert.prototype.stringNotEmpty = function stringNotEmpty(string, name) {\n        Assert.prototype.isStringNotEmpty(string, name);\n    };\n\n    Assert.prototype.isStringNotEmpty = function stringNotEmpty(string, name) {\n        Assert.prototype.isString('name', name);\n        Assert.prototype.isString(string, name);\n\n        if (string === '') {\n            throw new Error('\"' + name + '\" must not be empty');\n        }\n    };\n\n    Assert.prototype.isInstanceOf = function(object, clazz, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isObject(object)) {\n            throw new Error('\"' + name + '\" must be an instance. Received [' + typeof object + ']');\n        }\n\n        if (!(object instanceof clazz)) {\n            throw new Error('\"' + name + '\" must be a valid instance of class ' + _.get(clazz, ['name'], 'undefined'));\n        }\n    };\n\n    Assert.prototype.isNotUndefined = function(value, name) {\n        Assert.prototype.isString('name', name);\n\n        if (_.isUndefined(value)) {\n            throw new Error('\"' + name + '\" must not be undefined');\n        }\n    };\n\n    Assert.prototype.isValidType = function(type, types, name) {\n        Assert.prototype.isStringNotEmpty(name, 'name');\n\n        var typeName = _.getEnumName(types, type);\n\n        if (_.isNullOrUndefined(typeName)) {\n            throw new Error('\"' + name + '\" must be a valid type. Unable to locate type [' + type + ']');\n        }\n\n        return typeName;\n    };\n\n    Assert.prototype.isArrayOfString = function(value, name) {\n        Assert.prototype.isString(name, 'name');\n        Assert.prototype.isArray(value, name);\n\n        _.forEach(value, function(val, key) {\n            Assert.prototype.isString(val, name + '[' + key + ']');\n        });\n    };\n\n    return new Assert();\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(3)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(assert) {\n    return assert;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n    'use strict';\n\n    var _ = function() {\n\n    };\n\n    _.clone = function clone(value) {\n        if (_.isArray(value)) {\n            return value.slice();\n        }\n\n        if (_.isObject(value)) {\n            return _.assign({}, value);\n        }\n\n        return value;\n    };\n\n    _.get = function get(objectToTraverse, path, defaultValue) {\n        if (_.isNullOrUndefined(objectToTraverse)) {\n            return defaultValue;\n        }\n\n        assertIsObject(objectToTraverse, 'objectToTraverse');\n\n        var properties = path;\n\n        if (_.isString(properties)) {\n            properties = buildPathFromString(path);\n        } else if (!_.isArray(properties)) {\n            throw new Error('Unsupported path type ' + typeof path);\n        }\n\n        var valueAtPath = _.reduce(properties, function(valueAtPath, prop) {\n            if (_.isObject(valueAtPath) || _.isArray(valueAtPath)) {\n                return valueAtPath[prop];\n            }\n\n            return;\n        }, objectToTraverse);\n\n        return _.isUndefined(valueAtPath) ? defaultValue : valueAtPath;\n    };\n\n    _.set = function get(objectToTraverse, path, value) {\n        if (!_.isObject(objectToTraverse)) {\n            return objectToTraverse;\n        }\n\n        assertIsObject(objectToTraverse, 'objectToTraverse');\n\n        var currentLocation = objectToTraverse;\n        var properties = path;\n\n        if (_.isString(properties)) {\n            properties = buildPathFromString(path);\n        } else if (!_.isArray(properties)) {\n            throw new Error('Unsupported path type ' + typeof path);\n        }\n\n        _.forEach(properties, function(prop, index) {\n            setNextValue(currentLocation, prop, getNextValue(properties, index, currentLocation, value));\n\n            currentLocation = currentLocation[prop];\n        });\n\n        return objectToTraverse;\n    };\n\n    _.bind = function bind(callback, that) {\n        var argsAfterContext = Array.prototype.slice.call(arguments, 2);\n\n        return function boundFunction() {\n            if (!_.isFunction(callback)) {\n                throw new TypeError('_.bind - callback must be a function. Received [' + typeof callback + ']');\n            }\n\n            var combinedArguments = argsAfterContext.concat(Array.prototype.slice.call(arguments));\n\n            return callback.apply(that, combinedArguments);\n        };\n    };\n\n    _.now = function now() {\n        return new Date().getTime();\n    };\n\n    _.utc = function utc(date) {\n        if (_.isNumber(date)) {\n            return date;\n        } else if (!date) {\n            return NaN;\n        }\n\n        return Math.floor(date);\n    };\n\n    _.isoString = function isoString() {\n        var now = new Date();\n\n        if (now.toISOString) {\n            return now.toISOString();\n        }\n\n        return now.getUTCFullYear() +\n            '-' + _.pad(now.getUTCMonth() + 1, 2) +\n            '-' + _.pad(now.getUTCDate(), 2) +\n            'T' + _.pad(now.getUTCHours(), 2) +\n            ':' + _.pad(now.getUTCMinutes(), 2) +\n            ':' + _.pad(now.getUTCSeconds(), 2) +\n            '.' + (now.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n            'Z';\n    };\n\n    _.map = function map(collection, callback) {\n        assertIsObject(collection, 'collection');\n\n        var newArray = [];\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, function mapCollection(item, index) {\n                if (_.isString(callback) && _.isObject(item)) {\n                    newArray.push(item[callback]);\n                } else if (_.isFunction(callback)) {\n                    newArray.push(callback(item, index));\n                }\n            });\n        } else {\n            _.forOwn(collection, function mapCollection(value, key) {\n                if (_.isFunction(callback)) {\n                    newArray.push(callback(value, key));\n                }\n            });\n        }\n\n        return newArray;\n    };\n\n    _.values = function(collection) {\n        if (!_.isObject(collection) || _.isArray(collection)) {\n            throw new Error('_.values argument, Collection, must be an object. Received [' + typeof collection + ']');\n        }\n\n        return _.map(collection, function(value) {\n            return value;\n        });\n    };\n\n    _.keys = function(collection) {\n        if (!_.isObject(collection) || _.isArray(collection)) {\n            throw new Error('_.keys argument, Collection, must be an object. Received [' + typeof collection + ']');\n        }\n\n        return _.map(collection, function(value, key) {\n            return key;\n        });\n    };\n\n    _.forEach = function forEach(collection, callback) {\n        if (!_.isFunction(callback)) {\n            throw new Error('_.forEach argument, Callback, must be a function. Received [' + typeof callback + ']');\n        }\n\n        assertIsArray(collection, 'collection');\n\n        for (var i = 0; i < collection.length; i++) {\n            var callbackResponse = callback(collection[i], i);\n\n            if (callbackResponse === false) {\n                return;\n            }\n        }\n    };\n\n    _.forOwn = function forOwn(objectWithProperties, callback) {\n        if (!_.isFunction(callback)) {\n            throw new Error('Callback must be a function. Received [' + typeof callback + ']');\n        }\n\n        assertIsObject(objectWithProperties, 'objectWithProperties');\n\n        var keys = Object.keys(objectWithProperties);\n\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n\n            if (objectWithProperties.hasOwnProperty(key) || Object.prototype.hasOwnProperty.call(objectWithProperties, key)) {\n                var callbackResponse = callback(objectWithProperties[key], key);\n\n                if (callbackResponse === false) {\n                    return;\n                }\n            }\n        }\n    };\n\n    _.argumentsToArray = function(args) {\n        if (!_.isObject(args) || !args.length) {\n            throw new Error('Collection must be arguments. Received [' + typeof args + ']');\n        }\n\n        var collection = [];\n\n        for (var i = 0; i < args.length; i++) {\n            collection.push(args[i]);\n        }\n\n        return collection;\n    };\n\n    _.assign = function assign(target) {\n        if (_.isNullOrUndefined(target)) {\n            target = {};\n        }\n\n        assertIsObject(target, 'target');\n\n        var sources = _.argumentsToArray(arguments);\n\n        sources.shift();\n\n        _.forEach(sources, function(source, index) {\n            if (_.isNullOrUndefined(source)) {\n                return;\n            }\n\n            assertIsObject(source, '_.assign(sources[' + index + '])');\n\n            _.forOwn(source, function(value, key) {\n                target[key] = value;\n            });\n        });\n\n        return target;\n    };\n\n    _.includes = function includes(collection, value) {\n        if (_.isString(collection)) {\n            assertIsString(value, 'Includes value and search parameter');\n\n            return collection.indexOf(value) > -1;\n        }\n\n        if (_.isUndefined(collection) || _.isUndefined(value)) {\n            return false;\n        }\n\n        assertIsObject(collection, 'collection');\n\n        var hasValue = false;\n\n        var checkCollection = function checkCollection(currentValue) {\n            if (currentValue === value) {\n                hasValue = true;\n\n                return false;\n            }\n        };\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, checkCollection);\n        } else {\n            _.forOwn(collection, checkCollection);\n        }\n\n        return hasValue;\n    };\n\n    _.reduce = function reduce(collection, callback, initialValue) {\n        assertIsObject(collection, 'collection');\n\n        var result = initialValue === _.noop() ? null : initialValue;\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, function(item, index) {\n                result = callback(result, item, index);\n            });\n        } else {\n            _.forOwn(collection, function(value, key) {\n                result = callback(result, value, key);\n            });\n        }\n\n        return result;\n    };\n\n    _.sample = function sample(collection) {\n        assertIsArray(collection, 'collection');\n\n        return collection[Math.floor(Math.random() * collection.length)];\n    };\n\n    _.uniqueId = function() {\n        return (_.now() * Math.random()).toString();\n    };\n\n    _.find = function find(collection, callback, initialIndex) {\n        assertIsArray(collection, 'collection');\n\n        var item = undefined;\n\n        _.forEach(collection, function findInCollection(value, index) {\n            if (callback(value) && index >= (initialIndex || 0)) {\n                item = value;\n\n                return false;\n            }\n        });\n\n        return item;\n    };\n\n    _.findIndex = function find(collection, callback, initialIndex) {\n        assertIsArray(collection, 'collection');\n\n        var itemIndex = -1;\n\n        _.forEach(collection, function findInCollection(value, index) {\n            if (callback(value, index) && index >= (initialIndex || 0)) {\n                itemIndex = index;\n\n                return false;\n            }\n        });\n\n        return itemIndex;\n    };\n\n    _.filter = function filter(collection, callback) {\n        assertIsArray(collection, 'collection');\n\n        var newCollection = [];\n\n        _.forEach(collection, function findInCollection(value) {\n            if (callback(value)) {\n                newCollection.push(value);\n            }\n        });\n\n        return newCollection;\n    };\n\n    _.remove = function remove(collection, callback) {\n        assertIsArray(collection, 'collection');\n\n        var filterCallback = function filterCallback(value) {\n            return !callback(value);\n        };\n\n        return _.filter(collection, filterCallback);\n    };\n\n    _.take = function take(collection, size) {\n        assertIsArray(collection, 'collection');\n\n        return collection.slice(0, size);\n    };\n\n    _.hasDifferences = function hasDifferences(collectionA, collectionB, deep) {\n        return _.findDifferences(collectionA, collectionB, deep).length > 0;\n    };\n\n    _.findDifferences = function findDifferences(collectionA, collectionB, deep) {\n        var differences = [];\n        var visitedKeys = {};\n\n        function getDifferences(value, indexOrKey) {\n            visitedKeys[indexOrKey] = 1;\n\n            if ((_.isObject(value) || _.isArray(value)) && deep) {\n                if (!_.hasIndexOrKey(collectionB, indexOrKey)) {\n                    differences.push(indexOrKey);\n                } else if (!_.sameTypes(collectionA[indexOrKey], collectionB[indexOrKey])) {\n                    differences.push(indexOrKey);\n                } else if (_.hasDifferences(collectionA[indexOrKey], collectionB[indexOrKey], deep)) {\n                    differences.push(indexOrKey);\n                }\n            } else if (collectionA[indexOrKey] !== collectionB[indexOrKey]) {\n                differences.push(indexOrKey);\n            }\n        }\n\n        if (_.isArray(collectionA) && _.isArray(collectionB)) {\n            if (collectionA.length > collectionB.length) {\n                _.forEach(collectionA, getDifferences);\n            } else {\n                _.forEach(collectionB, getDifferences);\n            }\n        } else if (_.isObject(collectionA) && _.isObject(collectionB) && !_.isArray(collectionA) && !_.isArray(collectionB)) {\n            _.forOwn(collectionA, getDifferences);\n\n            _.forOwn(collectionB, function(value, key) {\n                if (!visitedKeys.hasOwnProperty(key)) {\n                    differences.push(key);\n                }\n            });\n        } else {\n            throw new Error('Object types do not match');\n        }\n\n        return differences;\n    };\n\n    _.hasIndexOrKey = function hasIndexOrKey(collection, indexOrKey) {\n        if (_.isArray(collection)) {\n            return collection.length > parseInt(indexOrKey);\n        } else if (_.isObject(collection)) {\n            return collection.hasOwnProperty(indexOrKey);\n        }\n\n        return false;\n    };\n\n    _.startsWith = function startsWith(value, prefix) {\n        assertIsString(value, 'value');\n        assertIsString(prefix, 'prefix');\n\n        return value.indexOf(prefix) === 0;\n    };\n\n    _.endsWith = function endsWith(value, postfix) {\n        assertIsString(value, 'value');\n        assertIsString(postfix, 'postfix');\n\n        var start = value.length - postfix.length;\n\n        return value.indexOf(postfix, start) === start;\n    };\n\n    _.sameTypes = function sameTypes(first, second) {\n        if (_.isNullOrUndefined(first) || _.isNullOrUndefined(second)) {\n            return _.isNullOrUndefined(first) && _.isNullOrUndefined(second);\n        }\n\n        if (_.isArray(first) || _.isArray(second)) {\n            return _.isArray(first) && _.isArray(second);\n        }\n\n        return typeof first === typeof second;\n    };\n\n    _.freeze = function freeze(obj) {\n        if ('freeze' in Object) {\n            return Object.freeze(obj);\n        }\n\n        return obj;\n    };\n\n    _.noop = function() {\n        return undefined;\n    };\n\n    _.isObject = function isObject(obj) {\n        if (obj === null) {\n            return false;\n        }\n\n        return typeof obj === 'object';\n    };\n\n    _.isArray = function isArray(array) {\n        if (!_.isObject(array)) {\n            return false;\n        }\n\n        return array.constructor === Array;\n    };\n\n    _.isString = function isString(string) {\n        return typeof string === 'string';\n    };\n\n    _.isNumber = function isNumber(number) {\n        if (isNaN(number)) {\n            return false;\n        }\n\n        return typeof number === 'number';\n    };\n\n    _.isBoolean = function isBoolean(bool) {\n        return typeof bool === 'boolean';\n    };\n\n    _.isFunction = function isFunction(func) {\n        return typeof func === 'function';\n    };\n\n    _.isNullOrUndefined = function isNullOrUndefined(value) {\n        return value === null || _.isUndefined(value);\n    };\n\n    _.isUndefined = function isUndefined(value) {\n        return typeof value === 'undefined';\n    };\n\n    _.getEnumName = function getEnumName(enums, nameOrId) {\n        var enumObject = null;\n\n        var enumArray = _.map(enums, function(value) {\n            return value;\n        });\n\n        if (_.isNumber(nameOrId)) {\n            enumObject = _.find(enumArray, function(current) {\n                return current.id === nameOrId;\n            });\n        } else if (_.isString(nameOrId)) {\n            enumObject = _.find(enumArray, function(current) {\n                return current.name.toLowerCase() === nameOrId.toLowerCase();\n            });\n        }\n\n        if (enumObject) {\n            return enumObject.name;\n        }\n\n        return null;\n    };\n\n    _.toString = function toString(data) {\n        if (_.isString(data)) {\n            return data;\n        }\n\n        if (_.isBoolean(data)) {\n            return data ? 'true' : 'false';\n        }\n\n        if (_.isNumber(data)) {\n            return data.toString();\n        }\n\n        var toStringStr = '';\n\n        if (data) {\n            if (_.isFunction(data.toString)) {\n                toStringStr = data.toString();\n            } else if (_.isObject(data.toString)) {\n                try {\n                    toStringStr = data.toString();\n                } catch (e) {\n                    toStringStr = '[object invalid toString()]';\n                }\n            }\n        }\n\n        if (toStringStr.indexOf('[object') !== 0) {\n            return toStringStr;\n        }\n\n        var cache = [];\n\n        return toStringStr + JSON.stringify(data, function(key, value) {\n            if (_.isObject(value) && !_.isNullOrUndefined(value)) {\n                if (_.includes(cache, value)) {\n                    return '<recursive>';\n                }\n\n                cache.push(value);\n            }\n\n            return key === '' ? value : _.toString(value);\n        });\n    };\n\n    _.pad = function padNumber(value, numberToPad) {\n        assertIsNumber(value, 'value');\n        assertIsNumber(numberToPad, 'numberToPad');\n\n        var valueLength = value.toString().length;\n\n        for (var i = 0; i < numberToPad - valueLength; i++) {\n            value = '0' + value.toString();\n        }\n\n        return value.toString();\n    };\n\n    _.addEventListener = function addEventListener(target, eventName, listener, useCapture) {\n        assertIsObject(target, 'target');\n        assertIsString(eventName, 'eventName');\n        assertIsFunction(listener, 'listener');\n\n        if (target.phenixAddEventListener) {\n            target.phenixAddEventListener.call(target, eventName, listener, !!useCapture);\n        } else if (target.addEventListener) {\n            target.addEventListener(eventName, listener, !!useCapture);\n        } else if (target.attachEvent) {\n            target.attachEvent(\"on\" + eventName, listener);\n        }\n    };\n\n    _.removeEventListener = function removeEventListener(target, eventName, listener, useCapture) {\n        assertIsObject(target, 'target');\n        assertIsString(eventName, 'eventName');\n        assertIsFunction(listener, 'listener');\n\n        if (target.phenixRemoveEventListener) {\n            target.phenixRemoveEventListener.call(target, eventName, listener, !!useCapture);\n        } else if (target.removeEventListener) {\n            target.removeEventListener(eventName, listener, !!useCapture);\n        } else if (target.detachEvent) {\n            target.detachEvent(\"on\" + eventName, listener);\n        }\n    };\n\n    var assertIsArray = function assertIsArray(collection) {\n        if (!_.isArray(collection)) {\n            throw new Error('Input must be an array. Received [' + typeof collection + ']');\n        }\n    };\n\n    var assertIsNumber = function assertIsNumber(number, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isNumber(number)) {\n            throw new Error(name + ' must be a number. Received [' + typeof number + ']');\n        }\n    };\n\n    var assertIsObject = function assertIsObject(collection, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isObject(collection)) {\n            throw new Error('collection type not supported - ' + name + ' must be an array or object. Received [' + typeof collection + ']');\n        }\n    };\n\n    var assertIsFunction = function assertIsFunction(callback, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isFunction(callback)) {\n            throw new Error(name + ' must be a function. Received [' + typeof callback + ']');\n        }\n    };\n\n    var assertIsString = function assertIsString(value, name) {\n        if (!_.isString(name)) {\n            throw new Error('Name must be a string. Received [' + typeof name + ']');\n        }\n\n        if (!_.isString(value)) {\n            throw new Error(name + ' must be a string. Received [' + typeof value + ']');\n        }\n    };\n\n    function buildPathFromString(stringPath) {\n        var properties = stringPath.split('.');\n        var path = [];\n\n        _.forEach(properties, function(prop) {\n            path = path.concat(buildSubPathFromString(prop));\n        });\n\n        return path;\n    }\n\n    function buildSubPathFromString(stringPath) {\n        var possibleSubPath = '';\n        var path = [];\n        var countOfOpeningBrackets = 0;\n\n        for (var i = 0; i < stringPath.length; i++) {\n            if (stringPath[i] === '[') {\n                countOfOpeningBrackets++;\n\n                if (!_.isString(possibleSubPath) || countOfOpeningBrackets > 1) {\n                    return [stringPath];\n                }\n\n                if (possibleSubPath) {\n                    path.push(possibleSubPath);\n                    possibleSubPath = '';\n                }\n            } else if (stringPath[i] === ']') {\n                countOfOpeningBrackets--;\n\n                if (countOfOpeningBrackets !== 0) {\n                    return [stringPath];\n                }\n\n                path.push(possibleSubPath);\n                possibleSubPath = '';\n            } else if (i === stringPath.length - 1) {\n                return [stringPath];\n            } else {\n                possibleSubPath += stringPath[i];\n            }\n        }\n\n        return path;\n    }\n\n    function getNextValue(path, index, currentLocation, value) {\n        if (path.length - 1 === index) {\n            return value;\n        }\n\n        var currentPropOrIndex = path[index];\n        var nextPropOrIndex = path[index + 1];\n\n        if (_.isArray(currentLocation[currentPropOrIndex]) || _.isObject(currentLocation[currentPropOrIndex])) {\n            return currentLocation[currentPropOrIndex];\n        }\n\n        if (!_.isArray(currentLocation[currentPropOrIndex]) && _.isNumber(parseInt(nextPropOrIndex))) {\n            return [];\n        } else if (!_.isObject(currentLocation[currentPropOrIndex]) && _.isString(nextPropOrIndex)) {\n            return {};\n        }\n\n        throw new Error('Unsupported type ' + typeof currentPropOrIndex + ' when setting property or index');\n    }\n\n    function setNextValue(objectToTraverse, propertyOrIndex, value) {\n        if (_.isNumber(parseInt(propertyOrIndex)) && _.isArray(objectToTraverse)) {\n            return objectToTraverse[propertyOrIndex] = value;\n        } else if (_.isString(propertyOrIndex) && _.isObject(objectToTraverse)) {\n            return objectToTraverse[propertyOrIndex] = value;\n        }\n\n        throw new Error('Unsupported type ' + typeof propertyOrIndex + ' when setting property or index');\n    }\n\n    return _;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(1),\n    __webpack_require__(2)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(Disposable, DisposableList) {\n    return {\n        Disposable: Disposable,\n        DisposableList: DisposableList\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=phenix-web-disposable.js.map","/**\n * Copyright 2021 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"phenix-web-lodash-light\"), require(\"phenix-web-detect-browser\"), require(\"phenix-web-disposable\"), require(\"webrtc-adapter\"), require(\"phenix-web-event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"phenix-web-lodash-light\", \"phenix-web-detect-browser\", \"phenix-web-disposable\", \"webrtc-adapter\", \"phenix-web-event\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"phenix-web-lodash-light\"), require(\"phenix-web-detect-browser\"), require(\"phenix-web-disposable\"), require(\"webrtc-adapter\"), require(\"phenix-web-event\")) : factory(root[\"phenix-web-lodash-light\"], root[\"phenix-web-detect-browser\"], root[\"phenix-web-disposable\"], root[\"webrtc-adapter\"], root[\"phenix-web-event\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__10__, __WEBPACK_EXTERNAL_MODULE__12__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__1__;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2020 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n    'use strict';\n\n    if (typeof window === \"object\") { // eslint-disable-line no-restricted-globals\n        return window; // eslint-disable-line no-restricted-globals\n    }\n\n    if (typeof global === \"object\") {\n        return global; // eslint-disable-line no-undef\n    }\n\n    return {};\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(8)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2020 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0),\n    __webpack_require__(4),\n    __webpack_require__(5),\n    __webpack_require__(2),\n    __webpack_require__(11)\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_, disposable, WaitFor, envGlobal, FlashPlayer) {\n    'use strict';\n\n    var log = function() {\n        console.log.apply(console, arguments);\n    } || function() {\n    };\n\n    var logError = function() {\n        console.error.apply(console, arguments);\n    } || log;\n\n    function PhenxFlashVideo(ghost, stream, options) {\n        var that = this;\n\n        this._ghost = ghost;\n        this._stream = stream;\n        this._options = options || {};\n        this._events = {};\n        this._disposables = new disposable.DisposableList();\n        this._flashPlayer = null;\n\n        var loaded = function loaded(success) {\n            that._loaded = true;\n            that._enabled = success === true;\n\n            if (success) {\n                initialize.call(that);\n            } else {\n                logError('Failed to create Phenix video element');\n            }\n\n            if (that._onReady) {\n                that._onReady(that._enabled);\n            }\n        };\n\n        try {\n            this._video = createPhenxFlashVideoElement.call(this);\n            this._video.className = this._ghost.className;\n            this._video.height = this._ghost.height;\n            this._video.width = this._ghost.width;\n\n            this._ghostInitStyleCssText = this._ghost.style.cssText;\n            this._ghost.style.cssText = 'visibility:hidden !important;width:0px !important;height:0px !important;' +\n                'margin:0px !important;padding:0px !important;' +\n                'border-style:none !important;border-width:0px !important;' +\n                'max-width:0px !important;max-height:0px !important;outline:none !important';\n\n            this._disposables.add(new disposable.Disposable(function() {\n                that._ghost.style.cssText = that._ghostInitStyleCssText;\n            }));\n\n            this._video.onunload = function() {\n                that._loaded = false;\n            };\n\n            observeInsertion.call(this);\n\n            if (!document.body || !document.body.contains) {\n                log('document.body.contains is not supported');\n            }\n\n            if (document.body && document.body.contains && document.body.contains(this._ghost)) {\n                this._ghost.parentNode.replaceChild(this._video, this._ghost);\n\n                if (this._flashPlayer) {\n                    this._video = this._flashPlayer.finishInitializationInDom();\n                }\n\n                this._disposables.add(new disposable.Disposable(function() {\n                    if (that._video.parentNode) {\n                        that._video.parentNode.replaceChild(that._ghost, that._video);\n                    }\n                }));\n            }\n\n            var waitFor = new WaitFor();\n\n            waitFor.waitForReady(this._video, loaded);\n        } catch (e) {\n            logError('Error while loading Phenix RTC' + e);\n            loaded(false);\n        }\n    }\n\n    PhenxFlashVideo.prototype.hookUpEvents = function() {\n        var that = this;\n        var ghost = this._ghost;\n        var onError = function onError() {\n            dispatchEvent(ghost, 'error');\n        };\n\n        var onMute = function onMute() {\n            ghost.muted = that._video.muted;\n            dispatchEvent(ghost, 'mute');\n        };\n\n        var onUnmute = function onUnmute() {\n            ghost.muted = that._video.muted;\n            dispatchEvent(ghost, 'unmute');\n        };\n\n        var onEnded = function onEnded() {\n            ghost.ended = that._video.ended;\n            dispatchEvent(ghost, 'ended');\n        };\n\n        var onLoadedMetadata = function onLoadedMetadata() {\n            ghost.width = that._video.width;\n            ghost.height = that._video.height;\n            dispatchEvent(ghost, 'loadedmetadata');\n        };\n\n        var onLoadedData = function onLoadedData() {\n            ghost.width = that._video.width;\n            ghost.height = that._video.height;\n            dispatchEvent(ghost, 'loadeddata');\n        };\n\n        var onResize = function onResize() {\n            ghost.width = that._video.width;\n            ghost.height = that._video.height;\n            dispatchEvent(ghost, 'resize');\n        };\n\n        this.addEventListener('error', onError);\n        this.addEventListener('mute', onMute);\n        this.addEventListener('unmute', onUnmute);\n        this.addEventListener('ended', onEnded);\n        this.addEventListener('loadedmetadata', onLoadedMetadata);\n        this.addEventListener('loadeddata', onLoadedData);\n        this.addEventListener('resize', onResize);\n\n        var eventDisposable = new disposable.Disposable(function() {\n            that.removeEventListener('error', onError);\n            that.removeEventListener('mute', onMute);\n            that.removeEventListener('unmute', onUnmute);\n            that.removeEventListener('ended', onEnded);\n            that.removeEventListener('loadedmetadata', onLoadedMetadata);\n            that.removeEventListener('loadeddata', onLoadedData);\n            that.removeEventListener('resize', onResize);\n        });\n\n        this._disposables.add(eventDisposable);\n\n        return eventDisposable;\n    };\n\n    PhenxFlashVideo.prototype.onReady = function(callback) {\n        var that = this;\n\n        if (this._loaded) {\n            setTimeout(function() {\n                callback(that._enabled);\n            }, 1);\n        } else {\n            this._onReady = callback;\n        }\n    };\n\n    PhenxFlashVideo.prototype.getElement = function() {\n        return this._video;\n    };\n\n    PhenxFlashVideo.prototype.addEventListener = function(name, listener, useCapture) {\n        addEventListener.call(this, name, listener, useCapture);\n    };\n\n    PhenxFlashVideo.prototype.removeEventListener = function(name, listener, useCapture) {\n        removeEventListener.call(this, name, listener, useCapture);\n    };\n\n    PhenxFlashVideo.prototype.destroy = function() {\n        this._disposables.dispose();\n    };\n\n    function createPhenxFlashVideoElement() {\n        this._flashPlayer = new FlashPlayer(this._ghost, this._stream, this._options);\n\n        var that = this;\n\n        this._disposables.add(new disposable.Disposable(function() {\n            that._flashPlayer.destroy();\n        }));\n\n        return this._flashPlayer.getElement();\n    }\n\n    function addEventListener(name, listener /* , useCapture */) {\n        return this._flashPlayer.addEventListener(name, listener);\n    }\n\n    function removeEventListener(name, listener /* , useCapture */) {\n        return this._flashPlayer.removeEventListener(name, listener);\n    }\n\n    function registerEvent(name) {\n        var that = this;\n\n        function listener() {\n            var listeners = that._events[name];\n\n            if (listeners) {\n                for (var i = 0; i < listeners.length; i++) {\n                    listeners[i].apply(that, arguments);\n                }\n            }\n        }\n\n        that._video.phenixSetEventListener(name, listener);\n    }\n\n    function dispatchEvent(source, name) {\n        var event; // The custom event that will be created\n\n        if (document.createEvent) {\n            event = document.createEvent('HTMLEvents');\n            event.initEvent(name, true, true);\n        } else {\n            event = document.createEventObject();\n            event.eventType = name;\n        }\n\n        event.eventName = name;\n\n        setTimeout(function() {\n            if (document.createEvent) {\n                source.dispatchEvent(event);\n            } else {\n                source.fireEvent('on' + event.eventType, event);\n            }\n        });\n    }\n\n    function initialize() {\n        var events = Object.keys(this._events);\n\n        for (var i = 0; i < events.length; i++) {\n            registerEvent.call(this, events[i]);\n        }\n\n        this.hookUpEvents();\n\n        propagateAttributeChanges.call(this);\n\n        this._video.id = this._ghost.id;\n        this._video.style.cssText = this._ghostInitStyleCssText;\n        this._video.className = this._ghost.className;\n        this._video.innerHtml = this._ghost.innerHtml;\n        this._video.width = this._ghost.width;\n        this._video.height = this._ghost.height;\n        this._video.autoplay = this._ghost.autoplay;\n        this._video.muted = this._ghost.muted;\n        this._video.defaultMuted = this._ghost.defaultMuted;\n        this._video.volume = this._ghost.volume;\n    }\n\n    function propagateAttributeChanges() {\n        var that = this;\n        var readonly = ['style'];\n\n        if (_.get(envGlobal, ['MutationObserver'])) {\n            // Newer browsers support an efficient way to observe DOM modifications\n            var observer = new MutationObserver(function(mutations) {\n                mutations.forEach(function(mutation) {\n                    if (mutation.type === 'attributes' && mutation.target === that._ghost && readonly.indexOf(mutation.attributeName) === -1) {\n                        that._video[mutation.attributeName] = that._ghost[mutation.attributeName];\n                    }\n                });\n            });\n\n            var configAttributes = {attributes: true};\n\n            observer.observe(that._ghost, configAttributes);\n\n            that._disposables.add(new disposable.Disposable(function() {\n                observer.disconnect();\n            }));\n        } else {\n            // For older browsers. There is a significant performance overhead with this method.\n            // See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Mutation_events\n            log('Falling back to use of DOM event listeners. This results in degraded performance for further DOM modifications and does not work for IE prior to version 9. See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Mutation_events for details.');\n\n            var handleModifiedEvent = function handleModifiedEvent(event) {\n                that._video[event.target.tagName] = that._ghost[event.target.tagName];\n            };\n\n            if (that._ghost.addEventListener) {\n                that._ghost.addEventListener('DOMAttrModified', handleModifiedEvent, false);\n\n                that._disposables.add(new disposable.Disposable(function() {\n                    that._ghost.removeEventListener('DOMAttrModified', handleModifiedEvent, false);\n                }));\n            } else {\n                that._ghost.attachEvent('onpropertychange', handleModifiedEvent);\n\n                that._disposables.add(new disposable.Disposable(function() {\n                    that._ghost.detachEvent('DOMAttrModified', handleModifiedEvent);\n                }));\n            }\n        }\n    }\n\n    function observeInsertion() {\n        var that = this;\n\n        if (_.get(envGlobal, ['MutationObserver'])) {\n            // Newer browsers support an efficient way to observe DOM modifications\n            var observer = new MutationObserver(function(mutations) {\n                mutations.forEach(function(mutation) {\n                    if (mutation.type === 'childList') {\n                        for (var i = 0; i < mutation.addedNodes.length; i++) {\n                            var node = mutation.addedNodes[i];\n\n                            if (mutation.target !== that._video) {\n                                if (node === that._ghost) {\n                                    // Replace element with our video element\n                                    mutation.target.replaceChild(that._video, that._ghost);\n                                    initialize.call(that);\n                                } else if (isDescendant(mutation.target, that._ghost)) {\n                                    if (that._ghost.parentNode) {\n                                        that._ghost.parentNode.replaceChild(that._video, that._ghost);\n                                    }\n\n                                    initialize.call(that);\n                                }\n                            }\n                        }\n                    }\n                });\n            });\n\n            var configMutations = {\n                childList: true,\n                attributes: false,\n                characterData: false,\n                subtree: true\n            };\n\n            observer.observe(document.body, configMutations);\n\n            that._disposables.add(new disposable.Disposable(function() {\n                observer.disconnect();\n            }));\n        } else {\n            // For older browsers. There is a significant performance overhead with this method.\n            // See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Mutation_events\n            log('Falling back to use of DOM event listeners. This results in degraded performance for further DOM modifications and does not work for IE prior to version 9. See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Mutation_events for details.');\n\n            var domInsertedListener = function() {\n                if (that._ghost.parentNode) {\n                    that._ghost.parentNode.replaceChild(that._video, that._ghost);\n                }\n            };\n\n            that.addEventListener('DOMNodeInserted', domInsertedListener, false);\n\n            that._disposables.add(new disposable.Disposable(function() {\n                that.removeEventListener('DOMNodeInserted', domInsertedListener, false);\n            }));\n        }\n    }\n\n    function isDescendant(parent, child) {\n        var node = child.parentNode;\n\n        while (node !== null) {\n            if (node === parent) {\n                return true;\n            }\n\n            node = node.parentNode;\n        }\n\n        return false;\n    }\n\n    return PhenxFlashVideo;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__4__;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2020 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(1)\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(DetectBrowser) {\n    'use strict';\n\n    var browser = new DetectBrowser(navigator.userAgent).detect();\n    var ReadyStateComplete = 4;\n\n    function WaitFor(timeout) {\n        this._timeout = timeout || 15000;\n    }\n\n    var logError = function() {\n        console.error.apply(console, arguments);\n    } || console.log;\n\n    WaitFor.prototype.waitForReadyWithTimeout = function(element, loaded, timeout) {\n        var triggered = false;\n        var waitFor = 1;\n        var sum = waitFor;\n\n        var guardedLoaded = function(success) {\n            if (!triggered) {\n                triggered = true;\n                loaded(success);\n            }\n        };\n\n        var checkLoaded = function checkLoaded() {\n            if (element.readyState === ReadyStateComplete) { // IE\n                return guardedLoaded(true);\n            }\n\n            waitFor = Math.min(waitFor + 1000, 2 * waitFor);\n            sum += waitFor;\n\n            if (sum > timeout) {\n                logError('Timed out while waiting for <object> to load');\n                guardedLoaded(false);\n            } else {\n                setTimeout(checkLoaded, waitFor);\n            }\n        };\n\n        if (!(Object.prototype.hasOwnProperty && Object.prototype.hasOwnProperty.call(element, 'onload'))) {\n            // There are no events in IE to detect when it is loaded\n            if (browser.browser !== 'IE') {\n                logError('No means of detecting when <object> is loaded');\n            }\n        }\n\n        element.onload = function() {\n            guardedLoaded(true);\n        };\n\n        checkLoaded();\n    };\n\n    WaitFor.prototype.waitForReady = function(element, loaded) {\n        this.waitForReadyWithTimeout(element, loaded, this._timeout);\n    };\n\n    return WaitFor;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2020 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(7),\n    __webpack_require__(3)\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(adapter, PhenixFlashVideo) {\n    'use strict';\n\n    adapter.PhenixFlashVideo = PhenixFlashVideo;\n\n    return adapter;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2020 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0),\n    __webpack_require__(1),\n    __webpack_require__(2),\n    __webpack_require__(9)\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_, DetectBrowser, envGlobal, webRTCShim) {\n    'use strict';\n\n    var browser = new DetectBrowser(navigator.userAgent).detect();\n    var adapter = {\n        browser: browser.browser,\n        browserVersion: browser.version,\n        global: envGlobal,\n        shim: webRTCShim\n    };\n\n    _.assign(adapter, webRTCShim());\n\n    return adapter;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2020 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0),\n    __webpack_require__(1),\n    __webpack_require__(10),\n    __webpack_require__(2),\n    __webpack_require__(3)\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_, DetectBrowser, webRtcAdapter, envGlobal, PhenixVideo) { // eslint-disable-line no-unused-vars\n    'use strict';\n\n    var log = function() {\n        // Console.log.apply(console, arguments);\n    };\n\n    var logWarn = function() {\n        console.log.apply(console, arguments);\n    };\n\n    var browser = new DetectBrowser(navigator.userAgent).detect();\n    var RTCPeerConnection = envGlobal.RTCPeerConnection;\n    var RTCSessionDescription = envGlobal.RTCSessionDescription;\n    var RTCIceCandidate = envGlobal.RTCIceCandidate;\n    var getSources = null;\n    var getDestinations = null;\n    var getUserMedia = null;\n    var getStats = null;\n    var attachMediaStream = null;\n    var attachUriStream = null;\n    var reattachMediaStream = null;\n    var webrtcSupported = false;\n\n    function shimRTC() {\n        RTCPeerConnection = envGlobal.RTCPeerConnection;\n        RTCSessionDescription = envGlobal.RTCSessionDescription;\n        RTCIceCandidate = envGlobal.RTCIceCandidate;\n\n        if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n            getSources = _.bind(navigatorMediaDevicesEnumerateDevicesByTypeWrapper, null, 'input');\n        }\n\n        if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n            getDestinations = _.bind(navigatorMediaDevicesEnumerateDevicesByTypeWrapper, null, 'output');\n        }\n\n        if ((navigator.mediaDevices && navigator.mediaDevices.getUserMedia) || envGlobal.getUserMedia) {\n            getUserMedia = navigatorGetUserMedia;\n        }\n\n        if (!envGlobal.RTCPeerConnection) {\n            return logWarn('Browser version does not appear to be WebRTC-capable', browser.browser, browser.version);\n        }\n\n        switch (browser.browser) {\n        case 'Firefox':\n            log('Firefox detected', browser);\n\n            attachMediaStream = attachStreamToElement;\n            reattachMediaStream = reattachStreamToElement;\n            getStats = function getPeerConnectionStats(pc, track, successCallback, errorCallback) {\n                pc.getStats(track, _.bind(handleGetStatsSuccess, this, pc, successCallback), errorCallback);\n            };\n\n            webrtcSupported = true;\n\n            break;\n        case 'Opera':\n            log('Opera detected', browser);\n\n            attachMediaStream = attachStreamToElement;\n            reattachMediaStream = reattachStreamToElement;\n            getStats = function getPeerConnectionStats(pc, track, successCallback, errorCallback) {\n                pc.getStats(_.bind(handleGetStatsSuccess, this, pc, successCallback), track, errorCallback);\n            };\n\n            webrtcSupported = true;\n\n            break;\n        case 'Chrome':\n            log('Webkit detected', browser);\n\n            attachMediaStream = attachStreamToElement;\n            reattachMediaStream = reattachStreamToElement;\n            getStats = function getPeerConnectionStats(pc, track, successCallback, errorCallback) {\n                pc.getStats(_.bind(handleGetStatsSuccess, this, pc, successCallback), track, errorCallback);\n            };\n\n            webrtcSupported = true;\n\n            break;\n        case 'Edge':\n            log('Edge detected', browser);\n\n            attachMediaStream = attachStreamToElement;\n            reattachMediaStream = reattachStreamToElement;\n            getStats = function getPeerConnectionStats(pc, track, successCallback, errorCallback) {\n                pc.getStats(track, _.bind(handleGetStatsSuccess, this, pc, successCallback), errorCallback);\n            };\n\n            webrtcSupported = true;\n\n            break;\n        case 'Safari':\n            log('Safari detected', browser);\n\n            attachMediaStream = function(element, stream, callback) {\n                if (_.isObject(stream)) {\n                    element.__phenixHasPlayedWebRtc = true;\n                }\n\n                element = attachStreamToElement(element, stream, callback);\n\n                return element;\n            };\n            attachUriStream = function(element, streamUri) {\n                if (element.__phenixHasPlayedWebRtc) {\n                    element = (new PhenixVideo(element, streamUri, false)).getElement();\n                } else {\n                    return attachUriStreamToElement(element, streamUri);\n                }\n\n                element.play();\n\n                return element;\n            };\n            reattachMediaStream = reattachStreamToElement;\n            getStats = function getPeerConnectionStats(pc, track, successCallback, errorCallback) {\n                pc.getStats(track).then(_.bind(handleGetStatsSuccess, this, pc, successCallback), errorCallback);\n            };\n\n            webrtcSupported = true;\n\n            break;\n        case 'ReactNative':\n            log('React Native detected', browser);\n\n            attachMediaStream = function() {\n                log('attachMediaStream not supported in React Native environment');\n            };\n            attachUriStream = function() {\n                log('attachUriStream not supported in React Native environment');\n            };\n            reattachMediaStream = function() {\n                log('reattachMediaStream not supported in React Native environment');\n            };\n            getStats = function getPeerConnectionStats(pc, track, successCallback, errorCallback) {\n                pc.getStats(track).then(_.bind(handleGetStatsSuccess, this, pc, successCallback), errorCallback);\n            };\n\n            webrtcSupported = true;\n\n            break;\n        default:\n            log('Browser does not appear to be WebRTC-capable', browser);\n\n            break;\n        }\n    }\n\n    function navigatorGetUserMedia(constraints, successCallback, errorCallback) {\n        var onSuccess = _.bind(handleGetUserMediaSuccess, this, constraints, successCallback, errorCallback);\n\n        if (navigator && navigator.mediaDevices && _.isFunction(navigator.mediaDevices.getUserMedia)) {\n            return navigator.mediaDevices.getUserMedia(constraints)\n                .then(function(mediaStream) {\n                    return onSuccess(mediaStream);\n                }).catch(function(e) {\n                    return errorCallback(e);\n                });\n        }\n\n        if (navigator && _.isFunction(navigator.getUserMedia)) {\n            return navigator.getUserMedia(constraints, onSuccess, errorCallback);\n        }\n\n        if (envGlobal && _.isFunction(envGlobal.getUserMedia)) {\n            return envGlobal.getUserMedia(constraints, onSuccess, errorCallback);\n        }\n    }\n\n    function handleGetUserMediaSuccess(constraints, successCallback, errorCallback, stream) {\n        setTimeout(function() {\n            var tracks = stream.getTracks();\n\n            for (var i = 0; i < tracks.length; i++) {\n                var track = tracks[i];\n\n                track.onended = function(event) {\n                    log(event.timeStamp, 'Track', track.id, track.label, 'ended');\n                };\n\n                log('Track', track.id, track.label, tracks[i].kind, 'readyState=', tracks[i].readyState);\n\n                if (track.readyState === 'ended') {\n                    return handleGetUserMediaUnavailable('User media not available', errorCallback, tracks);\n                }\n            }\n\n            var requestedTrackCount = (constraints.audio ? 1 : 0) + (constraints.video ? 1 : 0);\n\n            // Edge sometimes only gets a subset of tracks requested\n            if (tracks.length !== requestedTrackCount) {\n                return handleGetUserMediaUnavailable('Unable to get all requested user media.', errorCallback, tracks);\n            }\n\n            successCallback(stream);\n        }, 100);\n    }\n\n    function handleGetUserMediaUnavailable(message, errorCallback, tracks) {\n        try {\n            var error = new Error(message);\n\n            error.code = 'unavailable';\n\n            errorCallback(error);\n        } finally {\n            stopAllTracks(tracks);\n        }\n    }\n\n    function stopAllTracks(tracks) {\n        for (var j = 0; j < tracks.length; j++) {\n            tracks[j].stop();\n        }\n    }\n\n    function navigatorMediaDevicesEnumerateDevicesByTypeWrapper(type, callback) {\n        if (type !== 'input' && type !== 'output') {\n            throw new Error('Unsupported device type ' + type);\n        }\n\n        if (!navigator.mediaDevices) {\n            return;\n        }\n\n        navigator.mediaDevices.enumerateDevices().then(function(devices) {\n            var sources = [];\n\n            devices.forEach(function(device) {\n                if (device.kind === 'audio' + type) {\n                    sources.push({\n                        kind: 'audio',\n                        id: device.deviceId,\n                        label: device.label\n                    });\n                } else if (device.kind === 'video' + type) {\n                    sources.push({\n                        kind: 'video',\n                        id: device.deviceId,\n                        label: device.label\n                    });\n                }\n            });\n\n            callback(sources);\n        });\n    }\n\n    function attachStreamToElement(element, stream, callback) {\n        if (typeof element.srcObject !== 'undefined') {\n            element.srcObject = stream;\n        } else if (typeof element.mozSrcObject !== 'undefined') {\n            element.mozSrcObject = stream;\n        } else if (typeof element.src !== 'undefined') {\n            element.src = URL.createObjectURL(stream);\n        } else {\n            log('Error attaching stream to element.');\n        }\n\n        var playPromise = element.play();\n\n        if (playPromise === undefined) {\n            if (typeof callback === 'function') {\n                callback();\n            }\n\n            return element;\n        }\n\n        playPromise.then(function() {\n            if (typeof callback === 'function') {\n                callback();\n            }\n        }).catch(function(e) {\n            log('Play() failed: ' + e);\n\n            if (typeof callback === 'function') {\n                callback(e);\n            }\n        });\n\n        return element;\n    }\n\n    function attachUriStreamToElement(element, streamUri) {\n        element.src = streamUri;\n\n        element.play();\n\n        return element;\n    }\n\n    function reattachStreamToElement(to, from) {\n        to.src = from.src;\n\n        return to;\n    }\n\n    function handleGetStatsSuccess(pc, successCallback, stats) {\n        successCallback(normalizePeerConnectionStats(pc, stats));\n    }\n\n    function normalizePeerConnectionStats(pc, stats) {\n        switch (browser.browser) {\n        case 'Edge':\n            stats.forEach(function(stat) {\n                stat.mediaType = getMediaTypeByCodecFromSdp(pc, stat.codecId);\n                stat.bytesSent = estimateBytesFromNumberOfPacketsAndMediaType(stat.packetsSent, stat.mediaType);\n                stat.bytesReceived = estimateBytesFromNumberOfPacketsAndMediaType(stat.packetsReceived, stat.mediaType);\n            });\n\n            break;\n        case 'Safari':\n            stats.forEach(function(stat) {\n                if (_.includes(stat.id.toLowerCase(), 'audio') && _.includes(stat.id.toLowerCase(), 'rtp')) {\n                    stat.mediaType = 'audio';\n                }\n\n                if (_.includes(stat.id.toLowerCase(), 'video') && _.includes(stat.id.toLowerCase(), 'rtp')) {\n                    stat.mediaType = 'video';\n                }\n            });\n\n            break;\n        default:\n            break;\n        }\n\n        return stats;\n    }\n\n    function getMediaTypeByCodecFromSdp(peerConnection, codec) {\n        if (!codec) {\n            return;\n        }\n\n        var mediaType;\n\n        findInSdpSections(peerConnection, function(section) {\n            if (_.startsWith(section, 'video') && _.includes(section.toLowerCase(), codec.toLowerCase())) {\n                mediaType = 'video';\n            }\n\n            if (_.startsWith(section, 'audio') && _.includes(section.toLowerCase(), codec.toLowerCase())) {\n                mediaType = 'audio';\n            }\n        });\n\n        return mediaType;\n    }\n\n    function findInSdpSections(peerConnection, callback) {\n        var localSections = peerConnection.localDescription.sdp.split('m=');\n        var remoteSections = peerConnection.remoteDescription.sdp.split('m=');\n\n        if (localSections.length !== remoteSections.length) {\n            return false;\n        }\n\n        return _.findIndex(localSections, function(section, index) {\n            return callback(section, index, remoteSections);\n        });\n    }\n\n    function estimateBytesFromNumberOfPacketsAndMediaType(packets, mediaType) {\n        var packetsReceivedNum = parseInt(packets) || 0;\n\n        if (mediaType === 'audio') {\n            return packetsReceivedNum * 100;\n        }\n\n        if (mediaType === 'video') {\n            return packetsReceivedNum * 1080;\n        }\n    }\n\n    return function getShim() {\n        shimRTC();\n\n        var adapter = {\n            RTCPeerConnection: RTCPeerConnection,\n            RTCSessionDescription: RTCSessionDescription,\n            RTCIceCandidate: RTCIceCandidate,\n            getSources: getSources,\n            getDestinations: getDestinations,\n            getUserMedia: getUserMedia,\n            getStats: getStats,\n            attachMediaStream: attachMediaStream,\n            attachUriStream: attachUriStream || attachUriStreamToElement,\n            reattachMediaStream: reattachMediaStream,\n            webrtcSupported: webrtcSupported\n        };\n\n        adapter.exportGlobal = function() {\n            envGlobal.RTCPeerConnection = adapter.RTCPeerConnection;\n            envGlobal.RTCSessionDescription = adapter.RTCSessionDescription;\n            envGlobal.RTCIceCandidate = adapter.RTCIceCandidate;\n        };\n\n        return adapter;\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__10__;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2020 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0),\n    __webpack_require__(1),\n    __webpack_require__(4),\n    __webpack_require__(12),\n    __webpack_require__(5),\n    __webpack_require__(2)\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_, DetectBrowser, disposable, event, WaitFor, envGlobal) {\n    'use strict';\n\n    var log = function() {\n        console.log.apply(console, arguments);\n    } || function() {};\n\n    var logError = function() {\n        console.error.apply(console, arguments);\n    } || log;\n\n    var defaultPropertyValues = {\n        width: 480,\n        height: 360,\n        videoWidth: 480,\n        videoHeight: 360,\n        muted: false,\n        volume: 1,\n        currentTime: 0,\n        duration: Infinity,\n        readyState: 0,\n        ended: false,\n        buffered: null,\n        autoplay: true\n    };\n\n    var mutedElementListenerInterval = 300;\n    var browser = new DetectBrowser(navigator.userAgent).detect();\n    var isIEAndRequiresFlashObject = browser.browser === 'IE' && /(trident|microsoft)/i.test(_.get(envGlobal.navigator, ['appName'], ''));\n    var isEdgeAndRequiresFlashObject = browser.browser === 'Edge' && _.get(envGlobal.navigator, 'msLaunchUri') && !_.get(envGlobal.document, 'documentMode');\n    var missingFlashMessage = 'You are using a browser that does not have Flash player enabled or installed. Please turn on your Flash player plugin or download the latest version from https://get.adobe.com/flashplayer/';\n\n    function FlashPlayer(ghost, streamInfo, options) {\n        this._disposables = new disposable.DisposableList();\n        this._events = new event.NamedEvents();\n        this._isVideo = ghost.tagName === 'video';\n        this._swfSrc = options.swfSrc;\n        this._id = ghost.id || options.streamId;\n        this._width = ghost.clientWidth;\n        this._height = ghost.clientHeight;\n        this._ghost = ghost;\n        this._element = null;\n        this._eventDisposables = [];\n        this._flashVars = [\n            'uid=' + this._id,\n            'autoplay=' + (_.isUndefined(ghost.autoplay) ? true : ghost.autoplay),\n            'muted=' + (_.isUndefined(ghost.muted) ? false : ghost.muted),\n            'allowScriptAccess=always',\n            'preload=true',\n            'src=' + JSON.stringify(streamInfo)\n        ];\n\n        var that = this;\n\n        this._disposables.add(new disposable.Disposable(function() {\n            triggerFlashEvent.call(that, 'fire_stop');\n        }));\n\n        try {\n            if (isIEAndRequiresFlashObject || isEdgeAndRequiresFlashObject) {\n                this._element = createMicrosoftFlashElement.call(this);\n            } else {\n                this._element = setupCrossBrowserFlashElement.call(this);\n            }\n\n            setupElement.call(this);\n        } catch (e) {\n            logError('Error while loading Flash Player' + e);\n        }\n    }\n\n    FlashPlayer.prototype.finishInitializationInDom = function() {\n        return finishInitialization.call(this);\n    };\n\n    FlashPlayer.prototype.getElement = function() {\n        return this._element;\n    };\n\n    FlashPlayer.prototype.addEventListener = function(name, listener) {\n        var eventDisposableIndex = findEventListenerIndex.call(this, name, listener);\n\n        if (eventDisposableIndex > -1) {\n            return;\n        }\n\n        var disposable = this._events.listen(name, listener);\n\n        this._disposables.add(disposable);\n\n        this._eventDisposables.push({\n            name: name,\n            listener: listener,\n            disposable: disposable\n        });\n    };\n\n    FlashPlayer.prototype.removeEventListener = function(name, listener) {\n        var eventDisposableIndex = findEventListenerIndex.call(this, name, listener);\n\n        if (eventDisposableIndex > -1) {\n            var eventDisposable = this._eventDisposables.splice(eventDisposableIndex, 1)[0];\n\n            eventDisposable.disposable.dispose();\n        }\n    };\n\n    FlashPlayer.prototype.destroy = function() {\n        this._disposables.dispose();\n    };\n\n    function findEventListenerIndex(name, listener) {\n        return _.findIndex(this._eventDisposables, function(eventDisposable) {\n            return eventDisposable.name === name && eventDisposable.listener === listener;\n        });\n    }\n\n    function createMicrosoftFlashElement() {\n        return document.createElement('div');\n    }\n\n    function setupCrossBrowserFlashElement() {\n        var element = document.createElement('embed');\n\n        element.setAttribute('id', '__' + this._id);\n        element.setAttribute('name', '__' + this._id);\n        element.setAttribute('play', 'true');\n        element.setAttribute('loop', 'false');\n        element.setAttribute('quality', 'high');\n        element.setAttribute('bgcolor', '#000000');\n        element.setAttribute('wmode', 'transparent');\n        element.setAttribute('allowScriptAccess', 'always');\n        element.setAttribute('allowFullScreen', 'true');\n        element.setAttribute('type', 'application/x-shockwave-flash');\n        element.setAttribute('pluginspage', '//www.macromedia.com/go/getflashplayer');\n        element.setAttribute('src', this._swfSrc);\n        element.setAttribute('flashvars', this._flashVars.join('&'));\n\n        if (this._isVideo) {\n            element.setAttribute('width', this._width.toString());\n            element.setAttribute('height', this._height.toString());\n        }\n\n        return element;\n    }\n\n    function finishInitialization() {\n        if (!isIEAndRequiresFlashObject && !isEdgeAndRequiresFlashObject) {\n            return this._element;\n        }\n\n        var id = (isEdgeAndRequiresFlashObject ? '__' + this._id : this._id) + _.uniqueId();\n        var embedObject = document.createElement('object');\n        var missingFlashMessageElement = document.createElement('div');\n        var childrenElements = [\n            createParameterElement('movie', this._swfSrc + '?x=' + _.now()),\n            createParameterElement('flashvars', this._flashVars.join('&')),\n            createParameterElement('quality', 2),\n            createParameterElement('bgcolor', '#000000'),\n            createParameterElement('wmode', 'transparent'),\n            createParameterElement('allowScriptAccess', 'always'),\n            createParameterElement('allowFullScreen', 'true'),\n            missingFlashMessageElement\n        ];\n\n        missingFlashMessageElement.innerHTML = missingFlashMessage;\n\n        if (isEdgeAndRequiresFlashObject) {\n            embedObject.setAttribute('type', 'application/x-shockwave-flash');\n            embedObject.setAttribute('data', this._swfSrc);\n            embedObject.setAttribute('id', id);\n            embedObject.setAttribute('width', '__' + this._width.toString());\n            embedObject.setAttribute('height', '__' + this._height.toString());\n        } else {\n            embedObject.setAttribute('classid', 'clsid:D27CDB6E-AE6D-11cf-96B8-444553540000');\n            embedObject.setAttribute('codebase', '//download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab');\n            embedObject.setAttribute('id', id);\n            embedObject.setAttribute('width', this._width.toString());\n            embedObject.setAttribute('height', this._height.toString());\n        }\n\n        if (embedObject.object) {\n            _.forEach(childrenElements, function(element) {\n                if (!_.isNullOrUndefined(_.get(embedObject.object, [element.name]))) {\n                    embedObject.object[element.name] = element.value;\n                }\n            });\n\n            embedObject.appendChild(missingFlashMessageElement);\n        } else {\n            _.forEach(childrenElements, function(element) {\n                var existingChildElement = _.find(embedObject.children, function(childElement) {\n                    return childElement.name === element.name;\n                });\n\n                if (existingChildElement) {\n                    return embedObject.replaceChild(element, existingChildElement);\n                }\n\n                return embedObject.appendChild(element);\n            });\n        }\n\n        this._element.outerHTML = embedObject.outerHTML;\n\n        // Issue with IE. When you replace the outerHTML the reference to that element does not correctly reflect the changes.\n        // If you want to get the new embed object in the dom you need to query for it.\n        if (envGlobal.document.getElementById) {\n            this._element = envGlobal.document.getElementById(id);\n\n            setupElement.call(this);\n        }\n\n        return this._element;\n    }\n\n    function createParameterElement(name, value) {\n        var parameter = document.createElement('param');\n\n        parameter.setAttribute('name', name);\n        parameter.setAttribute('value', value);\n\n        return parameter;\n    }\n\n    function setupElement() {\n        _.assign(this._element, defaultPropertyValues, {\n            id: this._id,\n            width: this._width,\n            height: this._height,\n            videoWidth: this._width,\n            videoHeight: this._height\n        });\n\n        setupAccessors.call(this);\n        propagateAttributeChanges.call(this);\n        setupVolumeAndMutedListeners.call(this);\n    }\n\n    function setupAccessors() {\n        var that = this;\n\n        envGlobal['__event__' + this._id] = function(eventName, message) {\n            var event = createEvent(eventName, that._element);\n\n            if (message) {\n                try {\n                    event.data = JSON.parse(message);\n                    event.details.data = event.data;\n                } catch (e) {\n                    event.message = message;\n                }\n            }\n\n            switch (eventName) {\n            case 'ended':\n                break;\n            case 'error':\n                that._element.error = event.data;\n\n                if (that._element.dispatchEvent) {\n                    that._element.dispatchEvent(new Error(message));\n                }\n\n                break;\n            case 'loadeddata':\n            case 'loadedmetadata':\n            case 'loadstart':\n                if (that._element.dispatchEvent) {\n                    that._element.dispatchEvent(event);\n                }\n\n                break;\n            case 'pause':\n                that._element.paused = true;\n\n                break;\n            case 'play':\n                that._element.paused = false;\n\n                break;\n            case 'playing':\n                that._element.paused = false;\n\n                break;\n            case 'progress':\n            case 'seeked':\n            case 'seeking':\n            case 'stalled':\n            case 'suspend':\n                if (that._element.dispatchEvent) {\n                    that._element.dispatchEvent(event);\n                }\n\n                break;\n            case 'timeupdate':\n                that._element.currentTime = getValueFromFlash.call(that, 'currentTime');\n\n                if (that._element.dispatchEvent) {\n                    that._element.dispatchEvent(event);\n                }\n\n                break;\n            case 'volumechange':\n                break;\n            case 'waiting':\n                break;\n            default:\n                break;\n            }\n\n            that._events.fireAsync(eventName, [event]);\n        };\n\n        var nativeFullScreen = this._element.requestFullscreen || this._element.mozRequestFullScreen || this._element.webkitRequestFullScreen || this._element.msRequestFullscreen;\n\n        this._disposables.add(new disposable.Disposable(function() {\n            delete envGlobal['__event__' + that._id];\n        }));\n\n        this._element.play = function() {\n            triggerFlashEvent.call(that, 'fire_play');\n        };\n        this._element.load = function() {\n            triggerFlashEvent.call(that, 'fire_load');\n        };\n        this._element.seek = function() {\n            triggerFlashEvent.call(that, 'fire_seek');\n        };\n        this._element.pause = function() {\n            triggerFlashEvent.call(that, 'fire_pause');\n        };\n        this._element.requestFullscreen = function() {\n            that._isFullscreen = true;\n            addListenerForExitFullScreen.call(that);\n\n            that._previousHeight = that._element.style.height;\n            that._previousWidth = that._element.style.width;\n            that._previousPosition = that._element.style.position;\n            that._element.style.position = 'absolute';\n            that._element.style.height = '100%';\n            that._element.style.width = '100%';\n\n            if (typeof envGlobal.ActiveXObject !== \"undefined\") { // Older IE.\n                var wscript = new envGlobal(\"WScript.Shell\");\n\n                if (wscript !== null) {\n                    wscript.SendKeys(\"{F11}\");\n                }\n            }\n\n            nativeFullScreen.call(that._element);\n        };\n\n        var triggerFlashSetSize = function() {\n            triggerFlashEvent.call(that, 'set_size', that._isFullscreen ? screen.width : that._element.clientWidth, that._isFullscreen ? screen.height : that._element.clientHeight);\n        };\n\n        _.addEventListener(envGlobal, 'resize', triggerFlashSetSize);\n\n        this._disposables.add(new disposable.Disposable(function() {\n            _.removeEventListener(envGlobal, 'resize', triggerFlashSetSize);\n        }));\n    }\n\n    // Muted is not an attribute and will not be triggered by MutationObserver changes\n    function setupVolumeAndMutedListeners() {\n        var mutedListener = getMutedListener.call(this);\n        var volumeListener = getVolumeListener.call(this);\n\n        var intervalId = setInterval(function() {\n            mutedListener();\n            volumeListener();\n        }, mutedElementListenerInterval);\n\n        this._disposables.add(new disposable.Disposable(function() {\n            clearInterval(intervalId);\n        }));\n    }\n\n    function getMutedListener() {\n        var that = this;\n        var ghostLastMutedState = that._ghost.muted;\n        var elementLastMutedState = that._element.muted;\n\n        return function() {\n            var newGhostMutedState = that._element.muted;\n            var newElementMutedState = that._element.muted;\n\n            if (newGhostMutedState === ghostLastMutedState && newElementMutedState === elementLastMutedState) {\n                return;\n            }\n\n            if (newGhostMutedState !== ghostLastMutedState) {\n                ghostLastMutedState = newGhostMutedState;\n                elementLastMutedState = newGhostMutedState;\n                newElementMutedState = newGhostMutedState;\n            }\n\n            if (newElementMutedState !== elementLastMutedState) {\n                ghostLastMutedState = newGhostMutedState;\n                elementLastMutedState = newGhostMutedState;\n            }\n\n            that._element.muted = newElementMutedState;\n            that._ghost.muted = newElementMutedState;\n\n            setFlashValue.call(that, 'muted', newElementMutedState);\n        };\n    }\n\n    function getVolumeListener() {\n        var that = this;\n        var ghostLastVolume = that._ghost.volume;\n        var elementLastVolume = that._element.volume;\n\n        return function() {\n            var newGhostVolume = that._element.volume;\n            var newElementVolume = that._element.volume;\n\n            if (newGhostVolume === ghostLastVolume && newElementVolume === elementLastVolume) {\n                return;\n            }\n\n            if (newGhostVolume !== ghostLastVolume) {\n                ghostLastVolume = newGhostVolume;\n                elementLastVolume = newGhostVolume;\n                newElementVolume = newGhostVolume;\n            }\n\n            if (newElementVolume !== elementLastVolume) {\n                ghostLastVolume = newGhostVolume;\n                elementLastVolume = newGhostVolume;\n            }\n\n            that._element.volume = newElementVolume;\n            that._ghost.volume = newElementVolume;\n\n            setFlashValue.call(that, 'volume', newElementVolume);\n        };\n    }\n\n    function setFlashValue(name, value) {\n        var setter = this._element['set_' + name] || _.noop;\n\n        return setter.call(this._element, value);\n    }\n\n    function getValueFromFlash(name) {\n        var getter = this._element['get_' + name] || _.noop;\n\n        return getter.call(this._element);\n    }\n\n    function triggerFlashEvent(eventName) {\n        var triggerEvent = this._element[eventName];\n\n        [].shift.apply(arguments);\n\n        if (triggerEvent) {\n            return triggerEvent.apply(this._element, arguments);\n        }\n    }\n\n    function createEvent(eventName, target) {\n        var eventFrags = eventName.match(/([a-z]+\\.([a-z]+))/i);\n        var detail = {target: target};\n\n        if (eventFrags !== null) {\n            eventName = eventFrags[1];\n            detail.namespace = eventFrags[2];\n        }\n\n        if (browser.browser === 'IE' && browser.version > 8) {\n            var evt = envGlobal.document.createEvent(\"CustomEvent\");\n\n            evt.initCustomEvent(eventName, false, false, detail);\n\n            return evt;\n        }\n\n        if (!envGlobal.CustomEvent) {\n            return detail;\n        }\n\n        return new envGlobal.CustomEvent(eventName, {detail: detail});\n    }\n\n    function propagateAttributeChanges() {\n        var that = this;\n        var ignored = ['currentTime', 'paused', 'error', 'src'];\n\n        if (_.get(envGlobal, ['MutationObserver'])) {\n            // Newer browsers support an efficient way to observe DOM modifications\n            var observer = new MutationObserver(function(mutations) {\n                mutations.forEach(function(mutation) {\n                    if (mutation.type === 'attributes' && mutation.target === that._element && !_.includes(ignored, mutation.attributeName)) {\n                        setFlashValue.call(that, mutation.attributeName, that._element[mutation.attributeName]);\n                    }\n                });\n            });\n\n            var configAttributes = {attributes: true};\n\n            observer.observe(that._element, configAttributes);\n\n            that._disposables.add(new disposable.Disposable(function() {\n                observer.disconnect();\n            }));\n        } else {\n            // For older browsers. There is a significant performance overhead with this method.\n            // See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Mutation_events\n            log('Falling back to use of DOM event listeners. This results in degraded performance for further DOM modifications and does not work for IE prior to version 9. See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Mutation_events for details.');\n\n            var handleModifiedEvent = function handleModifiedEvent(event) {\n                if (!_.includes(ignored, event.target.tagName)) {\n                    setFlashValue.call(that, event.target.tagName, that._element[event.target.tagName]);\n                }\n            };\n\n            if (that._element.addEventListener) {\n                that._element.addEventListener('DOMAttrModified', handleModifiedEvent, false);\n\n                that._disposables.add(new disposable.Disposable(function() {\n                    that._element.removeEventListener('DOMAttrModified', handleModifiedEvent, false);\n                }));\n            } else {\n                that._element.attachEvent('onpropertychange', handleModifiedEvent);\n\n                that._disposables.add(new disposable.Disposable(function() {\n                    that._element.detachEvent('DOMAttrModified', handleModifiedEvent);\n                }));\n            }\n        }\n    }\n\n    function addListenerForExitFullScreen() {\n        var that = this;\n\n        function exitHandler() {\n            if(!document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement && !document.fullscreenElement) {\n                document.removeEventListener('webkitfullscreenchange', exitHandler);\n                document.removeEventListener('mozfullscreenchange', exitHandler);\n                document.removeEventListener('fullscreenchange', exitHandler);\n                document.removeEventListener('MSFullscreenChange', exitHandler);\n                document.removeEventListener('keydown', checkForExit);\n\n                that._isFullscreen = false;\n                that._element.style.position = that._previousPosition;\n                that._element.style.height = that._previousHeight;\n                that._element.style.width = that._previousWidth;\n            }\n        }\n\n        function checkForExit(event) {\n            var keyEvent = event || envGlobal.event;\n            var isEscape = false;\n\n            if (\"key\" in keyEvent) {\n                isEscape = (keyEvent.key === \"Escape\" || keyEvent.key === \"Esc\");\n            } else {\n                isEscape = (keyEvent.keyCode === 27);\n            }\n\n            if (isEscape) {\n                exitHandler();\n            }\n        }\n\n        document.addEventListener('webkitfullscreenchange', exitHandler, false);\n        document.addEventListener('mozfullscreenchange', exitHandler, false);\n        document.addEventListener('fullscreenchange', exitHandler, false);\n        document.addEventListener('MSFullscreenChange', exitHandler, false);\n        document.addEventListener('keydown', checkForExit, false);\n    }\n\n    return FlashPlayer;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__12__;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=phenix-rtc.js.map","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"event\"] = factory();\n\telse\n\t\troot[\"phenix\"] = root[\"phenix\"] || {}, root[\"phenix\"][\"event\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 9);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(8)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(LodashLight) {\n    'use strict';\n\n    return LodashLight;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(4)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(assert) {\n    return assert;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0),\n    __webpack_require__(1),\n    __webpack_require__(7)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(_, assert, disposable) {\n    'use strict';\n\n    function Event() {\n        this._listeners = [];\n    }\n\n    Event.prototype.fire = function(args, context) {\n        fireEvent.call(this, args, context);\n    };\n\n    Event.prototype.fireAsync = function(args, context, callback) {\n        fireEvent.call(this, args, context, callback || function() {});\n    };\n\n    Event.prototype.listen = function(listener) {\n        var that = this;\n\n        assert.isFunction(listener, 'listener');\n\n        that._listeners.push(listener);\n\n        return new disposable.Disposable(function() {\n            that._listeners = _.remove(that._listeners, function(item) {\n                return item === listener;\n            });\n        });\n    };\n\n    Event.prototype.size = function() {\n        return this._listeners.length;\n    };\n\n    Event.prototype.dispose = function() {\n        this._listeners = [];\n    };\n\n    Event.prototype.toString = function() {\n        return 'Event|' + this.size();\n    };\n\n    function fireEvent(args, context, asyncCallback) {\n        var that = this;\n\n        if (_.isNullOrUndefined(args)) {\n            args = [];\n        }\n\n        assert.isArray(args, 'args');\n\n        var notifyListeners = function notifyListeners() {\n            _.forEach(that._listeners, function(listener) {\n                listener.apply(context, args);\n            });\n        };\n\n        if (asyncCallback) {\n            setTimeout(function() {\n                notifyListeners();\n                asyncCallback();\n            }, 0);\n        } else {\n            notifyListeners();\n        }\n    }\n\n    return Event;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0),\n    __webpack_require__(1),\n    __webpack_require__(2)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(_, assert, Event) {\n    'use strict';\n\n    function NamedEvents() {\n        this._events = {};\n    }\n\n    NamedEvents.prototype.fire = function(name, args, context) {\n        assert.isStringNotEmpty(name, 'name');\n\n        if (_.includes(_.keys(this._events), name)) {\n            this._events[name].fire(args, context);\n        }\n    };\n\n    NamedEvents.prototype.fireAsync = function(name, args, context) {\n        assert.isStringNotEmpty(name, 'name');\n\n        if (_.includes(_.keys(this._events), name)) {\n            this._events[name].fireAsync(args, context);\n        }\n    };\n\n    NamedEvents.prototype.listen = function listen(name, listener) {\n        assert.isStringNotEmpty(name, 'name');\n\n        var event = _.includes(_.keys(this._events), name) ? this._events[name] : (this._events[name] = new Event());\n\n        return event.listen(listener);\n    };\n\n    NamedEvents.prototype.size = function size(name) {\n        if (_.includes(_.keys(this._events), name)) {\n            return this._events[name].size();\n        }\n\n        return 0;\n    };\n\n    NamedEvents.prototype.dispose = function dispose() {\n        _.forOwn(this._events, function(event) {\n            event.dispose();\n        });\n\n        this._events = {};\n    };\n\n    NamedEvents.prototype.toString = function toString() {\n        return 'NamedEvents|' + _.keys(this._events).length;\n    };\n\n    return NamedEvents;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(_) {\n    var Assert = function() {\n\n    };\n\n    Assert.prototype.isObject = function isObject(obj, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isObject(obj)) {\n            throw new Error('\"' + name + '\" must be an object. Received [' + typeof obj + ']');\n        }\n    };\n\n    Assert.prototype.isArray = function isArray(array, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isArray(array)) {\n            throw new Error('\"' + name + '\" must be an array. Received [' + typeof array + ']');\n        }\n    };\n\n    Assert.prototype.isString = function isString(string, name) {\n        if (!_.isString(name)) {\n            throw new Error('\"name\" must be a string. Received [' + typeof name + ']');\n        }\n\n        if (!_.isString(string)) {\n            throw new Error('\"' + name + '\" must be a string. Received [' + typeof string + ']');\n        }\n    };\n\n    Assert.prototype.isBoolean = function isBoolean(bool, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isBoolean(bool)) {\n            throw new Error('\"' + name + '\" must be a boolean. Received [' + typeof bool + ']');\n        }\n    };\n\n    Assert.prototype.isNumber = function isNumber(number, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isNumber(number)) {\n            throw new Error('\"' + name + '\" must be a number. Received [' + typeof number + ']');\n        }\n    };\n\n    Assert.prototype.isFunction = function isFunction(callback, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isFunction(callback)) {\n            throw new Error('\"' + name + '\" must be a function. Received [' + typeof callback + ']');\n        }\n    };\n\n    // TODO (dcy) remove once all dependencies have been updated\n    Assert.prototype.stringNotEmpty = function stringNotEmpty(string, name) {\n        Assert.prototype.isStringNotEmpty(string, name);\n    };\n\n    Assert.prototype.isStringNotEmpty = function stringNotEmpty(string, name) {\n        Assert.prototype.isString('name', name);\n        Assert.prototype.isString(string, name);\n\n        if (string === '') {\n            throw new Error('\"' + name + '\" must not be empty');\n        }\n    };\n\n    Assert.prototype.isInstanceOf = function(object, clazz, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isObject(object)) {\n            throw new Error('\"' + name + '\" must be an instance. Received [' + typeof object + ']');\n        }\n\n        if (!(object instanceof clazz)) {\n            throw new Error('\"' + name + '\" must be a valid instance of class ' + _.get(clazz, ['name'], 'undefined'));\n        }\n    };\n\n    Assert.prototype.isNotUndefined = function(value, name) {\n        Assert.prototype.isString('name', name);\n\n        if (_.isUndefined(value)) {\n            throw new Error('\"' + name + '\" must not be undefined');\n        }\n    };\n\n    Assert.prototype.isValidType = function(type, types, name) {\n        Assert.prototype.isStringNotEmpty(name, 'name');\n\n        var typeName = _.getEnumName(types, type);\n\n        if (_.isNullOrUndefined(typeName)) {\n            throw new Error('\"' + name + '\" must be a valid type. Unable to locate type [' + type + ']');\n        }\n\n        return typeName;\n    };\n\n    Assert.prototype.isArrayOfString = function(value, name) {\n        Assert.prototype.isString(name, 'name');\n        Assert.prototype.isArray(value, name);\n\n        _.forEach(value, function(val, key) {\n            Assert.prototype.isString(val, name + '[' + key + ']');\n        });\n    };\n\n    return new Assert();\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0),\n    __webpack_require__(1)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(_, assert) {\n    'use strict';\n\n    /**\n     * Create a new disposable object.\n     *\n     * @param cleanup The callback to perform whatever cleanup is required when this object is disposed.\n     * @constructor\n     */\n    function Disposable(cleanup) {\n        assert.isFunction(cleanup, 'cleanup');\n\n        this._cleanup = cleanup;\n    }\n\n    Disposable.prototype.dispose = function() {\n        return this._cleanup.call();\n    };\n\n    Disposable.prototype.toString = function() {\n        return _.toString(this);\n    };\n\n    return Disposable;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(_) {\n    'use strict';\n\n    function DisposableList() {\n        this._list = [];\n    }\n\n    DisposableList.prototype.add = function(disposable) {\n        if (!disposable || !_.isFunction(disposable.dispose)) {\n            throw new Error('\"disposable\" must be a disposable or implement dispose');\n        }\n\n        this._list.push(disposable);\n    };\n\n    DisposableList.prototype.dispose = function() {\n        var results = [];\n\n        _.forEach(this._list, function(disposable) {\n            results.push(disposable.dispose());\n        });\n\n        this._list = [];\n\n        return results;\n    };\n\n    DisposableList.prototype.toString = function() {\n        return _.toString(this);\n    };\n\n    return DisposableList;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(5),\n    __webpack_require__(6)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(Disposable, DisposableList) {\n    return {\n        Disposable: Disposable,\n        DisposableList: DisposableList\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n    'use strict';\n\n    var _ = function() {\n\n    };\n\n    _.clone = function clone(value) {\n        if (_.isArray(value)) {\n            return value.slice();\n        }\n\n        if (_.isObject(value)) {\n            return _.assign({}, value);\n        }\n\n        return value;\n    };\n\n    _.get = function get(objectToTraverse, path, defaultValue) {\n        if (_.isNullOrUndefined(objectToTraverse)) {\n            return defaultValue;\n        }\n\n        assertIsObject(objectToTraverse, 'objectToTraverse');\n\n        var properties = path;\n\n        if (_.isString(properties)) {\n            properties = buildPathFromString(path);\n        } else if (!_.isArray(properties)) {\n            throw new Error('Unsupported path type ' + typeof path);\n        }\n\n        var valueAtPath = _.reduce(properties, function(valueAtPath, prop) {\n            if (_.isObject(valueAtPath) || _.isArray(valueAtPath)) {\n                return valueAtPath[prop];\n            }\n\n            return;\n        }, objectToTraverse);\n\n        return _.isUndefined(valueAtPath) ? defaultValue : valueAtPath;\n    };\n\n    _.set = function get(objectToTraverse, path, value) {\n        if (!_.isObject(objectToTraverse)) {\n            return objectToTraverse;\n        }\n\n        assertIsObject(objectToTraverse, 'objectToTraverse');\n\n        var currentLocation = objectToTraverse;\n        var properties = path;\n\n        if (_.isString(properties)) {\n            properties = buildPathFromString(path);\n        } else if (!_.isArray(properties)) {\n            throw new Error('Unsupported path type ' + typeof path);\n        }\n\n        _.forEach(properties, function(prop, index) {\n            setNextValue(currentLocation, prop, getNextValue(properties, index, currentLocation, value));\n\n            currentLocation = currentLocation[prop];\n        });\n\n        return objectToTraverse;\n    };\n\n    _.bind = function bind(callback, that) {\n        var argsAfterContext = Array.prototype.slice.call(arguments, 2);\n\n        return function boundFunction() {\n            if (!_.isFunction(callback)) {\n                throw new TypeError('_.bind - callback must be a function. Received [' + typeof callback + ']');\n            }\n\n            var combinedArguments = argsAfterContext.concat(Array.prototype.slice.call(arguments));\n\n            return callback.apply(that, combinedArguments);\n        };\n    };\n\n    _.now = function now() {\n        return new Date().getTime();\n    };\n\n    _.utc = function utc(date) {\n        if (_.isNumber(date)) {\n            return date;\n        } else if (!date) {\n            return NaN;\n        }\n\n        return Math.floor(date);\n    };\n\n    _.isoString = function isoString() {\n        var now = new Date();\n\n        if (now.toISOString) {\n            return now.toISOString();\n        }\n\n        return now.getUTCFullYear() +\n            '-' + _.pad(now.getUTCMonth() + 1, 2) +\n            '-' + _.pad(now.getUTCDate(), 2) +\n            'T' + _.pad(now.getUTCHours(), 2) +\n            ':' + _.pad(now.getUTCMinutes(), 2) +\n            ':' + _.pad(now.getUTCSeconds(), 2) +\n            '.' + (now.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n            'Z';\n    };\n\n    _.map = function map(collection, callback) {\n        assertIsObject(collection, 'collection');\n\n        var newArray = [];\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, function mapCollection(item, index) {\n                if (_.isString(callback) && _.isObject(item)) {\n                    newArray.push(item[callback]);\n                } else if (_.isFunction(callback)) {\n                    newArray.push(callback(item, index));\n                }\n            });\n        } else {\n            _.forOwn(collection, function mapCollection(value, key) {\n                if (_.isFunction(callback)) {\n                    newArray.push(callback(value, key));\n                }\n            });\n        }\n\n        return newArray;\n    };\n\n    _.values = function(collection) {\n        if (!_.isObject(collection) || _.isArray(collection)) {\n            throw new Error('_.values argument, Collection, must be an object. Received [' + typeof collection + ']');\n        }\n\n        return _.map(collection, function(value) {\n            return value;\n        });\n    };\n\n    _.keys = function(collection) {\n        if (!_.isObject(collection) || _.isArray(collection)) {\n            throw new Error('_.keys argument, Collection, must be an object. Received [' + typeof collection + ']');\n        }\n\n        return _.map(collection, function(value, key) {\n            return key;\n        });\n    };\n\n    _.forEach = function forEach(collection, callback) {\n        if (!_.isFunction(callback)) {\n            throw new Error('_.forEach argument, Callback, must be a function. Received [' + typeof callback + ']');\n        }\n\n        assertIsArray(collection, 'collection');\n\n        for (var i = 0; i < collection.length; i++) {\n            var callbackResponse = callback(collection[i], i);\n\n            if (callbackResponse === false) {\n                return;\n            }\n        }\n    };\n\n    _.forOwn = function forOwn(objectWithProperties, callback) {\n        if (!_.isFunction(callback)) {\n            throw new Error('Callback must be a function. Received [' + typeof callback + ']');\n        }\n\n        assertIsObject(objectWithProperties, 'objectWithProperties');\n\n        var keys = Object.keys(objectWithProperties);\n\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n\n            if (objectWithProperties.hasOwnProperty(key) || Object.prototype.hasOwnProperty.call(objectWithProperties, key)) {\n                var callbackResponse = callback(objectWithProperties[key], key);\n\n                if (callbackResponse === false) {\n                    return;\n                }\n            }\n        }\n    };\n\n    _.argumentsToArray = function(args) {\n        if (!_.isObject(args) || !args.length) {\n            throw new Error('Collection must be arguments. Received [' + typeof args + ']');\n        }\n\n        var collection = [];\n\n        for (var i = 0; i < args.length; i++) {\n            collection.push(args[i]);\n        }\n\n        return collection;\n    };\n\n    _.assign = function assign(target) {\n        if (_.isNullOrUndefined(target)) {\n            target = {};\n        }\n\n        assertIsObject(target, 'target');\n\n        var sources = _.argumentsToArray(arguments);\n\n        sources.shift();\n\n        _.forEach(sources, function(source, index) {\n            if (_.isNullOrUndefined(source)) {\n                return;\n            }\n\n            assertIsObject(source, '_.assign(sources[' + index + '])');\n\n            _.forOwn(source, function(value, key) {\n                target[key] = value;\n            });\n        });\n\n        return target;\n    };\n\n    _.includes = function includes(collection, value) {\n        if (_.isString(collection)) {\n            assertIsString(value, 'Includes value and search parameter');\n\n            return collection.indexOf(value) > -1;\n        }\n\n        if (_.isUndefined(collection) || _.isUndefined(value)) {\n            return false;\n        }\n\n        assertIsObject(collection, 'collection');\n\n        var hasValue = false;\n\n        var checkCollection = function checkCollection(currentValue) {\n            if (currentValue === value) {\n                hasValue = true;\n\n                return false;\n            }\n        };\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, checkCollection);\n        } else {\n            _.forOwn(collection, checkCollection);\n        }\n\n        return hasValue;\n    };\n\n    _.reduce = function reduce(collection, callback, initialValue) {\n        assertIsObject(collection, 'collection');\n\n        var result = initialValue === _.noop() ? null : initialValue;\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, function(item, index) {\n                result = callback(result, item, index);\n            });\n        } else {\n            _.forOwn(collection, function(value, key) {\n                result = callback(result, value, key);\n            });\n        }\n\n        return result;\n    };\n\n    _.sample = function sample(collection) {\n        assertIsArray(collection, 'collection');\n\n        return collection[Math.floor(Math.random() * collection.length)];\n    };\n\n    _.uniqueId = function() {\n        return (_.now() * Math.random()).toString();\n    };\n\n    _.find = function find(collection, callback, initialIndex) {\n        assertIsArray(collection, 'collection');\n\n        var item = undefined;\n\n        _.forEach(collection, function findInCollection(value, index) {\n            if (callback(value) && index >= (initialIndex || 0)) {\n                item = value;\n\n                return false;\n            }\n        });\n\n        return item;\n    };\n\n    _.findIndex = function find(collection, callback, initialIndex) {\n        assertIsArray(collection, 'collection');\n\n        var itemIndex = -1;\n\n        _.forEach(collection, function findInCollection(value, index) {\n            if (callback(value, index) && index >= (initialIndex || 0)) {\n                itemIndex = index;\n\n                return false;\n            }\n        });\n\n        return itemIndex;\n    };\n\n    _.filter = function filter(collection, callback) {\n        assertIsArray(collection, 'collection');\n\n        var newCollection = [];\n\n        _.forEach(collection, function findInCollection(value) {\n            if (callback(value)) {\n                newCollection.push(value);\n            }\n        });\n\n        return newCollection;\n    };\n\n    _.remove = function remove(collection, callback) {\n        assertIsArray(collection, 'collection');\n\n        var filterCallback = function filterCallback(value) {\n            return !callback(value);\n        };\n\n        return _.filter(collection, filterCallback);\n    };\n\n    _.take = function take(collection, size) {\n        assertIsArray(collection, 'collection');\n\n        return collection.slice(0, size);\n    };\n\n    _.hasDifferences = function hasDifferences(collectionA, collectionB, deep) {\n        return _.findDifferences(collectionA, collectionB, deep).length > 0;\n    };\n\n    _.findDifferences = function findDifferences(collectionA, collectionB, deep) {\n        var differences = [];\n        var visitedKeys = {};\n\n        function getDifferences(value, indexOrKey) {\n            visitedKeys[indexOrKey] = 1;\n\n            if ((_.isObject(value) || _.isArray(value)) && deep) {\n                if (!_.hasIndexOrKey(collectionB, indexOrKey)) {\n                    differences.push(indexOrKey);\n                } else if (!_.sameTypes(collectionA[indexOrKey], collectionB[indexOrKey])) {\n                    differences.push(indexOrKey);\n                } else if (_.hasDifferences(collectionA[indexOrKey], collectionB[indexOrKey], deep)) {\n                    differences.push(indexOrKey);\n                }\n            } else if (collectionA[indexOrKey] !== collectionB[indexOrKey]) {\n                differences.push(indexOrKey);\n            }\n        }\n\n        if (_.isArray(collectionA) && _.isArray(collectionB)) {\n            if (collectionA.length > collectionB.length) {\n                _.forEach(collectionA, getDifferences);\n            } else {\n                _.forEach(collectionB, getDifferences);\n            }\n        } else if (_.isObject(collectionA) && _.isObject(collectionB) && !_.isArray(collectionA) && !_.isArray(collectionB)) {\n            _.forOwn(collectionA, getDifferences);\n\n            _.forOwn(collectionB, function(value, key) {\n                if (!visitedKeys.hasOwnProperty(key)) {\n                    differences.push(key);\n                }\n            });\n        } else {\n            throw new Error('Object types do not match');\n        }\n\n        return differences;\n    };\n\n    _.hasIndexOrKey = function hasIndexOrKey(collection, indexOrKey) {\n        if (_.isArray(collection)) {\n            return collection.length > parseInt(indexOrKey);\n        } else if (_.isObject(collection)) {\n            return collection.hasOwnProperty(indexOrKey);\n        }\n\n        return false;\n    };\n\n    _.startsWith = function startsWith(value, prefix) {\n        assertIsString(value, 'value');\n        assertIsString(prefix, 'prefix');\n\n        return value.indexOf(prefix) === 0;\n    };\n\n    _.endsWith = function endsWith(value, postfix) {\n        assertIsString(value, 'value');\n        assertIsString(postfix, 'postfix');\n\n        var start = value.length - postfix.length;\n\n        return value.indexOf(postfix, start) === start;\n    };\n\n    _.sameTypes = function sameTypes(first, second) {\n        if (_.isNullOrUndefined(first) || _.isNullOrUndefined(second)) {\n            return _.isNullOrUndefined(first) && _.isNullOrUndefined(second);\n        }\n\n        if (_.isArray(first) || _.isArray(second)) {\n            return _.isArray(first) && _.isArray(second);\n        }\n\n        return typeof first === typeof second;\n    };\n\n    _.freeze = function freeze(obj) {\n        if ('freeze' in Object) {\n            return Object.freeze(obj);\n        }\n\n        return obj;\n    };\n\n    _.noop = function() {\n        return undefined;\n    };\n\n    _.isObject = function isObject(obj) {\n        if (obj === null) {\n            return false;\n        }\n\n        return typeof obj === 'object';\n    };\n\n    _.isArray = function isArray(array) {\n        if (!_.isObject(array)) {\n            return false;\n        }\n\n        return array.constructor === Array;\n    };\n\n    _.isString = function isString(string) {\n        return typeof string === 'string';\n    };\n\n    _.isNumber = function isNumber(number) {\n        if (isNaN(number)) {\n            return false;\n        }\n\n        return typeof number === 'number';\n    };\n\n    _.isBoolean = function isBoolean(bool) {\n        return typeof bool === 'boolean';\n    };\n\n    _.isFunction = function isFunction(func) {\n        return typeof func === 'function';\n    };\n\n    _.isNullOrUndefined = function isNullOrUndefined(value) {\n        return value === null || _.isUndefined(value);\n    };\n\n    _.isUndefined = function isUndefined(value) {\n        return typeof value === 'undefined';\n    };\n\n    _.getEnumName = function getEnumName(enums, nameOrId) {\n        var enumObject = null;\n\n        var enumArray = _.map(enums, function(value) {\n            return value;\n        });\n\n        if (_.isNumber(nameOrId)) {\n            enumObject = _.find(enumArray, function(current) {\n                return current.id === nameOrId;\n            });\n        } else if (_.isString(nameOrId)) {\n            enumObject = _.find(enumArray, function(current) {\n                return current.name.toLowerCase() === nameOrId.toLowerCase();\n            });\n        }\n\n        if (enumObject) {\n            return enumObject.name;\n        }\n\n        return null;\n    };\n\n    _.toString = function toString(data) {\n        if (_.isString(data)) {\n            return data;\n        }\n\n        if (_.isBoolean(data)) {\n            return data ? 'true' : 'false';\n        }\n\n        if (_.isNumber(data)) {\n            return data.toString();\n        }\n\n        var toStringStr = '';\n\n        if (data) {\n            if (_.isFunction(data.toString)) {\n                toStringStr = data.toString();\n            } else if (_.isObject(data.toString)) {\n                try {\n                    toStringStr = data.toString();\n                } catch (e) {\n                    toStringStr = '[object invalid toString()]';\n                }\n            }\n        }\n\n        if (toStringStr.indexOf('[object') !== 0) {\n            return toStringStr;\n        }\n\n        var cache = [];\n\n        return toStringStr + JSON.stringify(data, function(key, value) {\n            if (_.isObject(value) && !_.isNullOrUndefined(value)) {\n                if (_.includes(cache, value)) {\n                    return '<recursive>';\n                }\n\n                cache.push(value);\n            }\n\n            return key === '' ? value : _.toString(value);\n        });\n    };\n\n    _.pad = function padNumber(value, numberToPad) {\n        assertIsNumber(value, 'value');\n        assertIsNumber(numberToPad, 'numberToPad');\n\n        var valueLength = value.toString().length;\n\n        for (var i = 0; i < numberToPad - valueLength; i++) {\n            value = '0' + value.toString();\n        }\n\n        return value.toString();\n    };\n\n    _.addEventListener = function addEventListener(target, eventName, listener, useCapture) {\n        assertIsObject(target, 'target');\n        assertIsString(eventName, 'eventName');\n        assertIsFunction(listener, 'listener');\n\n        if (target.phenixAddEventListener) {\n            target.phenixAddEventListener.call(target, eventName, listener, !!useCapture);\n        } else if (target.addEventListener) {\n            target.addEventListener(eventName, listener, !!useCapture);\n        } else if (target.attachEvent) {\n            target.attachEvent(\"on\" + eventName, listener);\n        }\n    };\n\n    _.removeEventListener = function removeEventListener(target, eventName, listener, useCapture) {\n        assertIsObject(target, 'target');\n        assertIsString(eventName, 'eventName');\n        assertIsFunction(listener, 'listener');\n\n        if (target.phenixRemoveEventListener) {\n            target.phenixRemoveEventListener.call(target, eventName, listener, !!useCapture);\n        } else if (target.removeEventListener) {\n            target.removeEventListener(eventName, listener, !!useCapture);\n        } else if (target.detachEvent) {\n            target.detachEvent(\"on\" + eventName, listener);\n        }\n    };\n\n    var assertIsArray = function assertIsArray(collection) {\n        if (!_.isArray(collection)) {\n            throw new Error('Input must be an array. Received [' + typeof collection + ']');\n        }\n    };\n\n    var assertIsNumber = function assertIsNumber(number, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isNumber(number)) {\n            throw new Error(name + ' must be a number. Received [' + typeof number + ']');\n        }\n    };\n\n    var assertIsObject = function assertIsObject(collection, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isObject(collection)) {\n            throw new Error('collection type not supported - ' + name + ' must be an array or object. Received [' + typeof collection + ']');\n        }\n    };\n\n    var assertIsFunction = function assertIsFunction(callback, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isFunction(callback)) {\n            throw new Error(name + ' must be a function. Received [' + typeof callback + ']');\n        }\n    };\n\n    var assertIsString = function assertIsString(value, name) {\n        if (!_.isString(name)) {\n            throw new Error('Name must be a string. Received [' + typeof name + ']');\n        }\n\n        if (!_.isString(value)) {\n            throw new Error(name + ' must be a string. Received [' + typeof value + ']');\n        }\n    };\n\n    function buildPathFromString(stringPath) {\n        var properties = stringPath.split('.');\n        var path = [];\n\n        _.forEach(properties, function(prop) {\n            path = path.concat(buildSubPathFromString(prop));\n        });\n\n        return path;\n    }\n\n    function buildSubPathFromString(stringPath) {\n        var possibleSubPath = '';\n        var path = [];\n        var countOfOpeningBrackets = 0;\n\n        for (var i = 0; i < stringPath.length; i++) {\n            if (stringPath[i] === '[') {\n                countOfOpeningBrackets++;\n\n                if (!_.isString(possibleSubPath) || countOfOpeningBrackets > 1) {\n                    return [stringPath];\n                }\n\n                if (possibleSubPath) {\n                    path.push(possibleSubPath);\n                    possibleSubPath = '';\n                }\n            } else if (stringPath[i] === ']') {\n                countOfOpeningBrackets--;\n\n                if (countOfOpeningBrackets !== 0) {\n                    return [stringPath];\n                }\n\n                path.push(possibleSubPath);\n                possibleSubPath = '';\n            } else if (i === stringPath.length - 1) {\n                return [stringPath];\n            } else {\n                possibleSubPath += stringPath[i];\n            }\n        }\n\n        return path;\n    }\n\n    function getNextValue(path, index, currentLocation, value) {\n        if (path.length - 1 === index) {\n            return value;\n        }\n\n        var currentPropOrIndex = path[index];\n        var nextPropOrIndex = path[index + 1];\n\n        if (_.isArray(currentLocation[currentPropOrIndex]) || _.isObject(currentLocation[currentPropOrIndex])) {\n            return currentLocation[currentPropOrIndex];\n        }\n\n        if (!_.isArray(currentLocation[currentPropOrIndex]) && _.isNumber(parseInt(nextPropOrIndex))) {\n            return [];\n        } else if (!_.isObject(currentLocation[currentPropOrIndex]) && _.isString(nextPropOrIndex)) {\n            return {};\n        }\n\n        throw new Error('Unsupported type ' + typeof currentPropOrIndex + ' when setting property or index');\n    }\n\n    function setNextValue(objectToTraverse, propertyOrIndex, value) {\n        if (_.isNumber(parseInt(propertyOrIndex)) && _.isArray(objectToTraverse)) {\n            return objectToTraverse[propertyOrIndex] = value;\n        } else if (_.isString(propertyOrIndex) && _.isObject(objectToTraverse)) {\n            return objectToTraverse[propertyOrIndex] = value;\n        }\n\n        throw new Error('Unsupported type ' + typeof propertyOrIndex + ' when setting property or index');\n    }\n\n    return _;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(2),\n    __webpack_require__(3)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(Event, NamedEvents) {\n    return {\n        Event: Event,\n        NamedEvents: NamedEvents\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=phenix-web-event.js.map","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './Observable',\n    './ObservableArray',\n    './ObservableMonitor'\n], function(Observable, ObservableArray, ObservableMonitor) {\n    'use strict';\n\n    return {\n        Observable: Observable,\n        ObservableArray: ObservableArray,\n        ObservableMonitor: ObservableMonitor\n    };\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n], function() {\n    'use strict';\n\n    var streamEnums = {\n        networkStates: {\n            networkEmpty: {\n                id: 0,\n                name: 'NETWORK_EMPTY'\n            },\n            networkIdle: {\n                id: 1,\n                name: 'NETWORK_IDLE'\n            },\n            networkLoading: {\n                id: 2,\n                name: 'NETWORK_LOADING'\n            },\n            networkNoSource: {\n                id: 3,\n                name: 'NETWORK_NO_SOURCE'\n            }\n        },\n        types: {\n            realTime: {\n                id: 0,\n                name: 'real-time'\n            },\n            dash: {\n                id: 1,\n                name: 'dash'\n            },\n            hls: {\n                id: 2,\n                name: 'hls'\n            },\n            rtmp: {\n                id: 0,\n                name: 'rtmp'\n            }\n        },\n        streamEvents: {\n            playerEnded: {\n                id: 0,\n                name: 'playerended'\n            },\n            playerError: {\n                id: 1,\n                name: 'playererror'\n            },\n            stopped: {\n                id: 2,\n                name: 'stopped'\n            }\n        },\n        rendererEvents: {\n            ended: {\n                id: 0,\n                name: 'ended'\n            },\n            error: {\n                id: 1,\n                name: 'error'\n            },\n            autoMuted: {\n                id: 2,\n                name: 'autoMuted'\n            },\n            failedToPlay: {\n                id: 3,\n                name: 'failedToPlay'\n            }\n        }\n    };\n\n    return streamEnums;\n});","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar logDisabled_ = true;\nvar deprecationWarnings_ = true;\n\n// Utility methods.\nvar utils = {\n  disableLog: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    logDisabled_ = bool;\n    return (bool) ? 'adapter.js logging disabled' :\n        'adapter.js logging enabled';\n  },\n\n  /**\n   * Disable or enable deprecation warnings\n   * @param {!boolean} bool set to true to disable warnings.\n   */\n  disableWarnings: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    deprecationWarnings_ = !bool;\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n  },\n\n  log: function() {\n    if (typeof window === 'object') {\n      if (logDisabled_) {\n        return;\n      }\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\n        console.log.apply(console, arguments);\n      }\n    }\n  },\n\n  /**\n   * Shows a deprecation warning suggesting the modern and spec-compatible API.\n   */\n  deprecated: function(oldMethod, newMethod) {\n    if (!deprecationWarnings_) {\n      return;\n    }\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n        ' instead.');\n  },\n\n  /**\n   * Extract browser version out of the provided user agent string.\n   *\n   * @param {!string} uastring userAgent string.\n   * @param {!string} expr Regular expression used as match criteria.\n   * @param {!number} pos position in the version string to be returned.\n   * @return {!number} browser version.\n   */\n  extractVersion: function(uastring, expr, pos) {\n    var match = uastring.match(expr);\n    return match && match.length >= pos && parseInt(match[pos], 10);\n  },\n\n  /**\n   * Browser detector.\n   *\n   * @return {object} result containing browser and version\n   *     properties.\n   */\n  detectBrowser: function(window) {\n    var navigator = window && window.navigator;\n\n    // Returned result object.\n    var result = {};\n    result.browser = null;\n    result.version = null;\n\n    // Fail early if it's not a browser\n    if (typeof window === 'undefined' || !window.navigator) {\n      result.browser = 'Not a browser.';\n      return result;\n    }\n\n    // Firefox.\n    if (navigator.mozGetUserMedia) {\n      result.browser = 'firefox';\n      result.version = this.extractVersion(navigator.userAgent,\n          /Firefox\\/(\\d+)\\./, 1);\n    } else if (navigator.webkitGetUserMedia) {\n      // Chrome, Chromium, Webview, Opera, all use the chrome shim for now\n      if (window.webkitRTCPeerConnection) {\n        result.browser = 'chrome';\n        result.version = this.extractVersion(navigator.userAgent,\n          /Chrom(e|ium)\\/(\\d+)\\./, 2);\n      } else { // Safari (in an unpublished version) or unknown webkit-based.\n        if (navigator.userAgent.match(/Version\\/(\\d+).(\\d+)/)) {\n          result.browser = 'safari';\n          result.version = this.extractVersion(navigator.userAgent,\n            /AppleWebKit\\/(\\d+)\\./, 1);\n        } else { // unknown webkit-based browser.\n          result.browser = 'Unsupported webkit-based browser ' +\n              'with GUM support but no WebRTC support.';\n          return result;\n        }\n      }\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n      result.browser = 'edge';\n      result.version = this.extractVersion(navigator.userAgent,\n          /Edge\\/(\\d+).(\\d+)$/, 2);\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n        // Safari, with webkitGetUserMedia removed.\n      result.browser = 'safari';\n      result.version = this.extractVersion(navigator.userAgent,\n          /AppleWebKit\\/(\\d+)\\./, 1);\n    } else { // Default fallthrough: not supported.\n      result.browser = 'Not a supported browser.';\n      return result;\n    }\n\n    return result;\n  },\n\n  // shimCreateObjectURL must be called before shimSourceObject to avoid loop.\n\n  shimCreateObjectURL: function(window) {\n    var URL = window && window.URL;\n\n    if (!(typeof window === 'object' && window.HTMLMediaElement &&\n          'srcObject' in window.HTMLMediaElement.prototype)) {\n      // Only shim CreateObjectURL using srcObject if srcObject exists.\n      return undefined;\n    }\n\n    var nativeCreateObjectURL = URL.createObjectURL.bind(URL);\n    var nativeRevokeObjectURL = URL.revokeObjectURL.bind(URL);\n    var streams = new Map(), newId = 0;\n\n    URL.createObjectURL = function(stream) {\n      if ('getTracks' in stream) {\n        var url = 'polyblob:' + (++newId);\n        streams.set(url, stream);\n        utils.deprecated('URL.createObjectURL(stream)',\n            'elem.srcObject = stream');\n        return url;\n      }\n      return nativeCreateObjectURL(stream);\n    };\n    URL.revokeObjectURL = function(url) {\n      nativeRevokeObjectURL(url);\n      streams.delete(url);\n    };\n\n    var dsc = Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,\n                                              'src');\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'src', {\n      get: function() {\n        return dsc.get.apply(this);\n      },\n      set: function(url) {\n        this.srcObject = streams.get(url) || null;\n        return dsc.set.apply(this, [url]);\n      }\n    });\n\n    var nativeSetAttribute = window.HTMLMediaElement.prototype.setAttribute;\n    window.HTMLMediaElement.prototype.setAttribute = function() {\n      if (arguments.length === 2 &&\n          ('' + arguments[0]).toLowerCase() === 'src') {\n        this.srcObject = streams.get(arguments[1]) || null;\n      }\n      return nativeSetAttribute.apply(this, arguments);\n    };\n  }\n};\n\n// Export.\nmodule.exports = {\n  log: utils.log,\n  deprecated: utils.deprecated,\n  disableLog: utils.disableLog,\n  disableWarnings: utils.disableWarnings,\n  extractVersion: utils.extractVersion,\n  shimCreateObjectURL: utils.shimCreateObjectURL,\n  detectBrowser: utils.detectBrowser.bind(utils)\n};\n","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine(['./getGlobal'], function(getGlobal) {\n    'use strict';\n\n    return getGlobal();\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './http'\n], function(http) {\n    'use strict';\n\n    return http;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([], function() {\n    'use strict';\n\n    function Dummy() {}\n\n    return Dummy;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './Logger',\n    './ConsoleAppender',\n    './logging.json'\n], function(Logger, ConsoleAppender, logging) {\n    'use strict';\n\n    return {\n        createLogger: function() {\n            return new Logger();\n        }, // Base logger with nothing appended\n        Logger: Logger,\n        ConsoleAppender: ConsoleAppender,\n        level: logging.level // Object with log levels\n    };\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event'\n], function(_, assert, event) {\n    'use strict';\n\n    var defaultPollFrequency = 500;\n    var minimumPollFrequency = 15;\n\n    function DimensionsChangedMonitor(logger, options) {\n        assert.isObject(logger, 'logger');\n\n        this._logger = logger;\n        this._dimensionsChangedEvent = new event.Event();\n        this._dimensionsChangedIntervalId = null;\n        this._toBeStarted = false;\n        this._videoElement = null;\n        this._dimensionsChangedData = {\n            pollFrequency: defaultPollFrequency,\n            previousWidth: 0,\n            previousHeight: 0\n        };\n\n        if (options && options.pollFrequency) {\n            this._dimensionsChangedData.pollFrequency = options.pollFrequency >= minimumPollFrequency ? options.pollFrequency : minimumPollFrequency;\n        }\n\n        this._renderer = null;\n    }\n\n    DimensionsChangedMonitor.prototype.start = function start(renderer, element) {\n        startMonitor.call(this, renderer, element);\n    };\n\n    DimensionsChangedMonitor.prototype.stop = function stop() {\n        stopMonitor.call(this);\n    };\n\n    DimensionsChangedMonitor.prototype.addVideoDisplayDimensionsChangedCallback = function addVideoDisplayDimensionsChangedCallback(callback) {\n        assert.isFunction(callback, 'addVideoDisplayDimensionsChangedCallback');\n        startInterval.call(this);\n\n        return this._dimensionsChangedEvent.listen(callback);\n    };\n\n    DimensionsChangedMonitor.prototype.toString = function() {\n        return 'DimensionsChangedMonitor[pollFrequency=' + this._dimensionsChangedData.pollFrequency +\n            ', previousHeight=' + this._dimensionsChangedData.previousHeight +\n            ', previousWidth=' + this._dimensionsChangedData.previousHeight +\n            ', state=' + (this._dimensionsChangedIntervalId ? 'running' : 'stopped') + ']';\n    };\n\n    function startMonitor(renderer, element) {\n        if (!element || _.isUndefined(element.videoWidth)) {\n            this._logger.warn(\"Attempting to start dimensions changed monitor without providing proper 'video' element.\");\n        }\n\n        this._renderer = renderer;\n        this._videoElement = element;\n        this._toBeStarted = true;\n        startInterval.call(this);\n    }\n\n    function stopMonitor() {\n        this._toBeStarted = false;\n\n        if (this._dimensionsChangedIntervalId) {\n            clearInterval(this._dimensionsChangedIntervalId);\n            this._dimensionsChangedIntervalId = null;\n        }\n\n        this._dimensionsChangedEvent.dispose();\n    }\n\n    function startInterval() {\n        // Return if either:\n        // - start hasn't been called yet\n        // - the interval is already running\n        // - there is no callback yet\n        if (!this._toBeStarted || this._dimensionsChangedIntervalId || this._dimensionsChangedEvent.size() === 0) {\n            return;\n        }\n\n        var that = this;\n        this._dimensionsChangedData.previousWidth = this._videoElement.videoWidth;\n        this._dimensionsChangedData.previousHeight = this._videoElement.videoHeight;\n\n        this._dimensionsChangedIntervalId = setInterval(function checkVideoDimensions() {\n            if (that._videoElement.videoWidth !== that._dimensionsChangedData.previousWidth || that._videoElement.videoHeight !== that._dimensionsChangedData.previousHeight) {\n                that._dimensionsChangedData.previousWidth = that._videoElement.videoWidth;\n                that._dimensionsChangedData.previousHeight = that._videoElement.videoHeight;\n\n                that._dimensionsChangedEvent.fireAsync([that._renderer, {\n                    width: that._videoElement.videoWidth,\n                    height: that._videoElement.videoHeight\n                }]);\n            }\n        }, that._dimensionsChangedData.pollFrequency);\n    }\n\n    return DimensionsChangedMonitor;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-detect-browser'\n], function(_, DetectBrowser) {\n    'use strict';\n\n    var environment = {};\n    var browser = new DetectBrowser(navigator.userAgent).detect();\n\n    environment.getEnvironmentFromUrl = function(uri) {\n        try {\n            var baseURL;\n\n            if (URL && browser.browser !== 'IE') {\n                baseURL = new URL(uri);\n            } else {\n                baseURL = getLocation(uri);\n            }\n\n            if (baseURL.port) {\n                return baseURL.protocol + '//' + baseURL.hostname + ':' + baseURL.port;\n            }\n\n            return baseURL.protocol + '//' + baseURL.hostname;\n        } catch (e) {\n            return '';\n        }\n    };\n\n    environment.parseEnvFromPcastBaseUri = function(uri) {\n        uri = uri.toLowerCase();\n\n        if (_.includes(uri, 'local')) {\n            return 'local';\n        } else if (_.includes(uri, 'stg')) {\n            return 'staging';\n        }\n\n        return 'production';\n    };\n\n    environment.getTelemetryServerUri = function(baseUri) {\n        if (!baseUri) {\n            return '';\n        }\n\n        try {\n            var baseURL;\n\n            if (URL && browser.browser !== 'IE') {\n                baseURL = new URL(baseUri);\n            } else {\n                baseURL = getLocation(baseUri);\n            }\n\n            var segments = baseURL.hostname.split('.');\n\n            if (segments.length === 2 ||\n                (segments.length === 3 && segments[segments.length - 2].length <= 2 && segments[segments.length - 1].length <= 3)\n            ) {\n                segments.unshift('telemetry');\n            } else if (_.startsWith(segments[0], 'stg-') || _.endsWith(segments[0], '-stg') || _.includes(segments[0], '-stg-') || segments[0] === 'stg') {\n                segments[0] = 'telemetry-stg';\n            } else if (_.startsWith(segments[0], 'local') || _.endsWith(segments[0], 'local')) {\n                // Leave URL unchanged\n            } else {\n                segments[0] = 'telemetry';\n            }\n\n            baseURL.hostname = segments.join('.');\n\n            switch (baseURL.protocol) {\n            case 'ws:':\n                baseURL.protocol = 'http:';\n\n                break;\n            case 'wss:':\n                baseURL.protocol = 'https:';\n\n                break;\n\n            default:\n                break;\n            }\n\n            if (baseURL.port) {\n                return baseURL.protocol + '//' + baseURL.hostname + ':' + baseURL.port + '/telemetry';\n            }\n\n            return baseURL.protocol + '//' + baseURL.hostname + '/telemetry';\n        } catch (e) {\n            return baseUri;\n        }\n    };\n\n    function getLocation(url) {\n        var match = url.match(/^(https?\\:)\\/\\/(([^:\\/?#]*)(?:\\:([0-9]+))?)([\\/]{0,1}[^?#]*)(\\?[^#]*|)(#.*|)$/); // eslint-disable-line\n\n        return match && {\n            href: url,\n            protocol: match[1],\n            host: match[2],\n            hostname: match[3],\n            port: match[4],\n            pathname: match[5],\n            search: match[6],\n            hash: match[7],\n            origin: match[1] + '//' + match[2]\n        };\n    }\n\n    return environment;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './ApplicationActivityDetector'\n], function(ApplicationActivityDetector) {\n    'use strict';\n\n    return new ApplicationActivityDetector();\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-rtc',\n    'phenix-web-global',\n    './PhenixLiveStream',\n    './stream.json'\n], function(_, assert, rtc, global, PhenixLiveStream, streamEnums) {\n    'use strict';\n\n    var defaultFeatures = [\n        streamEnums.types.realTime.name,\n        streamEnums.types.dash.name,\n        streamEnums.types.hls.name\n    ];\n\n    function FeatureDetector(features) {\n        features = features || defaultFeatures;\n\n        assert.isArray(features, 'features');\n\n        _.forEach(features, function(feature, index) {\n            assert.isValidType(feature, streamEnums.types, 'FeatureType[' + index + ']');\n        });\n\n        this._features = _.map(features, _.bind(_.getEnumName, _, streamEnums.types));\n    }\n\n    FeatureDetector.isFeatureSupported = function(feature) {\n        if (feature) {\n            assert.isStringNotEmpty(feature, 'feature');\n        }\n\n        var featureName = _.getEnumName(streamEnums.types, feature);\n\n        switch (featureName) {\n        case streamEnums.types.realTime.name:\n            return rtc.webrtcSupported;\n        case streamEnums.types.dash.name:\n        case streamEnums.types.hls.name:\n        case streamEnums.types.rtmp.name:\n            return PhenixLiveStream.canPlaybackType(feature);\n        default:\n            return false;\n        }\n    };\n\n    FeatureDetector.mapFeatureToPCastCapability = function(feature) {\n        if (feature) {\n            assert.isStringNotEmpty(feature, 'feature');\n        }\n\n        var featureName = _.getEnumName(streamEnums.types, feature);\n\n        switch (featureName) {\n        case streamEnums.types.realTime.name:\n            return 'real-time';\n        case streamEnums.types.dash.name:\n        case streamEnums.types.hls.name:\n            return 'streaming';\n        case streamEnums.types.rtmp.name:\n            return 'rtmp';\n        default:\n            return '';\n        }\n    };\n\n    FeatureDetector.mapPCastCapabilitiesToFeatures = function(capabilities) {\n        assert.isArray(capabilities, 'capabilities');\n\n        return _.reduce(capabilities, function(features, capability) {\n            return features.concat(FeatureDetector.mapPCastCapabilityToFeatures(capability));\n        }, []);\n    };\n\n    FeatureDetector.mapPCastCapabilityToFeatures = function(capability) {\n        if (capability) {\n            assert.isStringNotEmpty(capability, 'capability');\n        }\n\n        if (capability === 'real-time') {\n            return [streamEnums.types.realTime.name];\n        }\n\n        if (capability === 'streaming') {\n            return [streamEnums.types.dash.name, streamEnums.types.dash.name];\n        }\n\n        if (capability === 'rtmp') {\n            return [streamEnums.types.rtmp.name];\n        }\n\n        return [];\n    };\n\n    FeatureDetector.prototype.getFeatures = function() {\n        return this._features;\n    };\n\n    FeatureDetector.prototype.getFeaturePCastCapabilities = function() {\n        var capabilities = _.map(this._features, FeatureDetector.mapFeatureToPCastCapability);\n\n        return _.reduce(capabilities, removeDuplicates, []);\n    };\n\n    FeatureDetector.prototype.getPreferredFeatureFromPublisherCapabilities = function(capabilities, excludeRealTime) {\n        assert.isArray(capabilities, 'capabilities');\n\n        var preferredFeature = _.reduce(this._features, function(candidateFeature, feature) {\n            var featureCapability = FeatureDetector.mapFeatureToPCastCapability(feature);\n            var isFeatureAvailableAndCanPlayBack = FeatureDetector.isFeatureSupported(feature) && (_.includes(capabilities, featureCapability) || (feature === 'real-time' && !excludeRealTime));\n            var nextFeature = isFeatureAvailableAndCanPlayBack ? feature : null;\n\n            return candidateFeature || nextFeature;\n        }, null);\n\n        if (preferredFeature === streamEnums.types.dash.name && FeatureDetector.shouldUseNativeHls && _.includes(capabilities, FeatureDetector.mapFeatureToPCastCapability(streamEnums.types.hls.name)) && _.includes(this._features, streamEnums.types.hls.name)) {\n            preferredFeature = streamEnums.types.hls.name;\n        } else if (preferredFeature === streamEnums.types.hls.name && !FeatureDetector.shouldUseNativeHls && _.includes(capabilities, FeatureDetector.mapFeatureToPCastCapability(streamEnums.types.dash.name)) && _.includes(this._features, streamEnums.types.dash.name)) {\n            preferredFeature = streamEnums.types.dash.name;\n        }\n\n        return preferredFeature;\n    };\n\n    FeatureDetector.shouldUseNativeHls = isIOS() || rtc.browser === 'Safari' || isSamsungBrowser();\n    FeatureDetector.isIOS = isIOS;\n    FeatureDetector.isSamsungBrowser = isSamsungBrowser;\n    FeatureDetector.isAndroid = isAndroid;\n    FeatureDetector.isMobile = isMobile;\n    FeatureDetector.getIOSVersion = getIOSVersion;\n\n    function isIOS() {\n        var userAgent = _.get(global, ['navigator', 'userAgent'], '');\n\n        return /iPad|iPhone|iPod/.test(userAgent) && !global.MSStream;\n    }\n\n    function isSamsungBrowser() {\n        var userAgent = _.get(global, ['navigator', 'userAgent'], '');\n\n        return /SamsungBrowser/.test(userAgent);\n    }\n\n    function isAndroid() {\n        var userAgent = _.get(global, ['navigator', 'userAgent'], '');\n\n        return /(android)/i.test(userAgent);\n    }\n\n    function isMobile() {\n        var userAgent = _.get(global, ['navigator', 'userAgent'], '');\n\n        return isIOS() || /Android|webOS|BlackBerry|IEMobile|Opera Mini|Mobile|mobile|CriOS/i.test(userAgent);\n    }\n\n    function getIOSVersion() {\n        var userAgent = _.get(global, ['navigator', 'userAgent'], '');\n\n        if (/iP(hone|od|ad)/.test(userAgent)) {\n            var version = userAgent.match(/.*OS (\\d+)_(\\d+)_?(\\d+)? like Mac OS X/);\n\n            return {\n                major: parseInt(_.get(version, [1], 0), 10),\n                minor: parseInt(_.get(version, [2], 0), 10),\n                patch: parseInt(_.get(version, [3], 0), 10)\n            };\n        }\n    }\n\n    function removeDuplicates(list, item) {\n        if (!_.includes(list, item)) {\n            list.push(item);\n        }\n\n        return list;\n    }\n\n    return FeatureDetector;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n], function() {\n    'use strict';\n\n    var memberEnums = {\n        roles: {\n            participant: {\n                id: 0,\n                name: 'Participant'\n            },\n            moderator: {\n                id: 1,\n                name: 'Moderator'\n            },\n            presenter: {\n                id: 2,\n                name: 'Presenter'\n            },\n            audience: {\n                id: 3,\n                name: 'Audience'\n            }\n        },\n        states: {\n            active: {\n                id: 0,\n                name: 'Active'\n            },\n            passive: {\n                id: 1,\n                name: 'Passive'\n            },\n            handRaised: {\n                id: 2,\n                name: 'HandRaised'\n            },\n            inactive: {\n                id: 3,\n                name: 'Inactive'\n            },\n            offline: {\n                id: 4,\n                name: 'Offline'\n            }\n        }\n    };\n\n    return memberEnums;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n], function() {\n    'use strict';\n\n    var roomEnums = {\n        types: {\n            directChat: {\n                id: 0,\n                name: 'DirectChat'\n            },\n            multiPartyChat: {\n                id: 1,\n                name: 'MultiPartyChat'\n            },\n            moderatedChat: {\n                id: 2,\n                name: 'ModeratedChat'\n            },\n            townHall: {\n                id: 3,\n                name: 'TownHall'\n            },\n            channel: {\n                id: 4,\n                name: 'Channel'\n            }\n        },\n        events: {\n            memberJoined: {\n                id: 0,\n                name: 'MemberJoined'\n            },\n            memberLeft: {\n                id: 1,\n                name: 'MemberLeft'\n            },\n            memberUpdated: {\n                id: 2,\n                name: 'MemberUpdated'\n            },\n            roomUpdated: {\n                id: 3,\n                name: 'RoomUpdated'\n            },\n            roomEnded: {\n                id: 4,\n                name: 'RoomEnded'\n            }\n        }\n    };\n\n    return roomEnums;\n});","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"detectBrowser\"] = factory();\n\telse\n\t\troot[\"phenix\"] = root[\"phenix\"] || {}, root[\"phenix\"][\"detectBrowser\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2021 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(_) {\n    'use strict';\n\n    function DetectBrowser(userAgent) {\n        this._userAgent = userAgent || '';\n    }\n\n    DetectBrowser.prototype.detect = function() {\n        var browser = 'Unknown';\n        var version = '?';\n        var browserMatch = this._userAgent.match(/(Chrome|Chromium|Firefox|Opera|Safari)+\\//);\n        var versionMatch = this._userAgent.match(/(Chrome|Chromium|Firefox|Version)+\\/([0-9]+)\\./);\n        var isWebview = false;\n\n        if (browserMatch && browserMatch.length >= 2) {\n            browser = browserMatch[1];\n        } else if (this._userAgent.match(/^\\(?Mozilla/)) {\n            browser = 'Mozilla';\n\n            if (this._userAgent.match(/MSIE/)\n                || this._userAgent.match(/; Trident\\/.*rv:[0-9]+/)) {\n                browser = 'IE';\n\n                if (versionMatch = this._userAgent.match(/MSIE ([0-9]+)/)) { // eslint-disable-line no-cond-assign\n                    version = parseInt(versionMatch[1], 10);\n\n                    // Compatibility view?\n                    if (versionMatch = this._userAgent.match(/MSIE [0-9]+.*MSIE ([0-9]+)/)) { // eslint-disable-line no-cond-assign\n                        version = parseInt(versionMatch[1], 10);\n                    }\n                } else if (versionMatch = this._userAgent.match(/rv:([0-9]+)/)) { // eslint-disable-line no-cond-assign\n                    version = parseInt(versionMatch[1], 10);\n                }\n            }\n        }\n\n        if (browser === 'Chrome' && this._userAgent.match(/OPR\\//)) {\n            // Opera pretends to be Chrome\n            browser = 'Opera';\n            versionMatch = this._userAgent.match(/(OPR)\\/([0-9]+)\\./);\n        } else if (browser === 'Chrome' && this._userAgent.match(/Edge\\//)) {\n            // Edge pretends to be Chrome\n            browser = 'Edge';\n            versionMatch = this._userAgent.match(/(Edge)\\/([0-9]+)\\./);\n        } else if ((browser === 'Firefox' || browser === 'IE') && this._userAgent.match(/Opera/)) {\n            // Opera pretends to be Firefox or IE\n            browser = 'Opera';\n            versionMatch = this._userAgent.match(/(Opera) ([0-9]+)\\./);\n        } else if (browser === 'Mozilla' && (this._userAgent.match(/iphone|ipod|ipad/i) || this._userAgent.match(/AppleWebKit/i))) {\n            if (!this._userAgent.match(/iphone|ipod|ipad/i)) {\n                browser = 'Safari';\n                version = 13;\n                isWebview = true;\n            } else {\n                browser = 'Safari';\n                version = parseInt(_.get(this._userAgent.match(/OS\\s([0-9]+)/), [1]), 10);\n                isWebview = true;\n            }\n        }\n\n        // https://developer.chrome.com/multidevice/user-agent\n        if (browser === 'Chrome' && (this._userAgent.match(/; wv/) || (this._userAgent.match(/Android/) && this._userAgent.match(/Version\\/[0-9].[0-9]/)))) {\n            isWebview = true;\n        }\n\n        if (browser !== 'IE' && versionMatch && versionMatch.length >= 3) {\n            version = parseInt(versionMatch[2], 10);\n        }\n\n        if (navigator.product === 'ReactNative') {\n            browser = 'ReactNative';\n            version = navigator.productSub || '?';\n        }\n\n        return {\n            browser: browser,\n            version: version,\n            isWebview: isWebview\n        };\n    };\n\n    return DetectBrowser;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n    'use strict';\n\n    var _ = function() {\n\n    };\n\n    _.clone = function clone(value) {\n        if (_.isArray(value)) {\n            return value.slice();\n        }\n\n        if (_.isObject(value)) {\n            return _.assign({}, value);\n        }\n\n        return value;\n    };\n\n    _.get = function get(objectToTraverse, path, defaultValue) {\n        if (_.isNullOrUndefined(objectToTraverse)) {\n            return defaultValue;\n        }\n\n        assertIsObject(objectToTraverse, 'objectToTraverse');\n\n        var properties = path;\n\n        if (_.isString(properties)) {\n            properties = buildPathFromString(path);\n        } else if (!_.isArray(properties)) {\n            throw new Error('Unsupported path type ' + typeof path);\n        }\n\n        var valueAtPath = _.reduce(properties, function(valueAtPath, prop) {\n            if (_.isObject(valueAtPath) || _.isArray(valueAtPath)) {\n                return valueAtPath[prop];\n            }\n\n            return;\n        }, objectToTraverse);\n\n        return _.isUndefined(valueAtPath) ? defaultValue : valueAtPath;\n    };\n\n    _.set = function get(objectToTraverse, path, value) {\n        if (!_.isObject(objectToTraverse)) {\n            return objectToTraverse;\n        }\n\n        assertIsObject(objectToTraverse, 'objectToTraverse');\n\n        var currentLocation = objectToTraverse;\n        var properties = path;\n\n        if (_.isString(properties)) {\n            properties = buildPathFromString(path);\n        } else if (!_.isArray(properties)) {\n            throw new Error('Unsupported path type ' + typeof path);\n        }\n\n        _.forEach(properties, function(prop, index) {\n            setNextValue(currentLocation, prop, getNextValue(properties, index, currentLocation, value));\n\n            currentLocation = currentLocation[prop];\n        });\n\n        return objectToTraverse;\n    };\n\n    _.bind = function bind(callback, that) {\n        var argsAfterContext = Array.prototype.slice.call(arguments, 2);\n\n        return function boundFunction() {\n            if (!_.isFunction(callback)) {\n                throw new TypeError('_.bind - callback must be a function. Received [' + typeof callback + ']');\n            }\n\n            var combinedArguments = argsAfterContext.concat(Array.prototype.slice.call(arguments));\n\n            return callback.apply(that, combinedArguments);\n        };\n    };\n\n    _.now = function now() {\n        return new Date().getTime();\n    };\n\n    _.utc = function utc(date) {\n        if (_.isNumber(date)) {\n            return date;\n        } else if (!date) {\n            return NaN;\n        }\n\n        return Math.floor(date);\n    };\n\n    _.isoString = function isoString() {\n        var now = new Date();\n\n        if (now.toISOString) {\n            return now.toISOString();\n        }\n\n        return now.getUTCFullYear() +\n            '-' + _.pad(now.getUTCMonth() + 1, 2) +\n            '-' + _.pad(now.getUTCDate(), 2) +\n            'T' + _.pad(now.getUTCHours(), 2) +\n            ':' + _.pad(now.getUTCMinutes(), 2) +\n            ':' + _.pad(now.getUTCSeconds(), 2) +\n            '.' + (now.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n            'Z';\n    };\n\n    _.map = function map(collection, callback) {\n        assertIsObject(collection, 'collection');\n\n        var newArray = [];\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, function mapCollection(item, index) {\n                if (_.isString(callback) && _.isObject(item)) {\n                    newArray.push(item[callback]);\n                } else if (_.isFunction(callback)) {\n                    newArray.push(callback(item, index));\n                }\n            });\n        } else {\n            _.forOwn(collection, function mapCollection(value, key) {\n                if (_.isFunction(callback)) {\n                    newArray.push(callback(value, key));\n                }\n            });\n        }\n\n        return newArray;\n    };\n\n    _.values = function(collection) {\n        if (!_.isObject(collection) || _.isArray(collection)) {\n            return [];\n        }\n\n        return _.map(collection, function(value) {\n            return value;\n        });\n    };\n\n    _.keys = function(collection) {\n        if (!_.isObject(collection) && !_.isArray(collection)) {\n            return [];\n        }\n\n        return _.map(collection, function(value, key) {\n            return key;\n        });\n    };\n\n    _.forEach = function forEach(collection, callback) {\n        if (!_.isFunction(callback)) {\n            throw new Error('_.forEach argument, Callback, must be a function. Received [' + typeof callback + ']');\n        }\n\n        assertIsArray(collection, 'collection');\n\n        for (var i = 0; i < collection.length; i++) {\n            var callbackResponse = callback(collection[i], i);\n\n            if (callbackResponse === false) {\n                return;\n            }\n        }\n    };\n\n    _.forOwn = function forOwn(objectWithProperties, callback) {\n        if (!_.isFunction(callback)) {\n            throw new Error('Callback must be a function. Received [' + typeof callback + ']');\n        }\n\n        assertIsObject(objectWithProperties, 'objectWithProperties');\n\n        var keys = Object.keys(objectWithProperties);\n\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n\n            if (objectWithProperties.hasOwnProperty(key) || Object.prototype.hasOwnProperty.call(objectWithProperties, key)) {\n                var callbackResponse = callback(objectWithProperties[key], key);\n\n                if (callbackResponse === false) {\n                    return;\n                }\n            }\n        }\n    };\n\n    _.argumentsToArray = function(args) {\n        if (!_.isObject(args) || !args.length) {\n            throw new Error('Collection must be arguments. Received [' + typeof args + ']');\n        }\n\n        var collection = [];\n\n        for (var i = 0; i < args.length; i++) {\n            collection.push(args[i]);\n        }\n\n        return collection;\n    };\n\n    _.assign = function assign(target) {\n        if (_.isNullOrUndefined(target)) {\n            target = {};\n        }\n\n        assertIsObject(target, 'target');\n\n        var sources = _.argumentsToArray(arguments);\n\n        sources.shift();\n\n        _.forEach(sources, function(source, index) {\n            if (_.isNullOrUndefined(source)) {\n                return;\n            }\n\n            assertIsObject(source, '_.assign(sources[' + index + '])');\n\n            _.forOwn(source, function(value, key) {\n                target[key] = value;\n            });\n        });\n\n        return target;\n    };\n\n    _.includes = function includes(collection, value) {\n        if (_.isString(collection)) {\n            assertIsString(value, 'Includes value and search parameter');\n\n            return collection.indexOf(value) > -1;\n        }\n\n        if (_.isUndefined(collection) || _.isUndefined(value)) {\n            return false;\n        }\n\n        assertIsObject(collection, 'collection');\n\n        var hasValue = false;\n\n        var checkCollection = function checkCollection(currentValue) {\n            if (currentValue === value) {\n                hasValue = true;\n\n                return false;\n            }\n        };\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, checkCollection);\n        } else {\n            _.forOwn(collection, checkCollection);\n        }\n\n        return hasValue;\n    };\n\n    _.reduce = function reduce(collection, callback, initialValue) {\n        assertIsObject(collection, 'collection');\n\n        var result = initialValue === _.noop() ? null : initialValue;\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, function(item, index) {\n                result = callback(result, item, index);\n            });\n        } else {\n            _.forOwn(collection, function(value, key) {\n                result = callback(result, value, key);\n            });\n        }\n\n        return result;\n    };\n\n    _.sample = function sample(collection) {\n        assertIsArray(collection, 'collection');\n\n        return collection[Math.floor(Math.random() * collection.length)];\n    };\n\n    _.uniqueId = function() {\n        return (_.now() * Math.random()).toString();\n    };\n\n    _.find = function find(collection, callback, initialIndex) {\n        assertIsArray(collection, 'collection');\n\n        var item = undefined;\n\n        _.forEach(collection, function findInCollection(value, index) {\n            if (callback(value) && index >= (initialIndex || 0)) {\n                item = value;\n\n                return false;\n            }\n        });\n\n        return item;\n    };\n\n    _.findIndex = function find(collection, callback, initialIndex) {\n        assertIsArray(collection, 'collection');\n\n        var itemIndex = -1;\n\n        _.forEach(collection, function findInCollection(value, index) {\n            if (callback(value, index) && index >= (initialIndex || 0)) {\n                itemIndex = index;\n\n                return false;\n            }\n        });\n\n        return itemIndex;\n    };\n\n    _.filter = function filter(collection, callback) {\n        assertIsArray(collection, 'collection');\n\n        var newCollection = [];\n\n        _.forEach(collection, function findInCollection(value) {\n            if (callback(value)) {\n                newCollection.push(value);\n            }\n        });\n\n        return newCollection;\n    };\n\n    _.remove = function remove(collection, callback) {\n        assertIsArray(collection, 'collection');\n\n        var filterCallback = function filterCallback(value) {\n            return !callback(value);\n        };\n\n        return _.filter(collection, filterCallback);\n    };\n\n    _.take = function take(collection, size) {\n        assertIsArray(collection, 'collection');\n\n        return collection.slice(0, size);\n    };\n\n    _.hasDifferences = function hasDifferences(collectionA, collectionB, deep) {\n        return _.findDifferences(collectionA, collectionB, deep).length > 0;\n    };\n\n    _.findDifferences = function findDifferences(collectionA, collectionB, deep) {\n        var differences = [];\n        var visitedKeys = {};\n\n        function getDifferences(value, indexOrKey) {\n            visitedKeys[indexOrKey] = 1;\n\n            if ((_.isObject(value) || _.isArray(value)) && deep) {\n                if (!_.hasIndexOrKey(collectionB, indexOrKey)) {\n                    differences.push(indexOrKey);\n                } else if (!_.sameTypes(collectionA[indexOrKey], collectionB[indexOrKey])) {\n                    differences.push(indexOrKey);\n                } else if (_.hasDifferences(collectionA[indexOrKey], collectionB[indexOrKey], deep)) {\n                    differences.push(indexOrKey);\n                }\n            } else if (collectionA[indexOrKey] !== collectionB[indexOrKey]) {\n                differences.push(indexOrKey);\n            }\n        }\n\n        if (_.isArray(collectionA) && _.isArray(collectionB)) {\n            if (collectionA.length > collectionB.length) {\n                _.forEach(collectionA, getDifferences);\n            } else {\n                _.forEach(collectionB, getDifferences);\n            }\n        } else if (_.isObject(collectionA) && _.isObject(collectionB) && !_.isArray(collectionA) && !_.isArray(collectionB)) {\n            _.forOwn(collectionA, getDifferences);\n\n            _.forOwn(collectionB, function(value, key) {\n                if (!visitedKeys.hasOwnProperty(key)) {\n                    differences.push(key);\n                }\n            });\n        } else {\n            throw new Error('Object types do not match');\n        }\n\n        return differences;\n    };\n\n    _.hasIndexOrKey = function hasIndexOrKey(collection, indexOrKey) {\n        if (_.isArray(collection)) {\n            return collection.length > parseInt(indexOrKey);\n        } else if (_.isObject(collection)) {\n            return collection.hasOwnProperty(indexOrKey);\n        }\n\n        return false;\n    };\n\n    _.startsWith = function startsWith(value, prefix) {\n        assertIsString(value, 'value');\n        assertIsString(prefix, 'prefix');\n\n        return value.indexOf(prefix) === 0;\n    };\n\n    _.endsWith = function endsWith(value, postfix) {\n        assertIsString(value, 'value');\n        assertIsString(postfix, 'postfix');\n\n        var start = value.length - postfix.length;\n\n        return value.indexOf(postfix, start) === start;\n    };\n\n    _.sameTypes = function sameTypes(first, second) {\n        if (_.isNullOrUndefined(first) || _.isNullOrUndefined(second)) {\n            return _.isNullOrUndefined(first) && _.isNullOrUndefined(second);\n        }\n\n        if (_.isArray(first) || _.isArray(second)) {\n            return _.isArray(first) && _.isArray(second);\n        }\n\n        return typeof first === typeof second;\n    };\n\n    _.freeze = function freeze(obj) {\n        if ('freeze' in Object) {\n            return Object.freeze(obj);\n        }\n\n        return obj;\n    };\n\n    _.noop = function() {\n        return undefined;\n    };\n\n    _.isObject = function isObject(obj) {\n        if (obj === null) {\n            return false;\n        }\n\n        return typeof obj === 'object';\n    };\n\n    _.isArray = function isArray(array) {\n        if (!_.isObject(array)) {\n            return false;\n        }\n\n        return array.constructor === Array;\n    };\n\n    _.isString = function isString(string) {\n        return typeof string === 'string';\n    };\n\n    _.isNumber = function isNumber(number) {\n        if (isNaN(number)) {\n            return false;\n        }\n\n        return typeof number === 'number';\n    };\n\n    _.isBoolean = function isBoolean(bool) {\n        return typeof bool === 'boolean';\n    };\n\n    _.isFunction = function isFunction(func) {\n        return typeof func === 'function';\n    };\n\n    _.isNullOrUndefined = function isNullOrUndefined(value) {\n        return value === null || _.isUndefined(value);\n    };\n\n    _.isUndefined = function isUndefined(value) {\n        return typeof value === 'undefined';\n    };\n\n    _.getEnumName = function getEnumName(enums, nameOrId) {\n        var enumObject = null;\n\n        var enumArray = _.map(enums, function(value) {\n            return value;\n        });\n\n        if (_.isNumber(nameOrId)) {\n            enumObject = _.find(enumArray, function(current) {\n                return current.id === nameOrId;\n            });\n        } else if (_.isString(nameOrId)) {\n            enumObject = _.find(enumArray, function(current) {\n                return current.name.toLowerCase() === nameOrId.toLowerCase();\n            });\n        }\n\n        if (enumObject) {\n            return enumObject.name;\n        }\n\n        return null;\n    };\n\n    _.toString = function toString(data) {\n        if (_.isString(data)) {\n            return data;\n        }\n\n        if (_.isBoolean(data)) {\n            return data ? 'true' : 'false';\n        }\n\n        if (_.isNumber(data)) {\n            return data.toString();\n        }\n\n        var toStringStr = '';\n\n        if (data) {\n            if (_.isFunction(data.toString)) {\n                toStringStr = data.toString();\n            } else if (_.isObject(data.toString)) {\n                try {\n                    toStringStr = data.toString();\n                } catch (e) {\n                    toStringStr = '[object invalid toString()]';\n                }\n            }\n        }\n\n        if (toStringStr.indexOf('[object') !== 0) {\n            return toStringStr;\n        }\n\n        var cache = [];\n\n        return toStringStr + JSON.stringify(data, function(key, value) {\n            if (_.isObject(value) && !_.isNullOrUndefined(value)) {\n                if (_.includes(cache, value)) {\n                    return '<recursive>';\n                }\n\n                cache.push(value);\n            }\n\n            return key === '' ? value : _.toString(value);\n        });\n    };\n\n    _.pad = function padNumber(value, numberToPad) {\n        assertIsNumber(value, 'value');\n        assertIsNumber(numberToPad, 'numberToPad');\n\n        var valueLength = value.toString().length;\n\n        for (var i = 0; i < numberToPad - valueLength; i++) {\n            value = '0' + value.toString();\n        }\n\n        return value.toString();\n    };\n\n    _.addEventListener = function addEventListener(target, eventName, listener, useCapture) {\n        assertIsObject(target, 'target');\n        assertIsString(eventName, 'eventName');\n        assertIsFunction(listener, 'listener');\n\n        if (target.phenixAddEventListener) {\n            target.phenixAddEventListener.call(target, eventName, listener, !!useCapture);\n        } else if (target.addEventListener) {\n            target.addEventListener(eventName, listener, !!useCapture);\n        } else if (target.attachEvent) {\n            target.attachEvent(\"on\" + eventName, listener);\n        }\n    };\n\n    _.removeEventListener = function removeEventListener(target, eventName, listener, useCapture) {\n        assertIsObject(target, 'target');\n        assertIsString(eventName, 'eventName');\n        assertIsFunction(listener, 'listener');\n\n        if (target.phenixRemoveEventListener) {\n            target.phenixRemoveEventListener.call(target, eventName, listener, !!useCapture);\n        } else if (target.removeEventListener) {\n            target.removeEventListener(eventName, listener, !!useCapture);\n        } else if (target.detachEvent) {\n            target.detachEvent(\"on\" + eventName, listener);\n        }\n    };\n\n    var assertIsArray = function assertIsArray(collection) {\n        if (!_.isArray(collection)) {\n            throw new Error('Input must be an array. Received [' + typeof collection + ']');\n        }\n    };\n\n    var assertIsNumber = function assertIsNumber(number, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isNumber(number)) {\n            throw new Error(name + ' must be a number. Received [' + typeof number + ']');\n        }\n    };\n\n    var assertIsObject = function assertIsObject(collection, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isObject(collection)) {\n            throw new Error('collection type not supported - ' + name + ' must be an array or object. Received [' + typeof collection + ']');\n        }\n    };\n\n    var assertIsFunction = function assertIsFunction(callback, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isFunction(callback)) {\n            throw new Error(name + ' must be a function. Received [' + typeof callback + ']');\n        }\n    };\n\n    var assertIsString = function assertIsString(value, name) {\n        if (!_.isString(name)) {\n            throw new Error('Name must be a string. Received [' + typeof name + ']');\n        }\n\n        if (!_.isString(value)) {\n            throw new Error(name + ' must be a string. Received [' + typeof value + ']');\n        }\n    };\n\n    function buildPathFromString(stringPath) {\n        var properties = stringPath.split('.');\n        var path = [];\n\n        _.forEach(properties, function(prop) {\n            path = path.concat(buildSubPathFromString(prop));\n        });\n\n        return path;\n    }\n\n    function buildSubPathFromString(stringPath) {\n        var possibleSubPath = '';\n        var path = [];\n        var countOfOpeningBrackets = 0;\n\n        for (var i = 0; i < stringPath.length; i++) {\n            if (stringPath[i] === '[') {\n                countOfOpeningBrackets++;\n\n                if (!_.isString(possibleSubPath) || countOfOpeningBrackets > 1) {\n                    return [stringPath];\n                }\n\n                if (possibleSubPath) {\n                    path.push(possibleSubPath);\n                    possibleSubPath = '';\n                }\n            } else if (stringPath[i] === ']') {\n                countOfOpeningBrackets--;\n\n                if (countOfOpeningBrackets !== 0) {\n                    return [stringPath];\n                }\n\n                path.push(possibleSubPath);\n                possibleSubPath = '';\n            } else if (i === stringPath.length - 1) {\n                return [stringPath];\n            } else {\n                possibleSubPath += stringPath[i];\n            }\n        }\n\n        return path;\n    }\n\n    function getNextValue(path, index, currentLocation, value) {\n        if (path.length - 1 === index) {\n            return value;\n        }\n\n        var currentPropOrIndex = path[index];\n        var nextPropOrIndex = path[index + 1];\n\n        if (_.isArray(currentLocation[currentPropOrIndex]) || _.isObject(currentLocation[currentPropOrIndex])) {\n            return currentLocation[currentPropOrIndex];\n        }\n\n        if (!_.isArray(currentLocation[currentPropOrIndex]) && _.isNumber(parseInt(nextPropOrIndex))) {\n            return [];\n        } else if (!_.isObject(currentLocation[currentPropOrIndex]) && _.isString(nextPropOrIndex)) {\n            return {};\n        }\n\n        throw new Error('Unsupported type ' + typeof currentPropOrIndex + ' when setting property or index');\n    }\n\n    function setNextValue(objectToTraverse, propertyOrIndex, value) {\n        if (_.isNumber(parseInt(propertyOrIndex)) && _.isArray(objectToTraverse)) {\n            return objectToTraverse[propertyOrIndex] = value;\n        } else if (_.isString(propertyOrIndex) && _.isObject(objectToTraverse)) {\n            return objectToTraverse[propertyOrIndex] = value;\n        }\n\n        throw new Error('Unsupported type ' + typeof propertyOrIndex + ' when setting property or index');\n    }\n\n    return _;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(1)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(LodashLight) {\n    'use strict';\n\n    return LodashLight;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright 2021 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(0)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(detectBrowser) {\n    return detectBrowser;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=phenix-web-detect-browser.js.map","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function() {\n    'use strict';\n\n    var logging = {\n        level: {\n            TRACE: 0,\n            DEBUG: 1,\n            INFO: 2,\n            WARN: 3,\n            ERROR: 4,\n            FATAL: 5\n        }\n    };\n\n    return logging;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './MQWebSocket',\n    './BatchHttpProto',\n    './MQService'\n], function(MQWebSocket, BatchHttpProto, MQService) {\n    return {\n        MQWebSocket: MQWebSocket,\n        BatchHttpProto: BatchHttpProto,\n        MQService: MQService\n    };\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-rtc'\n], function(_, rtc) {\n    'use strict';\n\n    // TODO(dy) wrap PC in this class\n    function PeerConnection() {\n\n    }\n\n    PeerConnection.convertPeerConnectionStats = function(stats, lastStats) {\n        return convertPeerConnectionStats(stats, lastStats);\n    };\n\n    function convertPeerConnectionStats(stats, lastStats) {\n        if (!stats) {\n            return null;\n        }\n\n        var newStats = [];\n        var normalizedStats = normalizeStatsReport(stats);\n\n        var iteratorDidRun = false;\n\n        function convertStats(statsReport) {\n            if (!iteratorDidRun) {\n                iteratorDidRun = true;\n            }\n\n            if (!_.hasIndexOrKey(statsReport, 'ssrc') || !statsReport.ssrc || _.includes(statsReport.id, 'rtcp')) {\n                return;\n            }\n\n            var id = statsReport.id || statsReport.ssrc;\n\n            if (!_.hasIndexOrKey(lastStats, id)) {\n                lastStats[id] = {timestamp: _.now()};\n            }\n\n            var direction = '?';\n            var timeDelta = parseFloat(statsReport.timestamp) - lastStats[id].timestamp;\n            var up = calculateUploadRate(parseFloat(statsReport.bytesSent), lastStats[id].bytesSent, timeDelta);\n            var down = calculateDownloadRate(parseFloat(statsReport.bytesReceived), lastStats[id].bytesReceived, timeDelta);\n            var framerateMean = calculateFrameRate(useFirstNumberValue(parseIntOrUndefined(statsReport.framesEncoded), parseIntOrUndefined(statsReport.framesDecoded)), lastStats[id].framesEncoded || lastStats[id].framesDecoded, timeDelta);\n\n            if (isOutbound(statsReport)) {\n                direction = 'upload';\n            }\n\n            if (isInbound(statsReport)) {\n                direction = 'download';\n            }\n\n            var stat = {\n                uploadRate: up,\n                downloadRate: down,\n                mediaType: statsReport.mediaType,\n                ssrc: statsReport.ssrc,\n                direction: direction,\n                nativeReport: statsReport,\n                rtt: useFirstNumberValue(parseIntOrUndefined(statsReport.rtt), parseIntOrUndefined(statsReport.googRtt), parseIntOrUndefined(statsReport.roundTripTime), parseIntOrUndefined(statsReport.currentRoundTripTime)),\n                bitrateMean: parseIntOrUndefined(statsReport.bitrateMean, 10) || (isOutbound(statsReport) ? up : down) * 1000,\n                targetDelay: parseIntOrUndefined(useFirstStringValue(statsReport.targetDelay, statsReport.googTargetDelayMs), 10),\n                currentDelay: parseIntOrUndefined(useFirstStringValue(statsReport.currentDelay, statsReport.currentDelayMs, statsReport.googCurrentDelayMs), 10)\n            };\n\n            _.assign(lastStats[id], statsReport);\n\n            if (statsReport.mediaType === 'video') {\n                stat = _.assign(stat, {\n                    droppedFrames: parseIntOrUndefined(statsReport.droppedFrames, 10) || 0,\n                    framerateMean: useFirstNumberValue(statsReport.framerateMean, statsReport.framesPerSecond, framerateMean) || 0,\n                    cpuLimitedResolution: useFirstStringValue(statsReport.cpuLimitedResolution, statsReport.googCpuLimitedResolution),\n                    avgEncode: parseIntOrUndefined(useFirstStringValue(statsReport.avgEncode, statsReport.avgEncodeMs, statsReport.googAvgEncodeMs), 10)\n                });\n            }\n\n            if (statsReport.mediaType === 'audio') {\n                stat = _.assign(stat, {\n                    audioInputLevel: useFirstStringValue(statsReport.audioInputLevel, statsReport.googAudioInputLevel),\n                    audioOutputLevel: useFirstStringValue(statsReport.audioOutputLevel, statsReport.googAudioOutputLevel),\n                    jitter: parseIntOrUndefined(useFirstStringValue(statsReport.jitter, statsReport.jitterReceived, statsReport.googJitterReceived), 10),\n                    jitterBuffer: parseIntOrUndefined(useFirstStringValue(statsReport.jitterBuffer, statsReport.jitterBufferMs, statsReport.googJitterBufferMs), 10),\n                    totalSamplesDuration: parseFloatOrUndefined(statsReport.totalSamplesDuration),\n                    totalAudioEnergy: parseFloatOrUndefined(statsReport.totalAudioEnergy)\n                });\n            }\n\n            newStats.push(stat);\n        }\n\n        _.forOwn(normalizedStats, convertStats);\n\n        if (!iteratorDidRun && newStats.length <= 0 && normalizedStats.forEach) {\n            normalizedStats.forEach(convertStats);\n        }\n\n        return newStats;\n    }\n\n    function useFirstNumberValue(value1, value2, value3, value4, value5) {\n        if (_.isNumber(value1)) {\n            return value1;\n        }\n\n        if (_.isNumber(value2)) {\n            return value2;\n        }\n\n        if (_.isNumber(value3)) {\n            return value3;\n        }\n\n        if (_.isNumber(value4)) {\n            return value4;\n        }\n\n        return value5;\n    }\n\n    function useFirstStringValue(value1, value2, value3, value4, value5) {\n        if (_.isString(value1)) {\n            return value1;\n        }\n\n        if (_.isString(value2)) {\n            return value2;\n        }\n\n        if (_.isString(value3)) {\n            return value3;\n        }\n\n        if (_.isNumber(value4)) {\n            return value4;\n        }\n\n        return value5;\n    }\n\n    function parseIntOrUndefined(value, radix) {\n        var parsed = parseInt(value, radix);\n\n        if (isNaN(parsed)) {\n            return undefined;\n        }\n\n        return parsed;\n    }\n\n    function parseFloatOrUndefined(value) {\n        var parsed = parseFloat(value);\n\n        if (isNaN(parsed)) {\n            return undefined;\n        }\n\n        return parsed;\n    }\n\n    function calculateUploadRate(bytesSent, prevBytesSent, timeDelta) {\n        if (_.isUndefined(prevBytesSent)) {\n            return;\n        }\n\n        if (bytesSent) {\n            var bytesSentBefore = prevBytesSent || 0;\n\n            return 8 * (bytesSent - bytesSentBefore) / timeDelta;\n        }\n\n        return 0;\n    }\n\n    function calculateDownloadRate(bytesReceived, prevBytesReceived, timeDelta) {\n        if (_.isUndefined(prevBytesReceived)) {\n            return;\n        }\n\n        if (bytesReceived) {\n            var bytesReceivedBefore = prevBytesReceived || 0;\n\n            return 8 * (bytesReceived - bytesReceivedBefore) / timeDelta;\n        }\n\n        return 0;\n    }\n\n    function calculateFrameRate(currentFramesEncoded, lastFramesEncoded, timeDelta) {\n        if (_.isUndefined(lastFramesEncoded)) {\n            return;\n        }\n\n        return (currentFramesEncoded - lastFramesEncoded)\n            / (timeDelta / 1000.0);\n    }\n\n    function normalizeStatsReport(stats) {\n        var normalizedReport = {};\n\n        switch (rtc.browser) {\n        case 'Firefox':\n            _.forOwn(stats, function(report, key) {\n                if (_.includes(key, 'rtcp')) {\n                    _.forOwn(stats, function(reportToUpdate, key) {\n                        if (_.includes(key, 'rtp') && report.mediaType === reportToUpdate.mediaType) {\n                            reportToUpdate.jitter = (report.jitter || reportToUpdate.jitter) * 1000;\n                            reportToUpdate.roundTripTime = report.roundTripTime;\n                        }\n                    });\n                }\n            });\n\n            return stats;\n        case 'IE':\n            _.forOwn(stats, function(value, key) {\n                if (!_.startsWith(key, 'ssrc')) {\n                    return;\n                }\n\n                normalizedReport[value.id] = value;\n            });\n\n            return normalizedReport;\n        case 'Edge':\n            stats.forEach(function(report) {\n                normalizedReport[report.id] = report;\n\n                if (_.hasIndexOrKey(report, 'jitter')) {\n                    report.jitter *= 1000;\n                }\n            });\n\n            _.forOwn(normalizedReport, function(report) {\n                if (report.type === 'track' && _.hasIndexOrKey(report, 'framesPerSecond')) {\n                    _.forOwn(normalizedReport, function(reportToUpdate) {\n                        if (reportToUpdate.mediaType === 'video') {\n                            reportToUpdate.framesPerSecond = parseInt(report.framesPerSecond, 10);\n                        }\n                    });\n                }\n            });\n\n            return normalizedReport;\n        case 'Safari':\n            stats.forEach(function(report) {\n                normalizedReport[report.id] = report;\n            });\n\n            _.forOwn(normalizedReport, function(report) {\n                if (_.hasIndexOrKey(report, 'id') && isInbound(report)) {\n                    var candidateSsrc = parseInt(_.get(report.id.split('_'), [1]), 10);\n\n                    report.ssrc = candidateSsrc || report.ssrc; // Ssrc is inaccurate for inbound reports\n                }\n\n                if (_.hasIndexOrKey(report, 'jitter')) {\n                    report.jitter *= 1000;\n                }\n\n                if (report.type === 'candidate-pair') {\n                    _.forOwn(normalizedReport, function(reportToUpdate) {\n                        if (reportToUpdate.mediaType === 'audio' || reportToUpdate.mediaType === 'video') {\n                            reportToUpdate.currentRoundTripTime = report.currentRoundTripTime * 1000;\n                        }\n                    });\n                }\n\n                if (report.type === 'track') {\n                    _.forOwn(normalizedReport, function(reportToUpdate) {\n                        if (reportToUpdate.mediaType === 'audio' && isInbound(reportToUpdate)) {\n                            reportToUpdate.audioOutputLevel = report.audioLevel * 100000;\n                        } else if (reportToUpdate.mediaType === 'audio' && isOutbound(reportToUpdate)) {\n                            reportToUpdate.audioInputLevel = report.audioLevel * 100000;\n                        }\n                    });\n                }\n            });\n\n            return normalizedReport;\n        case 'ReactNative':\n            var parsedStats = _.isString(stats) ? JSON.parse(stats) : stats;\n\n            parsedStats.forEach(function(report) {\n                var normalizedStatistics = {\n                    id: report.id,\n                    type: report.type\n                };\n\n                report.values.forEach(function(value) {\n                    _.keys(value).forEach(function(key) {\n                        normalizedStatistics[key] = value[key];\n                    });\n                });\n\n                normalizedStatistics.timestamp = report.timestamp;\n\n                normalizedReport[normalizedStatistics.id] = normalizedStatistics;\n            });\n\n            return normalizedReport;\n        case 'Chrome':\n        default:\n            stats.result().forEach(function(report) {\n                var normalizedStatistics = {\n                    id: report.id,\n                    type: report.type\n                };\n\n                report.names().forEach(function(name) {\n                    normalizedStatistics[name] = report.stat(name);\n                });\n\n                normalizedStatistics.timestamp = report.timestamp.getTime();\n\n                normalizedReport[normalizedStatistics.id] = normalizedStatistics;\n            });\n\n            return normalizedReport;\n        }\n    }\n\n    function isOutbound(statsReport) {\n        return _.includes(statsReport.id, 'send') || _.includes(statsReport.id, 'outbound') || statsReport.type === 'outboundrtp' || statsReport.type === 'outbound-rtp' || statsReport.type === 'kOutboundRtp';\n    }\n\n    function isInbound(statsReport) {\n        return _.includes(statsReport.id, 'recv') || statsReport.type === 'inboundrtp' || statsReport.type === 'inbound-rtp' || statsReport.type === 'kInboundRtp';\n    }\n\n    return PeerConnection;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    './stream.json',\n    './track.json'\n], function(_, assert, observable, stream, track) {\n    'use strict';\n\n    var streamTypes = stream.types;\n    var trackStates = track.states;\n    var oldPcastStreamPrefix = 'pcast://phenixp2p.com/';\n    var pcastStreamPrefix = 'pcast://phenixrts.com/';\n\n    function Stream(uri, type, audioState, videoState) {\n        this.init(uri, type, audioState, videoState);\n    }\n\n    Stream.prototype.init = function(uri, type, audioState, videoState) {\n        assert.isString(uri, 'uri');\n\n        this._uri = new observable.Observable(uri);\n        this._type = new observable.Observable(type, assertIsValidStreamType);\n        this._audioState = new observable.Observable(audioState || trackStates.trackEnabled.name, assertIsValidTrackState);\n        this._videoState = new observable.Observable(videoState || trackStates.trackEnabled.name, assertIsValidTrackState);\n        this._streamId = Stream.parsePCastStreamIdFromStreamUri(uri);\n    };\n\n    Stream.prototype.getUri = function getUri() {\n        return this._uri.getValue();\n    };\n\n    Stream.prototype.getType = function getType() {\n        return this._type.getValue();\n    };\n\n    Stream.prototype.getObservableAudioState = function getObservableAudioState() {\n        return this._audioState;\n    };\n\n    Stream.prototype.getObservableVideoState = function getObservableVideoState() {\n        return this._videoState;\n    };\n\n    Stream.prototype.toJson = function toJson() {\n        return {\n            uri: this._uri.getValue(),\n            type: this._type.getValue(),\n            audioState: this._audioState.getValue(),\n            videoState: this._videoState.getValue()\n        };\n    };\n\n    Stream.prototype._update = function update(stream) {\n        if (!_.isObject(stream)) {\n            return;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(stream, 'uri')) {\n            if (stream.uri !== this._uri.getValue() && matchPCastStreams(stream.uri, this._uri.getValue())) {\n                this._uri.setValue(stream.uri);\n\n                this._streamId = Stream.parsePCastStreamIdFromStreamUri(stream.uri);\n            }\n        }\n\n        if (Object.prototype.hasOwnProperty.call(stream, 'audioState')) {\n            this._audioState.setValue(stream.audioState);\n        }\n\n        if (Object.prototype.hasOwnProperty.call(stream, 'videoState')) {\n            this._videoState.setValue(stream.videoState);\n        }\n    };\n\n    Stream.prototype.isPCastStream = function() {\n        return !!this._streamId;\n    };\n\n    Stream.prototype.getPCastStreamId = function() {\n        return this._streamId;\n    };\n\n    Stream.prototype.getInfo = function() {\n        return parseStreamInfoFromStreamUri(this._uri.getValue());\n    };\n\n    Stream.getPCastPrefix = function() {\n        return oldPcastStreamPrefix;\n    };\n\n    Stream.parsePCastStreamIdFromStreamUri = function(uri) {\n        var hasPrefix = _.includes(uri, getPrefixToUse(uri));\n\n        if (!hasPrefix) {\n            return null;\n        }\n\n        return uri.replace(getPrefixToUse(uri), '').split('?')[0];\n    };\n\n    Stream.getInfoFromStreamUri = function(uri) {\n        return parseStreamInfoFromStreamUri(uri);\n    };\n\n    function getPrefixToUse(uri) {\n        if (_.includes(uri, oldPcastStreamPrefix)) {\n            return oldPcastStreamPrefix;\n        }\n\n        return pcastStreamPrefix;\n    }\n\n    function matchPCastStreams(uriA, uriB) {\n        return Stream.parsePCastStreamIdFromStreamUri(uriA) === Stream.parsePCastStreamIdFromStreamUri(uriB);\n    }\n\n    function parseStreamInfoFromStreamUri(uri) {\n        var parsedUriInfo = {};\n        var queryParamString = uri.split('?');\n\n        if (queryParamString.length !== 2) {\n            return parsedUriInfo;\n        }\n\n        var queryParamsString = queryParamString[1];\n        var queryParams = queryParamsString.split('&');\n\n        _.forEach(queryParams, function(param) {\n            var parsedParams = param.split('=');\n            var key = parsedParams[0];\n            var value = decodeURIComponent(parsedParams[1]);\n\n            parsedUriInfo[key] = value;\n\n            if (key === 'capabilities') {\n                parsedUriInfo[key] = value ? (value.split(',') || []) : [];\n            }\n        });\n\n        return parsedUriInfo;\n    }\n\n    function assertIsValidStreamType(type) {\n        assert.isValidType(type, streamTypes, 'streamType');\n\n        return _.getEnumName(streamTypes, type);\n    }\n\n    function assertIsValidTrackState(state) {\n        assert.isValidType(state, trackStates, 'trackState');\n\n        return _.getEnumName(trackStates, state);\n    }\n\n    return Stream;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n], function() {\n    'use strict';\n\n    var streamEnums = {\n        types: {\n            user: {\n                id: 0,\n                name: 'User'\n            },\n            presentation: {\n                id: 1,\n                name: 'Presentation'\n            },\n            audio: {\n                id: 2,\n                name: 'Audio'\n            }\n        }\n    };\n\n    return streamEnums;\n});","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-disposable',\n    './logging/pcastLoggerFactory',\n    'phenix-web-http',\n    'phenix-web-application-activity-detector',\n    './environment',\n    './audio/AudioContext',\n    './PCastProtocol',\n    './PCastEndPoint',\n    './userMedia/ScreenShareExtensionManager',\n    './userMedia/UserMediaProvider',\n    './streaming/PeerConnectionMonitor',\n    './DimensionsChangedMonitor',\n    './telemetry/metricsTransmitterFactory',\n    './telemetry/StreamTelemetry',\n    './telemetry/SessionTelemetry',\n    './streaming/PeerConnection',\n    './streaming/StreamWrapper',\n    './streaming/PhenixLiveStream',\n    './streaming/PhenixRealTimeStream',\n    './streaming/FeatureDetector',\n    './streaming/stream.json',\n    './streaming/BitRateMonitor',\n    'phenix-rtc',\n    './sdpUtil'\n], function(_, assert, observable, disposable, pcastLoggerFactory, http, applicationActivityDetector, environment, AudioContext, PCastProtocol, PCastEndPoint, ScreenShareExtensionManager, UserMediaProvider, PeerConnectionMonitor, DimensionsChangedMonitor, metricsTransmitterFactory, StreamTelemetry, SessionTelemetry, PeerConnection, StreamWrapper, PhenixLiveStream, PhenixRealTimeStream, FeatureDetector, streamEnums, BitRateMonitor, phenixRTC, sdpUtil) {\n    'use strict';\n\n    var sdkVersion = '2022-04-13T15:08:08Z';\n    var accumulateIceCandidatesDuration = 50;\n    var roomOrChannelIdRegex = /^(?:room|channel)Id[:](.*)$/;\n    var roomOrChannelAliasRegex = /^(?:room|channel)Alias[:](.*)$/;\n\n    function PCast(options) {\n        options = options || {};\n\n        assert.isObject(options, 'options');\n\n        if (options.streamingSourceMapping) {\n            assert.isObject(options.streamingSourceMapping, 'options.streamingSourceMapping');\n            assert.isStringNotEmpty(options.streamingSourceMapping.replacement, 'options.streamingSourceMapping.replacement');\n\n            if (!(options.streamingSourceMapping.patternToReplace instanceof RegExp)) {\n                assert.isStringNotEmpty(options.streamingSourceMapping.patternToReplace, 'options.streamingSourceMapping.patternToReplace');\n            }\n        }\n\n        if (!_.isNullOrUndefined(options.disableMultiplePCastInstanceWarning)) {\n            assert.isBoolean(options.disableMultiplePCastInstanceWarning, 'options.disableMultiplePCastInstanceWarning');\n        }\n\n        if (!_.isNullOrUndefined(options.disableGlobalErrorListener)) {\n            assert.isBoolean(options.disableGlobalErrorListener, 'options.disableGlobalErrorListener');\n        }\n\n        if (!_.isNullOrUndefined(options.disableBeforeUnload)) {\n            assert.isBoolean(options.disableBeforeUnload, 'options.disableBeforeUnload');\n        }\n\n        if (!_.isNullOrUndefined(options.disableConsoleLogging)) {\n            assert.isBoolean(options.disableConsoleLogging, 'options.disableConsoleLogging');\n        }\n\n        if (!_.isNullOrUndefined(options.loggingLevel)) {\n            assert.isNumber(options.loggingLevel, 'options.loggingLevel');\n        }\n\n        if (!_.isNullOrUndefined(options.treatBackgroundAsOffline)) {\n            assert.isBoolean(options.treatBackgroundAsOffline, 'options.treatBackgroundAsOffline');\n        }\n\n        if (!_.isNullOrUndefined(options.reAuthenticateOnForeground)) {\n            assert.isBoolean(options.reAuthenticateOnForeground, 'options.reAuthenticateOnForeground');\n        }\n\n        if (options.treatBackgroundAsOffline === true && options.reAuthenticateOnForeground === false) {\n            this._logger.warn('Conflicting options \"reAuthenticateOnForeground\" can not be false when \"treatBackgroundAsOffline\" is true. Will reauthenticate upon entering foreground.');\n        }\n\n        if (options.shakaLoader) {\n            assert.isFunction(options.shakaLoader, 'options.shakaLoader');\n        }\n\n        if (options.webPlayerLoader) {\n            assert.isFunction(options.webPlayerLoader, 'options.webPlayerLoader');\n        }\n\n        this._observableStatus = new observable.Observable('offline');\n        this._networkRTT = new observable.Observable(0);\n        this._observableSessionId = new observable.Observable(null);\n        this._deviceId = options.deviceId || '';\n        this._version = sdkVersion;\n\n        if (!options.authToken) {\n            this._baseUri = options.uri || PCastEndPoint.DefaultPCastUri;\n            setupPcastLoggerAndMetrics.call(this, options);\n        } else {\n            var baseUri = this.parseUriFromToken.call(this, options.authToken);\n\n            if (baseUri) {\n                this._baseUri = baseUri;\n                setupPcastLoggerAndMetrics.call(this, options);\n\n                if (options.uri) {\n                    this._logger.warn('Trying to join room with both authToken and uri. Please only use authToken.');\n                }\n\n                this._logger.info('Base uri is set to [%s] from authToken [%s]', baseUri, options.authToken);\n            } else {\n                this._baseUri = options.uri || PCastEndPoint.DefaultPCastUri;\n                setupPcastLoggerAndMetrics.call(this, options);\n\n                if (options.uri) {\n                    this._logger.warn('Trying to join room with options uri. Please use authToken.');\n\n                    this._logger.info('Base uri is set to [%s] from options uri', options.uri);\n                }\n            }\n        }\n\n        this._screenShareExtensionManager = new ScreenShareExtensionManager(options, this._logger);\n        this._shakaLoader = options.shakaLoader;\n        this._webPlayerLoader = options.webPlayerLoader;\n        this._rtmpOptions = options.rtmp || {};\n        this._streamingSourceMapping = options.streamingSourceMapping;\n        this._disposables = new disposable.DisposableList();\n        this._disableMultiplePCastInstanceWarning = options.disableMultiplePCastInstanceWarning;\n        this._treatBackgroundAsOffline = options.treatBackgroundAsOffline === true;\n        this._reAuthenticateOnForeground = options.reAuthenticateOnForeground === true;\n        this._authenticateCallId = 0;\n        this._reAuthenticateCallId = 0;\n        this._canPlaybackAudio = true;\n        this._h264ProfileIds = [];\n        this._supportedWebrtcCodecs = [];\n        this._featureDetector = new FeatureDetector(options.features);\n        this._pendingIceCandidates = {};\n        this._addIceCandidatesTimeoutScheduled = {};\n\n        var that = this;\n        var supportedFeatures = _.filter(this._featureDetector.getFeatures(), FeatureDetector.isFeatureSupported);\n        var logGlobalError = function logGlobalError(event) {\n            var errorToLog = event ? event.error : 'Unknown Error';\n            that._logger.error('Window Error Event Triggered with pcast in [%s] state [%s]', that._observableStatus.getValue(), /* Once for browsers that don't show stack traces */ errorToLog, errorToLog);\n        };\n\n        this._logger.info('Device supports features [%s], user selected [%s]', supportedFeatures, this._featureDetector.getFeatures());\n\n        _.addEventListener(phenixRTC.global, 'unload', function() {\n            that._logger.info('Window Unload Event Triggered');\n\n            return that.stop('window-unload');\n        });\n\n        if (!options.disableGlobalErrorListener) {\n            _.addEventListener(phenixRTC.global, 'error', logGlobalError);\n\n            if (phenixRTC.global.__phenixGlobalErrorListenerDisposable) {\n                phenixRTC.global.__phenixGlobalErrorListenerDisposable.dispose();\n            }\n\n            phenixRTC.global.__phenixGlobalErrorListenerDisposable = new disposable.Disposable(function() {\n                _.removeEventListener(phenixRTC.global, 'unload', logGlobalError);\n            });\n        }\n\n        if (!options.disableBeforeUnload) {\n            _.addEventListener(phenixRTC.global, 'beforeunload', function() {\n                that._logger.info('Window Before Unload Event Triggered');\n\n                return that.stop('window-beforeunload');\n            });\n        }\n\n        if (!phenixRTC.webrtcSupported && phenixRTC.browser === 'ReactNative') {\n            phenixRTC.shim();\n        }\n\n        // We need to check connection status because FF can create PC only with network status online\n        if (phenixRTC.webrtcSupported && this._observableStatus.getValue() === 'online') {\n            setEnvironmentCodecDefaults.call(this);\n            setAudioState.call(this);\n        }\n    }\n\n    PCast.prototype.getBaseUri = function() {\n        return this._baseUri;\n    };\n\n    PCast.prototype.getStatus = function() {\n        return this._observableStatus.getValue();\n    };\n\n    PCast.prototype.getObservableStatus = function() {\n        return this._observableStatus;\n    };\n\n    PCast.prototype.getRemoteDescriptionSdp = function(streamId) {\n        assert.isStringNotEmpty(streamId, 'streamId');\n\n        if (!this._peerConnections) {\n            return;\n        }\n\n        return _.get(this._peerConnections, [streamId, 'remoteDescription', 'sdp']);\n    };\n\n    PCast.prototype.isStarted = function() {\n        return this._started;\n    };\n\n    PCast.prototype.reAuthenticate = function(authToken) {\n        assert.isStringNotEmpty(authToken, 'authToken');\n\n        if (this._observableStatus.getValue() === 'online') {\n            return this._logger.warn('Already authenticated. Denying request to re-authenticate');\n        }\n\n        this._logger.info('Attempting to re-authenticate with new auth token [%s]', authToken);\n\n        this._authToken = authToken;\n\n        reconnected.call(this);\n    };\n\n    PCast.prototype.start = function(authToken, authenticationCallback, onlineCallback, offlineCallback) {\n        assert.isStringNotEmpty(authToken, 'authToken');\n        assert.isFunction(authenticationCallback, 'authenticationCallback');\n        assert.isFunction(onlineCallback, 'onlineCallback');\n        assert.isFunction(offlineCallback, 'offlineCallback');\n\n        if (this._started) {\n            throw new Error('\"Already started\"');\n        }\n\n        if (!_.isNumber(phenixRTC.global.__phenixInstantiatedPCastCount)) {\n            phenixRTC.global.__phenixInstantiatedPCastCount = 1;\n        } else {\n            phenixRTC.global.__phenixInstantiatedPCastCount++;\n        }\n\n        if (phenixRTC.global.__phenixInstantiatedPCastCount > 1 && !this._disableMultiplePCastInstanceWarning) {\n            this._logger.warn('Avoid using multiple instances of PCast as this uses unnecessary resources and will reduce performance. This is your [%s] simultaneous instance. Remember to dispose all resources when done with them by calling .stop() or .dispose()',\n                phenixRTC.global.__phenixInstantiatedPCastCount);\n        }\n\n        this._stopped = false;\n        this._started = true;\n        this._authToken = authToken;\n        this._authenticationCallback = authenticationCallback;\n        this._onlineCallback = onlineCallback;\n        this._offlineCallback = offlineCallback;\n        this._sessionTelemetry = new SessionTelemetry(this._logger, this._metricsTransmitter);\n        this._endPoint = new PCastEndPoint(this._version, this._baseUri, this._logger, this._sessionTelemetry);\n\n        transitionToStatus.call(this, 'connecting');\n\n        this._peerConnections = {};\n        this._mediaStreams = {};\n        this._iceCandidateCallbacks = {};\n        this._publishers = {};\n        this._gumStreams = [];\n\n        this._disposables.add(this._endPoint);\n        this._disposables.add(this._sessionTelemetry);\n        this._disposables.add(applicationActivityDetector.onBackground(_.bind(handleBackground, this)));\n        this._disposables.add(applicationActivityDetector.onForeground(_.bind(handleForeground, this)));\n\n        var that = this;\n\n        that._endPoint.resolveUri(function(err, endPoint) {\n            if (err) {\n                that._logger.error('Failed to connect to [%s]', that._baseUri, err);\n\n                if (that._authenticationCallback) {\n                    switch (err.code) {\n                    case 0:\n                        that._authenticationCallback.call(that, that, 'network-unavailable', '');\n\n                        break;\n                    case 503:\n                        that._authenticationCallback.call(that, that, 'capacity', '');\n\n                        break;\n                    default:\n                        that._authenticationCallback.call(that, that, 'critical-network-issue', '');\n\n                        return;\n                    }\n                }\n\n                transitionToStatus.call(that, 'offline');\n\n                that._stopped = true;\n                that._started = false;\n\n                return;\n            }\n\n            that._logger.info('Discovered end point [%s] with RTT [%s]', endPoint.uri, endPoint.roundTripTime);\n\n            that._networkOneWayLatency = endPoint.roundTripTime / 2;\n            that._resolvedEndPoint = endPoint.uri;\n\n            if (!that._started) {\n                return;\n            }\n\n            instantiateProtocol.call(that, endPoint.uri);\n        });\n    };\n\n    PCast.prototype.stop = function(reason) {\n        reason = reason || '';\n\n        assert.isString(reason, 'reason');\n\n        if (!this._started) {\n            return;\n        }\n\n        this._logger.info('Stopping pcast instance with reason [%s]', reason);\n\n        this._stopped = true;\n        this._started = false;\n\n        delete this._authenticationCallback;\n\n        try {\n            var that = this;\n\n            _.forOwn(this._mediaStreams, function(mediaStream, streamId) {\n                endStream.call(that, streamId, reason);\n            });\n            _.forOwn(this._publishers, function(publisher, publisherStreamId) {\n                endStream.call(that, publisherStreamId, reason);\n\n                if (!_.includes(publisher.getOptions(), 'detached')) {\n                    publisher.stop(reason, true);\n                }\n            });\n            _.forOwn(this._peerConnections, function(mediaStream, peerConnectionStreamId) {\n                endStream.call(that, peerConnectionStreamId, reason);\n            });\n            _.forEach(this._gumStreams, function(gumStream) {\n                var tracks = gumStream.getTracks();\n\n                _.forEach(tracks, function(track) {\n                    track.stop();\n                });\n            });\n        } catch (e) {\n            that._logger.warn('Pcast stop caught an error', e);\n        } finally {\n            if (this._protocol) {\n                try {\n                    this._protocol.disconnect();\n                } catch (e) {\n                    that._logger.warn('Failed to disconnect pcast', e);\n                }\n\n                this._protocol = null;\n            }\n\n            if (this._logger.setObservableSessionId) {\n                this._logger.setObservableSessionId(null);\n            }\n\n            if (this._sessionTelemetrySubscription) {\n                this._sessionTelemetrySubscription.dispose();\n                this._sessionTelemetry.setSessionId(null);\n            }\n\n            if (this._sessionIdSubscription) {\n                this._sessionIdSubscription.dispose();\n                this._observableSessionId.setValue(null);\n            }\n\n            phenixRTC.global.__phenixInstantiatedPCastCount--;\n\n            this._disposables.dispose();\n        }\n    };\n\n    PCast.prototype.getUserMedia = function(options, callback, onScreenShare) {\n        if (phenixRTC.browser === 'IE') {\n            throw new Error('Publishing not supported on IE');\n        }\n\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        if (onScreenShare) {\n            assert.isFunction(onScreenShare, 'onScreenShare');\n        }\n\n        var userMediaProvider = new UserMediaProvider(this._logger, this._screenShareExtensionManager, onScreenShare);\n\n        return userMediaProvider.getUserMedia(options, callback);\n    };\n\n    PCast.prototype.publish = function(streamToken, streamToPublish, callback, tags, options) {\n        if (phenixRTC.browser === 'IE') {\n            throw new Error('Publishing not supported on IE');\n        }\n\n        if (!this._started) {\n            throw new Error('PCast not started. Unable to publish. Please start pcast first.');\n        }\n\n        tags = tags || [];\n        options = options || {};\n\n        assert.isStringNotEmpty(streamToken, 'streamToken');\n        assert.isFunction(callback, 'callback');\n        assert.isArray(tags, 'tags');\n        assert.isObject(options, 'options');\n\n        if (!_.isObject(streamToPublish) && !_.isString(streamToPublish)) {\n            throw new Error('\"streamToPublish\" must be an object or URI');\n        }\n\n        var that = this;\n        var streamType = 'upload';\n        var setupStreamOptions = _.assign({}, options, {negotiate: true});\n\n        if (_.isString(streamToPublish)) {\n            setupStreamOptions.negotiate = false;\n            setupStreamOptions.connectUri = streamToPublish;\n        } else {\n            setupStreamOptions.connectUri = options.connectUri;\n        }\n\n        if (tags.length > 0) {\n            setupStreamOptions.tags = tags;\n        }\n\n        var streamTelemetry = new StreamTelemetry(this.getProtocol().getSessionId(), this._logger, this._metricsTransmitter);\n\n        streamTelemetry.setProperty('resource', streamType);\n        this._protocol.setupStream(streamType, streamToken, setupStreamOptions, that._networkOneWayLatency * 2, function(error, response) {\n            if (error) {\n                that._logger.error('Failed to create uploader [%s]', error);\n\n                return callback.call(that, that, 'failed');\n            } else if (response.status !== 'ok') {\n                that._logger.warn('Failed to create uploader, status [%s]', response.status);\n\n                switch (response.status) {\n                case 'timeout':\n                case 'capacity':\n                case 'unauthorized':\n                    return callback.call(that, that, response.status);\n                default:\n                    return callback.call(that, that, 'failed');\n                }\n            } else {\n                var streamId = response.createStreamResponse.streamId;\n\n                streamTelemetry.setStreamId(streamId);\n                streamTelemetry.setStartOffset(response.createStreamResponse.offset);\n                streamTelemetry.recordMetric('Provisioned');\n                streamTelemetry.recordMetric('RoundTripTime', {uint64: that._networkOneWayLatency * 2}, null, {\n                    resource: that._resolvedEndPoint,\n                    kind: 'https'\n                });\n\n                if (setupStreamOptions.negotiate === true) {\n                    var offerSdp = response.createStreamResponse.createOfferDescriptionResponse.sessionDescription.sdp;\n                    var peerConnectionConfig = applyVendorSpecificLogic(parseProtobufMessage(response.createStreamResponse.rtcConfiguration));\n\n                    if (phenixRTC.browser === 'Opera' && that._h264ProfileIds.length > 0) {\n                        // For publishing we need any profile and level that is equal to or greater than the offer's profile and level\n                        var profileLevelIdToReplace = _.get(sdpUtil.getH264ProfileIds(offerSdp), [0]);\n                        var preferredLevelId = sdpUtil.getH264ProfileIdWithSameProfileAndEqualToOrHigherLevel(that._h264ProfileIds, profileLevelIdToReplace);\n\n                        if (!preferredLevelId) {\n                            that._logger.warn('[%s] Unable to find h264 profile level id to replace [%s]. Rejected environment defaults of [%s]',\n                                streamId, profileLevelIdToReplace, that._h264ProfileIds);\n                        } else if (profileLevelIdToReplace !== preferredLevelId) {\n                            that._logger.info('[%s] Replacing publisher h264 profile level id [%s] with new value [%s] in offer sdp',\n                                streamId, profileLevelIdToReplace, preferredLevelId);\n\n                            offerSdp = sdpUtil.replaceH264ProfileId(offerSdp, profileLevelIdToReplace, preferredLevelId);\n                        }\n                    }\n\n                    return createPublisherPeerConnection.call(that, peerConnectionConfig, streamToPublish, streamId, offerSdp, streamTelemetry, function(phenixPublisher, error) {\n                        streamTelemetry.recordMetric('SetupCompleted', {string: error ? 'failed' : 'ok'});\n\n                        if (error) {\n                            callback.call(that, that, 'failed', null);\n                        } else {\n                            callback.call(that, that, 'ok', phenixPublisher);\n                        }\n                    }, options, response.createStreamResponse.options);\n                }\n\n                return createPublisher.call(that, streamId, function(phenixPublisher, error) {\n                    streamTelemetry.recordMetric('SetupCompleted', {string: error ? 'failed' : 'ok'});\n\n                    if (error) {\n                        callback.call(that, that, 'failed', null);\n                    } else {\n                        callback.call(that, that, 'ok', phenixPublisher);\n                    }\n                }, response.createStreamResponse.options);\n            }\n        });\n    };\n\n    PCast.prototype.subscribe = function(streamToken, callback, options) {\n        if (!this._started) {\n            throw new Error('PCast not started. Unable to subscribe. Please start pcast first.');\n        }\n\n        options = options || {};\n\n        assert.isStringNotEmpty(streamToken, 'streamToken');\n        assert.isFunction(callback, 'callback');\n        assert.isObject(options, 'options');\n\n        var that = this;\n\n        setAudioState.call(that, function() {\n            var streamType = 'download';\n            var setupStreamOptions = _.assign({}, options, {negotiate: options.negotiate !== false});\n            var streamTelemetry = new StreamTelemetry(that.getProtocol().getSessionId(), that._logger, that._metricsTransmitter);\n            var createViewerOptions = _.assign({}, options);\n\n            createViewerOptions.canPlaybackAudio = that._canPlaybackAudio;\n\n            createViewerOptions.capabilities = that.parseCapabilitiesFromToken(streamToken);\n\n            if (!that._canPlaybackAudio && options.disableAudioIfNoOutputFound && options.receiveAudio !== false) {\n                setupStreamOptions.receiveAudio = false;\n                createViewerOptions.receiveAudio = false;\n                createViewerOptions.forcedAudioDisabled = true;\n            }\n\n            if (options.originStreamId) {\n                setupStreamOptions.originStreamId = options.originStreamId;\n            }\n\n            streamTelemetry.setProperty('resource', streamType);\n\n            that._protocol.setupStream(streamType, streamToken, setupStreamOptions, that._networkOneWayLatency * 2, function(error, response) {\n                if (error) {\n                    that._logger.error('Failed to create downloader [%s]', error);\n\n                    return callback.call(that, that, 'failed');\n                } else if (response.status !== 'ok') {\n                    that._logger.warn('Failed to create downloader, status [%s]', response.status);\n\n                    return callback.call(that, that, response.status);\n                }\n\n                var streamId = response.createStreamResponse.streamId;\n                var offerSdp = response.createStreamResponse.createOfferDescriptionResponse.sessionDescription.sdp;\n                var peerConnectionConfig = applyVendorSpecificLogic(parseProtobufMessage(response.createStreamResponse.rtcConfiguration));\n                var create = _.bind(createViewerPeerConnection, that, peerConnectionConfig);\n                var isNotRealTime = !(offerSdp.match(/m=audio /) || offerSdp.match(/m=video /)) && (offerSdp.match(/a=x-playlist:/) || offerSdp.match(/a=x-rtmp:/));\n\n                if (isNotRealTime) {\n                    create = createChunkedOrRtmpViewer;\n                }\n\n                streamTelemetry.setStreamId(streamId);\n                streamTelemetry.setStartOffset(response.createStreamResponse.offset);\n                streamTelemetry.recordMetric('Provisioned');\n                streamTelemetry.recordMetric('RoundTripTime', {uint64: that._networkOneWayLatency * 2}, null, {\n                    resource: that.getBaseUri(),\n                    kind: 'https'\n                });\n\n                createViewerOptions.originStartTime = _.now() - response.createStreamResponse.offset + that._networkOneWayLatency;\n\n                if (!isNotRealTime && ((phenixRTC.browser === 'Chrome' && phenixRTC.browserVersion >= 62 && FeatureDetector.isMobile()) || phenixRTC.browser === 'Opera') && that._h264ProfileIds.length > 0) {\n                    // For subscribing we need any profile and level that is equal to or greater than the offer's profile and level\n                    var profileLevelIdToReplace = _.get(sdpUtil.getH264ProfileIds(offerSdp), [0]);\n                    var preferredLevelId = sdpUtil.getH264ProfileIdWithSameOrHigherProfileAndEqualToOrHigherLevel(that._h264ProfileIds, profileLevelIdToReplace);\n\n                    if (!preferredLevelId) {\n                        that._logger.warn('[%s] Unable to find new subscriber h264 profile level id to replace [%s]. Rejected environment defaults of [%s]',\n                            streamId, profileLevelIdToReplace, that._h264ProfileIds);\n                    } else if (profileLevelIdToReplace !== preferredLevelId) {\n                        that._logger.info('[%s] Replacing subscriber h264 profile level id [%s] with new value [%s] in offer sdp',\n                            streamId, profileLevelIdToReplace, preferredLevelId);\n\n                        offerSdp = sdpUtil.replaceH264ProfileId(offerSdp, profileLevelIdToReplace, preferredLevelId);\n                    }\n                }\n\n                return create.call(that, streamId, offerSdp, streamTelemetry, function(phenixMediaStream, error) {\n                    streamTelemetry.recordMetric('SetupCompleted', {string: error ? 'failed' : 'ok'});\n\n                    if (error) {\n                        callback.call(that, that, 'failed', null);\n                    } else {\n                        callback.call(that, that, 'ok', phenixMediaStream);\n                    }\n                }, createViewerOptions);\n            });\n        });\n    };\n\n    PCast.prototype.getProtocol = function() {\n        return this._protocol;\n    };\n\n    PCast.prototype.getLogger = function() {\n        return this._logger;\n    };\n\n    PCast.prototype.getObservableSessionId = function() {\n        return this._observableSessionId;\n    };\n\n    PCast.prototype.toString = function() {\n        var protocol = this.getProtocol();\n        var sessionId = protocol ? protocol.getSessionId() : '';\n\n        return 'PCast[' + sessionId || 'unauthenticated' + ',' + (protocol ? protocol.toString() : 'uninitialized') + ']';\n    };\n\n    PCast.prototype.parseCapabilitiesFromToken = function(streamToken) {\n        return _.get(parseToken.call(this, streamToken), ['capabilities'], []);\n    };\n\n    PCast.prototype.parseUriFromToken = function(streamToken) {\n        return _.get(parseToken.call(this, streamToken), ['uri'], '');\n    };\n\n    PCast.prototype.parseRoomOrChannelIdFromToken = function(streamToken) {\n        var requiredTag = _.get(parseToken.call(this, streamToken), ['requiredTag'], '');\n        var idMatch = requiredTag.match(roomOrChannelIdRegex);\n\n        return idMatch ? idMatch[1] : null;\n    };\n\n    PCast.prototype.parseRoomOrChannelAliasFromToken = function(streamToken) {\n        var requiredTag = _.get(parseToken.call(this, streamToken), ['requiredTag'], '');\n        var aliasMatch = requiredTag.match(roomOrChannelAliasRegex);\n\n        return aliasMatch ? aliasMatch[1] : null;\n    };\n\n    function setupPcastLoggerAndMetrics(options) {\n        this._logger = options.logger || pcastLoggerFactory.createPCastLogger(this._baseUri, options.disableConsoleLogging, options.loggingLevel);\n        this._metricsTransmitter = options.metricsTransmitter || metricsTransmitterFactory.createMetricsTransmitter(this._baseUri);\n    }\n\n    function parseToken(streamToken) {\n        if (!_.startsWith(streamToken, 'DIGEST:')) {\n            this._logger.warn('Failed to parse the `streamToken` [%s]', streamToken);\n\n            throw new Error('Bad `streamToken`');\n        }\n\n        try {\n            var base64Token = streamToken.split(':')[1];\n            var decodedToken = phenixRTC.global.atob(base64Token);\n            var token = JSON.parse(decodedToken).token;\n            var tokenOptions = JSON.parse(token);\n\n            return tokenOptions;\n        } catch (e) {\n            var sessionId = this.getProtocol().getSessionId();\n            this._logger.warn('[%s] Failed to parse the `streamToken` [%s]', sessionId, streamToken);\n\n            throw new Error(e);\n        }\n    }\n\n    function instantiateProtocol(uri) {\n        this._protocol = new PCastProtocol(uri, this._deviceId, this._version, this._logger);\n\n        this._protocol.onEvent('connected', _.bind(connected, this));\n        this._protocol.onEvent('reconnecting', _.bind(reconnecting, this));\n        this._protocol.onEvent('reconnected', _.bind(reconnected, this));\n        this._protocol.onEvent('disconnected', _.bind(disconnected, this));\n        this._protocol.onEvent('pcast.StreamEnded', _.bind(streamEnded, this));\n        this._protocol.onEvent('pcast.StreamDataQuality', _.bind(dataQuality, this));\n\n        if (this._logger.setObservableSessionId) {\n            this._logger.setObservableSessionId(this._protocol.getObservableSessionId());\n        }\n\n        if (this._sessionTelemetrySubscription) {\n            this._sessionTelemetrySubscription.dispose();\n            this._sessionTelemetry.setSessionId(null);\n        }\n\n        if (this._sessionIdSubscription) {\n            this._sessionIdSubscription.dispose();\n        }\n\n        var handleSessionIdChange = function(sessionId) {\n            this._observableSessionId.setValue(sessionId);\n        };\n\n        this._sessionIdSubscription = this._protocol.getObservableSessionId().subscribe(_.bind(handleSessionIdChange, this));\n\n        this._sessionTelemetrySubscription = this._protocol.getObservableSessionId().subscribe(_.bind(this._sessionTelemetry.setSessionId, this._sessionTelemetry));\n    }\n\n    function connected() {\n        var that = this;\n\n        if (that._stopped) {\n            that._logger.warn('[%s] Skip connect due to stopped state', that);\n\n            return;\n        }\n\n        if (areAllPeerConnectionsOffline.call(that) && that._observableStatus.getValue() === 'offline') {\n            this._logger.warn('[PCast] connected after being offline. Reconnecting.');\n\n            reconnecting.call(that);\n        }\n\n        this._connected = true;\n\n        var protocol = that._protocol;\n        var authenticateCallId = ++that._authenticateCallId;\n\n        protocol.authenticate(that._authToken, function(error, response) {\n            if (protocol !== that._protocol) {\n                that._logger.info('Ignoring authentication response as reset took place');\n\n                return;\n            }\n\n            if (authenticateCallId !== that._authenticateCallId) {\n                that._logger.info('Ignoring authentication response as a latter request is already underway');\n\n                return;\n            }\n\n            if (that._authenticationCallback) {\n                if (error) {\n                    that._logger.error('Failed to authenticate [%s]', error);\n                    transitionToStatus.call(that, 'unauthorized');\n                    that._authenticationCallback.call(that, that, 'unauthorized', '');\n                } else if (response.status !== 'ok') {\n                    that._logger.warn('Failed to authenticate, status [%s]', response.status);\n                    transitionToStatus.call(that, 'unauthorized');\n                    that._authenticationCallback.call(that, that, 'unauthorized', '');\n                } else {\n                    transitionToStatus.call(that, 'online');\n\n                    that._authenticationCallback.call(that, that, response.status, response.sessionId);\n                }\n            }\n        });\n    }\n\n    function reconnecting() {\n        transitionToStatus.call(this, 'reconnecting');\n    }\n\n    function reconnected(optionalReason) {\n        if (optionalReason) {\n            assert.isString('reason', optionalReason);\n        }\n\n        transitionToStatus.call(this, 'reconnected', optionalReason);\n\n        this._logger.info('Attempting to re-authenticate after reconnected event [%s]', optionalReason);\n\n        reAuthenticate.call(this);\n    }\n\n    function reAuthenticate() {\n        var that = this;\n\n        if (that._stopped) {\n            that._logger.info('Skip re-authentication due to stopped state');\n\n            return;\n        }\n\n        var protocol = that._protocol;\n        var reAuthenticateCallId = ++that._reAuthenticateCallId;\n\n        protocol.authenticate(that._authToken, function(error, response) {\n            var suppressCallbackIfNeverDisconnected = that._connected === true;\n\n            if (protocol !== that._protocol) {\n                that._logger.info('Ignoring re-authentication response as reset took place');\n\n                return;\n            }\n\n            if (reAuthenticateCallId !== that._reAuthenticateCallId) {\n                that._logger.info('Ignoring re-authentication response as a latter request is already underway');\n\n                return;\n            }\n\n            if (error) {\n                that._logger.error('Unable to authenticate after reconnect to WebSocket [%s]', error);\n\n                return transitionToStatus.call(that, 'reconnect-failed');\n            }\n\n            if (response.status !== 'ok') {\n                that._logger.warn('Unable to authenticate after reconnect to WebSocket, status [%s]', response.status);\n\n                var reason = response.status === 'capacity' ? response.status : 'reconnect-failed';\n\n                return transitionToStatus.call(that, reason);\n            }\n\n            that._connected = true;\n\n            that._logger.info('Successfully authenticated after reconnect to WebSocket');\n\n            return transitionToStatus.call(that, 'online', null, suppressCallbackIfNeverDisconnected);\n        });\n    }\n\n    function disconnected() {\n        if (areAllPeerConnectionsOffline.call(this) && this._observableStatus.getValue() === 'reconnecting') {\n            this._logger.warn('[PCast] disconnected after attempting to reconnect. Going offline.');\n\n            transitionToStatus.call(this, 'critical-network-issue');\n\n            return this.stop('critical-network-issue');\n        }\n\n        this._connected = false;\n        transitionToStatus.call(this, 'offline');\n    }\n\n    function areAllPeerConnectionsOffline() {\n        return _.reduce(this._peerConnections, function(isOffline, peerConnection) {\n            if (!isOffline) {\n                return isOffline;\n            }\n\n            return peerConnection.iceConnectionState === 'closed';\n        }, true);\n    }\n\n    function streamEnded(event) {\n        var streamId = event.streamId;\n        var reason = event.reason;\n\n        return endStream.call(this, streamId, reason);\n    }\n\n    function dataQuality(event) {\n        var streamId = event.streamId;\n        var status = event.status;\n        var reason = event.reason;\n\n        var internalMediaStream = this._mediaStreams[streamId];\n\n        if (internalMediaStream) {\n            internalMediaStream.dataQualityChangedCallback(status, reason);\n        }\n\n        var publisher = this._publishers[streamId];\n\n        if (publisher && _.isFunction(publisher.dataQualityChangedCallback)) {\n            publisher.dataQualityChangedCallback(publisher, status, reason);\n        }\n    }\n\n    function endStream(streamId, reason) {\n        this._logger.info('[%s] Stream ended with reason [%s]', streamId, reason);\n\n        var internalMediaStream = this._mediaStreams[streamId];\n\n        if (internalMediaStream) {\n            internalMediaStream.streamEndedCallback(StreamWrapper.getStreamEndedStatus(reason), reason, true);\n        }\n\n        delete this._mediaStreams[streamId];\n\n        var publisher = this._publishers[streamId];\n\n        if (publisher && _.isFunction(publisher.publisherEndedCallback)) {\n            publisher.publisherEndedCallback(publisher, StreamWrapper.getStreamEndedStatus(reason), reason);\n        }\n\n        delete this._publishers[streamId];\n\n        var peerConnection = this._peerConnections[streamId];\n\n        if (peerConnection) {\n            closePeerConnection.call(this, streamId, peerConnection, 'ended');\n        }\n\n        delete this._peerConnections[streamId];\n    }\n\n    function setupStreamAddedListener(streamId, state, peerConnection, streamTelemetry, callback, options) {\n        var that = this;\n        var added = false;\n        var setupTimeoutId;\n        var streamSetupInterval = 3000;\n        var onAddStream = function onAddStream(event) {\n            if (state.failed || added) {\n                return;\n            }\n\n            var numberOfActiveTracks = sdpUtil.getNumberOfActiveSections(peerConnection);\n            var masterStream = event.stream || _.get(event, ['streams', 0]);\n            var kind = 'real-time';\n\n            if (!masterStream) {\n                state.failed = true;\n                that._logger.warn('[%s] No remote stream', streamId);\n\n                return callback.call(that, undefined, 'failed');\n            }\n\n            if (setupTimeoutId) {\n                clearTimeout(setupTimeoutId);\n            }\n\n            if (numberOfActiveTracks !== masterStream.getTracks().length && phenixRTC.browser !== 'ReactNative') {\n                setupTimeoutId = setTimeout(function() {\n                    state.failed = true;\n                    that._logger.warn('[%s] Did not receive all tracks within [%s] ms', streamId, streamSetupInterval);\n\n                    return callback.call(that, undefined, 'failed');\n                }, streamSetupInterval);\n\n                return;\n            }\n\n            added = true;\n\n            that._logger.info('[%s] Got remote stream', streamId);\n\n            streamTelemetry.setProperty('kind', kind);\n\n            var streamOptions = _.assign({networkLag: that._networkOneWayLatency}, options);\n            var realTimeStream = new PhenixRealTimeStream(streamId, masterStream, peerConnection, streamTelemetry, streamOptions, that._logger);\n            var realTimeStreamDecorator = new StreamWrapper(kind, realTimeStream, that._logger);\n\n            var onError = function onError(source, event) {\n                that._logger.info('Phenix Real-Time stream error [%s] [%s]', source, event);\n\n                realTimeStreamDecorator.streamErrorCallback(kind, event);\n            };\n\n            var onStop = function destroyMasterMediaStream(reason) {\n                if (state.stopped || !that._protocol) {\n                    return;\n                }\n\n                that._logger.info('[%s] media stream has stopped with reason [%s]', streamId, reason);\n\n                closePeerConnection.call(that, streamId, peerConnection, 'stop');\n\n                that._protocol.destroyStream(streamId, reason || '', function(error, response) {\n                    if (error) {\n                        that._logger.error('[%s] failed to destroy stream [%s]', streamId, error);\n\n                        return;\n                    } else if (response.status !== 'ok') {\n                        that._logger.warn('[%s] failed to destroy stream, status [%s]', streamId, response.status);\n\n                        return;\n                    }\n\n                    that._logger.info('[%s] destroyed stream', streamId);\n                });\n\n                state.stopped = true;\n            };\n\n            realTimeStreamDecorator.on(streamEnums.streamEvents.playerError.name, onError);\n            realTimeStreamDecorator.on(streamEnums.streamEvents.stopped.name, onStop);\n\n            that._mediaStreams[streamId] = realTimeStreamDecorator;\n\n            callback.call(that, realTimeStream);\n        };\n\n        _.addEventListener(peerConnection, 'addstream', onAddStream);\n        _.addEventListener(peerConnection, 'track', onAddStream);\n    }\n\n    function setupIceCandidateListener(streamId, peerConnection, callback) {\n        var that = this;\n        var onIceCandidate = function onIceCandidate(event) {\n            var candidate = event.candidate;\n\n            if (candidate) {\n                that._logger.info('[%s] ICE candidate: [%s] [%s] [%s]', streamId, candidate.sdpMid, candidate.sdpMLineIndex, candidate.candidate);\n            } else {\n                that._logger.info('[%s] ICE candidate discovery complete', streamId);\n            }\n\n            if (callback) {\n                callback(candidate);\n            }\n        };\n\n        _.addEventListener(peerConnection, 'icecandidate', onIceCandidate);\n    }\n\n    function setupStateListener(streamId, peerConnection) {\n        var that = this;\n        var onNegotiationNeeded = function onNegotiationNeeded(event) { // eslint-disable-line no-unused-vars\n            that._logger.info('[%s] Negotiation needed', streamId);\n        };\n\n        var onIceConnectionStateChanged = function onIceConnectionStateChanged(event) { // eslint-disable-line no-unused-vars\n            that._logger.info('[%s] ICE connection state changed [%s]', streamId, peerConnection.iceConnectionState);\n        };\n\n        var onIceGatheringStateChanged = function onIceGatheringStateChanged(event) { // eslint-disable-line no-unused-vars\n            that._logger.info('[%s] ICE gathering state changed [%s]', streamId, peerConnection.iceGatheringState);\n        };\n\n        var onSignalingStateChanged = function onSignalingStateChanged(event) { // eslint-disable-line no-unused-vars\n            that._logger.info('[%s] Signaling state changed [%s]', streamId, peerConnection.signalingState);\n        };\n\n        var onConnectionStateChanged = function onConnectionStateChanged(event) { // eslint-disable-line no-unused-vars\n            that._logger.info('[%s] Connection state changed [%s]', streamId, peerConnection.connectionState);\n        };\n\n        _.addEventListener(peerConnection, 'negotiationneeded', onNegotiationNeeded);\n        _.addEventListener(peerConnection, 'iceconnectionstatechange', onIceConnectionStateChanged);\n        _.addEventListener(peerConnection, 'icegatheringstatechange ', onIceGatheringStateChanged);\n        _.addEventListener(peerConnection, 'signalingstatechange', onSignalingStateChanged);\n        _.addEventListener(peerConnection, 'connectionstatechange', onConnectionStateChanged);\n    }\n\n    function createPublisher(streamId, callback, streamOptions) {\n        var that = this;\n        var state = {stopped: false};\n\n        var publisher = {\n            getStreamId: function getStreamId() {\n                return streamId;\n            },\n\n            getStream: function getStream() {\n                that._logger.debug('[%s] Unable to get stream for remote origin.', streamId);\n\n                return null;\n            },\n\n            getStats: function getStats() {\n                that._logger.debug('[%s] Unable to get stream stats for remote origin.', streamId);\n\n                return null;\n            },\n\n            isActive: function isActive() {\n                return !state.stopped;\n            },\n\n            hasEnded: function hasEnded() {\n                return state.stopped;\n            },\n\n            stop: function stop(reason) {\n                if (state.stopped) {\n                    return;\n                }\n\n                that._logger.info('[%s] stopping publisher with reason [%s]', streamId, reason);\n\n                that._protocol.destroyStream(streamId, reason || '', function(error, response) {\n                    if (error) {\n                        that._logger.error('[%s] failed to destroy stream [%s]', streamId, error);\n\n                        return;\n                    } else if (response.status !== 'ok') {\n                        that._logger.warn('[%s] failed to destroy stream, status [%s]', streamId, response.status);\n\n                        return;\n                    }\n\n                    that._logger.info('[%s] destroyed stream', streamId);\n                });\n\n                state.stopped = true;\n            },\n\n            setPublisherEndedCallback: function setPublisherEndedCallback(callback) {\n                assert.isFunction(callback, 'callback');\n\n                this.publisherEndedCallback = callback;\n            },\n\n            setDataQualityChangedCallback: function setDataQualityChangedCallback(callback) {\n                assert.isFunction(callback, 'callback');\n\n                this.dataQualityChangedCallback = callback;\n            },\n\n            getOptions: function getOptions() {\n                return streamOptions;\n            },\n\n            monitor: function monitor(options, callback) {\n                assert.isObject(options, 'options');\n                assert.isFunction(callback, 'callback');\n            },\n\n            getMonitor: function getMonitor() {\n                return null;\n            }\n        };\n\n        that._publishers[streamId] = publisher;\n\n        callback(publisher);\n    }\n\n    function setEnvironmentCodecDefaults() {\n        var that = this;\n        var peerConnection = new phenixRTC.RTCPeerConnection();\n\n        // TODO(DY) remove when updating to webrtc-adapter version 5.0.5 or greater\n        if (phenixRTC.browser === 'Safari' && phenixRTC.browserVersion > 10) {\n            peerConnection.addTransceiver('audio');\n            peerConnection.addTransceiver('video');\n        }\n\n        try {\n            var handleOffer = function handleOffer(offer) {\n                var h264ProfileIds = sdpUtil.getH264ProfileIds(offer.sdp);\n\n                that._supportedWebrtcCodecs = sdpUtil.getSupportedCodecs(offer.sdp);\n\n                that._logger.info('Supported WebRTC video codecs [%s]', that._supportedWebrtcCodecs);\n\n                if (h264ProfileIds.length === 0) {\n                    return that._logger.info('Unable to find local h264 profile level id', offer.sdp);\n                }\n\n                that._logger.info('Found local h264 profile level ids [%s]', h264ProfileIds, offer.sdp);\n\n                that._h264ProfileIds = h264ProfileIds;\n\n                if (peerConnection.close) {\n                    peerConnection.close();\n                }\n            };\n\n            var handleFailure = function(e) {\n                that._logger.error('Unable to create offer to get local h264 profile level id', e);\n\n                if (peerConnection.close) {\n                    peerConnection.close();\n                }\n            };\n\n            var constraints = {\n                offerToReceiveAudio: true,\n                offerToReceiveVideo: true\n            };\n\n            if (typeof phenixRTC.global.Promise === 'function') {\n                return peerConnection.createOffer(constraints)\n                    .then(handleOffer)\n                    .catch(handleFailure);\n            }\n\n            peerConnection.createOffer(handleOffer, handleFailure, constraints);\n        } catch (e) {\n            that._logger.error('Failed to set environment defaults. Creating the Offer failed', e);\n\n            if (peerConnection.close) {\n                peerConnection.close();\n            }\n        }\n    }\n\n    function setAudioState(done) {\n        var that = this;\n\n        switch (phenixRTC.browser) {\n        case 'Edge':\n            return phenixRTC.getDestinations(function(destinations) {\n                var audioDestinations = _.filter(destinations, function(destination) {\n                    return destination.kind === 'audio';\n                });\n\n                if (audioDestinations.length === 0) {\n                    if (that._canPlaybackAudio) {\n                        that._logger.info('Detected no audio devices attached to machine');\n                    }\n\n                    that._canPlaybackAudio = false;\n                } else {\n                    that._canPlaybackAudio = true;\n                }\n\n                if (done) {\n                    done();\n                }\n            });\n        default:\n            if (done) {\n                done();\n            }\n\n            break;\n        }\n    }\n\n    function createPublisherPeerConnection(peerConnectionConfig, mediaStream, streamId, offerSdp, streamTelemetry, callback, createOptions, streamOptions) {\n        var that = this;\n        var state = {\n            failed: false,\n            stopped: false\n        };\n        var hasCrypto = offerSdp.match(/a=crypto:/i);\n        var hasDataChannel = offerSdp.match(/m=application /i);\n        var peerConnection = new phenixRTC.RTCPeerConnection(peerConnectionConfig, {\n            'optional': [\n                {DtlsSrtpKeyAgreement: !hasCrypto}, {RtpDataChannels: hasDataChannel}\n            ]\n        });\n        var remoteMediaStream = null;\n        var publisherMonitor = null;\n\n        shimPeerConnectionGetStreams(peerConnection);\n\n        that._peerConnections[streamId] = peerConnection;\n\n        peerConnection.addStream(mediaStream);\n\n        if (phenixRTC.browser === 'Firefox' || phenixRTC.browser === 'Edge') {\n            if (offerSdp.match(/(\\nm=video)/g) && offerSdp.match(/(\\nm=audio)/g)) {\n                var firstSection = /(a=candidate)((.|\\n)*)(?=m=)/g;\n\n                offerSdp = offerSdp.replace(firstSection, offerSdp.match(firstSection) + 'a=end-of-candidates\\n');\n            }\n\n            offerSdp += 'a=end-of-candidates';\n\n            offerSdp = offerSdp.replace(/(\\na=ice-options:trickle)/g, '');\n        }\n\n        var onFailure = function onFailure(status) {\n            if (state.failed) {\n                return;\n            }\n\n            if (status instanceof Error) {\n                that._logger.info('[%s] Failed to setup peer connection', streamId, status);\n\n                status = 'failed';\n            }\n\n            state.failed = true;\n            state.stopped = true;\n\n            delete that._peerConnections[streamId];\n            delete that._publishers[streamId];\n            delete that._iceCandidateCallbacks[streamId];\n\n            closePeerConnection.call(that, streamId, peerConnection, 'failure');\n\n            callback.call(that, undefined, status || 'failed');\n        };\n\n        var createPublisher = function createPublisher() {\n            var bandwidthAttribute = /(b=AS:([0-9]*)[\\n\\r]*)/gi;\n            var video = /(mid:video)([\\n\\r]*)/gi;\n            var limit = 0;\n            var bandwithAttribute = bandwidthAttribute.exec(offerSdp);\n\n            if (bandwithAttribute && bandwithAttribute.length >= 3) {\n                limit = bandwithAttribute[2] * 1000;\n            }\n\n            var publisher = {\n                getStreamId: function getStreamId() {\n                    return streamId;\n                },\n\n                getStream: function getStream() {\n                    return mediaStream;\n                },\n\n                isActive: function isActive() {\n                    return !state.stopped;\n                },\n\n                hasEnded: function hasEnded() {\n                    switch (peerConnection.iceConnectionState) {\n                    case 'new':\n                    case 'checking':\n                    case 'connected':\n                    case 'completed':\n                        return false;\n                    case 'disconnected':\n                    case 'failed':\n                    case 'closed':\n                        return true;\n                    default:\n                        return true;\n                    }\n                },\n\n                stop: function stop(reason) {\n                    if (state.stopped || !that._protocol) {\n                        return;\n                    }\n\n                    that._logger.info('[%s] stopping publisher with reason [%s]', streamId, reason || 'client-action');\n\n                    closePeerConnection.call(that, streamId, peerConnection, 'closed');\n\n                    that._protocol.destroyStream(streamId, reason || '', function(error, response) {\n                        if (error) {\n                            that._logger.error('[%s] failed to destroy stream [%s]', streamId, error);\n\n                            return;\n                        } else if (response.status !== 'ok') {\n                            that._logger.warn('[%s] failed to destroy stream, status [%s]', streamId, response.status);\n\n                            return;\n                        }\n\n                        that._logger.info('[%s] destroyed stream', streamId);\n                    });\n\n                    state.stopped = true;\n                },\n\n                setPublisherEndedCallback: function setPublisherEndedCallback(callback) {\n                    assert.isFunction(callback, 'callback');\n\n                    this.publisherEndedCallback = callback;\n                },\n\n                setDataQualityChangedCallback: function setDataQualityChangedCallback(callback) {\n                    assert.isFunction(callback, 'callback');\n\n                    this.dataQualityChangedCallback = callback;\n                },\n\n                limitBandwidth: function limitBandwidth(bandwidthLimit) {\n                    if (phenixRTC.browser === 'Edge') {\n                        return that._logger.warn('Limit bandwidth not support on [%s]', phenixRTC.browser);\n                    }\n\n                    assert.isNumber(bandwidthLimit, 'bandwidthLimit');\n\n                    var newLimit = limit ? Math.min(bandwidthLimit, limit) : bandwidthLimit;\n                    var remoteDescription = peerConnection.remoteDescription;\n\n                    that._logger.info('Changing bandwidth limit to [%s]', newLimit);\n\n                    var updatedSdp = remoteDescription.sdp.replace(bandwidthAttribute, '');\n\n                    // Add new limit in kbps\n                    updatedSdp = updatedSdp.replace(video, function(match, videoLine, lineEnding, offset, sdp) { // eslint-disable-line no-unused-vars\n                        return [videoLine, lineEnding, 'b=AS:', Math.ceil(newLimit / 1000), lineEnding].join('');\n                    });\n\n                    var updatedRemoteDescription = new phenixRTC.RTCSessionDescription({\n                        type: remoteDescription.type,\n                        sdp: updatedSdp\n                    });\n\n                    peerConnection.setRemoteDescription(updatedRemoteDescription);\n\n                    return {\n                        dispose: function() {\n                            peerConnection.setRemoteDescription(remoteDescription);\n                        }\n                    };\n                },\n\n                getMonitor: function getMonitor() {\n                    return publisherMonitor;\n                },\n\n                monitor: function monitor(options, callback) {\n                    assert.isObject(options, 'options');\n                    assert.isFunction(callback, 'callback');\n\n                    var monitor = new PeerConnectionMonitor(streamId, peerConnection, that._logger);\n\n                    options.direction = 'outbound';\n                    options.setNetworkRTT = function(rtt) {\n                        that._networkRTT.setValue(rtt);\n                    };\n                    monitor.start(options, function activeCallback() {\n                        return that._publishers[streamId] === publisher && !state.stopped;\n                    }, function monitorCallback(error, monitorEvent) {\n                        if (error) {\n                            that._logger.warn('[%s] Publisher monitor triggered unrecoverable error [%s]', error);\n                        }\n\n                        that._logger.warn('[%s] Publisher triggered monitor condition for [%s]', streamId, monitorEvent.reasons);\n\n                        return callback(publisher, 'client-side-failure', monitorEvent);\n                    });\n\n                    _.forEach(mediaStream.getTracks(), function(track) {\n                        _.addEventListener(track, 'readystatechange', function() {\n                            if (track.readyState === 'ended') {\n                                that._logger.warn('[%s] Publisher track has failed [%s]', streamId, track);\n\n                                return callback(publisher, 'camera-track-failure', {\n                                    type: track.kind + '-track-ended',\n                                    message: 'Publisher ' + track.kind + ' track has ended in an unrecoverable way. This may require reconfiguring your camera or microphone.'\n                                });\n                            }\n                        });\n                    });\n\n                    publisherMonitor = monitor;\n\n                    return monitor;\n                },\n\n                addBitRateThreshold: function addBitRateThreshold(threshold, callback) {\n                    var bitRateMonitor = new BitRateMonitor('Publisher', publisherMonitor, function getLimit() {\n                        return limit;\n                    });\n\n                    return bitRateMonitor.addThreshold(threshold, callback);\n                },\n\n                setRemoteMediaStreamCallback: function setRemoteMediaStreamCallback(callback) {\n                    assert.isFunction(callback, 'callback');\n\n                    this.remoteMediaStreamCallback = callback;\n\n                    if (remoteMediaStream) {\n                        callback(publisher, remoteMediaStream);\n                    }\n                },\n\n                getOptions: function getOptions() {\n                    return streamOptions;\n                },\n\n                getStats: function getStats(callback) {\n                    assert.isFunction(callback, 'callback');\n\n                    if (!this._lastStats) {\n                        this._lastStats = {};\n                    }\n\n                    var that = this;\n\n                    return phenixRTC.getStats(peerConnection, null, function(stats) {\n                        callback(PeerConnection.convertPeerConnectionStats(stats, that._lastStats));\n                    });\n                },\n\n                networkRTT: that._networkRTT\n            };\n\n            that._publishers[streamId] = publisher;\n\n            callback.call(that, publisher);\n        };\n\n        setupStreamAddedListener.call(that, streamId, state, peerConnection, streamTelemetry, function(mediaStream) {\n            var publisher = that._publishers[streamId];\n\n            remoteMediaStream = mediaStream;\n\n            if (publisher && publisher.remoteMediaStreamCallback) {\n                publisher.remoteMediaStreamCallback(publisher, mediaStream);\n            }\n        }, createOptions);\n        setupIceCandidateListener.call(that, streamId, peerConnection, function onIceCandidate(candidate) {\n            if (that._iceCandidateCallbacks[streamId]) {\n                that._iceCandidateCallbacks[streamId](candidate);\n            }\n        });\n        setupStateListener.call(that, streamId, peerConnection);\n\n        var offerSessionDescription = new phenixRTC.RTCSessionDescription({\n            type: 'offer',\n            sdp: offerSdp\n        });\n        var mediaConstraints = {mandatory: {}};\n\n        if (phenixRTC.browser === 'Chrome' || phenixRTC.browser === 'ReactNative') {\n            mediaConstraints.mandatory.OfferToReceiveVideo = createOptions.receiveVideo === true;\n            mediaConstraints.mandatory.OfferToReceiveAudio = createOptions.receiveAudio === true;\n        } else {\n            mediaConstraints.mandatory.offerToReceiveVideo = createOptions.receiveVideo === true;\n            mediaConstraints.mandatory.offerToReceiveAudio = createOptions.receiveAudio === true;\n        }\n\n        if (typeof phenixRTC.global.Promise === 'function') {\n            return peerConnection.setRemoteDescription(offerSessionDescription)\n                .then(_.bind(onSetRemoteDescriptionSuccess, that, peerConnection))\n                .then(function() {\n                    return peerConnection.createAnswer(mediaConstraints);\n                })\n                .then(_.bind(onCreateAnswerSuccess, that))\n                .then(function(answerSdp) {\n                    return new phenixRTC.global.Promise(function(resolve, reject) {\n                        setRemoteAnswer.call(that, streamId, answerSdp, resolve, reject);\n                    });\n                })\n                .then(function(sessionDescription) {\n                    return peerConnection.setLocalDescription(sessionDescription);\n                })\n                .then(_.bind(onSetLocalDescriptionSuccess, that, peerConnection))\n                .then(function() {\n                    that._logger.info('[%s] Peer connection setup completed', streamId);\n                })\n                .then(createPublisher)\n                .catch(onFailure);\n        }\n\n        that._logger.info('[%s] Using legacy peer connection api to publish', streamId);\n\n        peerConnection.setRemoteDescription(offerSessionDescription, function() {\n            onSetRemoteDescriptionSuccess.call(that, peerConnection);\n\n            peerConnection.createAnswer(function(answerSdp) {\n                onCreateAnswerSuccess.call(that, answerSdp);\n\n                setRemoteAnswer.call(that, streamId, answerSdp, function(sessionDescription) {\n                    peerConnection.setLocalDescription(sessionDescription, function() {\n                        onSetLocalDescriptionSuccess.call(that, peerConnection);\n\n                        that._logger.info('[%s] Peer connection setup completed', streamId);\n\n                        createPublisher();\n                    }, onFailure);\n                }, onFailure);\n            }, onFailure, mediaConstraints);\n        }, onFailure);\n    }\n\n    function createViewerPeerConnection(peerConnectionConfig, streamId, offerSdp, streamTelemetry, callback, createOptions) {\n        if (phenixRTC.browser === 'IE') {\n            throw new Error('Subscribing in real-time not supported on IE');\n        }\n\n        var that = this;\n        var state = {\n            failed: false,\n            stopped: false\n        };\n        var hasCrypto = offerSdp.match(/a=crypto:/i);\n        var hasDataChannel = offerSdp.match(/m=application /i);\n        var peerConnection = new phenixRTC.RTCPeerConnection(peerConnectionConfig, {\n            'optional': [\n                {DtlsSrtpKeyAgreement: !hasCrypto}, {RtpDataChannels: hasDataChannel}\n            ]\n        });\n\n        shimPeerConnectionGetStreams(peerConnection);\n\n        that._peerConnections[streamId] = peerConnection;\n\n        if (phenixRTC.browser === 'Firefox' || phenixRTC.browser === 'Edge') {\n            if (offerSdp.match(/(\\nm=video)/g) && offerSdp.match(/(\\nm=audio)/g)) {\n                var firstSection = /(a=candidate)((.|\\n)*)(?=m=)/g;\n\n                offerSdp = offerSdp.replace(firstSection, offerSdp.match(firstSection) + 'a=end-of-candidates\\n');\n            }\n\n            offerSdp += 'a=end-of-candidates';\n\n            offerSdp = offerSdp.replace(/(\\na=ice-options:trickle)/g, '');\n        }\n\n        if (phenixRTC.browser === 'ReactNative') {\n            offerSdp = sdpUtil.setGroupLineOrderToMatchMediaSectionOrder(offerSdp);\n        }\n\n        var onFailure = function onFailure(status) {\n            if (state.failed) {\n                return;\n            }\n\n            if (status instanceof Error) {\n                that._logger.info('[%s] Failed to setup peer connection', streamId, status);\n\n                status = 'failed';\n            }\n\n            state.failed = true;\n            state.stopped = true;\n\n            delete that._peerConnections[streamId];\n            delete that._mediaStreams[streamId];\n            delete that._iceCandidateCallbacks[streamId];\n\n            closePeerConnection.call(that, streamId, peerConnection, 'failure');\n\n            callback.call(that, undefined, status || 'failed');\n        };\n\n        setupStreamAddedListener.call(that, streamId, state, peerConnection, streamTelemetry, callback, createOptions);\n        setupIceCandidateListener.call(that, streamId, peerConnection, function onIceCandidate(candidate) {\n            if (that._iceCandidateCallbacks[streamId]) {\n                that._iceCandidateCallbacks[streamId](candidate);\n            }\n        });\n        setupStateListener.call(that, streamId, peerConnection);\n\n        var offerSessionDescription = new phenixRTC.RTCSessionDescription({\n            type: 'offer',\n            sdp: offerSdp\n        });\n        var mediaConstraints = {mandatory: {}};\n\n        if (phenixRTC.browser === 'Chrome' || phenixRTC.browser === 'ReactNative') {\n            mediaConstraints.mandatory.OfferToReceiveVideo = createOptions.receiveVideo !== false;\n            mediaConstraints.mandatory.OfferToReceiveAudio = createOptions.receiveAudio !== false;\n        } else {\n            mediaConstraints.mandatory.offerToReceiveVideo = createOptions.receiveVideo !== false;\n            mediaConstraints.mandatory.offerToReceiveAudio = createOptions.receiveAudio !== false;\n        }\n\n        if (typeof phenixRTC.global.Promise === 'function') {\n            return peerConnection.setRemoteDescription(offerSessionDescription)\n                .then(_.bind(onSetRemoteDescriptionSuccess, that, peerConnection))\n                .then(function() {\n                    return peerConnection.createAnswer(mediaConstraints);\n                })\n                .then(_.bind(onCreateAnswerSuccess, that))\n                .then(function(answerSdp) {\n                    return new phenixRTC.global.Promise(function(resolve, reject) {\n                        setRemoteAnswer.call(that, streamId, answerSdp, resolve, reject);\n                    });\n                })\n                .then(function(sessionDescription) {\n                    return peerConnection.setLocalDescription(sessionDescription);\n                })\n                .then(_.bind(onSetLocalDescriptionSuccess, that, peerConnection))\n                .then(function() {\n                    that._logger.info('[%s] Peer connection setup completed', streamId);\n                })\n                .catch(onFailure);\n        }\n\n        that._logger.info('[%s] Using legacy peer connection api to subscribe', streamId);\n\n        peerConnection.setRemoteDescription(offerSessionDescription, function() {\n            onSetRemoteDescriptionSuccess.call(that, peerConnection);\n\n            peerConnection.createAnswer(function(answerSdp) {\n                onCreateAnswerSuccess.call(that, answerSdp);\n\n                setRemoteAnswer.call(that, streamId, answerSdp, function(sessionDescription) {\n                    peerConnection.setLocalDescription(sessionDescription, function() {\n                        onSetLocalDescriptionSuccess.call(that, peerConnection);\n\n                        that._logger.info('[%s] Peer connection setup completed', streamId);\n                    }, onFailure);\n                }, onFailure);\n            }, onFailure, mediaConstraints);\n        }, onFailure);\n    }\n\n    function onSetLocalDescriptionSuccess(peerConnection) {\n        this._logger.debug('Set local description [%s] [%s]', _.get(peerConnection, ['localDescription', 'type']), _.get(peerConnection, ['localDescription', 'sdp']));\n    }\n\n    function onSetRemoteDescriptionSuccess(peerConnection) {\n        this._logger.debug('Set remote description [%s] [%s]', _.get(peerConnection, ['localDescription', 'type']), _.get(peerConnection, ['remoteDescription', 'sdp']));\n    }\n\n    function onCreateAnswerSuccess(answerSdp) {\n        this._logger.info('Created answer [%s]', answerSdp.sdp);\n\n        return answerSdp;\n    }\n\n    function setRemoteAnswer(streamId, answerSdp, setRemoteAnswerCallback, onFailure) {\n        var that = this;\n\n        that._protocol.setAnswerDescription(streamId, answerSdp.sdp, function(error, response) {\n            if (error) {\n                that._logger.error('Failed to set answer description [%s]', error);\n\n                return onFailure();\n            } else if (response.status !== 'ok') {\n                that._logger.warn('Failed to set answer description, status [%s]', response.status);\n\n                return onFailure(response.status);\n            }\n\n            if (response && _.includes(response.options, 'ice-candidates')) {\n                that._iceCandidateCallbacks[streamId] = _.bind(onIceCandidate, that, streamId);\n            }\n\n            var localSdp = response.sessionDescription.sdp;\n\n            if (FeatureDetector.isIOS()) {\n                var version = _.get(FeatureDetector.getIOSVersion(), ['major']);\n\n                that._logger.info('iOS Version is [%s]', version);\n\n                if (version < 11) {\n                    localSdp = localSdp.replace('BUNDLE audio video', 'BUNDLE video audio'); // Without this only video-only streams work on iOS 10\n                }\n            }\n\n            var sessionDescription = new phenixRTC.RTCSessionDescription({\n                type: 'answer',\n                sdp: localSdp\n            });\n\n            setRemoteAnswerCallback(sessionDescription);\n        });\n    }\n\n    function onIceCandidate(streamId, candidate) {\n        var that = this;\n        var iceCandidates = this._pendingIceCandidates[streamId];\n\n        if (!iceCandidates) {\n            iceCandidates = this._pendingIceCandidates[streamId] = [];\n        }\n\n        if (candidate && _.get(candidate, ['candidate'])) {\n            iceCandidates.push(candidate);\n        } else {\n            if (that._addIceCandidatesTimeoutScheduled[streamId]) {\n                that._logger.debug('[%s] Dismissing scheduled batch for adding ICE candidates. Sending candidates immediately because there are no more candidates.', streamId);\n                clearTimeout(that._addIceCandidatesTimeoutScheduled[streamId]);\n            }\n\n            submitIceCandidates.call(that, streamId, ['completed']);\n\n            delete this._pendingIceCandidates[streamId];\n            delete this._addIceCandidatesTimeoutScheduled[streamId];\n        }\n\n        if (this._addIceCandidatesTimeoutScheduled[streamId]) {\n            that._logger.debug('[%s] Using existing batch for adding ICE candidates', streamId);\n\n            return;\n        }\n\n        this._addIceCandidatesTimeoutScheduled[streamId] = setTimeout(function() {\n            submitIceCandidates.call(that, streamId, []);\n\n            delete that._addIceCandidatesTimeoutScheduled[streamId];\n        }, accumulateIceCandidatesDuration);\n\n        this._disposables.add(new disposable.Disposable(function() {\n            if (that._addIceCandidatesTimeoutScheduled[streamId]) {\n                clearTimeout(that._addIceCandidatesTimeoutScheduled[streamId]);\n            }\n\n            delete that._pendingIceCandidates[streamId];\n            delete that._addIceCandidatesTimeoutScheduled[streamId];\n        }));\n    }\n\n    function submitIceCandidates(streamId, options) {\n        var iceCandidates = this._pendingIceCandidates[streamId] || [];\n\n        if (iceCandidates.length === 0 && options.length === 0) {\n            return;\n        }\n\n        var that = this;\n\n        delete that._pendingIceCandidates[streamId];\n\n        this._logger.info('[%s] Adding [%s] ICE Candidates with Options [%s]', streamId, iceCandidates.length, options);\n\n        this._protocol.addIceCandidates(streamId, iceCandidates, options, function(error, response) {\n            if (error) {\n                return that._logger.error('Failed to add ICE candidate [%s]', error);\n            } else if (response.status !== 'ok') {\n                return that._logger.warn('Failed to add ICE candidate, status [%s]', response.status);\n            }\n\n            if (_.includes(response.options, 'cancel')) {\n                delete that._iceCandidateCallbacks[streamId];\n            }\n        });\n    }\n\n    function createChunkedOrRtmpViewer(streamId, offerSdp, streamTelemetry, callback, options) {\n        var that = this;\n\n        var rtmpQuery = /a=x-rtmp:(rtmp:\\/\\/[^\\n]*)/m;\n        var rtmpMatch = offerSdp.match(rtmpQuery);\n        var dashMatch = offerSdp.match(/a=x-playlist:([^\\n]*[.]mpd\\??[^\\s]*)/m);\n        var hlsMatch = offerSdp.match(/a=x-playlist:([^\\n]*[.]m3u8\\??[^\\s]*)/m);\n        var manifestUrl = _.get(dashMatch, [1], '');\n        var playlistUrl = _.get(hlsMatch, [1], '');\n        var dashManifestOffered = dashMatch && dashMatch.length === 2;\n        var hlsPlaylistOffered = hlsMatch && hlsMatch.length === 2;\n        var rtmpOffered = !!rtmpMatch;\n        var publisherCapabilities = [];\n\n        if (dashManifestOffered || hlsPlaylistOffered) {\n            publisherCapabilities.push('streaming');\n        }\n\n        if (rtmpOffered) {\n            publisherCapabilities.push('rtmp');\n        }\n\n        var preferredFeature = this._featureDetector.getPreferredFeatureFromPublisherCapabilities(publisherCapabilities, true);\n\n        if (this._streamingSourceMapping) {\n            manifestUrl = manifestUrl.replace(this._streamingSourceMapping.patternToReplace, this._streamingSourceMapping.replacement);\n            playlistUrl = playlistUrl.replace(this._streamingSourceMapping.patternToReplace, this._streamingSourceMapping.replacement);\n        }\n\n        switch (preferredFeature) {\n        case streamEnums.types.rtmp.name:\n            var rtmpUris = [];\n            var env = environment.parseEnvFromPcastBaseUri(this._baseUri);\n\n            this._logger.info('Selecting flash playback for rtmp.');\n\n            while (rtmpMatch) {\n                var rtmpUriAndAttributes = _.get(rtmpMatch, [1], '');\n                var rtmpUri = _.get(rtmpUriAndAttributes.match(/(rtmp:\\/\\/[^\\n\\s]*)/), [0]);\n                var bitrate = _.get(rtmpUriAndAttributes.match(/bitrate=([^\\n\\s;]*)/), [1]);\n                var resolution = _.get(rtmpUriAndAttributes.match(/resolution=([^\\n\\s;]*)/), [1]);\n\n                offerSdp = offerSdp.replace(rtmpUriAndAttributes, '');\n\n                if (rtmpUri) {\n                    rtmpUris.push({\n                        uri: rtmpUri,\n                        bitrate: bitrate,\n                        resolution: resolution\n                    });\n                }\n\n                rtmpMatch = offerSdp.match(rtmpQuery);\n            }\n\n            return createLiveViewerOfKind.call(that, streamId, rtmpUris, streamEnums.types.rtmp.name, streamTelemetry, callback, _.assign({env: env}, this._rtmpOptions, options));\n        case streamEnums.types.dash.name:\n            this._logger.info('Selecting dash playback for live stream.');\n\n            options.isDrmProtectedContent = /[?&]drmToken=([^&]*)/.test(manifestUrl) || /x-widevine-service-certificate/.test(offerSdp);\n\n            if (options.isDrmProtectedContent) {\n                options.widevineServiceCertificateUrl = offerSdp.match(/a=x-widevine-service-certificate:([^\\n][^\\s]*)/m)[1];\n                options.playreadyLicenseUrl = offerSdp.match(/a=x-playready-license-url:([^\\n][^\\s]*)/m)[1];\n            }\n\n            return createLiveViewerOfKind.call(that, streamId, manifestUrl, streamEnums.types.dash.name, streamTelemetry, callback, options);\n        case streamEnums.types.hls.name:\n            this._logger.info('Selecting hls playback for live stream.');\n\n            options.isDrmProtectedContent = /[?&]drmToken=([^&]*)/.test(playlistUrl);\n\n            if (options.hlsTargetDuration) {\n                assert.isNumber(options.hlsTargetDuration, 'options.hlsTargetDuration');\n\n                playlistUrl = playlistUrl + (playlistUrl.indexOf('?') > -1 ? '&' : '?') + 'targetDuration=' + options.hlsTargetDuration;\n            }\n\n            return createLiveViewerOfKind.call(that, streamId, playlistUrl, streamEnums.types.hls.name, streamTelemetry, callback, _.assign({preferNative: FeatureDetector.shouldUseNativeHls}, options));\n        default:\n            break;\n        }\n\n        that._logger.warn('[%s] Device does not support [%s] playback. Creating live viewer stream failed.', streamId, FeatureDetector.mapPCastCapabilitiesToFeatures(publisherCapabilities));\n\n        return callback.call(that, undefined, 'failed');\n    }\n\n    function createLiveViewerOfKind(streamId, uri, kind, streamTelemetry, callback, options) {\n        var that = this;\n        var pending = 0;\n        var shaka = null;\n        var webPlayer = null;\n\n        if (!this._shakaLoader && !this._webPlayerLoader) {\n            that._logger.warn('[%s] No player available for [%s] and uri [%s]. Please provide a loader via options.', streamId, kind, uri);\n\n            that._protocol.destroyStream(streamId, 'unsupported-features', function(error, response) {\n                if (error) {\n                    that._logger.error('[%s] failed to destroy stream with unsupported features, [%s]', streamId, error);\n\n                    return;\n                } else if (response.status !== 'ok') {\n                    that._logger.warn('[%s] failed to destroy stream with unsupported features, status [%s]', streamId, response.status);\n\n                    return;\n                }\n            });\n\n            return callback.call(that, undefined, 'unsupported-features');\n        }\n\n        if (this._shakaLoader) {\n            pending++;\n        }\n\n        if (this._webPlayerLoader) {\n            pending++;\n        }\n\n        var loaded = function() {\n            if (!shaka && !webPlayer) {\n                that._logger.warn('[%s] No player available for [%s] and uri [%s]. Please make sure the loader properly provides the player.', streamId, kind, uri);\n\n                return callback.call(that, undefined, 'unsupported-features');\n            }\n\n            var liveStream = new PhenixLiveStream(kind, streamId, uri, streamTelemetry, options, shaka, webPlayer, that._logger);\n            var liveStreamDecorator = new StreamWrapper(kind, liveStream, that._logger);\n\n            var onPlayerError = function onPlayerError(source, event) {\n                that._logger.warn('Phenix Live Stream Player Error [%s] [%s]', source, event);\n\n                liveStreamDecorator.streamErrorCallback(source, event);\n            };\n\n            var onStop = function onStop(reason) {\n                if (!that._protocol) {\n                    return that._logger.warn('Unable to destroy stream [%s]', streamId);\n                }\n\n                that._protocol.destroyStream(streamId, reason || '', function(error, response) {\n                    if (error) {\n                        that._logger.error('[%s] failed to destroy stream, [%s]', streamId, error);\n\n                        return;\n                    } else if (response.status !== 'ok') {\n                        that._logger.warn('[%s] failed to destroy stream, status [%s]', streamId, response.status);\n\n                        return;\n                    }\n                });\n            };\n\n            streamTelemetry.setProperty('kind', kind);\n\n            liveStreamDecorator.on(streamEnums.streamEvents.playerError.name, onPlayerError);\n            liveStreamDecorator.on(streamEnums.streamEvents.stopped.name, onStop);\n\n            that._mediaStreams[streamId] = liveStreamDecorator;\n\n            callback.call(that, liveStreamDecorator.getPhenixMediaStream());\n        };\n\n        if (this._shakaLoader) {\n            this._shakaLoader(function(s) {\n                shaka = s;\n                pending--;\n\n                if (pending === 0) {\n                    return loaded();\n                }\n            });\n        }\n\n        if (this._webPlayerLoader) {\n            this._webPlayerLoader(function(w) {\n                webPlayer = w;\n                pending--;\n\n                if (pending === 0) {\n                    return loaded();\n                }\n            });\n        }\n\n        if (pending === 0) {\n            return loaded();\n        }\n    }\n\n    function transitionToStatus(newStatus, reason, suppressCallback) {\n        var oldStatus = this.getStatus();\n\n        if (oldStatus !== newStatus && !(isOfflineStatus(oldStatus) && newStatus === 'offline')) {\n            this._observableStatus.setValue(newStatus);\n\n            var protocol = this.getProtocol();\n            var sessionId = protocol ? protocol.getSessionId() : '';\n            this._logger.debug('[%s] Transition from [%s] to [%s] with reason [%s]', sessionId, oldStatus, newStatus, reason);\n\n            if (suppressCallback) {\n                return;\n            }\n\n            switch (newStatus) {\n            case 'connecting':\n            case 'reconnecting':\n            case 'reconnected':\n                break;\n            case 'critical-network-issue':\n            case 'unauthorized':\n            case 'reconnect-failed':\n            case 'offline':\n                return this._offlineCallback.call(this);\n            case 'online':\n                return this._onlineCallback.call(this);\n            default:\n                break;\n            }\n        }\n    }\n\n    function isOfflineStatus(status) {\n        return status === 'critical-network-issue' || status === 'offline';\n    }\n\n    function closePeerConnection(streamId, peerConnection, reason) {\n        if (peerConnection.signalingState === 'closed' || peerConnection.__closing) {\n            this._logger.debug('[%s] Peer connection is already closed [%s]', streamId, reason);\n\n            return;\n        }\n\n        this._logger.debug('[%s] close peer connection [%s]', streamId, reason);\n\n        peerConnection.close();\n        peerConnection.__closing = true;\n    }\n\n    function handleForeground() {\n        if (this._treatBackgroundAsOffline || this._reAuthenticateOnForeground) {\n            reconnected.call(this, 'entered-foreground');\n        }\n    }\n\n    function handleBackground() {\n        if (this._treatBackgroundAsOffline) {\n            transitionToStatus.call(this, 'offline', 'entered-background');\n        }\n    }\n\n    function parseProtobufMessage(message) {\n        if (!message) {\n            return message;\n        }\n\n        var parsedMessage = _.isArray(message) ? [] : {};\n        var processIndexOrKey = _.bind(removeNullValuesAndParseEnums, null, parsedMessage);\n\n        if (_.isArray(message)) {\n            _.forEach(message, processIndexOrKey);\n        } else {\n            _.forOwn(message, processIndexOrKey);\n        }\n\n        return parsedMessage;\n    }\n\n    function removeNullValuesAndParseEnums(parsedMessage, value, key) {\n        if (value === null) {\n            return;\n        }\n\n        if (_.isObject(value) || _.isArray(value)) {\n            return parsedMessage[key] = parseProtobufMessage(value);\n        }\n\n        if (!_.isString(value) || !_.isString(key)) {\n            return parsedMessage[key] = value;\n        }\n\n        var prefixedByKey = _.startsWith(value.toLowerCase(), key.toLowerCase());\n        var valueParsedWithoutKey = prefixedByKey ? value.substring(key.length, value.length).toLowerCase() : value;\n\n        parsedMessage[key] = valueParsedWithoutKey;\n    }\n\n    function applyVendorSpecificLogic(config) {\n        switch (phenixRTC.browser) {\n        case 'Firefox':\n            // Firefox doesn't support TURN with TCP/TLS https://bugzilla.mozilla.org/show_bug.cgi?id=1056934\n            removeTurnsServers(config);\n\n            break;\n        case 'Edge':\n            // Edge doesn't support TURN with TCP\n            forceTurnUdp(config);\n\n            break;\n        default:\n            break;\n        }\n\n        return config;\n    }\n\n    function removeTurnsServers(config) {\n        if (!config) {\n            return config;\n        }\n\n        _.forEach(config.iceServers, function(server) {\n            server.urls = _.filter(server.urls, function(url) {\n                return !_.startsWith(url, 'turns');\n            });\n        });\n\n        return config;\n    }\n\n    function forceTurnUdp(config) {\n        if (!config) {\n            return config;\n        }\n\n        _.forEach(config.iceServers, function(server) {\n            server.urls = _.map(server.urls, function(url) {\n                return url.replace('transport=tcp', 'transport=udp');\n            });\n        });\n\n        return config;\n    }\n\n    // Shim required. Webrtc adapter successfully shims but breaks Edge.\n    var shimPeerConnectionGetStreams = function(peerConnection) {\n        if (!_.isUndefined(peerConnection.onaddstream)) {\n            return;\n        }\n\n        var remoteStreams = [];\n        var localStreams = [];\n\n        _.addEventListener(peerConnection, 'track', function(event) {\n            _.forEach(event.streams, function(stream) {\n                if (!_.includes(remoteStreams, stream)) {\n                    remoteStreams.push(stream);\n                }\n            });\n        });\n\n        peerConnection.getRemoteStreams = function getRemoteStreams() {\n            return remoteStreams;\n        };\n\n        peerConnection.getLocalStreams = function getLocalStreams() {\n            return localStreams;\n        };\n\n        peerConnection.addStream = function addStream(stream) {\n            if (!_.includes(localStreams, stream)) {\n                localStreams.push(stream);\n            }\n\n            _.forEach(stream.getTracks(), function(track) {\n                peerConnection.addTrack(track, stream);\n            });\n        };\n    };\n\n    return PCast;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-disposable'\n], function(_, assert, disposable) {\n    'use strict';\n\n    function Observable(initialValue, beforeChange) {\n        this.latestValue = null;\n        this.subscribeCallbacks = {};\n        this.subscriptionTimeout = 100;\n        this.subscriptionCount = 0;\n        this.resetOnChange = false;\n        this.lastChangeTime = 0;\n        this.isPendingChanges = false;\n        this.beforeChange = beforeChange;\n\n        setLatestValue.call(this, initialValue);\n    }\n\n    Observable.prototype.getValue = function getValue() {\n        return clone(this.latestValue);\n    };\n\n    Observable.prototype.setValue = function setValue(value) {\n        if (value !== this.latestValue) {\n            setLatestValue.call(this, value);\n            onSubscribeCallback.call(this, this.subscriptionTimeout);\n        }\n    };\n\n    Observable.prototype.subscribe = function subscribe(callback, options) {\n        assert.isFunction(callback, 'callback');\n\n        if (options) {\n            assert.isObject(options, 'options');\n        }\n\n        var that = this;\n        var key = _.uniqueId();\n        var listenForChanges;\n\n        that.subscribeCallbacks[key] = callback;\n        that.subscriptionCount += 1;\n\n        if (options) {\n            if (options.initial === 'notify') {\n                onSubscribeCallback.call(that, that.subscriptionTimeout, true);\n            }\n\n            if (options.listenForChanges) {\n                listenForChanges = setInterval(function() {\n                    var valueAtInterval = options.listenForChanges.callback();\n\n                    if (valueAtInterval !== that.latestValue) {\n                        that.setValue(valueAtInterval);\n                    }\n                }, options.listenForChanges.timeout);\n            }\n        }\n\n        return new disposable.Disposable(function dispose() {\n            delete that.subscribeCallbacks[key];\n\n            if (listenForChanges) {\n                clearInterval(listenForChanges);\n\n                listenForChanges = null;\n            }\n\n            that.subscriptionCount -= 1;\n        });\n    };\n\n    Observable.prototype.extend = function extend(options) {\n        assert.isObject(options, 'options');\n\n        switch (options.method) {\n        case 'notifyWhenChangesStop':\n            this.subscriptionTimeout = options.timeout;\n            this.resetOnChange = true;\n\n            break;\n        case 'notifyAtFixedRate':\n            this.subscriptionTimeout = options.timeout;\n\n            break;\n        default:\n            break;\n        }\n\n        if (_.isNumber(options.rateLimit)) {\n            this.subscriptionTimeout = options.rateLimit;\n        }\n\n        return this;\n    };\n\n    function clone(value) {\n        if (typeof value === 'undefined' || value === null) {\n            return value;\n        }\n\n        // Necessary for observable array. Subsequent comparison must not be equal in order to trigger updates.\n        if (_.isArray(value)) {\n            return value.slice();\n        }\n\n        return value;\n    }\n\n    function setLatestValue(value) {\n        var valueToSet = value;\n\n        if (this.beforeChange) {\n            valueToSet = this.beforeChange(value);\n        }\n\n        this.latestValue = clone(valueToSet);\n    }\n\n    function onSubscribeCallback(timeoutLength, noTimeout) {\n        this.lastChangeTime = _.now();\n\n        if (!this.isPendingChanges && this.subscriptionCount !== 0) {\n            this.isPendingChanges = true;\n\n            if (noTimeout) {\n                return notifySubscribers.call(this);\n            }\n\n            continueAfterTimeout.call(this, timeoutLength);\n        }\n    }\n\n    function continueAfterTimeout(timeoutLength) {\n        var that = this;\n\n        setTimeout(function() {\n            var timeElapsedSinceLastChange = _.now() - that.lastChangeTime;\n\n            if (that.resetOnChange && timeElapsedSinceLastChange < that.subscriptionTimeout) {\n                continueAfterTimeout.call(that, that.subscriptionTimeout - timeElapsedSinceLastChange);\n            } else {\n                notifySubscribers.call(that);\n            }\n        }, timeoutLength);\n    }\n\n    function notifySubscribers() {\n        try {\n            executeSubscriptionCallbacks.call(this);\n        } finally {\n            this.isPendingChanges = false;\n        }\n    }\n\n    function executeSubscriptionCallbacks() {\n        var that = this;\n\n        _.forOwn(that.subscribeCallbacks, function(callback) {\n            if (_.isFunction(callback)) {\n                callback(that.latestValue);\n            }\n        });\n    }\n\n    return Observable;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './networkConnectionMonitor'\n], function(networkConnectionMonitor) {\n    'use strict';\n\n    return networkConnectionMonitor;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-disposable',\n    './MQProtocol',\n    './Base64'\n], function(_, assert, event, disposable, MQProtocol, Base64) {\n    'use strict';\n\n    var clientRequestIdPrefix = 'C';\n    var continuationStatus = 'continuation';\n    var continuationPollInterval = 2000;\n    var continuationTimeout = 300000;\n    var defaultRequestTimeout = 18000;\n\n    function MQService(logger, sendCallback, receiveCallback, protocols, apiVersion) {\n        assert.isObject(logger, 'logger');\n        assert.isFunction(sendCallback, 'sendCallback');\n        assert.isFunction(receiveCallback, 'receiveCallback');\n\n        this._logger = logger;\n        this._mqProtocol = new MQProtocol(protocols, apiVersion);\n\n        this._nextRequestId = 0;\n        this._namedEvents = new event.NamedEvents();\n        this._requests = {};\n        this._responses = {};\n        this._requestListeners = {};\n        this._requestTimeouts = {};\n        this._requestTimestamps = {};\n        this._continuationTimeouts = {};\n\n        this._receiveCallback = receiveCallback;\n        this._sendCallback = sendCallback;\n\n        receiveCallback(_.bind(onMessage, this));\n    }\n\n    MQService.prototype.onEvent = function(eventName, handler) {\n        if (this._disposed) {\n            return this._logger.warn('Proto already disposed of. Unable to listen for event');\n        }\n\n        assert.isStringNotEmpty(eventName, 'eventName');\n        assert.isFunction(handler, 'handler');\n\n        return this._namedEvents.listen(eventName, handler);\n    };\n\n    MQService.prototype.onRequest = function(requestName, handler) {\n        if (this._disposed) {\n            return this._logger.warn('Proto already disposed of. Unable to listen for request');\n        }\n\n        assert.isStringNotEmpty(requestName, 'requestName');\n        assert.isFunction(handler, 'handler');\n\n        if (this._requestListeners[requestName]) {\n            this._logger.warn('May not set multiple handlers for the same request. Overriding existing handlers for request [%s]', requestName);\n        }\n\n        this._requestListeners[requestName] = handler;\n\n        var that = this;\n\n        return new disposable.Disposable(function() {\n            that._requestListeners[requestName] = null;\n        });\n    };\n\n    MQService.prototype.sendRequest = function sendRequest(type, message, callback, settings) {\n        if (this._disposed) {\n            this._logger.warn('Proto already disposed of. Unable to send request');\n\n            return callback(null, {status: 'proto-disposed'});\n        }\n\n        settings = settings || {};\n\n        assert.isStringNotEmpty(type, 'type');\n        assert.isObject(message, 'message');\n        assert.isObject(settings, 'settings');\n\n        if (callback) {\n            assert.isFunction(callback, 'callback');\n        }\n\n        if (settings.timeout) {\n            assert.isNumber(settings.timeout, 'settings.timeout');\n        }\n\n        var requestId = clientRequestIdPrefix + (this._nextRequestId++).toString();\n        var request = {\n            requestId: requestId,\n            type: type,\n            payload: this._mqProtocol.encode(type, message),\n            messageType: 'Request'\n        };\n\n        this._requests[requestId] = _.bind(handleResponseAndContinuations, this, requestId, type, message, settings.timeout, callback);\n\n        return sendRequestWithTimeout.call(this, requestId, request, message, settings.timeout, callback);\n    };\n\n    MQService.prototype.sendResponse = function sendResponse(requestId, type, message, callback) {\n        if (this._disposed) {\n            this._logger.warn('Proto already disposed of. Unable to send response');\n\n            return callback(null, {status: 'proto-disposed'});\n        }\n\n        assert.isStringNotEmpty(requestId, 'requestId');\n        assert.isStringNotEmpty(type, 'type');\n        assert.isObject(message, 'message');\n\n        var start = this._responses[requestId];\n\n        if (!start) {\n            this._logger.error('Already responded to request [%s]', requestId);\n\n            callback(new Error('no-response-handler'));\n        }\n\n        var response = {\n            requestId: requestId,\n            type: type,\n            payload: this._mqProtocol.encode(type, message),\n            messageType: 'Response',\n            wallTime: [_.now() - start]\n        };\n\n        encodeAndSendMessage.call(this, response, message);\n\n        delete this._responses[requestId];\n\n        return callback(null, {status: 'ok'});\n    };\n\n    MQService.prototype.disposeOfRequests = function() {\n        _.forOwn(this._requestTimeouts, function(timeout) {\n            clearTimeout(timeout);\n        });\n\n        _.forOwn(this._continuationTimeouts, function(timeout) {\n            clearTimeout(timeout);\n        });\n\n        this._requests = {};\n        this._responses = {};\n        this._requestListeners = {};\n        this._requestTimeouts = {};\n        this._requestTimestamps = {};\n        this._continuationTimeouts = {};\n    };\n\n    MQService.prototype.dispose = function() {\n        this._disposed = true;\n        this._receiveCallback = null;\n        this._sendCallback = null;\n\n        this.disposeOfRequests();\n\n        this._namedEvents.dispose();\n    };\n\n    MQService.prototype.getApiVersion = function getApiVersion() {\n        return this._mqProtocol.getApiVersion();\n    };\n\n    MQService.prototype.toString = function() {\n        return 'Proto[' + this._webSocket.toString() + ']';\n    };\n\n    function triggerEvent(eventName, args) {\n        this._namedEvents.fire(eventName, args, this);\n    }\n\n    function onMessage(evt) {\n        if (this._disposed) {\n            return this._logger.warn('Proto already disposed of. Unable process message');\n        }\n\n        var message;\n        var messageBody;\n        var callback;\n\n        try {\n            message = this._mqProtocol.decode('mq.Message', Base64.toByteArray(evt.data));\n            callback = this._requests[message.requestId];\n\n            this._logger.info('>> [%s] [%s]', message.messageType, message.type);\n\n            messageBody = this._mqProtocol.decode(message.type, message.payload);\n        } catch (e) {\n            this._logger.error(e);\n\n            if (callback) {\n                return callback(e);\n            }\n\n            throw e;\n        }\n\n        triggerReceivedEvent.call(this, message, messageBody, evt.data.length);\n\n        switch (message.messageType) {\n        case 'Response':\n            if (messageBody.status !== continuationStatus) {\n                delete this._requests[message.requestId];\n            }\n\n            clearTimeout(this._requestTimeouts[message.requestId]);\n\n            delete this._requestTimeouts[message.requestId];\n\n            if (!callback) {\n                return;\n            }\n\n            if (message.type === 'mq.Error') {\n                var error = messageBody;\n\n                return callback(error, null);\n            }\n\n            return callback(null, messageBody);\n        case 'Request':\n            var sendResponse = _.bind(this.sendResponse, this, message.requestId, message.type + 'Response');\n            var requestListener = this._requestListeners[message.type];\n\n            this._responses[message.requestId] = _.now();\n\n            if (requestListener) {\n                requestListener(messageBody, sendResponse);\n            } else {\n                this._logger.info('Received request without a subscribed listener');\n            }\n\n            break;\n        case 'Event':\n            return triggerEvent.call(this, message.type, [messageBody]);\n        default:\n            return this._logger.warn('>> Unsupported message type [%s]', message.messageType);\n        }\n    }\n\n    function handleResponseAndContinuations(requestId, type, message, timeout, callback, error, response) {\n        if (response && response.status === continuationStatus) {\n            if (!this._continuationTimeouts[requestId] && this._requests[requestId]) {\n                this._continuationTimeouts[requestId] = listenForContinuationTimeout.call(this, requestId, callback);\n            }\n\n            return sendRequestWithContinuation.call(this, requestId, type, message, response, timeout, callback);\n        }\n\n        clearTimeout(this._continuationTimeouts[requestId]);\n\n        delete this._continuationTimeouts[requestId];\n\n        return callback(error, response);\n    }\n\n    function sendRequestWithContinuation(requestId, type, message, response, timeout, callback) {\n        if (!response || (!response.continuationId && !response.routeKey)) {\n            this._logger.warn('Received request for continuation without a continuationId or routeKey');\n\n            return callback();\n        }\n\n        var messageWithContinuation = _.assign({}, message, {\n            continuationId: response.continuationId,\n            routeKey: response.routeKey\n        });\n        var request = {\n            requestId: requestId,\n            type: type,\n            payload: this._mqProtocol.encode(type, messageWithContinuation),\n            messageType: 'Request'\n        };\n        var that = this;\n\n        return setTimeout(function() {\n            if (!that._requests[requestId]) {\n                return;\n            }\n\n            return sendRequestWithTimeout.call(that, requestId, request, messageWithContinuation, timeout, callback);\n        }, continuationPollInterval);\n    }\n\n    function sendRequestWithTimeout(requestId, request, payload, timeout, callback) {\n        if (this._requestTimeouts[requestId]) {\n            clearTimeout(this._requestTimeouts[requestId]);\n        }\n\n        var requestTimeout = timeout || defaultRequestTimeout;\n\n        this._requestTimeouts[requestId] = setTimeout(_.bind(handleRequestTimeout, this, requestId, requestTimeout, callback), requestTimeout);\n\n        return encodeAndSendMessage.call(this, request, payload);\n    }\n\n    function encodeAndSendMessage(message, payload) {\n        var encodedMessage = Base64.toString(this._mqProtocol.encode('mq.Message', message));\n\n        triggerSentEvent.call(this, message, payload, encodedMessage.length);\n\n        return this._sendCallback(encodedMessage);\n    }\n\n    function listenForContinuationTimeout(requestId, callback) {\n        return setTimeout(_.bind(handleRequestTimeout, this, requestId, continuationTimeout, callback), continuationTimeout);\n    }\n\n    function handleRequestTimeout(requestId, timeout, callback) {\n        if (!this._requests[requestId]) {\n            return;\n        }\n\n        triggerTimeoutEvent.call(this, requestId, timeout);\n\n        this._logger.warn('Request [%s] has not completed in [%s] ms. Dropping request.', requestId, timeout);\n\n        delete this._requests[requestId];\n\n        return callback(null, {status: 'timeout'});\n    }\n\n    function triggerReceivedEvent(message, payload, bytes) {\n        var now = _.now();\n        var sentTimestamp = this._requestTimestamps[message.requestId];\n\n        if (_.isNumber(sentTimestamp)) {\n            var totalRequestTime = now - sentTimestamp;\n\n            message.wallTime = [totalRequestTime].concat(message.wallTime);\n        }\n\n        this._namedEvents.fireAsync('received', [{\n            key: message.requestId,\n            messageType: message.messageType,\n            type: message.type,\n            wallTime: message.wallTime,\n            received: now,\n            bytes: bytes,\n            payload: payload\n        }]);\n\n        delete this._requestTimestamps[message.requestId];\n    }\n\n    function triggerSentEvent(message, payload, bytes) {\n        var now = _.now();\n\n        this._requestTimestamps[message.requestId] = now;\n\n        this._namedEvents.fireAsync('sent', [{\n            key: message.requestId,\n            messageType: message.messageType,\n            type: message.type,\n            received: now,\n            bytes: bytes,\n            payload: payload\n        }]);\n    }\n\n    function triggerTimeoutEvent(requestId, timeout) {\n        this._namedEvents.fireAsync('timeout', [{\n            key: requestId,\n            timeout: timeout\n        }]);\n\n        delete this._requestTimestamps[requestId];\n    }\n\n    return MQService;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'pbf',\n    './Schema',\n    './mqProto.json'\n], function(_, Pbf, Schema, mqProto) {\n    'use strict';\n\n    function MQProtocol(protocols, apiVersion) {\n        var that = this;\n\n        this._schemas = {};\n\n        this._schemas[mqProto.package] = new Schema(mqProto);\n\n        _.forEach(protocols, function(protocol) {\n            that._schemas[protocol.package] = new Schema(protocol);\n        });\n\n        this._apiVersion = apiVersion || 3;\n    }\n\n    MQProtocol.prototype.getApiVersion = function() {\n        return this._apiVersion;\n    };\n\n    MQProtocol.prototype.encode = function(type, data) {\n        if (typeof type !== 'string') {\n            throw new Error(\"'type' must be a string\");\n        }\n\n        if (typeof data !== 'object') {\n            throw new Error(\"'data' must be an object\");\n        }\n\n        var typeQuery = type.split('.');\n        var namespace = _.get(typeQuery, [0]);\n        var subType = _.get(typeQuery, [1]);\n        var schema = _.get(this._schemas, [namespace]);\n        var message = new Pbf();\n\n        schema.write(subType, data, message);\n\n        return message.finish();\n    };\n\n    MQProtocol.prototype.decode = function(type, value) {\n        if (typeof type !== 'string') {\n            throw new Error(\"'type' must be a string\");\n        }\n\n        var typeQuery = type.split('.');\n        var namespace = _.get(typeQuery, [0]);\n        var subType = _.get(typeQuery, [1]);\n        var schema = _.get(this._schemas, [namespace]);\n        var message = new Pbf(value);\n        var decodedMessage = schema.read(subType, message);\n\n        return decodedMessage;\n    };\n\n    return MQProtocol;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n], function() {\n    'use strict';\n\n    var telemetryProto = {\n        \"package\": \"telemetry\",\n        \"messages\": [\n            {\n                \"name\": \"LogData\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"LogLevel\",\n                        \"name\": \"level\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"timestamp\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"category\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"message\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"source\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"fullQualifiedName\",\n                        \"id\": 11\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"userId\",\n                        \"id\": 7\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"environment\",\n                        \"id\": 8\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"version\",\n                        \"id\": 9\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"float\",\n                        \"name\": \"runtime\",\n                        \"id\": 10\n                    }\n                ]\n            },\n            {\n                \"name\": \"StoreLogRecords\",\n                \"fields\": [\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"LogData\",\n                        \"name\": \"records\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"StoreLogRecordsResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"storedRecords\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"MetricValue\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"string\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"float\",\n                        \"name\": \"float\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint64\",\n                        \"name\": \"uint64\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"int64\",\n                        \"name\": \"int64\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"bool\",\n                        \"name\": \"boolean\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"timestamp\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"MetricData\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"timestamp\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"source\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"resource\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"kind\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"Metric\",\n                        \"name\": \"metric\",\n                        \"id\": 7\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"MetricValue\",\n                        \"name\": \"value\",\n                        \"id\": 8\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"MetricValue\",\n                        \"name\": \"previousValue\",\n                        \"id\": 9\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint64\",\n                        \"name\": \"elapsed\",\n                        \"id\": 10\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"fullQualifiedName\",\n                        \"id\": 11\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"environment\",\n                        \"id\": 12\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"version\",\n                        \"id\": 13\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"tool\",\n                        \"id\": 14\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"toolVersion\",\n                        \"id\": 15\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"float\",\n                        \"name\": \"runtime\",\n                        \"id\": 16\n                    }\n                ]\n            },\n            {\n                \"name\": \"SubmitMetricRecords\",\n                \"fields\": [\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"MetricData\",\n                        \"name\": \"records\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"SubmitMetricRecordsResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"storedRecords\",\n                        \"id\": 2\n                    }\n                ]\n            }\n        ],\n        \"enums\": [\n            {\n                \"name\": \"LogLevel\",\n                \"values\": [\n                    {\n                        \"name\": \"Trace\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"Debug\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"Info\",\n                        \"id\": 2\n                    },\n                    {\n                        \"name\": \"Warn\",\n                        \"id\": 3\n                    },\n                    {\n                        \"name\": \"Error\",\n                        \"id\": 4\n                    },\n                    {\n                        \"name\": \"Fatal\",\n                        \"id\": 5\n                    }\n                ]\n            },\n            {\n                \"name\": \"Metric\",\n                \"values\": [\n                    {\n                        \"name\": \"RoundTripTime\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"DownlinkThroughputCapacity\",\n                        \"id\": 26\n                    },\n                    {\n                        \"name\": \"Initialized\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"Provisioned\",\n                        \"id\": 2\n                    },\n                    {\n                        \"name\": \"SetupCompleted\",\n                        \"id\": 3\n                    },\n                    {\n                        \"name\": \"Offset\",\n                        \"id\": 4\n                    },\n                    {\n                        \"name\": \"TimeToFirstFrame\",\n                        \"id\": 5\n                    },\n                    {\n                        \"name\": \"Playing\",\n                        \"id\": 6\n                    },\n                    {\n                        \"name\": \"Stalled\",\n                        \"id\": 7\n                    },\n                    {\n                        \"name\": \"Buffering\",\n                        \"id\": 8\n                    },\n                    {\n                        \"name\": \"Seeking\",\n                        \"id\": 22\n                    },\n                    {\n                        \"name\": \"Stopped\",\n                        \"id\": 9\n                    },\n                    {\n                        \"name\": \"BitRateAdaptation\",\n                        \"id\": 10\n                    },\n                    {\n                        \"name\": \"ResolutionChanged\",\n                        \"id\": 11\n                    },\n                    {\n                        \"name\": \"DisplayResolutionChanged\",\n                        \"id\": 23\n                    },\n                    {\n                        \"name\": \"VideoBitRate\",\n                        \"id\": 28\n                    },\n                    {\n                        \"name\": \"AudioBitRate\",\n                        \"id\": 29\n                    },\n                    {\n                        \"name\": \"FrameRateChanged\",\n                        \"id\": 12\n                    },\n                    {\n                        \"name\": \"FramesDropped\",\n                        \"id\": 13\n                    },\n                    {\n                        \"name\": \"PacketsLost\",\n                        \"id\": 14\n                    },\n                    {\n                        \"name\": \"PictureLost\",\n                        \"id\": 15\n                    },\n                    {\n                        \"name\": \"PlayoutDelayChanged\",\n                        \"id\": 16\n                    },\n                    {\n                        \"name\": \"CodecChanged\",\n                        \"id\": 17\n                    },\n                    {\n                        \"name\": \"PlayerEvent\",\n                        \"id\": 21\n                    },\n                    {\n                        \"name\": \"MetricDropped\",\n                        \"id\": 18\n                    },\n                    {\n                        \"name\": \"NetworkOffline\",\n                        \"id\": 19\n                    },\n                    {\n                        \"name\": \"NetworkOnline\",\n                        \"id\": 20\n                    },\n                    {\n                        \"name\": \"NetworkType\",\n                        \"id\": 27\n                    },\n                    {\n                        \"name\": \"ApplicationForeground\",\n                        \"id\": 24\n                    },\n                    {\n                        \"name\": \"ApplicationBackground\",\n                        \"id\": 25\n                    }\n                ]\n            }\n        ]\n    };\n\n    return telemetryProto;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-rtc',\n    '../sdpUtil',\n    './PeerConnection'\n], function(_, assert, event, phenixRTC, sdpUtil, PeerConnection) {\n    'use strict';\n\n    var defaultMonitoringInterval = 4000;\n    var defaultConditionMonitoringInterval = 1500;\n    var defaultFrameRateThreshold = 2;\n    var defaultAudioBitRateThreshold = 5000;\n    var defaultVideoBitRateThreshold = 1000;\n    var defaultConditionCountForNotificationThreshold = 3;\n    var minMonitoringInterval = 500;\n    var minEdgeMonitoringInterval = 6000;\n    var minEdgeConditionCountForNotification = 2;\n\n    function PeerConnectionMonitor(name, peerConnection, logger) {\n        assert.isString(name, 'name');\n        assert.isObject(peerConnection, 'peerConnection');\n        assert.isObject(logger, 'logger');\n\n        this._name = name;\n        this._peerConnection = peerConnection;\n        this._logger = logger;\n        this._lastStats = {};\n    }\n\n    PeerConnectionMonitor.prototype.start = function(options, activeCallback, monitorCallback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(activeCallback, 'activeCallback');\n        assert.isFunction(monitorCallback, 'monitorCallback');\n\n        if (options.direction !== 'inbound' && options.direction !== 'outbound') {\n            throw new Error('Invalid monitoring direction');\n        }\n\n        var monitoringEnabled = Object.prototype.hasOwnProperty.call(options, 'monitoringInterval') ? options.monitoringInterval > 0 : true;\n\n        if (!monitoringEnabled) {\n            this._logger.info('[%s] Monitoring is disabled', name);\n\n            return;\n        }\n\n        this._frameRateFailureThreshold = options.frameRateThreshold || defaultFrameRateThreshold;\n        this._videoBitRateFailureThreshold = options.videoBitRateThreshold || defaultVideoBitRateThreshold;\n        this._audioBitRateFailureThreshold = options.audioBitRateThreshold || defaultAudioBitRateThreshold;\n        this._conditionCountForNotificationThreshold = options.conditionCountForNotificationThreshold || defaultConditionCountForNotificationThreshold;\n        this._monitoringInterval = Math.max(minMonitoringInterval, options.monitoringInterval || defaultMonitoringInterval);\n        this._conditionMonitoringInterval = Math.max(minMonitoringInterval, options.conditionMonitoringInterval || defaultConditionMonitoringInterval);\n        this._monitorFrameRate = Object.prototype.hasOwnProperty.call(options, 'monitorFrameRate') ? options.monitorFrameRate : true;\n        this._monitorBitRate = Object.prototype.hasOwnProperty.call(options, 'monitorBitRate') ? options.monitorBitRate : true;\n        this._monitorState = Object.prototype.hasOwnProperty.call(options, 'monitorState') ? options.monitorState : true;\n        this._pausedTracks = [];\n        this._calculatedMetricsEvent = new event.Event();\n\n        if (phenixRTC.browser === 'Edge') {\n            var conditionMaxDuration = this._conditionMonitoringInterval * this._conditionCountForNotificationThreshold;\n\n            this._monitoringInterval = Math.max(this._monitoringInterval, minEdgeMonitoringInterval);\n            this._conditionMonitoringInterval = Math.max(this._conditionMonitoringInterval, minEdgeMonitoringInterval);\n            this._conditionCountForNotificationThreshold = Math.max(Math.ceil(conditionMaxDuration / this._monitoringInterval), minEdgeConditionCountForNotification);\n\n            this._logger.info('Using modified options for optimal monitoring of PeerConnection on [Edge]. Monitor Interval [%s], Condition Monitor Interval [%s], Condition Count For Notification [%s]',\n                this._monitoringInterval, this._conditionMonitoringInterval, this._conditionCountForNotificationThreshold);\n        }\n\n        return monitorPeerConnection.call(this, this._name, this._peerConnection, options, activeCallback, monitorCallback);\n    };\n\n    PeerConnectionMonitor.prototype.setMonitorTrackState = function(track, state) {\n        assert.isObject(track, 'track');\n        assert.isBoolean(state, 'state');\n\n        try {\n            var peerConnectionTracks = getAllTracks.call(this, this._peerConnection);\n            var foundTrack = !!_.find(peerConnectionTracks, function(pcTrack) {\n                return pcTrack.id === track.id;\n            });\n\n            if (!foundTrack) {\n                return this._logger.warn('[%s] Unable to find track [%s] [%s] in peer connection', this._name, track.kind, track.id);\n            }\n        } catch (e) {\n            if (phenixRTC.browser === 'Firefox' && e.message === 'InvalidStateError: Peer connection is closed') {\n                this._logger.debug('Failed to verify monitor track due to closed peer connection');\n            } else {\n                this._logger.warn('Failed to verify monitor track due to [%s]', e.message);\n            }\n        }\n\n        if (!state) {\n            this._logger.info('[%s] Pausing monitoring of track [%s] [%s]', this._name, track.kind, track.id);\n\n            return this._pausedTracks.push(track);\n        }\n\n        var pausedTrackLength = this._pausedTracks.length;\n\n        this._pausedTracks = _.filter(this._pausedTracks, function(pausedTrack) {\n            return pausedTrack.id !== track.id;\n        });\n\n        if (pausedTrackLength !== this._pausedTracks.length) {\n            this._logger.info('[%s] Starting monitoring of track [%s] [%s] after it was paused', this._name, track.kind, track.id);\n        }\n    };\n\n    PeerConnectionMonitor.prototype.on = function(eventName, listener) {\n        assert.isStringNotEmpty(eventName, 'eventName');\n        assert.isFunction(listener, 'listener');\n\n        switch (eventName) {\n        case 'calculatedmetrics':\n            return this._calculatedMetricsEvent.listen(listener);\n        default:\n            throw new Error('Unsupported event ' + eventName);\n        }\n    };\n\n    PeerConnectionMonitor.prototype.toString = function() {\n        return 'PeerConnectionMonitor[' + this._name + ']';\n    };\n\n    function monitorPeerConnection(name, peerConnection, options, activeCallback, monitorCallback) {\n        var that = this;\n        var conditionCount = 0;\n        var frameRate = undefined;\n        var videoBitRate = undefined;\n        var audioBitRate = undefined;\n\n        function nextCheck() {\n            var selector = null;\n\n            getStats.call(that, peerConnection, options, selector, activeCallback, function successCallback(report) {\n                var hasFrameRate = false;\n                var hasVideoBitRate = false;\n                var hasAudioBitRate = false;\n\n                if (!activeCallback()) {\n                    return that._logger.info('[%s] Finished monitoring of peer connection', name);\n                }\n\n                function eachStats(stats) {\n                    if (options.direction === 'outbound' && stats.direction === 'upload') {\n                        switch (stats.mediaType) {\n                        case 'video':\n                            that._logger.debug('[%s] [%s] [%s] [%s] with RTT [%s], bitrate [%s], dropped frames [%s], frame rate [%s] and average encoding time [%s] ms (CPU limited=[%s])',\n                                name, options.direction, stats.mediaType, stats.ssrc, stats.rtt, stats.bitrateMean, stats.droppedFrames, stats.framerateMean, stats.avgEncode, stats.cpuLimitedResolution);\n\n                            frameRate = stats.framerateMean;\n                            videoBitRate = stats.uploadRate ? stats.uploadRate * 1000 : stats.uploadRate;\n                            hasFrameRate = true;\n                            hasVideoBitRate = true;\n\n                            if (options.setNetworkRTT) {\n                                options.setNetworkRTT(stats.rtt);\n                            }\n\n                            if (phenixRTC.browser === 'Edge') {\n                                hasFrameRate = false;\n                            }\n\n                            break;\n                        case 'audio':\n                            that._logger.debug('[%s] [%s] [%s] [%s] with RTT [%s], jitter [%s] and audio input level [%s]',\n                                name, options.direction, stats.mediaType, stats.ssrc, stats.rtt, stats.jitter, stats.audioInputLevel);\n                            hasAudioBitRate = true;\n                            audioBitRate = stats.uploadRate ? stats.uploadRate * 1000 : stats.uploadRate;\n\n                            if (options.setNetworkRTT) {\n                                options.setNetworkRTT(stats.rtt);\n                            }\n\n                            break;\n                        default:\n                            break;\n                        }\n                    }\n\n                    if (options.direction === 'inbound' && stats.direction === 'download') {\n                        switch (stats.mediaType) {\n                        case 'video':\n                            that._logger.debug('[%s] [%s] [%s] [%s] with framerate [%s], current delay [%s] ms and target delay [%s] ms',\n                                name, options.direction, stats.mediaType, stats.ssrc, stats.framerateMean, stats.currentDelay, stats.targetDelay);\n\n                            // Inbound frame rate may not be calculated correctly\n                            hasFrameRate = true;\n                            frameRate = stats.framerateMean || 0;\n                            hasVideoBitRate = true;\n                            videoBitRate = stats.downloadRate ? stats.downloadRate * 1000 : stats.downloadRate;\n\n                            if (phenixRTC.browser === 'Edge') {\n                                hasFrameRate = false;\n                            }\n\n                            break;\n                        case 'audio':\n                            that._logger.debug('[%s] [%s] [%s] [%s] with jitter [%s], jitter buffer [%s] ms, audio output level [%s], total audio energy [%s] and total samples duration [%s]',\n                                name, options.direction, stats.mediaType, stats.ssrc, stats.jitter, stats.jitterBuffer, stats.audioOutputLevel, stats.totalAudioEnergy, stats.totalSamplesDuration);\n\n                            hasAudioBitRate = true;\n                            audioBitRate = stats.downloadRate ? stats.downloadRate * 1000 : stats.downloadRate;\n\n                            break;\n                        default:\n                            break;\n                        }\n                    }\n                }\n\n                if (!report) {\n                    throw new Error('Report must be a valid PeerConnection.getStats Report');\n                }\n\n                _.forEach(report, eachStats);\n\n                if (_.isUndefined(audioBitRate) && _.isUndefined(videoBitRate)) {\n                    return setTimeout(nextCheck, that._monitoringInterval); // First measurement\n                }\n\n                var hasActiveAudio = sdpUtil.hasActiveAudio(peerConnection);\n                var hasActiveVideo = sdpUtil.hasActiveVideo(peerConnection);\n\n                if (hasVideoBitRate && videoBitRate === 0 || hasAudioBitRate && audioBitRate === 0 || hasFrameRate && frameRate === 0) {\n                    hasVideoBitRate = hasVideoBitRate && hasActiveVideo;\n                    hasAudioBitRate = hasAudioBitRate && hasActiveAudio;\n                    hasFrameRate = hasFrameRate && hasActiveVideo;\n                }\n\n                if (hasAudioBitRate || hasVideoBitRate || hasFrameRate) {\n                    that._logger.debug('[%s] [%s] Current bit rate is [%s] bps for audio and [%s] bps for video with [%s] FPS',\n                        name, options.direction, Math.ceil(audioBitRate || 0), Math.ceil(videoBitRate || 0), frameRate || '?');\n\n                    if (_.values(that._lastStats).length > 0) {\n                        that._calculatedMetricsEvent.fire([{\n                            videoBitRate: videoBitRate,\n                            audioBitRate: audioBitRate,\n                            frameRate: frameRate\n                        }]);\n                    }\n                }\n\n                var reasons = [];\n\n                if (that._monitorState\n                    && (peerConnection.connectionState === 'closed'\n                        || peerConnection.connectionState === 'disconnected'\n                        || peerConnection.connectionState === 'failed'\n                        || peerConnection.iceConnectionState === 'disconnected'\n                        || peerConnection.iceConnectionState === 'failed')) {\n                    var active = hasActiveAudio && hasActiveVideo;\n                    var tracks = getAllTracks.call(that, peerConnection);\n\n                    if (!active && sdpUtil.hasMediaSectionsInLocalSdp(peerConnection)) {\n                        that._logger.info('[%s] [%s] Finished monitoring of peer connection with [%s] inactive tracks', name, options.direction, tracks.length);\n\n                        return;\n                    }\n\n                    reasons.push('connection');\n                }\n\n                var peerConnectionTracks = options.direction === 'outbound' ?\n                    getLocalTracks.call(this, peerConnection) :\n                    getRemoteTracks.call(this, peerConnection);\n\n                if (that._monitorFrameRate && hasFrameRate && frameRate <= that._frameRateFailureThreshold && !areAllTracksOfTypePaused.call(that, 'video', peerConnectionTracks)) {\n                    reasons.push('frameRate');\n                }\n\n                if (that._monitorBitRate && hasAudioBitRate && audioBitRate <= that._audioBitRateFailureThreshold && !areAllTracksOfTypePaused.call(that, 'audio', peerConnectionTracks)) {\n                    reasons.push('audioBitRate');\n                }\n\n                if (that._monitorBitRate && hasVideoBitRate && videoBitRate <= that._videoBitRateFailureThreshold && !areAllTracksOfTypePaused.call(that, 'video', peerConnectionTracks)) {\n                    reasons.push('videoBitRate');\n                }\n\n                if (videoBitRate === 0 && hasActiveVideo && !areAllTracksOfTypePaused.call(that, 'video', peerConnectionTracks)) {\n                    reasons.push('noVideoData');\n                }\n\n                if (audioBitRate === 0 && hasActiveAudio && !areAllTracksOfTypePaused.call(that, 'audio', peerConnectionTracks)) {\n                    reasons.push('noAudioData');\n                }\n\n                var acknowledgeFailure = function acknowledgeFailure() {\n                    that._logger.info('[%s] [%s] Failure has been acknowledged', name, options.direction);\n\n                    conditionCount = Number.MIN_VALUE;\n\n                    setTimeout(nextCheck, that._monitoringInterval);\n                };\n\n                if (reasons.length > 0) {\n                    conditionCount++;\n                } else {\n                    conditionCount = 0;\n                }\n\n                if (conditionCount >= that._conditionCountForNotificationThreshold) {\n                    var failureMessage = '[' + name + '] [' + options.direction + '] Failure detected with frame rate [' + frameRate + '] FPS,'\n                        + ' audio bit rate [' + audioBitRate + '] bps'\n                        + ', video bit rate [' + videoBitRate + '] bps'\n                        + ', connection state [' + peerConnection.connectionState + '],'\n                        + ' and ice connection state [' + peerConnection.iceConnectionState + ']'\n                    + ' after [' + conditionCount + '] checks';\n                    var monitorEvent = {\n                        type: 'condition',\n                        reasons: reasons,\n                        message: failureMessage,\n                        report: report,\n                        frameRate: frameRate,\n                        videoBitRate: videoBitRate,\n                        audioBitRate: audioBitRate,\n                        acknowledgeFailure: acknowledgeFailure\n                    };\n\n                    if (!monitorCallback(null, monitorEvent)) {\n                        that._logger.info(failureMessage + ': [%s]', report);\n                    } else {\n                        acknowledgeFailure();\n                    }\n                } else {\n                    setTimeout(nextCheck, conditionCount > 0 ? that._conditionMonitoringInterval : that._monitoringInterval);\n                }\n            }, function errorCallback(error) {\n                monitorCallback(error, {\n                    type: 'error',\n                    message: 'Unable to get Connection statistics. Connection may have failed.'\n                });\n            });\n        }\n\n        setTimeout(nextCheck, that._monitoringInterval);\n    }\n\n    function getStats(peerConnection, options, selector, activeCallback, successCallback, errorCallback) {\n        if (!activeCallback()) {\n            return this._logger.info('[%s] Finished monitoring of peer connection', this._name);\n        }\n\n        var that = this;\n\n        phenixRTC.getStats(peerConnection, null, function(response) {\n            var report = PeerConnection.convertPeerConnectionStats(response, that._lastStats);\n\n            report = _.filter(report, function(stats) {\n                return options.direction === 'inbound' && stats.direction === 'download' || options.direction === 'outbound' && stats.direction === 'upload';\n            });\n\n            successCallback(report);\n        }, function(error) {\n            errorCallback(error);\n        });\n    }\n\n    function getAllTracks(peerConnection) {\n        var localTracks = getLocalTracks(peerConnection);\n        var remoteTracks = getRemoteTracks(peerConnection);\n\n        if (localTracks.length !== 0 && remoteTracks.length !== 0) {\n            var result = [];\n\n            _.forEach(localTracks, function(track) {\n                result.push(track);\n            });\n\n            _.forEach(remoteTracks, function(track) {\n                result.push(track);\n            });\n\n            return result;\n        } else if (localTracks.length !== 0) {\n            return localTracks;\n        } else if (remoteTracks.length !== 0) {\n            return remoteTracks;\n        }\n\n        return [];\n    }\n\n    function getLocalTracks(peerConnection) {\n        var tracks = peerConnection.getSenders ? _.map(peerConnection.getSenders(), function(receiver) {\n            return receiver.track;\n        }) : [];\n\n        tracks = _.filter(tracks, function(track) {\n            return !_.isNullOrUndefined(track);\n        });\n\n        if (tracks.length === 0) {\n            var streams = peerConnection.getLocalStreams ? peerConnection.getLocalStreams() : [];\n\n            return _.reduce(streams, function(tracks, stream) {\n                return tracks.concat(stream.getTracks());\n            }, []);\n        }\n\n        return tracks;\n    }\n\n    function getRemoteTracks(peerConnection) {\n        var tracks = peerConnection.getReceivers ? _.map(peerConnection.getReceivers(), function(sender) {\n            return sender.track;\n        }) : [];\n\n        tracks = _.filter(tracks, function(track) {\n            return !_.isNullOrUndefined(track);\n        });\n\n        if (tracks.length === 0) {\n            var streams = peerConnection.getRemoteStreams ? peerConnection.getRemoteStreams() : [];\n\n            return _.reduce(streams, function(tracks, stream) {\n                return tracks.concat(stream.getTracks());\n            }, []);\n        }\n\n        return tracks;\n    }\n\n    function areAllTracksOfTypePaused(kind, peerConnectionTracks) {\n        var pcTracksOfType = _.filter(peerConnectionTracks, function(track) {\n            return track.kind === kind;\n        });\n        var pausedTracksOfType = _.filter(this._pausedTracks, function(track) {\n            return track.kind === kind;\n        });\n\n        return _.reduce(pcTracksOfType, function(areAllPaused, track) {\n            if (!areAllPaused) {\n                return areAllPaused;\n            }\n\n            var isTrackPaused = !!_.find(pausedTracksOfType, function(pcTrack) {\n                return pcTrack.id === track.id;\n            });\n\n            return !track.enabled || isTrackPaused;\n        }, true);\n    }\n\n    return PeerConnectionMonitor;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function(_, assert) {\n    'use strict';\n\n    var h264ProfileIdRegex = /profile-level-id=[^;\\n]*/;\n    var vp8Regex = /vp8/i;\n    var vp9Regex = /vp9/i;\n    var h264Regex = /h264/i;\n    var h265Regex = /h265/i;\n\n    function sdpUtil() {\n\n    }\n\n    sdpUtil.prototype.getH264ProfileIds = function getH264ProfileIds(offerSdp) {\n        assert.isStringNotEmpty(offerSdp, 'offerSdp');\n\n        var h264ProfileIds = [];\n        var h264ProfileIdMatch = offerSdp.match(h264ProfileIdRegex);\n        var restOfOffer = offerSdp;\n\n        while (h264ProfileIdMatch) {\n            var h264ProfileId = _.get(h264ProfileIdMatch, '0', '');\n\n            h264ProfileIds.push(h264ProfileId.split('=')[1]);\n\n            restOfOffer = restOfOffer.substring(h264ProfileIdMatch.index + h264ProfileId.length, offerSdp.length);\n            h264ProfileIdMatch = restOfOffer.match(h264ProfileIdRegex);\n        }\n\n        return h264ProfileIds;\n    };\n\n    sdpUtil.prototype.replaceH264ProfileId = function replaceH264ProfileId(offerSdp, profileIdToReplace, newProfileId) {\n        assert.isStringNotEmpty(offerSdp, 'offerSdp');\n        assert.isStringNotEmpty(newProfileId, 'newProfileId');\n\n        var profileIds = this.getH264ProfileIds(offerSdp);\n\n        if (!_.includes(profileIds, profileIdToReplace)) {\n            return offerSdp;\n        }\n\n        return offerSdp.replace('profile-level-id=' + profileIdToReplace, 'profile-level-id=' + newProfileId);\n    };\n\n    sdpUtil.prototype.getH264ProfileIdWithSameProfileAndEqualToOrHigherLevel = function(profileIds, replaceProfileId) {\n        if (_.includes(profileIds, replaceProfileId)) {\n            return replaceProfileId;\n        }\n\n        var nextProfileId = _.reduce(profileIds, function(selectedProfileId, profileId) {\n            var selectedProfile = parseInt(selectedProfileId.substring(0, 2), 16);\n            var selectedLevel = parseInt(selectedProfileId.substring(4, 6), 16);\n            var profile = parseInt(profileId.substring(0, 2), 16);\n            var level = parseInt(profileId.substring(4, 6), 16);\n\n            // We prefer the profile that we are replacing\n            if (selectedProfile !== profile) {\n                return selectedProfileId;\n            }\n\n            return selectedLevel >= level ? selectedProfileId : profileId;\n        }, replaceProfileId);\n\n        return nextProfileId === replaceProfileId ? null : nextProfileId;\n    };\n\n    sdpUtil.prototype.getH264ProfileIdWithSameOrHigherProfileAndEqualToOrHigherLevel = function(profileIds, replaceProfileId) {\n        var matchingProfile = this.getH264ProfileIdWithSameProfileAndEqualToOrHigherLevel(profileIds, replaceProfileId);\n\n        if (matchingProfile) {\n            return matchingProfile;\n        }\n\n        var nextProfileId = _.reduce(profileIds, function(selectedProfileId, profileId) {\n            var selectedProfile = parseInt(selectedProfileId.substring(0, 2), 16);\n            var selectedLevel = parseInt(selectedProfileId.substring(4, 6), 16);\n            var profile = parseInt(profileId.substring(0, 2), 16);\n            var level = parseInt(profileId.substring(4, 6), 16);\n\n            // We prefer the profile that we are replacing\n            if (selectedProfile < profile) {\n                return profileId;\n            } else if (profile < selectedProfile) {\n                return selectedProfileId;\n            }\n\n            return selectedLevel > level ? selectedProfileId : profileId;\n        }, replaceProfileId);\n\n        return nextProfileId === replaceProfileId ? null : nextProfileId;\n    };\n\n    sdpUtil.prototype.getSupportedCodecs = function getSupportedCodecs(offerSdp) {\n        assert.isStringNotEmpty(offerSdp, 'offerSdp');\n\n        var codecs = [];\n\n        if (vp8Regex.test(offerSdp)) {\n            codecs.push('VP8');\n        }\n\n        if (vp9Regex.test(offerSdp)) {\n            codecs.push('VP9');\n        }\n\n        if (h264Regex.test(offerSdp)) {\n            codecs.push('H264');\n        }\n\n        if (h265Regex.test(offerSdp)) {\n            codecs.push('H265');\n        }\n\n        return codecs;\n    };\n\n    sdpUtil.prototype.hasMediaSectionsInLocalSdp = function hasMediaSectionsInLocalSdp(peerConnection) {\n        var indexOfSection = this.findInSdpSections(peerConnection, function(section) {\n            return _.startsWith(section, 'video') || _.startsWith(section, 'audio');\n        });\n\n        return indexOfSection < 0;\n    };\n\n    sdpUtil.prototype.hasActiveAudio = function hasActiveAudio(peerConnection) {\n        var indexOfActiveVideo = this.findInSdpSections(peerConnection, function(section, index, remoteSections) {\n            if (_.startsWith(section, 'audio')) {\n                return !_.includes(section, 'a=inactive') && !_.includes(remoteSections[index], 'a=inactive');\n            }\n\n            return false;\n        });\n\n        return indexOfActiveVideo < 0;\n    };\n\n    sdpUtil.prototype.hasActiveVideo = function hasActiveVideo(peerConnection) {\n        var indexOfActiveVideo = this.findInSdpSections(peerConnection, function(section, index, remoteSections) {\n            if (_.startsWith(section, 'video')) {\n                return !_.includes(section, 'a=inactive') && !_.includes(remoteSections[index], 'a=inactive');\n            }\n\n            return false;\n        });\n\n        return indexOfActiveVideo < 0;\n    };\n\n    sdpUtil.prototype.findInSdpSections = function findInSdpSections(peerConnection, callback) {\n        var localSections = this.getLocalSdp(peerConnection).split('m=');\n        var remoteSections = this.getRemoteSdp(peerConnection).split('m=');\n\n        if (localSections.length !== remoteSections.length) {\n            return false;\n        }\n\n        return _.findIndex(localSections, function(section, index) {\n            return callback(section, index, remoteSections);\n        });\n    };\n\n    sdpUtil.prototype.getNumberOfActiveSections = function getNumberOfActiveSections(peerConnection) {\n        var sdp = this.getLocalSdp(peerConnection) || this.getRemoteSdp(peerConnection);\n        var sections = sdp.split('m=');\n\n        return _.filter(sections, function(section) {\n            return !_.includes(section, 'a=inactive') && (_.startsWith(section, 'audio') || _.startsWith(section, 'video'));\n        }).length;\n    };\n\n    sdpUtil.prototype.getLocalSdp = function getLocalSdp(peerConnection) {\n        return _.get(peerConnection, ['localDescription', 'sdp'], '');\n    };\n\n    sdpUtil.prototype.getRemoteSdp = function getLocalSdp(peerConnection) {\n        return _.get(peerConnection, ['remoteDescription', 'sdp'], '');\n    };\n\n    sdpUtil.prototype.setGroupLineOrderToMatchMediaSectionOrder = function setGroupLineOrderToMatchMediaSectionOrder(sdp) {\n        var groupLineSegment = sdp.match(/(?=a=group:BUNDLE).*/);\n        var mediaSegmentNamesString = _.get(_.get(groupLineSegment, [0], '').split('a=group:BUNDLE '), [1], '');\n        var mediaSegmentNames = mediaSegmentNamesString.split(' ');\n\n        var sortedMediaSegmentNames = mediaSegmentNames.sort(function(nameA, nameB) {\n            return sdp.indexOf('m=' + nameA) - sdp.indexOf('m=' + nameB);\n        });\n\n        if (sortedMediaSegmentNames.length > 0) {\n            sdp = sdp.replace(mediaSegmentNamesString, sortedMediaSegmentNames.join(' '));\n        }\n\n        return sdp;\n    };\n\n    return new sdpUtil();\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-rtc',\n    './ShakaRenderer',\n    './PhenixPlayerRenderer',\n    './FlashRenderer',\n    './stream.json'\n], function(_, assert, event, rtc, ShakaRenderer, PhenixPlayerRenderer, FlashRenderer, streamEnums) {\n    'use strict';\n\n    function PhenixLiveStream(type, streamId, uri, streamTelemetry, options, shaka, webPlayer, logger) {\n        this._type = type;\n        this._streamId = streamId;\n        this._uri = uri;\n        this._streamTelemetry = streamTelemetry;\n        this._options = options;\n        this._shaka = shaka;\n        this._webPlayer = webPlayer,\n        this._logger = logger;\n        this._renderers = [];\n        this._dimensionsChangedMonitor = null;\n        this._namedEvents = new event.NamedEvents();\n    }\n\n    PhenixLiveStream.prototype.on = function(name, callback) {\n        this._namedEvents.listen(name, callback);\n    };\n\n    PhenixLiveStream.prototype.createRenderer = function() {\n        var renderer = null;\n\n        switch (this._type) {\n        case streamEnums.types.dash.name:\n            if (this._webPlayer) {\n                renderer = new PhenixPlayerRenderer(this._streamId, this._uri, this._streamTelemetry, this._options, this._webPlayer, this._logger);\n            } else if (this._shaka) {\n                if (!this._shaka.Player.isBrowserSupported()) {\n                    this._logger.warn('[%s] Shaka does not support this browser', this._streamId);\n\n                    throw new Error('Shaka does not support this browser');\n                }\n\n                renderer = new ShakaRenderer(this._streamId, this._uri, this._streamTelemetry, this._options, this._shaka, this._logger);\n            }\n\n            break;\n        case streamEnums.types.hls.name:\n            renderer = new PhenixPlayerRenderer(this._streamId, this._uri, this._streamTelemetry, this._options, this._webPlayer, this._logger);\n\n            break;\n        case streamEnums.types.rtmp.name:\n            renderer = new FlashRenderer(this._streamId, this._uri, this._streamTelemetry, this._options, this._logger);\n\n            break;\n        default:\n            throw new Error('Unsupported Live stream Type ' + this._type);\n        }\n\n        var that = this;\n\n        renderer.on(streamEnums.rendererEvents.error.name, function(type, error) {\n            that._namedEvents.fire(streamEnums.streamEvents.playerError.name, [type, error]);\n        });\n        renderer.on(streamEnums.rendererEvents.ended.name, function(reason) {\n            that._renderers = _.filter(that._renderers, function(storedRenderer) {\n                return storedRenderer !== renderer;\n            });\n\n            if (that._renderers.length === 0) {\n                that._streamTelemetry.stop();\n                that._namedEvents.fire(streamEnums.streamEvents.playerEnded.name, [reason]);\n            }\n        });\n\n        this._renderers.push(renderer);\n\n        return renderer;\n    };\n\n    PhenixLiveStream.prototype.select = function select(trackSelectCallback) { // eslint-disable-line no-unused-vars\n        this._logger.warn('[%s] selection of tracks not supported for [%s] live streams', this._streamId, this._type);\n\n        return this;\n    };\n\n    PhenixLiveStream.prototype.setStreamEndedCallback = function setStreamEndedCallback(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this.streamEndedCallback = callback;\n    };\n\n    PhenixLiveStream.prototype.setStreamErrorCallback = function setStreamErrorCallback(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this.streamErrorCallback = callback;\n    };\n\n    PhenixLiveStream.prototype.stop = function stop(reason) {\n        if (!this.isActive()) {\n            return;\n        }\n\n        this._logger.info('[%s] stop [live] media stream with reason [%s]', this._streamId, reason);\n\n        this._namedEvents.fire(streamEnums.streamEvents.stopped.name, [reason]);\n\n        this._isStopped = true;\n    };\n\n    PhenixLiveStream.prototype.monitor = function monitor(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n    };\n\n    PhenixLiveStream.prototype.getMonitor = function getMonitor() {\n        return null;\n    };\n\n    PhenixLiveStream.prototype.addBitRateThreshold = function addBitRateThreshold(threshold, callback) {\n        assert.isFunction(callback, 'callback');\n\n        return;\n    };\n\n    PhenixLiveStream.prototype.getStream = function getStream() {\n        this._logger.debug('[%s] [%s] This type of stream has no internal stream object', this._streamId, this._type);\n\n        return null;\n    };\n\n    PhenixLiveStream.prototype.isActive = function isActive() {\n        return !this._isStopped;\n    };\n\n    PhenixLiveStream.prototype.getStreamId = function getStreamId() {\n        return this._streamId;\n    };\n\n    PhenixLiveStream.prototype.getStats = function getStats() {\n        this._logger.debug('[%s] [%s] This type of stream has no stats', this._streamId, this._type);\n\n        return null;\n    };\n\n    PhenixLiveStream.prototype.getRenderer = function getRenderer() {\n        return _.get(this._renderers, [0], null);\n    };\n\n    PhenixLiveStream.canPlaybackType = function canPlaybackType(type) {\n        var deviceSupportsDashPlayback = !!rtc.global.MediaSource;\n        var deviceSupportsHlsPlayback = deviceSupportsDashPlayback || (typeof document === 'object' && document.createElement('video').canPlayType('application/vnd.apple.mpegURL') === 'maybe');\n\n        switch (type) {\n        case streamEnums.types.dash.name:\n            return deviceSupportsDashPlayback;\n        case streamEnums.types.hls.name:\n            return deviceSupportsHlsPlayback;\n        case streamEnums.types.rtmp.name:\n            return FlashRenderer.isSupported();\n        default:\n            return false;\n        }\n    };\n\n    return PhenixLiveStream;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function(_, assert) {\n    'use strict';\n\n    var maximumBitRateDefault = 3; // 3 x target bitrate\n\n    function BitRateMonitor(name, monitor, getLimit) {\n        assert.isStringNotEmpty(name, 'name');\n        assert.isObject(monitor, 'monitor');\n        assert.isFunction(getLimit, 'getLimit');\n\n        this._name = name;\n        this._monitor = monitor;\n        this._getLimit = getLimit || _.noop;\n    }\n\n    BitRateMonitor.prototype.addThreshold = function(threshold, callback) {\n        var thresholds = getThresholdList(threshold);\n        var lastThresholdIndex = null;\n        var that = this;\n\n        return that._monitor.on('calculatedmetrics', function(metrics) {\n            var limit = that._getLimit();\n            var totalBitRate = metrics.videoBitRate + metrics.audioBitRate;\n            var currentClosestThresholdIndex = getClosestThresholdIndexToButNotBelow(thresholds, totalBitRate / limit);\n            var currentRatioThreshold = _.get(thresholds, [currentClosestThresholdIndex]);\n            var currentBitRateThreshold = currentRatioThreshold * limit;\n            var lastRatioThreshold = _.get(thresholds, [lastThresholdIndex], 1);\n            var lastBitRateThreshold = lastRatioThreshold * limit;\n\n            if (limit === 0) {\n                return;\n            }\n\n            if (lastThresholdIndex === null) {\n                return lastThresholdIndex = currentClosestThresholdIndex;\n            }\n\n            if (currentClosestThresholdIndex === lastThresholdIndex) {\n                return;\n            }\n\n            if (currentClosestThresholdIndex < lastThresholdIndex) {\n                callback({\n                    isIncreasing: false,\n                    bitRate: totalBitRate,\n                    currentThreshold: currentBitRateThreshold,\n                    targetBitRate: limit,\n                    index: currentClosestThresholdIndex,\n                    lastIndex: lastThresholdIndex,\n                    message: that._name + ' bit rate is below ' + currentRatioThreshold + ' * ' + limit + ' threshold of ' + currentBitRateThreshold + ' with a bit rate of ' + totalBitRate\n                });\n            } else if (currentClosestThresholdIndex > lastThresholdIndex) {\n                callback({\n                    isIncreasing: true,\n                    bitRate: totalBitRate,\n                    currentThreshold: lastBitRateThreshold,\n                    targetBitRate: limit,\n                    index: currentClosestThresholdIndex,\n                    lastIndex: lastThresholdIndex,\n                    message: that._name + ' bit rate is above ' + lastRatioThreshold + ' * ' + limit + ' threshold of ' + lastBitRateThreshold + ' with a bit rate of ' + totalBitRate\n                });\n            }\n\n            lastThresholdIndex = currentClosestThresholdIndex;\n        });\n    };\n\n    function getClosestThresholdIndexToButNotBelow(thresholds, ratio) {\n        return _.reduce(thresholds, function(closestIndex, threshold, index) {\n            if (closestIndex === null && threshold >= ratio) {\n                return index;\n            }\n\n            if (threshold < thresholds[closestIndex] && threshold >= ratio) {\n                return index;\n            }\n\n            return closestIndex;\n        }, null);\n    }\n\n    function getThresholdList(threshold) {\n        var thresholds = [];\n\n        if (_.isArray(threshold)) {\n            _.forEach(threshold, function(value) {\n                assert.isNumber(value, 'threshold');\n            });\n\n            thresholds = threshold.sort();\n        } else if (_.isObject(threshold)) {\n            assert.isNumber(threshold.levels, 'threshold.levels');\n\n            for (var i = 0; i < threshold.levels; i++) {\n                thresholds.push(i / threshold.levels);\n            }\n        } else {\n            assert.isNumber(threshold, 'threshold');\n\n            thresholds.push(threshold);\n        }\n\n        thresholds.push(maximumBitRateDefault); // Upper bound\n\n        return thresholds;\n    }\n\n    return BitRateMonitor;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-disposable',\n    '../authentication/AuthenticationService',\n    './Room',\n    './ImmutableRoom',\n    './Member',\n    '../chat/RoomChatService',\n    './room.json',\n    './member.json'\n], function(_, assert, observable, disposable, AuthenticationService, Room, ImmutableRoom, Member, RoomChatService, roomEnums, memberEnums) {\n    'use strict';\n\n    var notInRoomResponse = _.freeze({status: 'not-in-room'});\n    var alreadyInRoomResponse = _.freeze({status: 'already-in-room'});\n    var inAnotherRoomResponse = _.freeze({status: 'in-another-room'});\n\n    function RoomService(pcast) {\n        this._self = new observable.Observable(null);\n        this._activeRoom = new observable.Observable(null);\n        this._cachedRoom = new observable.Observable(null);\n        this._roomChatService = null;\n\n        this._authenticationService = new AuthenticationService(pcast);\n\n        this.setPCast(pcast);\n    }\n\n    RoomService.prototype.setPCast = function setPCast(pcast) {\n        assert.isObject(pcast, 'pcast');\n        assert.isFunction(pcast.getLogger, 'pcast.getLogger');\n        assert.isFunction(pcast.getProtocol, 'pcast.getProtocol');\n\n        if (this._pcast) {\n            this._logger.info('Resetting pcast instance for room service');\n        }\n\n        this._pcast = pcast;\n        this._logger = pcast.getLogger();\n        this._protocol = pcast.getProtocol();\n\n        assert.isObject(this._logger, 'this._logger');\n        assert.isObject(this._protocol, 'this._protocol');\n\n        this._authenticationService.setPCast(pcast);\n\n        if (this._roomChatService) {\n            this._roomChatService.setPCast(pcast);\n        }\n\n        if (this._started) {\n            this._disposables.dispose();\n\n            setupSubscriptions.call(this);\n        }\n    };\n\n    RoomService.prototype.start = function start(role, screenName) {\n        if (this._started) {\n            this._logger.warn('RoomService already started.');\n\n            return;\n        }\n\n        assert.isStringNotEmpty(role, 'role');\n        assert.isStringNotEmpty(screenName, 'screenName');\n\n        var myState = memberEnums.states.passive.name;\n        var mySessionId = this._authenticationService.getPCastSessionId();\n        var myScreenName = screenName;\n        var myStreams = [];\n        var myLastUpdate = _.now();\n        var roomService = this;\n\n        var self = new Member(roomService, myState, mySessionId, myScreenName, role, myStreams, myLastUpdate);\n\n        this._self = new observable.Observable(self);\n        this._disposables = new disposable.DisposableList();\n\n        setupSubscriptions.call(this);\n\n        this._started = true;\n\n        return self;\n    };\n\n    RoomService.prototype.getRoomInfo = function getRoomInfo(roomId, alias, callback) {\n        if (roomId) {\n            assert.isStringNotEmpty(roomId, 'roomId');\n        } else {\n            assert.isStringNotEmpty(alias, 'alias');\n        }\n\n        assert.isFunction(callback, 'callback');\n\n        getRoomInfoRequest.call(this, roomId, alias, callback);\n    };\n\n    RoomService.prototype.createRoom = function createRoom(room, callback) {\n        assert.isObject(room, 'room');\n        assert.isStringNotEmpty(room.name, 'room.name');\n        assert.isStringNotEmpty(room.type, 'room.type');\n        assert.isString(room.description, 'room.description');\n        assert.isFunction(callback, 'callback');\n\n        createRoomRequest.call(this, room, callback);\n    };\n\n    RoomService.prototype.enterRoom = function enterRoom(roomId, alias, callback) {\n        if (roomId) {\n            assert.isStringNotEmpty(roomId, 'roomId');\n        } else {\n            assert.isStringNotEmpty(alias, 'alias');\n        }\n\n        assert.isFunction(callback, 'callback');\n\n        enterRoomRequest.call(this, roomId, alias, callback);\n    };\n\n    RoomService.prototype.leaveRoom = function leaveRoom(callback, isForceLeaveRoom) {\n        var that = this;\n\n        return leaveRoomRequest.call(that, callback, isForceLeaveRoom);\n    };\n\n    RoomService.prototype.getChatService = function getChatService() {\n        if (!this._roomChatService && this._activeRoom.getValue()) {\n            this._roomChatService = new RoomChatService(this);\n        }\n\n        return this._roomChatService;\n    };\n\n    RoomService.prototype.getSelf = function getSelf() {\n        return this._self.getValue();\n    };\n\n    RoomService.prototype.getObservableActiveRoom = function getObservableActiveRoom() {\n        return this._activeRoom;\n    };\n\n    RoomService.prototype.updateSelf = function updateSelf(callback) {\n        assert.isFunction(callback, 'callback');\n\n        updateMemberRequest.call(this, this.getSelf(), callback);\n    };\n\n    RoomService.prototype.updateMember = function updateMember(member, callback) {\n        assert.isFunction(callback, 'callback');\n        assert.isObject(member, 'member');\n\n        updateMemberRequest.call(this, member, callback);\n    };\n\n    RoomService.prototype.updateRoom = function updateRoom(callback) {\n        assert.isFunction(callback, 'callback');\n\n        updateRoomRequest.call(this, callback);\n    };\n\n    RoomService.prototype.revertRoomChanges = function revertRoomChanges() {\n        var activeRoom = this._activeRoom.getValue();\n        var cachedRoom = this._cachedRoom.getValue();\n\n        if (!activeRoom || !cachedRoom) {\n            return this._logger.warn('Unable to revert changes to room. Not currently in a room.');\n        }\n\n        activeRoom._update(cachedRoom.toJson());\n    };\n\n    RoomService.prototype.revertMemberChanges = function revertMemberChanges(member) {\n        assert.isObject(member, 'member');\n\n        var cachedMember = findMemberInObservableRoom(member.getSessionId(), this._cachedRoom);\n        var activeMember = findMemberInObservableRoom(member.getSessionId(), this._activeRoom);\n\n        if (!cachedMember || !activeMember) {\n            return this._logger.warn('Unable to revert changes to member. Member is currently not in room.');\n        }\n\n        activeMember._update(cachedMember.toJson());\n    };\n\n    RoomService.prototype.isInRoom = function isInRoom() {\n        return !!this._activeRoom.getValue();\n    };\n\n    RoomService.prototype.toString = function toString() {\n        return 'RoomService';\n    };\n\n    RoomService.prototype.stop = function stop(reason) {\n        var activeRoom = this._activeRoom.getValue();\n        var that = this;\n\n        this._logger.info('Stopping room service with reason [%s]', reason);\n\n        if (activeRoom) {\n            return this.leaveRoom(function(error, response) {\n                if (error) {\n                    that._logger.warn('Failure to stop room service. Unable to leave room', error);\n                }\n\n                if (response && response.status !== 'ok') {\n                    that._logger.warn('Failure to stop room service. Unable to leave room. Status: [%s]', response.status);\n                }\n\n                if (response && response.status === 'ok') {\n                    resetRoomModels.call(that);\n\n                    that._started = false;\n                }\n            });\n        }\n\n        resetRoomModels.call(this);\n\n        that._started = false;\n    };\n\n    function resetRoomModels() {\n        this._self.setValue(null);\n        this._activeRoom.setValue(null);\n        this._cachedRoom.setValue(null);\n        this._roomChatService = null;\n\n        if (this._disposables) {\n            this._disposables.dispose();\n        }\n\n        this._disposables = null;\n    }\n\n    function resetSelf(sessionId) {\n        var self = this._self.getValue().toJson();\n        var roomService = this;\n\n        this._logger.info('Resetting self after sessionId changed to [%s]', sessionId);\n\n        this._self.setValue(new Member(roomService, self.state, sessionId || '', self.screenName, self.role, self.streams, self.lastUpdate));\n    }\n\n    function reenterRoom() {\n        var that = this;\n\n        var activeRoom = that._activeRoom.getValue();\n\n        if (!_.isObject(activeRoom)) {\n            return;\n        }\n\n        var self = that._self.getValue();\n\n        if (!self) {\n            return;\n        }\n\n        var selfSessionId = self.getSessionId();\n\n        if (!selfSessionId) {\n            return;\n        }\n\n        var roomId = activeRoom.getRoomId();\n        var alias = activeRoom.getObservableAlias().getValue();\n\n        that._logger.info('[%s] Re-entering room [%s]', roomId, alias);\n\n        if (that._roomChatService) {\n            that._logger.info('Performing soft reset on room chat service for room [%s]', roomId);\n            that._roomChatService.stop();\n        }\n\n        enterRoomRequest.call(that, roomId, alias, function() {\n            if (that._roomChatService) {\n                that._logger.info('[%s] Refreshing room chat service after re-entering room [%s]', roomId, alias);\n\n                that._roomChatService.start(that._roomChatService.getBatchSize());\n            }\n\n            that._logger.info('[%s] Room [%s] completed reset', roomId, alias);\n        }, {reenter: true});\n    }\n\n    // Handle events\n    function onRoomEvent(event) {\n        assert.isObject(event, 'event');\n        assert.isString(event.roomId, 'event.roomId');\n        assert.isString(event.eventType, 'event.eventType');\n        assert.isArray(event.members, 'event.members');\n\n        _.forEach(event.members, function(member) {\n            assert.isObject(member, 'member');\n        });\n\n        var that = this;\n\n        switch (event.eventType) {\n        case roomEnums.events.memberJoined.name:\n            that._logger.debug('[%s] Member joined [%s]', event.roomId, event.members);\n\n            return onMembersJoinsRoom.call(that, event.roomId, event.members);\n        case roomEnums.events.memberLeft.name:\n            that._logger.debug('[%s] Member left [%s]', event.roomId, event.members);\n\n            return onMembersLeavesRoom.call(that, event.roomId, event.members);\n        case roomEnums.events.memberUpdated.name:\n            that._logger.debug('[%s] Member updated [%s]', event.roomId, event.members);\n\n            return onMembersUpdated.call(that, event.roomId, event.members);\n        case roomEnums.events.roomUpdated.name:\n            that._logger.debug('[%s] Room updated [%s]', event.roomId, event.room);\n\n            return onRoomUpdated.call(that, event.roomId, event.room);\n        case roomEnums.events.roomEnded.name:\n            that._logger.info('[%s] Room ended', event.roomId);\n\n            break;\n        default:\n            that._logger.warn('Unsupported room event [%s]', event.eventType);\n        }\n    }\n\n    function onMembersJoinsRoom(roomId, members) {\n        var room = this._activeRoom.getValue();\n        var cachedRoom = this._cachedRoom.getValue();\n\n        if (!room || room.getRoomId() !== roomId) {\n            return;\n        }\n\n        room._removeMembers(members);\n        room._addMembers(members);\n\n        cachedRoom._removeMembers(members);\n        cachedRoom._addMembers(members);\n\n        var that = this;\n\n        var memberIsSelf = function(member) {\n            return member.sessionId === that.getSelf().getSessionId();\n        };\n\n        var joinedSelf = _.find(members, memberIsSelf);\n        var selfInRoom = false;\n\n        if (joinedSelf) {\n            selfInRoom = replaceSelfInstanceInRoom.call(that, room);\n\n            room._updateMembers([joinedSelf]);\n        }\n\n        this._logger.info('[%s] Room has now [%d] members (Self is present in room [%s])', roomId, room.getObservableMembers().getValue().length, selfInRoom);\n    }\n\n    function onMembersLeavesRoom(roomId, members) {\n        var room = this._activeRoom.getValue();\n        var cachedRoom = this._cachedRoom.getValue();\n\n        if (!room || room.getRoomId() !== roomId) {\n            return;\n        }\n\n        var that = this;\n\n        var memberIsSelf = function(member) {\n            return member.sessionId === that.getSelf().getSessionId();\n        };\n\n        var leftSelf = _.find(members, memberIsSelf);\n        var self = this.getSelf();\n\n        if (self && leftSelf) {\n            self.getObservableLastUpdate().setValue(leftSelf.lastUpdate);\n        }\n\n        room._removeMembers(members);\n        cachedRoom._removeMembers(members);\n\n        this._logger.info('[%s] Room has now [%d] members', roomId, room.getObservableMembers().getValue().length);\n    }\n\n    function onMembersUpdated(roomId, members) {\n        var room = this._activeRoom.getValue();\n        var cachedRoom = this._cachedRoom.getValue();\n\n        if (!room || room.getRoomId() !== roomId) {\n            return;\n        }\n\n        // To help reduce conflicts when different properties are sequentially changing\n        var membersWithOnlyPropertiesThatChanged = getDifferencesBetweenCachedRoomMembersAndUpdatedMembers.call(this, members);\n\n        room._updateMembers(membersWithOnlyPropertiesThatChanged);\n        cachedRoom._updateMembers(membersWithOnlyPropertiesThatChanged);\n\n        this._logger.info('[%s] Room has [%d] updated members', roomId, members.length);\n    }\n\n    function onRoomUpdated(roomId, room) {\n        var activeRoom = this._activeRoom.getValue();\n        var cachedRoom = this._cachedRoom.getValue();\n\n        if (!activeRoom || activeRoom.getRoomId() !== roomId) {\n            return;\n        }\n\n        cachedRoom._update(room);\n        activeRoom._update(room);\n    }\n\n    function handlePCastSessionIdChanged(sessionId) {\n        if (this.getSelf() && this.getSelf().getSessionId() === (sessionId || '')) {\n            this._logger.info('[%s] Skip session ID change since it is the same as in self model', sessionId);\n\n            return;\n        }\n\n        resetSelf.call(this, sessionId);\n    }\n\n    function handleSelfUpdated(self) {\n        var that = this;\n\n        if (!self) {\n            return;\n        }\n\n        if (!self.getSessionId()) {\n            return;\n        }\n\n        var activeRoom = that._activeRoom.getValue();\n\n        if (!activeRoom) {\n            return;\n        }\n\n        that._logger.info('[%s] Updating self in room after update', activeRoom.getRoomId());\n\n        updateMemberRequest.call(this, this.getSelf(), function(error, response) {\n            if (_.get(response, ['status']) === 'ok') {\n                that._logger.info('[%s] Updated self in room after update', activeRoom.getRoomId());\n            } else {\n                that._logger.info('[%s] Self was not updated in room after update', activeRoom.getRoomId());\n            }\n        });\n    }\n\n    function findMemberInObservableRoom(sessionId, observableRoom) {\n        var room = observableRoom.getValue();\n        var members = room.getObservableMembers().getValue();\n\n        return findMemberInMembers(sessionId, members);\n    }\n\n    function findMemberInMembers(sessionId, members) {\n        return _.find(members, function(member) {\n            return sessionId === member.getSessionId();\n        });\n    }\n\n    function handlePCastStatusChange(status) {\n        this._logger.info('PCast status changed from [%s] to [%s]', this._lastPcastStatus, status);\n\n        this._lastPcastStatus = status;\n\n        if (status === 'online') {\n            reenterRoom.call(this);\n        }\n    }\n\n    function setupSubscriptions() {\n        var roomEventSubscription = this._protocol.onEvent('chat.RoomEvent', _.bind(onRoomEvent, this));\n        var selfSubscription = this._self.subscribe(_.bind(handleSelfUpdated, this));\n        var pcastStatusSubscription = this._authenticationService.getObservableStatus().subscribe(_.bind(handlePCastStatusChange, this));\n        var pcastSessionIdSubscription = this._authenticationService.getObservableSessionId().subscribe(_.bind(handlePCastSessionIdChanged, this));\n\n        this._disposables.add(roomEventSubscription);\n        this._disposables.add(selfSubscription);\n        this._disposables.add(pcastStatusSubscription);\n        this._disposables.add(pcastSessionIdSubscription);\n    }\n\n    function getDifferencesBetweenCachedRoomMembersAndUpdatedMembers(members) {\n        var that = this;\n\n        return _.map(members, function(member) {\n            var cachedMember = findMemberInObservableRoom(member.sessionId, that._cachedRoom);\n            var placeholderMember = new Member(that, member.state, member.sessionId, member.screenName, member.role, member.streams, member.lastUpdate);\n            var memberWithOnlyDifferentProperties = buildMemberForRequest(placeholderMember, cachedMember);\n\n            memberWithOnlyDifferentProperties.lastUpdate = member.lastUpdate;\n\n            return memberWithOnlyDifferentProperties;\n        });\n    }\n\n    // Requests to server\n    function buildMemberForRequest(member, memberToCompare) {\n        var memberForRequest = findDifferencesInMember(member, memberToCompare);\n\n        memberForRequest.sessionId = member.getSessionId();\n        // Last valid update from server. Handles collisions.\n        memberForRequest.lastUpdate = memberToCompare ? memberToCompare.getLastUpdate() : _.now();\n\n        return memberForRequest;\n    }\n\n    function findDifferencesInMember(member, memberToCompare) {\n        if (!memberToCompare) {\n            return member.toJson();\n        }\n\n        var memberForRequest = {};\n        var newMember = member.toJson();\n        var cachedMember = memberToCompare.toJson();\n        var differences = _.findDifferences(newMember, cachedMember, true);\n\n        _.forEach(differences, function(key) {\n            memberForRequest[key] = newMember[key];\n        });\n\n        return memberForRequest;\n    }\n\n    function getRoomInfoRequest(roomId, alias, callback) {\n        this._authenticationService.assertAuthorized();\n\n        var that = this;\n\n        this._protocol.getRoomInfo(roomId, alias,\n            function handleCreateRoomResponse(error, response) {\n                if (error) {\n                    that._logger.error('Request to get room info failed with error [%s]', error);\n\n                    return callback(error, null);\n                }\n\n                var result = {status: response.status};\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('Request to get room info failed with status [%s]', response.status);\n\n                    return callback(null, result);\n                }\n\n                result.room = _.freeze(createImmutableRoomFromResponse.call(that, response));\n\n                callback(null, result);\n            }\n        );\n    }\n\n    function createRoomRequest(room, callback) {\n        this._authenticationService.assertAuthorized();\n\n        var that = this;\n\n        var validatedRoom = getValidRoomObject.call(that, room);\n\n        this._protocol.createRoom(validatedRoom, function handleCreateRoomResponse(error, response) {\n            if (error) {\n                that._logger.error('Creating room failed with error [%s]', error);\n\n                return callback(error, null);\n            }\n\n            var result = {status: response.status};\n\n            if (response.status !== 'ok' && response.status !== 'already-exists') {\n                that._logger.warn('Creating room failed with status [%s]', response.status);\n\n                return callback(null, result);\n            }\n\n            result.room = _.freeze(createImmutableRoomFromResponse.call(that, response));\n\n            callback(null, result);\n        });\n    }\n\n    function getValidRoomObject(room) {\n        var roomService = this;\n\n        return (new Room(roomService, '', room.alias, room.name, room.description, room.type, [], room.bridgeId, room.pin)).toJson();\n    }\n\n    function enterRoomRequest(roomId, alias, callback, options) {\n        var reenter = _.get(options, 'reenter') === true;\n        var activeRoom = this._activeRoom.getValue();\n\n        if (activeRoom) {\n            var isSameRoom = roomId === activeRoom.getRoomId() || alias === activeRoom.getObservableAlias().getValue();\n\n            if (isSameRoom && !reenter) {\n                this._logger.info('Unable to join room. Already in [%s]/[%s] room.', activeRoom.getRoomId(), activeRoom.getObservableAlias().getValue());\n\n                return callback(null, _.assign({room: activeRoom}, isSameRoom ? alreadyInRoomResponse : inAnotherRoomResponse));\n            }\n        }\n\n        this._authenticationService.assertAuthorized();\n\n        var self = this._self.getValue();\n\n        var screenName = self.getObservableScreenName().getValue();\n        var role = self.getObservableRole().getValue();\n        var selfForRequest = buildMemberForRequest.call(this, self, null);\n        var enterRoomOptions = [];\n        var timestamp = _.now();\n\n        if (reenter) {\n            enterRoomOptions.push('reenter');\n        }\n\n        this._logger.info('Enter room [%s]/[%s] with screen name [%s] and role [%s]', roomId, alias, screenName, role);\n\n        var that = this;\n\n        if (that._isEnteringRoom) {\n            that._logger.info('[%s] We are already entering the room [%s], skipping', roomId, alias);\n\n            return;\n        }\n\n        that._isEnteringRoom = true;\n\n        this._protocol.enterRoom(roomId, alias, selfForRequest, enterRoomOptions, timestamp,\n            function handleEnterRoomResponse(error, response) {\n                that._isEnteringRoom = false;\n\n                if (error) {\n                    that._logger.error('Joining of room failed with error [%s]', error);\n\n                    return callback(error, null);\n                }\n\n                var result = {status: response.status};\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('Joining of room failed with status [%s]', response.status);\n\n                    return callback(null, result);\n                }\n\n                result.room = initializeRoomAndBuildCache.call(that, response);\n\n                if (response.status === 'ok' && response.self) {\n                    that.getSelf()._update(response.self);\n                }\n\n                that._logger.info('Successfully entered room [%s]/[%s]', roomId, alias);\n\n                callback(null, result);\n            }\n        );\n    }\n\n    function leaveRoomRequest(callback, isForceLeaveRoom) {\n        var room = this._activeRoom.getValue();\n\n        if (!_.isBoolean(isForceLeaveRoom)) {\n            isForceLeaveRoom = true;\n        }\n\n        if (!room) {\n            this._logger.info('Not currently in a room.');\n\n            return callback(null, notInRoomResponse);\n        }\n\n        if (this._authenticationService.getPCastSessionId() === '' || this._authenticationService.getPCastSessionId() === null) {\n            this._logger.warn('Unable to leave room. We are currently not connected. Status [%s]', this._lastPcastStatus);\n\n            return;\n        }\n\n        if (this._isLeavingRoom) {\n            return;\n        }\n\n        this._authenticationService.assertAuthorized();\n\n        var roomId = room.getRoomId();\n        var timestamp = _.now();\n\n        this._logger.info('Leave room [%s]', roomId);\n\n        var that = this;\n\n        this._isLeavingRoom = true;\n\n        setTimeout(function() {\n            that._activeRoom.setValue(null);\n            that._cachedRoom.setValue(null);\n\n            if (isForceLeaveRoom) {\n                that._isLeavingRoom = false;\n                callback(null, {status: 'ok'});\n            }\n        });\n\n        this._protocol.leaveRoom(roomId, timestamp,\n            function handleLeaveRoomResponse(error, response) {\n                that._isLeavingRoom = false;\n\n                if (error) {\n                    that._logger.error('Leaving room failed with error [%s]', error);\n\n                    if (isForceLeaveRoom) {\n                        return;\n                    }\n\n                    return callback(error, null);\n                }\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('Leaving room failed with status [%s]', response.status);\n                }\n\n                if (isForceLeaveRoom) {\n                    return;\n                }\n\n                return callback(null, {status: response.status});\n            }\n        );\n    }\n\n    function updateMemberRequest(member, callback) {\n        if (!this._activeRoom.getValue()) {\n            this._logger.warn('Not in a room. Please Enter a room before updating member.');\n\n            return callback(null, notInRoomResponse);\n        }\n\n        this._authenticationService.assertAuthorized();\n\n        var activeRoom = this._activeRoom.getValue();\n        var roomId = activeRoom.getRoomId();\n        var memberIsSelf = member.getSessionId() === this.getSelf().getSessionId();\n        var cachedMember = findMemberInObservableRoom(member.getSessionId(), this._cachedRoom);\n\n        var memberForRequest = buildMemberForRequest.call(this, member, cachedMember);\n        var timestamp = _.now();\n        var wasSelfAudienceMember = memberIsSelf && !cachedMember;\n        var isSelfBecomingAudience = memberIsSelf && memberForRequest.role === memberEnums.roles.audience.name;\n\n        if (wasSelfAudienceMember) {\n            memberForRequest.lastUpdate = member.getObservableLastUpdate().getValue();\n        }\n\n        this._logger.info('Updating member info [%s] for active room [%s]', memberForRequest, roomId);\n\n        var that = this;\n\n        this._protocol.updateMember(roomId, memberForRequest, timestamp,\n            function handleUpdateMemberResponse(error, response) {\n                if (error) {\n                    that._logger.error('Update of member failed with error [%s]', error);\n\n                    return callback(error, null);\n                }\n\n                var result = {\n                    status: response.status,\n                    lastUpdate: response.lastUpdate\n                };\n\n                if (response.status !== 'ok') {\n                    that._logger.info('Update of member failed with status [%s]', response.status);\n                }\n\n                if (response.status === 'ok' && isSelfBecomingAudience && _.isNumber(response.lastUpdate)) {\n                    that.getSelf().getObservableLastUpdate().setValue(response.lastUpdate);\n                }\n\n                callback(null, result);\n            }\n        );\n    }\n\n    function updateRoomRequest(callback) {\n        if (!this._activeRoom.getValue()) {\n            this._logger.warn('Not in a room. Please Enter a room before updating member.');\n\n            return callback(null, notInRoomResponse);\n        }\n\n        this._authenticationService.assertAuthorized();\n\n        var room = this._activeRoom.getValue();\n        var timestamp = _.now();\n\n        var that = this;\n\n        this._protocol.updateRoom(room.toJson(), timestamp,\n            function handleUpdateMemberResponse(error, response) {\n                if (error) {\n                    that._logger.error('Update of room failed with error [%s]', error);\n\n                    return callback(error, null);\n                }\n\n                var result = {status: response.status};\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('Update of room failed with status [%s]', response.status);\n                }\n\n                callback(null, result);\n            }\n        );\n    }\n\n    function createImmutableRoomFromResponse(response) {\n        var roomInfo = response.room;\n        var members = response.members || [];\n        var roomService = this;\n\n        return new ImmutableRoom(roomService, roomInfo.roomId, roomInfo.alias, roomInfo.name, roomInfo.description, roomInfo.type, members, roomInfo.bridgeId, roomInfo.pin);\n    }\n\n    function createRoomFromResponse(response) {\n        var roomInfo = response.room;\n        var members = response.members;\n        var roomService = this;\n\n        return new Room(roomService, roomInfo.roomId, roomInfo.alias, roomInfo.name, roomInfo.description, roomInfo.type, members, roomInfo.bridgeId, roomInfo.pin);\n    }\n\n    function initializeRoomAndBuildCache(response) {\n        var activeRoom = this._activeRoom.getValue();\n        var cachedRoom = this._cachedRoom.getValue();\n        var room = createRoomFromResponse.call(this, response);\n        // The cached room does not contain a reference to the self object so updates to self and room are detected by comparing it against the cached room\n        var newCachedRoom = createRoomFromResponse.call(this, response);\n\n        replaceSelfInstanceInRoom.call(this, room);\n\n        if (activeRoom && cachedRoom) {\n            this._logger.debug('[%s] Updating existing room model.', activeRoom.getRoomId());\n            activeRoom._update(response.room);\n            cachedRoom._update(response.room);\n\n            activeRoom.getObservableMembers().setValue(room.getObservableMembers().getValue());\n            cachedRoom.getObservableMembers().setValue(newCachedRoom.getObservableMembers().getValue());\n\n            return activeRoom;\n        }\n\n        this._activeRoom.setValue(room);\n        this._cachedRoom.setValue(newCachedRoom);\n\n        return room;\n    }\n\n    function replaceSelfInstanceInRoom(room) {\n        var self = this._self.getValue();\n        var members = room.getObservableMembers().getValue();\n\n        var selfIndex = _.findIndex(members, function(member) {\n            return self.getSessionId() === member.getSessionId();\n        });\n\n        if (selfIndex < 0) {\n            this._logger.debug('Self not in server room model.');\n\n            return false;\n        }\n\n        self._update(members[selfIndex].toJson());\n\n        members[selfIndex] = self;\n\n        room.getObservableMembers().setValue(members);\n\n        return true;\n    }\n\n    return RoomService;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function(_, assert) {\n    'use strict';\n\n    function AuthenticationService(pcast) {\n        this.setPCast(pcast);\n    }\n\n    AuthenticationService.prototype.setPCast = function setPCast(pcast) {\n        assert.isObject(pcast, 'pcast');\n        assert.isFunction(pcast.getObservableStatus, 'pcast.getObservableStatus');\n        assert.isFunction(pcast.getLogger, 'pcast.getLogger');\n        assert.isFunction(pcast.getProtocol, 'pcast.getProtocol');\n\n        if (pcast === this._pcast) {\n            return;\n        }\n\n        this._pcast = pcast;\n        this._logger = pcast.getLogger();\n        this._protocol = pcast.getProtocol();\n\n        assert.isObject(this._logger, 'this._logger');\n        assert.isObject(this._protocol, 'this._protocol');\n        assert.isFunction(this._protocol.getObservableSessionId, 'this._protocol.getObservableSessionId');\n        assert.isFunction(this._pcast.getObservableStatus, 'this._pcast.getObservableStatus');\n\n        this._sessionId = this._protocol.getObservableSessionId();\n        this._status = this._pcast.getObservableStatus();\n    };\n\n    AuthenticationService.prototype.checkAuthorized = function assertAuthorized() {\n        if (!validPCastStatus(this.getPCastStatus())) {\n            return false;\n        }\n\n        if (!validPCastSessionId(this.getPCastSessionId())) {\n            return false;\n        }\n\n        return true;\n    };\n\n    AuthenticationService.prototype.assertAuthorized = function assertAuthorized() {\n        if (!validPCastStatus(this.getPCastStatus())) {\n            throw new Error('Unable to perform action. Status [' + this.getPCastStatus() + ']. Please wait to reconnect.');\n        }\n\n        if (!validPCastSessionId(this.getPCastSessionId())) {\n            throw new Error('Unable to perform action. Invalid sessionId [' + this.getPCastSessionId() + '] with status [' + this.getPCastStatus() + ']');\n        }\n    };\n\n    AuthenticationService.prototype.getObservableSessionId = function getObservableSessionId() {\n        return this._sessionId;\n    };\n\n    AuthenticationService.prototype.getObservableStatus = function getObservableStatus() {\n        return this._status;\n    };\n\n    AuthenticationService.prototype.getPCastSessionId = function getPCastSessionId() {\n        return this._sessionId.getValue();\n    };\n\n    AuthenticationService.prototype.getPCastStatus = function getPCastStatus() {\n        return this._status.getValue();\n    };\n\n    function validPCastSessionId(sessionId) {\n        return sessionId !== null && sessionId !== undefined && sessionId !== '';\n    }\n\n    function validPCastStatus(status) {\n        return status !== null && status !== undefined && status !== '' && status.toLowerCase() !== 'offline';\n    }\n\n    return AuthenticationService;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    './Member',\n    './room.json'\n], function(_, assert, observable, Member, room) {\n    'use strict';\n    var roomTypes = room.types;\n\n    function Room(roomService, id, alias, name, description, type, members, bridgeId, pin) {\n        this.init(roomService, id, alias, name, description, type, members, bridgeId, pin);\n    }\n\n    Room.prototype.init = function init(roomService, id, alias, name, description, type, members, bridgeId, pin) {\n        assert.isObject(roomService, 'roomService');\n        assert.isStringNotEmpty(name, 'name');\n        assert.isString(description, 'description');\n        assert.isArray(members, 'members');\n\n        if (id) {\n            assert.isStringNotEmpty(id, 'id');\n        }\n\n        if (alias) {\n            assert.isStringNotEmpty(alias, 'alias');\n        }\n\n        if (bridgeId) {\n            assert.isStringNotEmpty(bridgeId, 'bridgeId');\n        }\n\n        if (pin) {\n            assert.isStringNotEmpty(pin, 'pin');\n        }\n\n        this._roomId = new observable.Observable(id);\n        this._alias = new observable.Observable(alias);\n        this._name = new observable.Observable(name);\n        this._description = new observable.Observable(description);\n        this._type = new observable.Observable(type, assertIsValidRoomType);\n        this._members = new observable.ObservableArray([]).extend({\n            method: \"notifyWhenChangesStop\",\n            timeout: 400\n        });\n        this._options = new observable.ObservableArray();\n        this._bridgeId = new observable.Observable(bridgeId);\n        this._pin = new observable.Observable(pin);\n        this._roomService = roomService;\n\n        setMembers.call(this, members);\n    };\n\n    Room.prototype.getRoomId = function getRoomId() {\n        return this._roomId.getValue();\n    };\n\n    Room.prototype.getObservableAlias = function getObservableAlias() {\n        return this._alias;\n    };\n\n    Room.prototype.getObservableName = function getObservableName() {\n        return this._name;\n    };\n\n    Room.prototype.getObservableDescription = function getObservableDescription() {\n        return this._description;\n    };\n\n    Room.prototype.getObservableType = function getObservableType() {\n        return this._type;\n    };\n\n    Room.prototype.getObservableMembers = function getObservableMembers() {\n        return this._members;\n    };\n\n    Room.prototype.getObservableBridgeId = function getObservableBridgeId() {\n        return this._bridgeId;\n    };\n\n    Room.prototype.getObservablePin = function getObservablePin() {\n        return this._pin;\n    };\n\n    Room.prototype.toString = function toString() {\n        return this._type.getValue() + '[' + this._roomId.getValue() + ']';\n    };\n\n    Room.prototype.toJson = function toJson() {\n        return {\n            roomId: this._roomId.getValue(),\n            alias: this._alias.getValue(),\n            name: this._name.getValue(),\n            description: this._description.getValue(),\n            type: this._type.getValue(),\n            pin: this._pin.getValue(),\n            bridgeId: this._bridgeId.getValue()\n        };\n    };\n\n    Room.prototype.commitChanges = function commitChanges(callback) {\n        assert.isObject(this._roomService, 'this._roomService');\n\n        this._roomService.updateRoom(this, callback);\n    };\n\n    Room.prototype.reload = function reload() {\n        assert.isObject(this._roomService, 'this._roomService');\n\n        this._roomService.revertRoomChanges(this);\n    };\n\n    Room.prototype._update = function update(room) {\n        if (!_.isObject(room)) {\n            return;\n        }\n\n        if (room.roomId) {\n            this._roomId.setValue(room.roomId);\n        }\n\n        if (room.alias) {\n            this._alias.setValue(room.alias);\n        }\n\n        if (room.name) {\n            this._name.setValue(room.name);\n        }\n\n        if (room.description) {\n            this._description.setValue(room.description);\n        }\n\n        if (room.type) {\n            this._type.setValue(room.type);\n        }\n\n        if (room.options) {\n            this._options.setValue(room.options);\n        }\n\n        if (room.bridgeId) {\n            this._bridgeId.setValue(room.bridgeId);\n        }\n\n        if (room.pin) {\n            this._pin.setValue(room.pin);\n        }\n\n        if (room.members) {\n            // DO NOTHING -- members updated by member events\n        }\n    };\n\n    Room.prototype._addMembers = function addMembers(members) {\n        var that = this;\n\n        var newMembers = mapMembers(members, this._roomService);\n\n        _.forEach(newMembers, function(member) {\n            that._members.push(member);\n        });\n    };\n\n    Room.prototype._removeMembers = function removeMembers(members) {\n        var that = this;\n\n        _.forEach(members, function(member) {\n            that._members.remove(function(observableMember) {\n                return member.sessionId === observableMember.getSessionId()\n                    && member.lastUpdate >= observableMember.getObservableLastUpdate().getValue();\n            });\n        });\n    };\n\n    Room.prototype._updateMembers = function updateMembers(members) {\n        _.forEach(this._members.getValue(), function(observableMember) {\n            var memberToUpdate = _.find(members, function(member) {\n                return observableMember.getSessionId() === member.sessionId && member.lastUpdate > observableMember.getObservableLastUpdate().getValue();\n            });\n\n            if (memberToUpdate) {\n                observableMember._update(memberToUpdate);\n            }\n        });\n    };\n\n    function setMembers(members) {\n        var newMembers = mapMembers(members, this._roomService);\n\n        this._members.setValue(newMembers);\n    }\n\n    function mapMembers(members, roomService) {\n        return _.map(members, function(member) {\n            return new Member(roomService, member.state, member.sessionId, member.screenName, member.role, member.streams, member.lastUpdate);\n        });\n    }\n\n    function assertIsValidRoomType(type) {\n        type = _.getEnumName(roomTypes, type);\n\n        if (!type) {\n            throw new Error('\"type\" must be a valid room type');\n        }\n\n        return type;\n    }\n\n    return Room;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    './Stream',\n    './member.json'\n], function(_, assert, observable, Stream, member) {\n    'use strict';\n    var memberRoles = member.roles;\n    var memberStates = member.states;\n\n    function Member(roomService, state, sessionId, screenName, role, streams, lastUpdate) {\n        this.init(roomService, state, sessionId, screenName, role, streams, lastUpdate);\n    }\n\n    Member.prototype.init = function init(roomService, state, sessionId, screenName, role, streams, lastUpdate) {\n        assert.isObject(roomService, 'roomService');\n        assert.isString(sessionId, 'sessionId');\n        assert.isString(screenName, 'screenName');\n        assert.isArray(streams, 'streams');\n        assert.isNumber(_.utc(lastUpdate), 'lastUpdate');\n\n        this._sessionId = new observable.Observable(sessionId);\n        this._screenName = new observable.Observable(screenName);\n        this._streams = new observable.ObservableArray([]);\n\n        this._state = new observable.Observable(state, assertIsValidMemberState).extend({rateLimit: 500});\n        this._role = new observable.Observable(role, assertIsValidMemberRole);\n        this._lastUpdate = new observable.Observable(lastUpdate, _.utc);\n        this._roomService = roomService;\n\n        this.setStreams(streams);\n    };\n\n    Member.prototype.getObservableState = function getObservableState() {\n        return this._state;\n    };\n\n    Member.prototype.getSessionId = function getSessionId() {\n        return this._sessionId.getValue();\n    };\n\n    Member.prototype.getObservableScreenName = function getObservableScreenName() {\n        return this._screenName;\n    };\n\n    Member.prototype.getObservableRole = function getObservableRole() {\n        return this._role;\n    };\n\n    Member.prototype.getObservableStreams = function getObservableStreams() {\n        return this._streams;\n    };\n\n    Member.prototype.getObservableLastUpdate = function getObservableLastUpdate() {\n        return this._lastUpdate;\n    };\n\n    Member.prototype.getLastUpdate = function getLastUpdate() {\n        return this._lastUpdate.getValue();\n    };\n\n    Member.prototype.getStreams = function getStreams() {\n        return _.map(this._streams.getValue(), function mapToJson(stream) {\n            return stream.toJson();\n        });\n    };\n\n    Member.prototype.getRoomService = function getRoomService() {\n        return this._roomService;\n    };\n\n    Member.prototype.commitChanges = function commitChanges(callback) {\n        assert.isObject(this._roomService, 'this._roomService');\n\n        this._roomService.updateMember(this, callback);\n    };\n\n    Member.prototype.reload = function reload() {\n        assert.isObject(this._roomService, 'this._roomService');\n\n        this._roomService.revertMemberChanges(this);\n    };\n\n    Member.prototype.setStreams = function setStreams(streams) {\n        var newStreams = _.map(streams, function(stream) {\n            return createNewObservableStream(stream);\n        });\n\n        this._streams.setValue(newStreams);\n    };\n\n    Member.prototype.toString = function toString() {\n        return this.getObservableRole().getValue() + '[' + this.getObservableScreenName().getValue() + ',' + this.getSessionId() + ']';\n    };\n\n    Member.prototype.toJson = function toJson() {\n        var member = {\n            sessionId: this._sessionId.getValue(),\n            screenName: this._screenName.getValue(),\n            role: this._role.getValue(),\n            state: this._state.getValue(),\n            streams: [],\n            lastUpdate: this._lastUpdate.getValue()\n        };\n\n        _.forEach(this._streams.getValue(), function(stream) {\n            member.streams.push(stream.toJson());\n        });\n\n        return member;\n    };\n\n    Member.prototype._update = function update(member) {\n        if (!_.isObject(member)) {\n            return;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(member, 'state')) {\n            this._state.setValue(member.state);\n        }\n\n        if (Object.prototype.hasOwnProperty.call(member, 'screenName')) {\n            this._screenName.setValue(member.screenName);\n        }\n\n        if (Object.prototype.hasOwnProperty.call(member, 'role')) {\n            this._role.setValue(member.role);\n        }\n\n        if (Object.prototype.hasOwnProperty.call(member, 'lastUpdate')) {\n            this._lastUpdate.setValue(member.lastUpdate);\n        }\n\n        if (Object.prototype.hasOwnProperty.call(member, 'streams')) {\n            updateStreams.call(this, member.streams);\n        }\n    };\n\n    function createNewObservableStream(stream) {\n        return new Stream(stream.uri, stream.type, stream.audioState, stream.videoState);\n    }\n\n    function updateStreams(streams) {\n        // Iterate through new streams object, update those that have changed, push new ones, remove old ones\n        var oldObservableStreams = this._streams.getValue();\n        var newObservableStreams = [];\n\n        _.forEach(streams, function(stream) {\n            var pcastStreamId = Stream.parsePCastStreamIdFromStreamUri(stream.uri);\n            var streamToUpdate = _.find(oldObservableStreams, function(observableStream) {\n                var hasSameUri = observableStream.getUri() === stream.uri;\n                var hasSamePCastStreamId = observableStream.isPCastStream() && observableStream.getPCastStreamId() === pcastStreamId;\n                var hasSameIdentifier = hasSameUri || hasSamePCastStreamId;\n\n                return observableStream.getType() === stream.type && hasSameIdentifier;\n            });\n\n            if (streamToUpdate) {\n                streamToUpdate._update(stream);\n            } else {\n                streamToUpdate = createNewObservableStream(stream);\n            }\n\n            newObservableStreams.push(streamToUpdate);\n        });\n\n        this._streams.setValue(newObservableStreams);\n    }\n\n    function assertIsValidMemberRole(role) {\n        assert.isValidType(role, memberRoles, 'memberRole');\n\n        return _.getEnumName(memberRoles, role);\n    }\n\n    function assertIsValidMemberState(state) {\n        assert.isValidType(state, memberStates, 'memberState');\n\n        return _.getEnumName(memberStates, state);\n    }\n\n    return Member;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n], function() {\n    'use strict';\n\n    var trackEnums = {\n        states: {\n            trackEnabled: {\n                id: 0,\n                name: 'TrackEnabled'\n            },\n            trackDisabled: {\n                id: 1,\n                name: 'TrackDisabled'\n            },\n            trackEnded: {\n                id: 2,\n                name: 'TrackEnded'\n            }\n        }\n    };\n\n    return trackEnums;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    '../AdminApiProxyClient',\n    '../userMedia/UserMediaResolver',\n    '../PCast',\n    'phenix-rtc',\n    '../streaming/shaka.json'\n], function(_, assert, observable, AdminApiProxyClient, UserMediaResolver, PCast, rtc, shakaEnums) {\n    'use strict';\n\n    var instanceCounter = 0;\n    var unauthorizedStatus = 'unauthorized';\n    var capacityBackoffTimeout = 1000;\n    var defaultPrerollSkipDuration = 500;\n    var defaultUserActionOnlineTimeout = 20000;\n    var defaultReconnectOptions = {\n        maxOfflineTime: 3 * 60 * 1000,\n        maxReconnectFrequency: 60 * 1000\n    };\n\n    function PCastExpress(options) {\n        assert.isObject(options, 'options');\n\n        if (options.authToken) {\n            assert.isStringNotEmpty(options.authToken, 'options.authToken');\n        }\n\n        if (options.authToken && options.adminApiProxyClient) {\n            throw new Error('Do not pass \"options.adminApiProxyClient\" if you are using \"options.authToken\"');\n        }\n\n        if (options.onError) {\n            assert.isFunction(options.onError, 'options.onError');\n        }\n\n        if (!_.isNullOrUndefined(options.onlineTimeout)) {\n            assert.isNumber(options.onlineTimeout, 'options.onlineTimeout');\n\n            if (options.onlineTimeout < 0) {\n                throw new Error('\"options.onlineTimeout\" must be a positive number');\n            }\n        }\n\n        if (options.reconnectOptions) {\n            assert.isObject(options.reconnectOptions, 'options.reconnectOptions');\n            assert.isNumber(options.reconnectOptions.maxOfflineTime, 'options.reconnectOptions.maxOfflineTime');\n            assert.isNumber(options.reconnectOptions.maxReconnectFrequency, 'options.reconnectOptions.maxReconnectFrequency');\n        }\n\n        if (options.adminApiProxyClient) {\n            assert.isObject(options.adminApiProxyClient, 'options.adminApiProxyClient');\n            assert.isFunction(options.adminApiProxyClient.createAuthenticationToken, 'options.adminApiProxyClient.createAuthenticationToken');\n        }\n\n        this._instanceId = ++instanceCounter;\n        this._pcastObservable = new observable.Observable(null).extend({rateLimit: 0});\n        this._sessionIdObservable = new observable.Observable(null).extend({rateLimit: 0});\n        this._publishers = {};\n        this._adminApiProxyClient = options.adminApiProxyClient;\n        this._isInstantiated = false;\n        this._reconnectCount = 0;\n        this._reauthCount = 0;\n        this._disposed = false;\n        this._authToken = options.authToken;\n        this._onError = options.onError;\n        this._options = options;\n        this._onlineTimeout = _.isNumber(options.onlineTimeout) ? options.onlineTimeout : defaultUserActionOnlineTimeout;\n        this._reconnectOptions = options.reconnectOptions || defaultReconnectOptions;\n        this._logger = null;\n        this._ignoredStreamEnds = {};\n\n        instantiatePCast.call(this);\n\n        // After logger is instantiated\n        if (!options.adminApiProxyClient) {\n            if (options.backendUri || _.isString(options.backendUri)) {\n                this._logger.warn('Passing options.backendUri is deprecated. Please create an instance of the sdk.net.AdminApiProxyClient and pass that instead');\n            }\n\n            if (options.authenticationData) {\n                this._logger.warn('Passing options.authenticationData is deprecated. Please create an instance of the sdk.net.AdminApiProxyClient and pass that instead');\n            }\n        }\n    }\n\n    PCastExpress.prototype.toString = function toString() {\n        return 'PCastExpress[' + this._instanceId + ']';\n    };\n\n    PCastExpress.prototype.dispose = function dispose() {\n        if (this._listedForCriticalNetworkRecoveryDisposable) {\n            this._listedForCriticalNetworkRecoveryDisposable.dispose();\n            this._listedForCriticalNetworkRecoveryDisposable = null;\n        }\n\n        if (this._pcastObservable.getValue()) {\n            this._pcastObservable.getValue().stop();\n            this._pcastObservable.setValue(null);\n        }\n\n        if (this._sessionIdObservable.getValue()) {\n            this._sessionIdObservable.setValue(null);\n        }\n\n        if (_.isNumber(this._instantiatePCastTimeoutId)) {\n            clearTimeout(this._instantiatePCastTimeoutId);\n            this._instantiatePCastTimeoutId = null;\n        }\n\n        if (this._adminApiProxyClient) {\n            this._adminApiProxyClient.dispose();\n        }\n\n        if (this.sessionIdSubscription) {\n            this.sessionIdSubscription.dispose();\n        }\n\n        if (this._sessionIdObservable && this._sessionIdObservable.dispose) {\n            this._sessionIdObservable.dispose();\n        }\n\n        this._reconnectCount = 0;\n        this._reauthCount = 0;\n        this._disposed = true;\n\n        this._logger.info('[%s] Disposed PCast Express instance', this);\n    };\n\n    PCastExpress.prototype.getPCast = function getPCast() {\n        return this._pcastObservable.getValue();\n    };\n\n    PCastExpress.prototype.getPCastObservable = function() {\n        return this._pcastObservable;\n    };\n\n    PCastExpress.prototype.getSessionIdObservable = function() {\n        return this._sessionIdObservable;\n    };\n\n    PCastExpress.prototype.getAdminAPI = function getAdminAPI() {\n        return this._adminApiProxyClient;\n    };\n\n    PCastExpress.prototype.getUserMedia = function(options, callback) {\n        var that = this;\n\n        assert.isObject(options.mediaConstraints, 'options.mediaConstraints');\n        assert.isFunction(callback, 'callback');\n\n        if (options.resolution) {\n            assert.isNumber(options.resolution, 'options.resolution');\n        }\n\n        if (options.frameRate) {\n            assert.isNumber(options.frameRate, 'options.frameRate');\n        }\n\n        if (options.aspectRatio) {\n            assert.isStringNotEmpty(options.aspectRatio, 'options.aspectRatio');\n        }\n\n        if (options.onResolveMedia) {\n            assert.isFunction(options.onResolveMedia, 'options.onResolveMedia');\n        }\n\n        if (options.onScreenShare) {\n            assert.isFunction(options.onScreenShare, 'options.onScreenShare');\n        }\n\n        if (that._pcastObservable.getValue()) {\n            return resolveUserMedia.call(that, that._pcastObservable.getValue(), options, callback);\n        }\n\n        var pcastSubscription = that._pcastObservable.subscribe(function(pcast) {\n            if (!pcast) {\n                return;\n            }\n\n            pcastSubscription.dispose();\n\n            resolveUserMedia.call(that, pcast, options, callback);\n        });\n    };\n\n    PCastExpress.prototype.publish = function publish(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        if (options.capabilities) {\n            assert.isArray(options.capabilities, 'options.capabilities');\n        }\n\n        if (options.connectOptions) {\n            assert.isArray(options.connectOptions, 'options.connectOptions');\n        }\n\n        if (options.mediaConstraints) {\n            assert.isObject(options.mediaConstraints, 'options.mediaConstraints');\n        } else {\n            assert.isObject(options.userMediaStream, 'options.userMediaStream');\n        }\n\n        if (options.videoElement) {\n            assert.isObject(options.videoElement, 'options.videoElement');\n        }\n\n        if (options.monitor) {\n            assert.isObject(options.monitor, 'options.monitor');\n            assert.isFunction(options.monitor.callback, 'options.monitor.callback');\n\n            if (options.monitor.options) {\n                assert.isObject(options.monitor.options, 'options.monitor.options');\n            }\n        }\n\n        if (options.publishToken) {\n            assert.isStringNotEmpty(options.publishToken, 'options.publishToken');\n        }\n\n        if (options.streamToken) {\n            assert.isStringNotEmpty(options.streamToken, 'options.streamToken');\n        }\n\n        if (options.publishToken && options.streamToken) {\n            throw new Error('Do not pass streamToken with publishToken. Please use publishToken.');\n        }\n\n        var that = this;\n\n        this.waitForOnline(function(error) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (options.userMediaStream) {\n                return getStreamingTokenAndPublish.call(that, options.userMediaStream, options, false, callback);\n            }\n\n            that.getUserMedia(options, function(error, response) {\n                if (error) {\n                    return callback(error);\n                }\n\n                if (response.status !== 'ok') {\n                    return callback(null, response);\n                }\n\n                getStreamingTokenAndPublish.call(that, response.userMedia, options, true, callback);\n            });\n        }, options.isContinuation);\n    };\n\n    var connectOptionCapabilities = ['streaming', 'low-latency', 'on-demand', 'uld', 'vvld', 'vld', 'ld', 'sd', 'hd', 'fhd', 'uhd'];\n\n    PCastExpress.prototype.publishRemote = function publishRemote(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n        assert.isStringNotEmpty(options.streamUri, 'options.streamUri');\n\n        if (options.capabilities) {\n            assert.isArray(options.capabilities, 'options.capabilities');\n        }\n\n        if (options.connectOptions) {\n            assert.isArray(options.connectOptions, 'options.connectOptions');\n        }\n\n        if (options.mediaConstraints) {\n            throw new Error('Invalid argument: mediaConstraints, passed on publishRemote. Local media not allowed when publishing remote content.');\n        }\n\n        if (options.videoElement) {\n            throw new Error('May not preview remote stream. Please subscribe to view.');\n        }\n\n        if (options.prerollSkipDuration) {\n            assert.isNumber(options.prerollSkipDuration, 'options.prerollSkipDuration');\n        }\n\n        if (options.monitor) {\n            assert.isObject(options.monitor, 'options.monitor');\n            assert.isFunction(options.monitor.callback, 'options.monitor.callback');\n\n            if (options.monitor.options) {\n                assert.isObject(options.monitor.options, 'options.monitor.options');\n            }\n        }\n\n        if (options.frameRate) {\n            assert.isObject(options.frameRate, 'options.frameRate');\n\n            if (options.frameRate.exact) {\n                assert.isNumber(options.frameRate.exact, 'options.frameRate.exact');\n            }\n\n            if (options.frameRate.max) {\n                assert.isNumber(options.frameRate.max, 'options.frameRate.max');\n            }\n        }\n\n        if (options.publishToken) {\n            assert.isStringNotEmpty(options.publishToken, 'options.publishToken');\n        }\n\n        if (options.streamToken) {\n            assert.isStringNotEmpty(options.streamToken, 'options.streamToken');\n        }\n\n        if (options.publishToken && options.streamToken) {\n            throw new Error('Do not pass streamToken with publishToken. Please use publishToken.');\n        }\n\n        var that = this;\n\n        this.waitForOnline(function(error) {\n            if (error) {\n                return callback(error);\n            }\n\n            var remoteOptions = _.assign({\n                connectOptions: [],\n                capabilities: []\n            }, options);\n\n            if (!_.includes(remoteOptions.capabilities, 'publish-uri')) {\n                remoteOptions.capabilities.push('publish-uri');\n            }\n\n            _.forEach(connectOptionCapabilities, function(capability) {\n                if (_.includes(remoteOptions.capabilities, capability)) {\n                    remoteOptions.connectOptions.push('publisher-capability=' + capability);\n                }\n            });\n\n            if (options.frameRate && options.frameRate.exact) {\n                remoteOptions.connectOptions.push('source-uri-video-fps=' + options.frameRate.exact);\n            }\n\n            if (options.frameRate && options.frameRate.max) {\n                remoteOptions.connectOptions.push('source-uri-video-fps-max=' + options.frameRate.max);\n            }\n\n            remoteOptions.connectOptions.push('source-uri-preroll-skip-duration=' + (_.isNumber(options.prerollSkipDuration) ? options.prerollSkipDuration : defaultPrerollSkipDuration).toString());\n\n            getStreamingTokenAndPublish.call(that, remoteOptions.streamUri, remoteOptions, false, callback);\n        });\n    };\n\n    PCastExpress.prototype.publishStreamToExternal = function publishStreamToExternal(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n        assert.isStringNotEmpty(options.streamId, 'options.streamId');\n        assert.isStringNotEmpty(options.externalUri, 'options.externalUri');\n\n        if (options.capabilities) {\n            assert.isArray(options.capabilities, 'options.capabilities');\n        }\n\n        if (options.connectOptions) {\n            assert.isArray(options.connectOptions, 'options.connectOptions');\n        }\n\n        if (options.mediaConstraints) {\n            throw new Error('Invalid argument: mediaConstraints, passed on publishStreamToExternal. Local media not allowed when publishing remote content.');\n        }\n\n        if (options.videoElement) {\n            throw new Error('May not preview external stream. Please subscribe to view.');\n        }\n\n        if (options.monitor) {\n            assert.isObject(options.monitor, 'options.monitor');\n            assert.isFunction(options.monitor.callback, 'options.monitor.callback');\n\n            if (options.monitor.options) {\n                assert.isObject(options.monitor.options, 'options.monitor.options');\n            }\n        }\n\n        if (options.streamToken) {\n            assert.isStringNotEmpty(options.streamToken, 'options.streamToken');\n        }\n\n        var that = this;\n\n        this.waitForOnline(function(error) {\n            if (error) {\n                return callback(error);\n            }\n\n            var remoteOptions = _.assign({\n                connectOptions: [],\n                capabilities: []\n            }, options);\n\n            if (!_.includes(remoteOptions.capabilities, 'egress')) {\n                remoteOptions.capabilities.push('egress');\n            }\n\n            if (!_.includes(remoteOptions.capabilities, 'egress-own-stream')) {\n                remoteOptions.capabilities.push('egress-own-stream');\n            }\n\n            getStreamingTokenAndPublish.call(that, remoteOptions.externalUri, remoteOptions, false, callback);\n        });\n    };\n\n    PCastExpress.prototype.publishScreen = function publishScreen(options, callback) {\n        var publishScreenOptions = _.assign({mediaConstraints: {screen: true}}, options);\n\n        _.set(publishScreenOptions, ['monitor', 'options'], _.assign({}, {\n            monitorFrameRate: false,\n            videoBitRateThreshold: 100,\n            conditionCountForNotificationThreshold: 8\n        }, _.get(publishScreenOptions, ['monitor', 'options'], {})));\n\n        return this.publish(publishScreenOptions, callback);\n    };\n\n    PCastExpress.prototype.subscribe = function subscribe(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n        assert.isStringNotEmpty(options.streamId, 'options.streamId');\n\n        if (options.videoElement) {\n            assert.isObject(options.videoElement, 'options.videoElement');\n        }\n\n        if (options.monitor) {\n            assert.isObject(options.monitor, 'options.monitor');\n            assert.isFunction(options.monitor.callback, 'options.monitor.callback');\n\n            if (options.monitor.options) {\n                assert.isObject(options.monitor.options, 'options.monitor.options');\n            }\n        }\n\n        if (options.streamToken) {\n            assert.isStringNotEmpty(options.streamToken, 'options.streamToken');\n        } else {\n            assert.isObject(options.capabilities, 'options.capabilities');\n        }\n\n        if (options.subscriberOptions) {\n            assert.isObject(options.subscriberOptions, 'options.subscriberOptions');\n        }\n\n        var that = this;\n\n        this.waitForOnline(function(error) {\n            if (error) {\n                that._logger.error('[%s] Failed to subscribe after error waiting for online status', this, error);\n\n                return callback(error);\n            }\n\n            if (options.streamToken) {\n                return subscribeToStream.call(that, options.streamToken, options, callback);\n            }\n\n            if (!options.streamToken && !that._adminApiProxyClient) {\n                throw new Error('Use stream token, or set adminApiProxyClient');\n            }\n\n            that._logger.info('[%s] [%s] Generating stream token for subscribing to origin [%s]', this, that._pcastObservable.getValue().getProtocol().getSessionId(), options.streamId);\n\n            that._adminApiProxyClient.createStreamTokenForSubscribing(that._pcastObservable.getValue().getProtocol().getSessionId(), options.capabilities, options.streamId, null, function(error, response) {\n                if (error) {\n                    that._logger.error('[%s] Failed to create stream token for subscribing', this, error);\n\n                    return callback(error);\n                }\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('[%s] Failed to create stream token for subscribing with status [%s]', this, response.status);\n\n                    return callback(null, response);\n                }\n\n                subscribeToStream.call(that, response.streamToken, options, callback);\n            });\n        }, options.isContinuation);\n    };\n\n    PCastExpress.prototype.subscribeToScreen = function subscribeToScreen(options, callback) {\n        var subscribeToScreenOptions = _.assign({}, options);\n\n        _.set(subscribeToScreenOptions, ['monitor', 'options'], _.assign({}, {\n            monitorFrameRate: false,\n            videoBitRateThreshold: 100,\n            conditionCountForNotificationThreshold: 8\n        }, _.get(subscribeToScreenOptions, ['monitor', 'options'], {})));\n\n        return this.subscribe(subscribeToScreenOptions, callback);\n    };\n\n    PCastExpress.prototype.waitForOnline = function waitForOnline(callback, isNotUserAction) {\n        assert.isFunction(callback, 'callback');\n\n        if (this._pcastObservable.getValue() && this._pcastObservable.getValue().getStatus() === 'online') {\n            return callback();\n        }\n\n        var that = this;\n        var disposeOfWaitTimeout = isNotUserAction ? _.get(that._reconnectOptions, ['maxOfflineTime']) : this._onlineTimeout;\n        var pcastSubscription = null;\n        var statusSubscription = null;\n        var onlineTimeoutId = setTimeout(function() {\n            that._logger.info('[%s] Disposing of online listener after [%s] ms', this, disposeOfWaitTimeout);\n\n            if (pcastSubscription) {\n                pcastSubscription.dispose();\n            }\n\n            if (statusSubscription) {\n                statusSubscription.dispose();\n            }\n\n            if (that._disposed) {\n                that._logger.info('[%s] Instance was disposed while waiting for online, ignoring callback', this);\n\n                return;\n            }\n\n            callback(new Error('timeout'));\n        }, disposeOfWaitTimeout);\n\n        this._logger.info('[%s] Waiting for online status before continuing. Timeout set to [%s]', this, disposeOfWaitTimeout);\n\n        var subscribeToStatusChange = function(pcast) {\n            if (statusSubscription) {\n                statusSubscription.dispose();\n            }\n\n            if (!pcast) {\n                return;\n            }\n\n            statusSubscription = pcast.getObservableStatus().subscribe(function(status) {\n                if (that._disposed) {\n                    that._logger.info('[%s] Instance was disposed while waiting for online, canceling waiting and skip triggering callback', this);\n\n                    clearTimeout(onlineTimeoutId);\n                    statusSubscription.dispose();\n                    pcastSubscription.dispose();\n\n                    return;\n                }\n\n                if (status !== 'online') {\n                    that._logger.info('[%s] Still waiting for online status before continuing. Current status is [%s]', this, status);\n\n                    return;\n                }\n\n                clearTimeout(onlineTimeoutId);\n                statusSubscription.dispose();\n                pcastSubscription.dispose();\n\n                return callback();\n            }, {initial: 'notify'});\n        };\n\n        pcastSubscription = this._pcastObservable.subscribe(subscribeToStatusChange, {initial: 'notify'});\n    };\n\n    PCastExpress.prototype.parseCapabilitiesFromToken = function parseCapabilitiesFromToken(streamToken) {\n        var pcast = this._pcastObservable.getValue();\n\n        return pcast.parseCapabilitiesFromToken(streamToken);\n    };\n\n    PCastExpress.prototype.parseRoomOrChannelIdFromToken = function parseRoomOrChannelIdFromToken(streamToken) {\n        var pcast = this._pcastObservable.getValue();\n\n        return pcast.parseRoomOrChannelIdFromToken(streamToken);\n    };\n\n    PCastExpress.prototype.parseRoomOrChannelAliasFromToken = function parseRoomOrChannelAliasFromToken(streamToken) {\n        var pcast = this._pcastObservable.getValue();\n\n        return pcast.parseRoomOrChannelAliasFromToken(streamToken);\n    };\n\n    function instantiatePCast() {\n        var that = this;\n\n        var authenticationCallback = function(_, status) {\n            if (status === 'critical-network-issue') {\n                return onPCastStatusChange.call(that, status);\n            }\n        };\n\n        if (!this._pcastObservable.getValue()) {\n            var pcastOptions = _.assign({logger: this._logger}, this._options);\n\n            this._pcastObservable.setValue(new PCast(pcastOptions));\n        }\n\n        if (!this._logger) {\n            this._logger = this._pcastObservable.getValue().getLogger();\n        }\n\n        if (!this._pcastStatusSubscription) {\n            this._pcastStatusSubscription = this._pcastObservable.getValue().getObservableStatus().subscribe(_.bind(onPCastStatusChange, this));\n        }\n\n        if (this.sessionIdSubscription) {\n            this.sessionIdSubscription.dispose();\n        }\n\n        var handleSessionIdChange = function(sessionId) {\n            this._sessionIdObservable.setValue(sessionId);\n        };\n\n        this.sessionIdSubscription = this._pcastObservable.getValue().getObservableSessionId().subscribe(_.bind(handleSessionIdChange, this));\n\n        if (this._authToken) {\n            return this._pcastObservable.getValue().start(this._authToken, authenticationCallback, _.noop, _.noop);\n        }\n\n        if (!this._authToken && !that._adminApiProxyClient) {\n            throw new Error('Use auth token, or set adminApiProxyClient');\n        }\n\n        this._adminApiProxyClient.createAuthenticationToken(function(error, response) {\n            if (error && error.message === 'timeout') {\n                return onPCastStatusChange.call(that, error.message);\n            }\n\n            if (error) {\n                return handleError.call(that, error);\n            }\n\n            if (response.status !== 'ok') {\n                return onPCastStatusChange.call(that, response.status);\n            }\n\n            if (!that._pcastObservable.getValue()) {\n                that._logger.warn('[%s] Unable to authenticate. PCast not instantiated.', this);\n\n                return;\n            }\n\n            that._pcastObservable.getValue().start(response.authenticationToken, _.noop, _.noop, _.noop);\n        });\n    }\n\n    function onPCastStatusChange(status) {\n        switch (status) {\n        case 'timeout':\n        case 'critical-network-issue':\n            if (this._pcastObservable.getValue()) {\n                this._pcastObservable.getValue().stop('recovery');\n                this._pcastObservable.setValue(null);\n            }\n\n            if (this._sessionIdObservable.getValue()) {\n                this._sessionIdObservable.setValue(null);\n            }\n\n            if (this._pcastStatusSubscription) {\n                this._pcastStatusSubscription.dispose();\n                this._pcastStatusSubscription = null;\n            }\n\n            this._reconnectCount++;\n\n            return instantiateWithBackoff.call(this);\n        case 'reconnect-failed':\n        case 'unauthorized':\n            delete this._authToken;\n\n            if (!this._adminApiProxyClient) {\n                return handleError.call(this, new Error(status));\n            }\n\n            this._reauthCount++;\n\n            if (this._reauthCount > 1) {\n                return handleError.call(this, new Error(status));\n            }\n\n            this._logger.info('[%s] Attempting to create new authToken and re-connect after [%s] response', this, unauthorizedStatus);\n\n            return getAuthTokenAndReAuthenticate.call(this);\n        case 'capacity':\n        case 'network-unavailable':\n            this._reconnectCount++;\n\n            return instantiateWithBackoff.call(this);\n        case 'online':\n            if (!this._isInstantiated) {\n                this._logger.info('[%s] Successfully instantiated', this);\n            } else {\n                this._logger.info('[%s] Successfully reconnected (reconnectCount=[%s],reauthCount=[%s])', this, this._reconnectCount, this._reauthCount);\n            }\n\n            this._reauthCount = 0;\n            this._reconnectCount = 0;\n            this._isInstantiated = true;\n\n            return;\n        case 'reconnecting':\n        case 'reconnected':\n        case 'connecting':\n            break; // Everything ok\n        case 'offline':\n            return;\n        case 'failed':\n        default:\n            return handleError.call(this, new Error(status));\n        }\n    }\n\n    function instantiateWithBackoff() {\n        var that = this;\n        var staticTimeout = Math.min(capacityBackoffTimeout * that._reconnectCount * that._reconnectCount, this._reconnectOptions.maxReconnectFrequency);\n        var maxOffsetInSeconds = Math.min(staticTimeout / 10000, 5);\n        var randomLinearOffset = Math.random() * maxOffsetInSeconds * 1000;\n        var timeoutWithRandomOffset = staticTimeout + randomLinearOffset;\n\n        this._logger.info('[%s] Waiting for [%s] ms before continuing to attempt to reconnect to PCast', this, timeoutWithRandomOffset);\n\n        this._instantiatePCastTimeoutId = setTimeout(function() {\n            if (!that._pcastObservable.getValue() || !that._pcastObservable.getValue().isStarted()) {\n                return instantiatePCast.call(that);\n            }\n\n            return getAuthTokenAndReAuthenticate.call(that);\n        }, timeoutWithRandomOffset);\n    }\n\n    function getAuthTokenAndReAuthenticate() {\n        var that = this;\n\n        this._adminApiProxyClient.createAuthenticationToken(function(error, response) {\n            if (error && error.message === 'timeout') {\n                return onPCastStatusChange.call(that, error.message);\n            }\n\n            if (error) {\n                return handleError.call(that, error);\n            }\n\n            if (response.status !== 'ok') {\n                return onPCastStatusChange.call(that, response.status);\n            }\n\n            if (!that._pcastObservable.getValue()) {\n                that._logger.warn('[%s] Unable to authenticate. PCast not instantiated.', this);\n\n                return;\n            }\n\n            that._pcastObservable.getValue().reAuthenticate(response.authenticationToken);\n        });\n    }\n\n    function handleError(e) {\n        if (!this._onError) {\n            throw e;\n        }\n\n        this._onError(e);\n    }\n\n    function resolveUserMedia(pcast, options, callback) {\n        var userMediaResolver = new UserMediaResolver(pcast, {\n            aspectRatio: options.aspectRatio,\n            resolution: options.resolution,\n            frameRate: options.frameRate,\n            resolutionSelectionStrategy: options.resolutionSelectionStrategy,\n            onScreenShare: function(screenOptions) {\n                screenOptions = options.onScreenShare ? options.onScreenShare(screenOptions) : screenOptions;\n\n                if (screenOptions.resolution) {\n                    assert.isNumber(screenOptions.resolution, 'clientOptions.resolution');\n                }\n\n                if (screenOptions.frameRate) {\n                    assert.isNumber(screenOptions.frameRate, 'screenOptions.frameRate');\n                }\n\n                if (screenOptions.aspectRatio) {\n                    assert.isStringNotEmpty(screenOptions.aspectRatio, 'screenOptions.aspectRatio');\n                }\n\n                return _.assign({resolution: screenOptions.resolution}, screenOptions);\n            }\n        });\n\n        userMediaResolver.getUserMedia(options.mediaConstraints, function(error, response) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (options.onResolveMedia) {\n                options.onResolveMedia(response.options);\n            }\n\n            callback(null, _.assign({status: 'ok'}, response));\n        });\n    }\n\n    function getStreamingTokenAndPublish(userMediaOrUri, options, cleanUpUserMediaOnStop, callback) {\n        var that = this;\n\n        if (options.publishToken) {\n            try {\n                var capabilitiesFromPublishToken = that.parseCapabilitiesFromToken(options.publishToken);\n\n                options.capabilities = capabilitiesFromPublishToken;\n            } catch (e) {\n                return callback(new Error('Bad `publishToken`', e), {status: 'bad-token'});\n            }\n\n            return publishUserMediaOrUri.call(that, options.publishToken, userMediaOrUri, options, cleanUpUserMediaOnStop, callback);\n        }\n\n        if (options.streamToken) {\n            try {\n                var capabilitiesFromStreamToken = that.parseCapabilitiesFromToken(options.streamToken);\n\n                options.capabilities = capabilitiesFromStreamToken;\n            } catch (e) {\n                return callback(new Error('Bad `streamToken`', e), {status: 'bad-token'});\n            }\n\n            return publishUserMediaOrUri.call(that, options.streamToken, userMediaOrUri, options, cleanUpUserMediaOnStop, callback);\n        }\n\n        if (options.capabilities) {\n            assert.isArray(options.capabilities, 'options.capabilities');\n        }\n\n        that.waitForOnline(function(error) {\n            if (error) {\n                that._logger.error('[%s] Failed to create stream token for publishing after waiting for online status', this, error);\n\n                return callback(error);\n            }\n\n            var sessionId = that._pcastObservable.getValue().getProtocol().getSessionId();\n            var isEgress = _.includes(options.capabilities, 'egress');\n            var generateStreamToken = _.bind(that._adminApiProxyClient.createStreamTokenForPublishing, that._adminApiProxyClient, sessionId, options.capabilities);\n\n            if (isEgress) {\n                generateStreamToken = _.bind(that._adminApiProxyClient.createStreamTokenForPublishingToExternal, that._adminApiProxyClient, sessionId, options.capabilities, options.streamId);\n            }\n\n            that._logger.info('[%s] [%s] Creating stream token for publishing', this, sessionId);\n\n            generateStreamToken(function(error, response) {\n                if (error) {\n                    that._logger.error('[%s] [%s] Failed to create stream token for publishing', this, sessionId, error);\n\n                    return callback(error);\n                }\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('[%s] [%s] Failed to create stream token for publishing with status [%s]', this, sessionId, response.status);\n\n                    return callback(null, response);\n                }\n\n                publishUserMediaOrUri.call(that, response.streamToken, userMediaOrUri, options, cleanUpUserMediaOnStop, callback);\n            });\n        }, options.isContinuation);\n    }\n\n    function publishUserMediaOrUri(streamToken, userMediaOrUri, options, cleanUpUserMediaOnStop, callback) {\n        var that = this;\n        var hasAlreadyAttachedMedia = false;\n        var cachedPublisher = null;\n\n        if (options.tags) {\n            assert.isArray(options.tags, 'options.tags');\n        }\n\n        if (options.connectOptions) {\n            assert.isArray(options.connectOptions, 'options.connectOptions');\n        }\n\n        var publishCallback = function publishCallback(pcast, status, publisher) {\n            var retryPublisher = function retryPublisher(reason) {\n                var optionsWithToken = _.assign({\n                    streamToken: streamToken,\n                    isContinuation: true\n                }, options);\n\n                that._logger.warn('[%s] Retrying publisher after failure with reason [%s]', this, reason);\n\n                that._ignoredStreamEnds[publisher.getStreamId()] = true;\n\n                if (reason === 'camera-track-failure') {\n                    publisher.stop(reason, false);\n                    that.publish(options, callback);\n                } else {\n                    publisher.stop(reason, true);\n                    getStreamingTokenAndPublish.call(that, userMediaOrUri, optionsWithToken, cleanUpUserMediaOnStop, callback);\n                }\n            };\n\n            if ((status === unauthorizedStatus && ((options.streamToken || options.publishToken) || !options.authFailure)) || status === 'timeout') {\n                that._logger.info('[%s] Attempting to create new streamToken and re-publish after [%s] response', this, unauthorizedStatus);\n\n                var reAuthOptions = _.assign({\n                    isContinuation: true,\n                    authFailure: true\n                }, options);\n\n                delete reAuthOptions.streamToken;\n                delete reAuthOptions.publishToken;\n\n                return getStreamingTokenAndPublish.call(that, userMediaOrUri, reAuthOptions, cleanUpUserMediaOnStop, callback);\n            }\n\n            if (status !== 'ok') {\n                that._logger.warn('[%s] Failure to publish with status [%s]', this, status);\n\n                if (cachedPublisher) {\n                    that._ignoredStreamEnds[cachedPublisher.getStreamId()] = true;\n                }\n\n                return callback(null, {status: status});\n            }\n\n            delete options.authFailure;\n\n            that._publishers[publisher.getStreamId()] = publisher;\n\n            cachedPublisher = publisher;\n\n            var isPublisher = true;\n            var noopCallback = function() {};\n\n            var publisherEndedCallback = _.bind(onPublisherOrStreamEnd, that, noopCallback, retryPublisher, isPublisher);\n\n            if (options.monitor) {\n                var monitorCallback = _.bind(onMonitorCallback, that, options.monitor.callback, retryPublisher);\n\n                publisher.monitor(options.monitor.options || {}, monitorCallback);\n\n                publisherEndedCallback = _.bind(onPublisherOrStreamEnd, that, options.monitor.callback, retryPublisher, isPublisher);\n            }\n\n            publisher.setPublisherEndedCallback(publisherEndedCallback);\n\n            var expressPublisher = createExpressPublisher.call(that, publisher, options.videoElement, cleanUpUserMediaOnStop);\n\n            if (options.videoElement && !hasAlreadyAttachedMedia) {\n                rtc.attachMediaStream(options.videoElement, userMediaOrUri, function(e) {\n                    if (e) {\n                        that._logger.warn('[%s] [%s] Failed to attach publish media stream to video element.', this, publisher.getStreamId(), e);\n\n                        return;\n                    }\n                });\n\n                hasAlreadyAttachedMedia = true;\n            }\n\n            callback(null, {\n                status: 'ok',\n                publisher: expressPublisher\n            });\n        };\n\n        that.waitForOnline(function(error) {\n            if (error) {\n                return callback(error);\n            }\n\n            that._pcastObservable.getValue().publish(streamToken, userMediaOrUri, publishCallback, options.tags, {connectOptions: options.connectOptions});\n        }, options.isContinuation);\n    }\n\n    function subscribeToStream(streamToken, options, callback) {\n        var that = this;\n        var cachedSubsciber = null;\n\n        var handleSubscribe = function(pcast, status, subscriber) {\n            var retrySubscriber = function retrySubscriber(reason) {\n                var retryOptions = _.assign({isContinuation: true}, options);\n\n                that._ignoredStreamEnds[subscriber.getStreamId()] = true;\n\n                subscriber.stop(reason);\n\n                that._logger.warn('[%s] [%s] Stream failure occurred with reason [%s]. Attempting to recover from failure.', this, options.streamId, reason);\n\n                subscribeToStream.call(that, streamToken, retryOptions, callback);\n            };\n\n            if (((!options.skipRetryOnUnauthorized && status === unauthorizedStatus && (options.streamToken || !options.authFailure)) || status === 'timeout') && that._adminApiProxyClient) {\n                that._logger.info('[%s] [%s] Attempting to create new streamToken and re-subscribe after [%s] response', this, options.streamId, unauthorizedStatus);\n\n                var reAuthOptions = _.assign({\n                    isContinuation: true,\n                    authFailure: true\n                }, options);\n\n                delete reAuthOptions.streamToken;\n\n                return that.subscribe(reAuthOptions, callback);\n            }\n\n            if (status === 'streaming-not-ready') {\n                that._logger.warn('[%s] Failure to subscribe with status [%s]. Try again in a few seconds.', this, status);\n\n                return callback(null, {\n                    status: status,\n                    retry: _.bind(retrySubscriber, that, status)\n                });\n            }\n\n            if (status !== 'ok') {\n                that._logger.warn('[%s] Failure to subscribe with status [%s]', this, status);\n\n                if (cachedSubsciber) {\n                    that._ignoredStreamEnds[cachedSubsciber.getStreamId()] = true;\n                }\n\n                return callback(null, {status: status});\n            }\n\n            delete options.authFailure;\n\n            var renderer;\n\n            cachedSubsciber = subscriber;\n\n            if (options.videoElement) {\n                renderer = subscriber.createRenderer();\n\n                renderer.start(options.videoElement);\n            }\n\n            var isPublisher = false;\n            var noopCallback = _.noop;\n            var subscriberEndedCallback = _.bind(onPublisherOrStreamEnd, that, noopCallback, retrySubscriber, isPublisher);\n\n            if (options.monitor) {\n                var monitorCallback = _.bind(onMonitorCallback, that, options.monitor.callback, retrySubscriber);\n\n                subscriber.monitor(options.monitor.options || {}, monitorCallback);\n\n                subscriberEndedCallback = _.bind(onPublisherOrStreamEnd, that, options.monitor.callback, retrySubscriber, isPublisher);\n            }\n\n            subscriber.setStreamEndedCallback(subscriberEndedCallback);\n\n            var expressSubscriber = createExpressSubscriber.call(that, subscriber, renderer);\n            var subscribeResponse = {\n                status: 'ok',\n                mediaStream: expressSubscriber\n            };\n\n            subscriber.setStreamErrorCallback(function(playerRenderer, errorType, error) {\n                if (errorType === 'real-time' && error.message === 'connection-timeout') {\n                    return retrySubscriber.call(that, error.message);\n                }\n\n                if (errorType === 'shaka' && error.severity !== shakaEnums.errorSeverity.critical.id) {\n                    return; // Ignore error\n                }\n\n                var RECOVERABLE = 1;\n\n                if (errorType === 'phenix-player' && error.severity === RECOVERABLE) {\n                    that._logger.warn('[%s] [%s] Recoverable error occurred while playing stream with Express API. Attempting to subscribe again.', this, expressSubscriber.getStreamId(), error);\n\n                    var reAuthOptions = _.assign({isContinuation: true}, options);\n\n                    delete reAuthOptions.streamToken;\n\n                    return that.subscribe(reAuthOptions, callback);\n                }\n\n                that._logger.warn('[%s] [%s] Error occurred while playing stream with Express API. Stopping stream.', this, expressSubscriber.getStreamId(), error);\n\n                expressSubscriber.stop();\n\n                return callback(error);\n            });\n\n            if (renderer) {\n                subscribeResponse.renderer = renderer;\n            }\n\n            callback(null, subscribeResponse);\n        };\n\n        that.waitForOnline(function(error) {\n            if (error) {\n                return callback(error);\n            }\n\n            var subscriberOptions = _.clone(options.subscriberOptions || {});\n\n            if (options.streamId) {\n                subscriberOptions.originStreamId = options.streamId;\n            }\n\n            that._pcastObservable.getValue().subscribe(streamToken, handleSubscribe, subscriberOptions);\n        }, options.isContinuation);\n    }\n\n    function createExpressPublisher(publisher, videoElement, cleanUpUserMediaOnStop) {\n        var that = this;\n        var publisherStop = _.bind(publisher.stop, publisher);\n\n        publisher.stop = function(reason, isInternal) {\n            that._logger.info('[%s] [%s] Stopping publisher with reason [%s]', that, publisher.getStreamId(), reason);\n\n            publisherStop(reason);\n\n            if (videoElement) {\n                videoElement.src = '';\n                videoElement.srcObject = null;\n            }\n\n            if (cleanUpUserMediaOnStop && publisher.getStream() && !isInternal) {\n                var nativeMediaStream = publisher.getStream();\n\n                if (nativeMediaStream) {\n                    nativeMediaStream.getTracks().forEach(function(track) {\n                        track.stop();\n                    });\n                }\n            }\n        };\n\n        publisher.enableAudio = function() {\n            return setStreamAudioTracksState.call(that, publisher, true);\n        };\n\n        publisher.disableAudio = function() {\n            return setStreamAudioTracksState.call(that, publisher, false);\n        };\n\n        publisher.enableVideo = function() {\n            return setStreamVideoTracksState.call(that, publisher, true);\n        };\n\n        publisher.disableVideo = function() {\n            return setStreamVideoTracksState.call(that, publisher, false);\n        };\n\n        // Publisher Ended Callback handled with normal callback route for express\n        publisher.setPublisherEndedCallback = function() {};\n\n        return publisher;\n    }\n\n    function createExpressSubscriber(subscriber, renderer) {\n        var that = this;\n        var subscriberStop = _.bind(subscriber.stop, subscriber);\n\n        subscriber.stop = function(reason) {\n            that._logger.info('[%s] [%s] Stopping subscriber with reason [%s]', that, subscriber, reason);\n\n            if (renderer) {\n                renderer.stop(reason);\n            }\n\n            subscriberStop(reason);\n        };\n\n        subscriber.enableAudio = function() {\n            return setStreamAudioTracksState(subscriber.getStream(), true);\n        };\n\n        subscriber.disableAudio = function() {\n            return setStreamAudioTracksState(subscriber.getStream(), false);\n        };\n\n        subscriber.enableVideo = function() {\n            return setStreamVideoTracksState(subscriber.getStream(), true);\n        };\n\n        subscriber.disableVideo = function() {\n            return setStreamVideoTracksState(subscriber.getStream(), false);\n        };\n\n        // Stream Ended Callback handled with normal callback route for express\n        subscriber.setStreamEndedCallback = function() {};\n\n        return subscriber;\n    }\n\n    function setStreamAudioTracksState(publisher, newState) {\n        var pcast = this.getPCast();\n\n        if (!pcast) {\n            return;\n        }\n\n        var streamId = publisher.getStreamId();\n        var peerConnectionDescription = pcast.getRemoteDescriptionSdp(streamId);\n\n        if (!peerConnectionDescription) {\n            return;\n        }\n\n        var stream = publisher.getStream();\n        var audioIndex = peerConnectionDescription.lastIndexOf('m=audio');\n\n        if (audioIndex < 0) {\n            return;\n        }\n\n        var endIndex = peerConnectionDescription.lastIndexOf('m=video');\n\n        if (endIndex < audioIndex) {\n            endIndex = peerConnectionDescription.length;\n        }\n\n        var trackConfiguration = peerConnectionDescription.substring(\n            audioIndex,\n            endIndex\n        );\n\n        if (trackConfiguration.includes('a=inactive')) {\n            return;\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        setTracksEnabled(stream.getAudioTracks(), newState);\n\n        return newState;\n    }\n\n    function setStreamVideoTracksState(publisher, newState) {\n        var pcast = this.getPCast();\n\n        if (!pcast) {\n            return;\n        }\n\n        var streamId = publisher.getStreamId();\n        var peerConnectionDescription = pcast.getRemoteDescriptionSdp(streamId);\n\n        if (!peerConnectionDescription) {\n            return;\n        }\n\n        var stream = publisher.getStream();\n        var videoIndex = peerConnectionDescription.lastIndexOf('m=video');\n\n        if (videoIndex < 0) {\n            return;\n        }\n\n        var endIndex = peerConnectionDescription.lastIndexOf('m=audio');\n\n        if (endIndex < videoIndex) {\n            endIndex = peerConnectionDescription.length;\n        }\n\n        var trackConfiguration = peerConnectionDescription.substring(\n            videoIndex,\n            endIndex\n        );\n\n        if (trackConfiguration.includes('a=inactive')) {\n            return;\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        setTracksEnabled(stream.getVideoTracks(), newState);\n\n        return newState;\n    }\n\n    function setTracksEnabled(tracks, enabled) {\n        assert.isArray(tracks, 'tracks');\n\n        _.forEach(tracks, function(track) {\n            track.updateState(enabled);\n        });\n    }\n\n    function onMonitorCallback(callback, retry, stream, reason, monitorEvent) { // eslint-disable-line no-unused-vars\n        switch (reason) {\n        case 'camera-track-failure':\n        case 'client-side-failure':\n            callback(null, _.assign({\n                status: reason,\n                retry: _.bind(retry, null, reason)\n            }, monitorEvent));\n\n            // Handle failure event, redo stream\n            break;\n        default:\n            // No failure has occurred, handle monitor event\n            break;\n        }\n    }\n\n    function onPublisherOrStreamEnd(monitorCallback, retry, isPublisher, publisherOrStream, reason, description) {\n        var response = {\n            status: 'stream-ended',\n            reason: reason,\n            description: description\n        };\n\n        if (this._ignoredStreamEnds[publisherOrStream.getStreamId()]) {\n            this._logger.info('[%s] Ignoring stream end due to recovery in progress [%s]', this, publisherOrStream.getStreamId());\n\n            return;\n        }\n\n        switch (reason) {\n        case 'egress-setup-failed': // Bad input params\n        case 'ended': // Normal operation\n        case 'censored': // Forced to stop\n            var endedResponse = {\n                status: reason,\n                reason: reason,\n                description: description\n            };\n\n            if (isPublisher) {\n                endedResponse.publisher = publisherOrStream;\n            } else {\n                endedResponse.mediaStream = publisherOrStream;\n            }\n\n            return monitorCallback(null, endedResponse);\n        case 'custom':\n            // Client ended publisher, do nothing\n            return monitorCallback(null, response);\n        case 'egress-failed':\n        case 'capacity':\n            // Don't inform the client, attempt to re-publish automatically after backoff\n            setTimeout(function() {\n                if (this._disposed) {\n                    return;\n                }\n\n                return retry(reason);\n            }, capacityBackoffTimeout);\n\n            return;\n        case 'failed':\n        case 'maintenance':\n        case 'overload':\n            // Don't inform the client, attempt to re-publish automatically\n            return retry(reason);\n        case 'app-background':\n        default:\n            // Give client option to re-publish\n            response.retry = retry;\n\n            return monitorCallback(null, response);\n        }\n    }\n\n    return PCastExpress;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-http',\n    'phenix-web-disposable'\n], function(_, assert, http, disposable) {\n    'use strict';\n\n    var networkUnavailableCode = 0;\n    var requestMaxTimeout = 20000;\n    var defaultRequestOptions = {\n        timeout: requestMaxTimeout,\n        retryOptions: {\n            backoff: 1.5,\n            delay: 1000,\n            maxAttempts: 3,\n            additionalRetryErrorCodes: [networkUnavailableCode]\n        }\n    };\n    var authenticationDataLocations = {\n        body: {\n            id: 1,\n            name: 'body'\n        },\n        header: {\n            id: 2,\n            name: 'header'\n        }\n    };\n    var defaultEndpointPaths = {\n        createStreamTokenPath: '/stream',\n        createAuthTokenPath: '/auth'\n    };\n    var requestTypes = {\n        auth: {\n            id: 1,\n            name: 'auth'\n        },\n        stream: {\n            id: 2,\n            name: 'stream'\n        }\n    };\n\n    function AdminApiProxyClient() {\n        this._requestHandler = null;\n        this._backendUri = '';\n        this._endpointPaths = defaultEndpointPaths;\n        this._authenticationData = {};\n        this._authenticationDataLocationInPayload = authenticationDataLocations.body.name;\n        this._disposables = new disposable.DisposableList();\n    }\n\n    AdminApiProxyClient.prototype.dispose = function() {\n        return this._disposables.dispose();\n    };\n\n    AdminApiProxyClient.prototype.toString = function() {\n        return 'AdminApiProxyClient[' +\n            'customRequestHandler=' + (!!this._requestHandler).toString() +\n            ',backendUri=' + this._backendUri +\n            ',authenticationDataLocationInPayload=' + this._authenticationDataLocationInPayload +\n            ',customEndpointPaths=' + (this._endpointPaths === defaultEndpointPaths).toString() +\n            ',customAuthenticationData=' + (_.keys(this._authenticationData).length > 0).toString() + ']';\n    };\n\n    AdminApiProxyClient.prototype.getBackendUri = function() {\n        return this._backendUri;\n    };\n\n    AdminApiProxyClient.prototype.setBackendUri = function(backendUri) {\n        assert.isString(backendUri, 'backendUri');\n\n        this._backendUri = backendUri;\n    };\n\n    AdminApiProxyClient.prototype.getEndpointPaths = function() {\n        return _.assign({}, this._endpointPaths);\n    };\n\n    AdminApiProxyClient.prototype.setEndpointPaths = function(endpointPaths) {\n        assert.isObject(endpointPaths, 'endpointPaths');\n\n        if (endpointPaths.createStreamTokenPath) {\n            assert.isStringNotEmpty(endpointPaths.createStreamTokenPath, 'endpointPaths.createStreamTokenPath');\n        }\n\n        if (endpointPaths.createAuthTokenPath) {\n            assert.isStringNotEmpty(endpointPaths.createAuthTokenPath, 'endpointPaths.createAuthTokenPath');\n        }\n\n        this._endpointPaths = _.assign({}, defaultEndpointPaths, endpointPaths);\n    };\n\n    AdminApiProxyClient.prototype.getAuthenticationData = function() {\n        return _.assign({}, this._authenticationData);\n    };\n\n    AdminApiProxyClient.prototype.setAuthenticationData = function(authenticationData) {\n        assert.isObject(authenticationData, 'authenticationData');\n\n        this._authenticationData = authenticationData;\n    };\n\n    AdminApiProxyClient.prototype.getAuthenticationDataLocationInPayload = function() {\n        return this._authenticationDataLocationInPayload;\n    };\n\n    AdminApiProxyClient.prototype.setAuthenticationDataLocationInPayload = function(authenticationDataLocationInPayload) {\n        assert.isValidType(authenticationDataLocationInPayload, authenticationDataLocations, 'authenticationDataLocationInPayload');\n\n        this._authenticationDataLocationInPayload = authenticationDataLocationInPayload;\n    };\n\n    AdminApiProxyClient.prototype.getRequestHandler = function() {\n        return this._requestHandler;\n    };\n\n    AdminApiProxyClient.prototype.setRequestHandler = function(callback) {\n        assert.isFunction(callback, 'callback');\n\n        if (this._backendUri) {\n            throw new Error('Conflicting parameter [backendUri]');\n        }\n\n        if (_.keys(this._authenticationData).length > 0) {\n            throw new Error('Conflicting parameter [authenticationData]');\n        }\n\n        if (this._authenticationDataLocationInPayload !== authenticationDataLocations.body.name) {\n            throw new Error('Conflicting parameter [authenticationDataLocationInPayload]');\n        }\n\n        if (this._endpointPaths !== defaultEndpointPaths) {\n            throw new Error('Conflicting parameter [endpointPaths]');\n        }\n\n        this._requestHandler = callback;\n    };\n\n    AdminApiProxyClient.prototype.createAuthenticationToken = function createAuthenticationToken(callback) {\n        if (this._requestHandler) {\n            return this._requestHandler(requestTypes.auth.name, {}, _.bind(handleOverrideRequestResponse, this, requestTypes.auth.name, callback));\n        }\n\n        if (!this._backendUri) {\n            callback(null, {status: 'unauthorized'});\n\n            return;\n        }\n\n        var requestWithoutCallback = bindAuthDataAndPrepareRequest.call(this, http.postWithRetry, http, this._backendUri + this._endpointPaths.createAuthTokenPath, {}, defaultRequestOptions);\n\n        return requestWithTimeout.call(this, requestWithoutCallback, callback);\n    };\n\n    AdminApiProxyClient.prototype.createStreamTokenForPublishing = function createStreamTokenForPublishing(sessionId, capabilities, callback) {\n        assert.isStringNotEmpty(sessionId, 'sessionId');\n        assert.isObject(capabilities, 'capabilities');\n\n        var data = {\n            sessionId: sessionId,\n            capabilities: capabilities\n        };\n\n        if (this._requestHandler) {\n            return this._requestHandler(requestTypes.stream.name, data, _.bind(handleOverrideRequestResponse, this, requestTypes.stream.name, callback));\n        }\n\n        if (!this._backendUri) {\n            callback(null, {status: 'unauthorized'});\n\n            return;\n        }\n\n        var requestWithoutCallback = bindAuthDataAndPrepareRequest.call(this, http.postWithRetry, http, this._backendUri + this._endpointPaths.createStreamTokenPath, data, defaultRequestOptions);\n\n        return requestWithTimeout.call(this, requestWithoutCallback, callback);\n    };\n\n    AdminApiProxyClient.prototype.createStreamTokenForPublishingToExternal = function createStreamTokenForPublishingToExternal(sessionId, capabilities, streamId, callback) {\n        this.createStreamTokenForSubscribing(sessionId, capabilities, streamId, null, callback);\n    };\n\n    AdminApiProxyClient.prototype.createStreamTokenForSubscribing = function createStreamTokenForSubscribing(sessionId, capabilities, streamId, alternateStreamIds, callback) {\n        assert.isStringNotEmpty(sessionId, 'sessionId');\n        assert.isObject(capabilities, 'capabilities');\n\n        if (!_.isNullOrUndefined(alternateStreamIds)) {\n            assert.isArray(alternateStreamIds, 'additionalStreamIds');\n\n            _.forEach(alternateStreamIds, function(alternateOriginStreamId) {\n                assert.isStringNotEmpty(alternateOriginStreamId, 'alternateOriginStreamId');\n            });\n        }\n\n        var data = {\n            sessionId: sessionId,\n            capabilities: capabilities,\n            originStreamId: streamId\n        };\n\n        if (alternateStreamIds && alternateStreamIds.length > 0) {\n            data.alternateOriginStreamIds = alternateStreamIds;\n        }\n\n        if (this._requestHandler) {\n            return this._requestHandler(requestTypes.stream.name, data, _.bind(handleOverrideRequestResponse, this, requestTypes.stream.name, callback));\n        }\n\n        if (!this._backendUri) {\n            callback(null, {status: 'unauthorized'});\n\n            return;\n        }\n\n        var requestWithoutCallback = bindAuthDataAndPrepareRequest.call(this, http.postWithRetry, http, this._backendUri + this._endpointPaths.createStreamTokenPath, data, defaultRequestOptions);\n\n        return requestWithTimeout.call(this, requestWithoutCallback, callback);\n    };\n\n    function requestWithTimeout(requestWithoutCallback, callback) {\n        var requestTimeoutId = null;\n        var requestDisposable = requestWithoutCallback(_.bind(handleResponse, this, function(error, response) {\n            clearTimeout(requestTimeoutId);\n\n            switch (_.get(error, ['code'])) {\n            case 401:\n                return callback(null, {status: 'unauthorized'});\n            case 404:\n                return callback(null, {status: 'origin-not-found'});\n            case 410:\n                return callback(null, {status: 'origin-ended'});\n            default:\n                return callback(error, response);\n            }\n        }));\n\n        requestTimeoutId = setTimeout(function() {\n            requestDisposable.dispose();\n            callback(new Error('timeout'));\n        }, requestMaxTimeout);\n\n        this._disposables.add(requestDisposable);\n        this._disposables.add(new disposable.Disposable(function() {\n            clearTimeout(requestTimeoutId);\n        }));\n\n        return requestDisposable;\n    }\n\n    function bindAuthDataAndPrepareRequest(method, scope, uri, data, options) {\n        switch (this._authenticationDataLocationInPayload) {\n        case authenticationDataLocations.body.name:\n            data = appendAuthDataTo.call(this, data);\n\n            break;\n        case authenticationDataLocations.header.name:\n            options = appendAuthHeaders.call(this, options);\n\n            break;\n        default:\n            throw new Error('Unsupported Authentication Mode ' + this._authenticationDataLocationInPayload);\n        }\n\n        return _.bind(method, scope, uri, JSON.stringify(data), options);\n    }\n\n    function appendAuthDataTo(data) {\n        return _.assign({}, data, this._authenticationData);\n    }\n\n    function appendAuthHeaders(options) {\n        if (options.headers) {\n            options.headers = _.assign({}, this._authenticationData, options.headers);\n\n            return options;\n        }\n\n        return _.assign({}, {headers: this._authenticationData}, options);\n    }\n\n    function handleResponse(callback, error, response) {\n        if (error) {\n            return callback(error, {});\n        }\n\n        var res = JSON.parse(response.data);\n\n        if (res.status !== 'ok') {\n            return callback(null, {status: res.status || 'status-code-missing'});\n        }\n\n        return callback(null, res);\n    }\n\n    function handleOverrideRequestResponse(type, callback, error, token) {\n        if (!token || error) {\n            return callback(error, {status: 'failed'});\n        }\n\n        var response = {status: 'ok'};\n\n        switch(type) {\n        case requestTypes.auth.name:\n            response.authenticationToken = token;\n\n            break;\n        case requestTypes.stream.name:\n            response.streamToken = token;\n\n            break;\n        default:\n            throw new Error('Unsupported request type ' + type);\n        }\n\n        return callback(error, response);\n    }\n\n    return AdminApiProxyClient;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-disposable',\n    './PCastExpress',\n    '../room/RoomService',\n    './MemberSelector',\n    '../room/Stream',\n    '../room/room.json',\n    '../room/member.json',\n    '../room/stream.json',\n    '../room/track.json',\n    '../streaming/FeatureDetector'\n], function(_, assert, observable, disposable, PCastExpress, RoomService, MemberSelector, Stream, roomEnums, memberEnums, memberStreamEnums, trackEnums, FeatureDetector) {\n    'use strict';\n\n    var defaultStreamWildcardTokenRefreshInterval = 300000;\n    var streamingTypeCapabilities = ['streaming', 'rtmp'];\n\n    function RoomExpress(options) {\n        assert.isObject(options, 'options');\n\n        if (options.pcastExpress) {\n            assert.isObject(options.pcastExpress, 'options.pcastExpress');\n        }\n\n        this._pcastExpress = options.pcastExpress || new PCastExpress(options);\n        this._shouldDisposeOfPCastExpress = !options.pcastExpress;\n        this._roomServices = {};\n        this._externalPublishers = [];\n        this._roomServicePublishers = {};\n        this._activeRoomServices = [];\n        this._publisherDisposables = {};\n        this._logger = this._pcastExpress.getPCast().getLogger();\n        this._disposables = new disposable.DisposableList();\n        this._disposed = false;\n        this._featureDetector = new FeatureDetector(options.features);\n        this._isHandlingTrackChange = false;\n        this._handleStateChangeTimeOut = null;\n\n        var that = this;\n\n        this._pcastExpress.getPCastObservable().subscribe(function(pcast) {\n            if (!pcast) {\n                return;\n            }\n\n            that._logger.info('Resetting Room Express after change in pcast.');\n\n            that._pcastExpress.waitForOnline(function() {\n                var currentPCast = that._pcastExpress.getPCastObservable().getValue();\n\n                if (currentPCast !== pcast) {\n                    return;\n                }\n\n                _.forOwn(that._roomServices, function(roomService) {\n                    roomService.setPCast(pcast);\n                });\n            });\n        });\n    }\n\n    RoomExpress.prototype.dispose = function dispose() {\n        this._disposed = true;\n\n        disposeOfRoomServices.call(this);\n\n        if (this._shouldDisposeOfPCastExpress) {\n            this._pcastExpress.dispose();\n        }\n\n        this._disposables.dispose();\n\n        this._logger.info('Disposed Room Express Instance');\n    };\n\n    RoomExpress.prototype.getPCastExpress = function getPCastExpress() {\n        return this._pcastExpress;\n    };\n\n    // Responsible for creating room. Returns immutable room\n    RoomExpress.prototype.createRoom = function createRoom(options, callback) {\n        assert.isFunction(callback, 'callback');\n        assert.isObject(options.room, 'options.room');\n        assert.isStringNotEmpty(options.room.name, 'options.room.name');\n        assert.isStringNotEmpty(options.room.type, 'options.room.type');\n\n        if (options.room.description) {\n            assert.isStringNotEmpty(options.room.description, 'options.room.description');\n        }\n\n        var roomDescription = options.room.description || getDefaultRoomDescription(options.room.type);\n\n        createRoomService.call(this, null, null, function(error, roomServiceResponse) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (roomServiceResponse.status !== 'ok') {\n                return callback(null, roomServiceResponse);\n            }\n\n            var roomService = roomServiceResponse.roomService;\n            var roomToCreate = _.assign({}, options.room);\n\n            if (!roomToCreate.description) {\n                roomToCreate.description = roomDescription;\n            }\n\n            roomService.createRoom(roomToCreate, function(error, roomResponse) {\n                if (error) {\n                    return callback(error);\n                }\n\n                // Don't return room service. Not in room. Room returned is immutable\n                roomService.stop('create');\n\n                return callback(null, roomResponse);\n            });\n        });\n    };\n\n    RoomExpress.prototype.joinRoom = function joinRoom(options, joinRoomCallback, membersChangedCallback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(joinRoomCallback, 'joinRoomCallback');\n        assert.isStringNotEmpty(options.role, 'options.role');\n\n        if (membersChangedCallback) {\n            assert.isFunction(membersChangedCallback, 'membersChangedCallback');\n        }\n\n        if (options.screenName) {\n            assert.isStringNotEmpty(options.screenName, 'options.screenName');\n        }\n\n        if (options.roomId) {\n            assert.isStringNotEmpty(options.roomId, 'options.roomId');\n        }\n\n        if (options.alias) {\n            assert.isStringNotEmpty(options.alias, 'options.alias');\n        }\n\n        if (options.streams) {\n            assert.isArray(options.streams, 'options.streams');\n        }\n\n        if (options.streamToken) {\n            assert.isStringNotEmpty(options.streamToken, 'options.streamToken');\n\n            if (options.roomId) {\n                this._logger.warn('Trying to join room with both streamToken and roomId. Please only use streamToken.');\n            }\n\n            if (options.alias) {\n                this._logger.warn('Trying to join room with both streamToken and alias. Please only use streamToken.');\n            }\n\n            var roomId = this._pcastExpress.parseRoomOrChannelIdFromToken(options.streamToken);\n            var alias = this._pcastExpress.parseRoomOrChannelAliasFromToken(options.streamToken);\n\n            if (roomId) {\n                options.roomId = roomId;\n                this._logger.info('Room ID is set to [%s] from streamToken [%s]', roomId, options.streamToken);\n            }\n\n            if (alias) {\n                options.alias = alias;\n                this._logger.info('Alias is set to [%s] from streamToken [%s]', alias, options.streamToken);\n            }\n        }\n\n        var that = this;\n        var joinRoomWithPCast = function(pcast) {\n            if (!pcast) {\n                return;\n            }\n\n            joinRoomWithOptions.call(that, options, function(error, response) {\n                var joinRoomResponse = response;\n\n                if (joinRoomResponse && joinRoomResponse.roomService) {\n                    var leaveRoom = joinRoomResponse.roomService.leaveRoom;\n\n                    joinRoomResponse.roomService.leaveRoom = function(callback, isForceLeaveRoom) {\n                        if (subscription && pcast.getObservableStatus() !== 'offline') {\n                            subscription.dispose();\n                        }\n\n                        leaveRoom(callback, isForceLeaveRoom);\n                    };\n                }\n\n                joinRoomCallback(error, response);\n            }, membersChangedCallback);\n        };\n\n        if (this._pcastExpress.getPCastObservable()) {\n            return joinRoomWithPCast(this._pcastExpress.getPCastObservable());\n        }\n\n        var subscription = this._pcastExpress.getPCastObservable().subscribe(joinRoomWithPCast);\n    };\n\n    RoomExpress.prototype.publishToRoom = function publishToRoom(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n        assert.isObject(options.room, 'options.room');\n\n        var adminApi = this._pcastExpress.getAdminAPI();\n\n        if (options.streamUri) {\n            assert.isStringNotEmpty(options.streamUri, 'options.streamUri');\n        } else if (options.mediaConstraints) {\n            assert.isObject(options.mediaConstraints, 'options.mediaConstraints');\n        } else {\n            assert.isObject(options.userMediaStream, 'options.userMediaStream');\n        }\n\n        if (options.videoElement) {\n            assert.isObject(options.videoElement, 'options.videoElement');\n        }\n\n        if (options.screenName) {\n            assert.isStringNotEmpty(options.screenName, 'options.screenName');\n        }\n\n        if (options.tags) {\n            assert.isArray(options.tags, 'options.tags');\n        }\n\n        if (options.streamInfo) {\n            assert.isObject(options.streamInfo, 'options.streamInfo');\n        }\n\n        if (options.streamToken) {\n            assert.isStringNotEmpty(options.streamToken, 'options.streamToken');\n            this._logger.warn('`options.streamToken` is deprecated please use `options.publishToken`.');\n        }\n\n        if (options.publishToken && options.capabilities) {\n            throw new Error('Do not pass `options.capabilities` with `options.publishToken`. `options.publishToken` should include capabilities in the token.');\n        }\n\n        if (options.publishToken && options.streamToken) {\n            throw new Error('Do not pass `options.streamToken` with `options.publishToken`. Please use `options.publishToken`.');\n        }\n\n        if (options.streamToken && options.capabilities) {\n            throw new Error('Do not pass `options.capabilities` with `options.streamToken`. `options.streamToken` should include capabilities in the token.');\n        }\n\n        if (!options.streamToken && !options.publishToken && !adminApi) {\n            throw new Error('Pass `options.publishToken`, or set adminApiProxyClient on initiating room express');\n        }\n\n        if (options.viewerStreamSelectionStrategy) {\n            assert.isStringNotEmpty(options.viewerStreamSelectionStrategy, 'options.viewerStreamSelectionStrategy');\n        }\n\n        if (options.capabilities) {\n            assert.isArray(options.capabilities, 'options.capabilities');\n        }\n\n        if (_.isUndefined(options.enableWildcardCapability)) {\n            options.enableWildcardCapability = !(options.publishToken || options.streamToken);\n        }\n\n        assert.isValidType(options.streamType, memberStreamEnums.types, 'options.streamType');\n        assert.isValidType(options.memberRole, memberEnums.roles, 'options.memberRole');\n        assert.isBoolean(options.enableWildcardCapability, 'options.enableWildcardCapability');\n\n        var that = this;\n        var screenName = options.screenName || _.uniqueId();\n        var roomId = options.room.roomId;\n        var alias = options.room.alias;\n\n        if (options.publishToken || options.streamToken) {\n            roomId = this._pcastExpress.parseRoomOrChannelIdFromToken(options.publishToken || options.streamToken);\n            alias = this._pcastExpress.parseRoomOrChannelAliasFromToken(options.publishToken || options.streamToken);\n\n            this._logger.info('[%s] [%s] RoomId and Alias read from token [%s]', roomId, alias, options.publishToken || options.streamToken);\n        }\n\n        var activeRoomService = findActiveRoom.call(that, roomId, alias);\n\n        var publishToActiveRoom = function publishToActiveRoom(room, joinRoomResponse) {\n            var publishOptions = _.assign({\n                monitor: {\n                    callback: _.bind(monitorSubsciberOrPublisher, that, callback),\n                    options: {conditionCountForNotificationThreshold: 8}\n                },\n                streamInfo: {}\n            }, options);\n\n            if (room.getObservableType().getValue() === roomEnums.types.channel.name) {\n                publishOptions.tags = ['channelId:' + room.getRoomId(), 'channelAlias:' + room.getObservableAlias().getValue()].concat(publishOptions.tags || []);\n            } else {\n                publishOptions.tags = ['roomId:' + room.getRoomId(), 'roomAlias:' + room.getObservableAlias().getValue()].concat(publishOptions.tags || []);\n            }\n\n            if (options.streamUri) {\n                var remoteOptions = _.assign({connectOptions: []}, publishOptions);\n                var hasRoomConnectOptions = _.find(remoteOptions.connectOptions, function(option) {\n                    return _.startsWith(option, 'room-id');\n                });\n\n                if (!hasRoomConnectOptions) {\n                    remoteOptions.connectOptions = remoteOptions.connectOptions.concat([\n                        'room-id=' + room.getRoomId(),\n                        'member-role=' + options.memberRole,\n                        'member-stream-type=' + options.streamType,\n                        'screen-name=' + screenName\n                    ]);\n                }\n\n                if (options.enableWildcardCapability) {\n                    remoteOptions.connectOptions.concat([\n                        'member-stream-token-type=Wildcard',\n                        'member-stream-token-refresh-interval=' + defaultStreamWildcardTokenRefreshInterval\n                    ]);\n                }\n\n                var callbackWithNoRoomService = function(error, response) {\n                    callback(error, response ? _.assign({roomService: null}, response) : response);\n                };\n\n                return that._pcastExpress.publishRemote(remoteOptions, callbackWithNoRoomService);\n            }\n\n            var callbackWithRoomService = function(error, response) {\n                callback(error, response ? _.assign({roomService: joinRoomResponse.roomService}, response) : response);\n            };\n\n            publishAndUpdateSelf.call(that, publishOptions, room, callbackWithRoomService);\n        };\n\n        if (activeRoomService) {\n            var activeRoom = activeRoomService.getObservableActiveRoom().getValue();\n\n            publishToActiveRoom(activeRoom, {roomService: activeRoomService});\n\n            return;\n        }\n\n        var joinRoomAsPresenterOptions = _.assign({}, options, {\n            role: memberEnums.roles.audience.name,\n            roomId: roomId,\n            alias: alias\n        });\n\n        joinRoomWithOptions.call(this, joinRoomAsPresenterOptions, function joinRoomCallback(error, joinRoomWithOptionsResponse) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (joinRoomWithOptionsResponse.status !== 'ok') {\n                return callback(null, joinRoomWithOptionsResponse);\n            }\n\n            var activeRoom = joinRoomWithOptionsResponse.roomService.getObservableActiveRoom().getValue();\n            publishToActiveRoom(activeRoom, joinRoomWithOptionsResponse);\n        }, function membersChangedCallback() {\n            return null;\n        });\n    };\n\n    RoomExpress.prototype.publishScreenToRoom = function publishScreenToRoom(options, callback) {\n        var publishScreenOptions = _.assign({mediaConstraints: {screen: true}}, options);\n\n        this.publishToRoom(publishScreenOptions, callback);\n    };\n\n    RoomExpress.prototype.subscribeToMemberStream = function(memberStream, options, callback, defaultFeatureIndex) {\n        var capabilitiesFromStreamToken;\n        var that = this;\n\n        assert.isObject(memberStream, 'memberStream');\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        defaultFeatureIndex = _.isNumber(defaultFeatureIndex) ? defaultFeatureIndex : 0;\n\n        if (options.capabilities) {\n            throw new Error('subscribeToMemberStream options.capabilities is deprecated. Please use the constructor features option');\n        }\n\n        if (options.streamToken) {\n            capabilitiesFromStreamToken = getCapabilitiesFromTokenIfAble.call(that, options.streamToken);\n\n            if (!capabilitiesFromStreamToken) {\n                that._logger.warn('Failed to parse the `streamToken` [%s]', options.streamToken);\n\n                return callback(new Error('Bad `streamToken`'), {status: 'bad-token'});\n            }\n        }\n\n        var streamUri = memberStream.getUri();\n        var streamId = memberStream.getPCastStreamId();\n        var streamInfo = memberStream.getInfo();\n        var isScreen = _.get(streamInfo, ['isScreen'], false);\n        var streamToken = null;\n        var capabilities = streamInfo.capabilities || buildCapabilitiesFromPublisherWildcardTokens(streamUri) || [];\n        var publisherCapabilities = capabilitiesFromStreamToken || capabilities;\n        var preferredFeature = this._featureDetector.getPreferredFeatureFromPublisherCapabilities(publisherCapabilities);\n        var preferredFeatureCapability = FeatureDetector.mapFeatureToPCastCapability(preferredFeature);\n        var subscriberCapabilities = preferredFeatureCapability ? [preferredFeatureCapability] : [];\n        var featureCapabilities = this._featureDetector.getFeaturePCastCapabilities();\n        var isUsingDeprecatedSdk = false;\n\n        if (!streamId) {\n            this._logger.error('Invalid Member Stream. Unable to parse streamId from uri');\n\n            throw new Error('Invalid Member Stream. Unable to parse streamId from uri');\n        }\n\n        // TODO(dy) Remove backward compatibility when all publisher clients adapt to providing capabilities.\n        if (!_.hasIndexOrKey(streamInfo, 'capabilities')) {\n            if (!preferredFeature) {\n                var capability = _.get(featureCapabilities, [defaultFeatureIndex]);\n\n                if (!capability && defaultFeatureIndex >= featureCapabilities.length) {\n                    return callback(null, {status: 'no-supported-features'});\n                }\n\n                subscriberCapabilities = capability ? [capability] : [];\n                preferredFeature = capability ? _.get(FeatureDetector.mapPCastCapabilityToFeatures(capability), [0]) : null;\n            }\n\n            if (!streamInfo.streamTokenForLiveStream && preferredFeatureCapability === 'streaming') {\n                this._logger.warn('Streaming is not available for stream [%].', streamId);\n\n                return callback(null, {status: 'streaming-not-available'});\n            }\n\n            streamToken = parseStreamTokenFromStreamUri(streamUri, subscriberCapabilities);\n            isUsingDeprecatedSdk = true;\n        } else {\n            if (!preferredFeature) {\n                this._logger.warn('Unable to find supported feature. Publisher capabilities [%s]. Requested feature capabilities [%s]', streamInfo.capabilities, featureCapabilities);\n\n                return callback(null, {status: 'unsupported-features'});\n            }\n\n            streamToken = getStreamTokenForFeature(streamUri, preferredFeature);\n        }\n\n        this._logger.info('Subscribing to member stream with feature [%s] and pre-generated token [%s]', preferredFeature, !!streamToken);\n\n        var subscribeOptions = _.assign({}, {\n            streamId: streamId,\n            streamToken: streamToken,\n            capabilities: subscriberCapabilities\n        }, options);\n        var disposables = new disposable.DisposableList();\n\n        subscribeToMemberStream.call(this, subscribeOptions, isScreen, function(error, response) {\n            disposables.dispose();\n\n            if (response && response.status === 'ok' && response.mediaStream && response.mediaStream.getStream()) {\n                disposables.add(memberStream.getObservableAudioState().subscribe(function(state) {\n                    var monitor = response.mediaStream.getMonitor();\n                    var tracks = response.mediaStream.getStream().getAudioTracks();\n\n                    if (monitor && tracks.length === 1) {\n                        monitor.setMonitorTrackState(tracks[0], state === trackEnums.states.trackEnabled.name);\n                    }\n                }, {initial: 'notify'}));\n                disposables.add(memberStream.getObservableVideoState().subscribe(function(state) {\n                    var monitor = response.mediaStream.getMonitor();\n                    var tracks = response.mediaStream.getStream().getVideoTracks();\n\n                    if (monitor && tracks.length === 1) {\n                        monitor.setMonitorTrackState(tracks[0], state === trackEnums.states.trackEnabled.name);\n                    }\n                }, {initial: 'notify'}));\n            }\n\n            if (error && parseInt(error.category) === 6) {\n                return callback(error, {status: 'device-insecure'});\n            }\n\n            // TODO(dy) Remove backward compatibility when all publisher clients adapt to providing capabilities.\n            if (response && (response.status === 'failed' || response.status === 'streaming-not-available') && isUsingDeprecatedSdk && defaultFeatureIndex < featureCapabilities.length) {\n                that._logger.info('Attempting to subscribe to member stream with next available feature after failure');\n\n                return that.subscribeToMemberStream(memberStream, options, callback, defaultFeatureIndex + 1);\n            }\n\n            var responseWithOriginStreamId = _.assign({originStreamId: streamId}, response);\n\n            callback(error, responseWithOriginStreamId);\n        });\n    };\n\n    function getCapabilitiesFromTokenIfAble(streamToken) {\n        var that = this;\n\n        try {\n            var capabilitiesFromStreamToken = that._pcastExpress.parseCapabilitiesFromToken(streamToken);\n\n            return capabilitiesFromStreamToken;\n        } catch (e) {\n            return;\n        }\n    }\n\n    function disposeOfRoomServices() {\n        _.forOwn(this._roomServicePublishers, function(publishers) {\n            _.forEach(publishers, function(publisher) {\n                publisher.stop('dispose');\n            });\n        });\n        _.forOwn(this._roomServices, function(roomService) {\n            roomService.stop('dispose');\n        });\n\n        this._roomServicePublishers = {};\n        this._externalPublishers = [];\n        this._roomServices = {};\n        this._activeRoomServices = [];\n    }\n\n    function createRoomService(roomId, alias, callback) {\n        var that = this;\n        var uniqueId = _.uniqueId();\n\n        this._pcastExpress.waitForOnline(function(error) {\n            if (error) {\n                return callback(error);\n            }\n\n            var activeRoomService = findActiveRoom.call(that, roomId, alias);\n\n            if (activeRoomService) {\n                that._logger.info('Reusing room service for room [%s]/[%s]', roomId, alias);\n\n                return callback(null, {\n                    status: 'ok',\n                    roomService: activeRoomService\n                });\n            }\n\n            that._roomServices[uniqueId] = new RoomService(that._pcastExpress.getPCast());\n\n            var expressRoomService = createExpressRoomService.call(that, that._roomServices[uniqueId], uniqueId);\n\n            that._logger.info('Creating room service for room [%s]/[%s]', roomId, alias);\n\n            callback(null, {\n                status: 'ok',\n                roomService: expressRoomService\n            });\n        });\n    }\n\n    function findActiveRoom(roomId, alias) {\n        return _.find(this._activeRoomServices, function(roomService) {\n            var activeRoom = roomService.getObservableActiveRoom().getValue();\n\n            return activeRoom && (activeRoom.getRoomId() === roomId || activeRoom.getObservableAlias().getValue() === alias);\n        });\n    }\n\n    function createExpressRoomService(roomService, uniqueId) {\n        var that = this;\n        var roomServiceStop = roomService.stop;\n        var roomServiceLeaveRoom = roomService.leaveRoom;\n\n        roomService.stop = function() {\n            roomServiceStop.apply(roomService, arguments);\n\n            delete that._roomServices[uniqueId];\n        };\n\n        roomService.leaveRoom = function leaveRoom(callback, isForceLeaveRoom) {\n            var room = roomService.getObservableActiveRoom().getValue();\n\n            roomServiceLeaveRoom.call(roomService, function(error, response) {\n                if (error) {\n                    roomService.stop('leave-room-failure');\n\n                    return callback(error);\n                }\n\n                if (response.status !== 'ok' && response.status !== 'not-in-room') {\n                    return callback(null, response);\n                }\n\n                that._logger.info('Successfully disposed Express Room Service [%s]', room ? room.getRoomId() : 'Uninitialized');\n\n                roomService.stop('leave-room');\n\n                return callback(null, response);\n            }, isForceLeaveRoom);\n        };\n\n        return roomService;\n    }\n\n    function joinRoomWithOptions(options, joinRoomCallback, membersChangedCallback) {\n        var that = this;\n        var role = options.role;\n        var screenName = options.screenName || _.uniqueId();\n\n        createRoomService.call(that, options.roomId, options.alias, function(error, roomServiceResponse) {\n            if (error) {\n                return joinRoomCallback(error);\n            }\n\n            if (roomServiceResponse.status !== 'ok') {\n                return joinRoomCallback(null, roomServiceResponse);\n            }\n\n            var roomService = roomServiceResponse.roomService;\n            var activeRoomObservable = roomService.getObservableActiveRoom();\n            var activeRoom = activeRoomObservable.getValue();\n            var membersSubscription = null;\n            var setupMembersSubscription = function setupMembersSubscription() {\n                var room = activeRoomObservable.getValue();\n\n                if (!room) {\n                    that._logger.warn('Unable to setup members subscription. Not in room.');\n\n                    return;\n                }\n\n                that._logger.info('Setup member subscription for room [%s]', room.getRoomId());\n\n                membersSubscription = room.getObservableMembers().subscribe(membersChangedCallback, {initial: 'notify'});\n\n                that._disposables.add(activeRoomObservable.subscribe(function(newRoom) {\n                    if (membersSubscription) {\n                        membersChangedCallback([]);\n                        membersSubscription.dispose();\n                        membersSubscription = null;\n                    }\n\n                    if (!newRoom) {\n                        return;\n                    }\n\n                    membersSubscription = newRoom.getObservableMembers().subscribe(membersChangedCallback, {initial: 'notify'});\n                }));\n            };\n\n            if (!activeRoom) {\n                roomService.start(role, screenName);\n            }\n\n            if (options.streams && options.streams.length > 0) {\n                var stream = options.streams[0]; // TODO(dy) support multiple streams\n\n                if (options.streamsWildcardTokenCapabilities && !_.includes(options.streams[0].uri, Stream.getPCastPrefix())) {\n                    options.streams[0].uri = Stream.getPCastPrefix() + options.streams[0].uri;\n                    that._externalPublishers.push(options.streams[0].uri);\n                }\n\n                if (options.streamsWildcardTokenCapabilities && activeRoom && !_.includes(stream.uri, 'streamToken')) {\n                    return createViewerStreamTokensAndUpdateSelf.call(that, options, stream, activeRoom, function(error, response) {\n                        joinRoomCallback(error, _.assign({roomService: roomService}, response));\n\n                        if (membersChangedCallback) {\n                            return setupMembersSubscription();\n                        }\n                    });\n                }\n\n                var roleToJoin = options.streamsWildcardTokenCapabilities && !activeRoom && !_.includes(stream.uri, 'streamToken') ? memberEnums.roles.audience.name : options.role;\n\n                updateSelfStreamsAndRole.call(that, options.streams, roleToJoin, roomService, function(error) {\n                    if (error) {\n                        return joinRoomCallback(error);\n                    }\n                });\n            }\n\n            if (activeRoom) {\n                joinRoomCallback(null, {\n                    status: 'ok',\n                    roomService: roomService\n                });\n\n                if (membersChangedCallback) {\n                    setupMembersSubscription();\n                }\n\n                return;\n            }\n\n            roomService.enterRoom(options.roomId, options.alias, function(error, roomResponse) {\n                if (error) {\n                    roomService.stop('enter-room-failure');\n\n                    return joinRoomCallback(error);\n                }\n\n                if (roomResponse.status === 'not-found') {\n                    roomService.stop('enter-room-failure');\n\n                    return joinRoomCallback(null, {status: 'room-not-found'});\n                }\n\n                if (roomResponse.status !== 'ok' && roomResponse.status !== 'already-in-room') {\n                    roomService.stop('enter-room-failure');\n\n                    return joinRoomCallback(null, roomResponse);\n                }\n\n                var room = roomResponse.room;\n                var stream = _.get(options, ['streams', 0]); // TODO(dy) support multiple streams\n\n                that._activeRoomServices.push(roomService);\n\n                if (options.streamsWildcardTokenCapabilities && stream && !_.includes(stream.uri, 'streamToken')) {\n                    return createViewerStreamTokensAndUpdateSelf.call(that, options, stream, room, function(error, response) {\n                        joinRoomCallback(error, _.assign({roomService: roomService}, response));\n\n                        if (membersChangedCallback) {\n                            return setupMembersSubscription();\n                        }\n                    });\n                }\n\n                joinRoomCallback(null, {\n                    status: 'ok',\n                    roomService: roomService\n                });\n\n                if (membersChangedCallback) {\n                    return setupMembersSubscription();\n                }\n            });\n        });\n    }\n\n    function subscribeToMemberStream(subscribeOptions, isScreen, callback) {\n        var that = this;\n\n        var count = 0;\n        var handleSubscribe = function(error, response) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (response.status !== 'ok' && response.status !== 'streaming-not-ready') {\n                return callback(null, response);\n            }\n\n            count++;\n\n            if (response.status === 'streaming-not-ready' && count < 3) {\n                var retryTimeout = count * count * 1000;\n\n                that._logger.info('Waiting for [%s] ms before retrying after [streaming-not-ready] status.', retryTimeout);\n\n                var timeoutId = setTimeout(response.retry, retryTimeout);\n\n                that._disposables.add(new disposable.Disposable(function() {\n                    clearTimeout(timeoutId);\n                }));\n\n                return;\n            } else if (response.status === 'streaming-not-ready' && count >= 3) {\n                return callback(null, {status: response.status});\n            }\n\n            var subscribeResponse = _.assign({}, response, {status: 'ok'});\n\n            if (count > 1) {\n                subscribeResponse.reason = 'stream-failure-recovered';\n\n                return callback(null, subscribeResponse);\n            }\n\n            callback(null, subscribeResponse);\n        };\n\n        if (isScreen) {\n            return that._pcastExpress.subscribeToScreen(subscribeOptions, handleSubscribe);\n        }\n\n        return that._pcastExpress.subscribe(subscribeOptions, handleSubscribe);\n    }\n\n    function publishAndUpdateSelf(options, room, callback) {\n        var that = this;\n        var publisher;\n        var refreshTokenIntervalId;\n        var callbackWithPublisher = function(error, response) {\n            callback(error, response ? _.assign({publisher: publisher}, response) : response);\n        };\n\n        var handlePublish = function(error, response) {\n            if (refreshTokenIntervalId && publisher) {\n                clearInterval(refreshTokenIntervalId);\n            }\n\n            if (error) {\n                return callbackWithPublisher(error);\n            }\n\n            if (response.status !== 'ok') {\n                return callbackWithPublisher(null, response);\n            }\n\n            addPublisher.call(that, response.publisher, room);\n            removePublisher.call(that, publisher, room);\n\n            publisher = response.publisher;\n\n            that._publisherDisposables[publisher.getStreamId()] = new disposable.DisposableList();\n\n            var publisherStop = _.bind(publisher.stop, publisher);\n\n            publisher.stop = function() {\n                clearInterval(refreshTokenIntervalId);\n\n                removePublisher.call(that, publisher, room);\n\n                var streamsAfterStop = mapNewPublisherStreamToMemberStreams.call(that, null, room);\n                var roomService = findActiveRoom.call(that, room.getRoomId());\n                var publisherDisposable = that._publisherDisposables[publisher.getStreamId()];\n\n                if (publisherDisposable) {\n                    publisherDisposable.dispose();\n\n                    delete that._publisherDisposables[publisher.getStreamId()];\n                }\n\n                publisherStop.apply(publisher, arguments);\n\n                if (!roomService) {\n                    return;\n                }\n\n                updateSelfStreamsAndRoleAndEnterRoomIfNecessary.call(that, streamsAfterStop, streamsAfterStop.length === 0 ? memberEnums.roles.audience.name : options.memberRole, roomService, room, options, function(error) {\n                    if (error) {\n                        return callbackWithPublisher(error);\n                    }\n                });\n            };\n\n            listenForTrackStateChange.call(that, publisher, room, callbackWithPublisher);\n\n            if (options.enableWildcardCapability) {\n                refreshTokenIntervalId = setInterval(function() {\n                    that._logger.info('Refresh wildcard viewer stream token for [%s] interval of [%s] has expired. Creating new token.',\n                        publisher.getStreamId(), defaultStreamWildcardTokenRefreshInterval);\n\n                    var activeRoomService = findActiveRoom.call(that, room.getRoomId(), room.getObservableAlias().getValue());\n                    var activeRoom = activeRoomService ? activeRoomService.getObservableActiveRoom().getValue() : room;\n\n                    createOptionalViewerStreamTokensAndUpdateSelf.call(that, options, publisher, activeRoom, function ignoreSuccess(error, response) {\n                        if (error || response.status !== 'ok') {\n                            callbackWithPublisher(error, response);\n                        }\n                    });\n                }, defaultStreamWildcardTokenRefreshInterval);\n\n                that._disposables.add(new disposable.Disposable(function() {\n                    clearInterval(refreshTokenIntervalId);\n                }));\n            }\n\n            createOptionalViewerStreamTokensAndUpdateSelf.call(that, options, response.publisher, room, callbackWithPublisher);\n        };\n\n        if (_.get(options, ['mediaConstraints', 'screen'], false)) {\n            _.set(options, ['streamInfo', 'isScreen'], true);\n\n            return this._pcastExpress.publishScreen(options, handlePublish);\n        }\n\n        this._pcastExpress.publish(options, handlePublish);\n    }\n\n    function addPublisher(publisher, room) {\n        if (!this._roomServicePublishers[room.getRoomId()]) {\n            this._roomServicePublishers[room.getRoomId()] = [];\n        }\n\n        this._roomServicePublishers[room.getRoomId()].push(publisher);\n    }\n\n    function removePublisher(publisher, room) {\n        if (!this._roomServicePublishers[room.getRoomId()] || !publisher) {\n            return;\n        }\n\n        this._roomServicePublishers[room.getRoomId()] = _.filter(this._roomServicePublishers[room.getRoomId()], function(roomPublisher) {\n            return roomPublisher.getStreamId() !== publisher.getStreamId();\n        });\n    }\n\n    function createOptionalViewerStreamTokensAndUpdateSelf(options, publisher, room, callback) {\n        var that = this;\n        var streamType = options.streamType;\n        var streamInfo = options.streamInfo;\n        var capabilities = [];\n\n        if (options.streamToken) {\n            var capabilitiesFromStreamToken = getCapabilitiesFromTokenIfAble.call(that, options.streamToken);\n\n            if (!capabilitiesFromStreamToken) {\n                return callback(new Error('Bad `streamToken`'), {status: 'bad-token'});\n            }\n\n            capabilities = capabilitiesFromStreamToken;\n        } else {\n            capabilities = options.capabilities;\n        }\n\n        var publisherStream = mapStreamToMemberStream(publisher, streamType, streamInfo, capabilities);\n\n        if (!options.enableWildcardCapability) {\n            var activeRoomService = findActiveRoom.call(this, room.getRoomId(), room.getObservableAlias().getValue());\n            var updateSelfOptions = _.assign({}, options, {streams: mapNewPublisherStreamToMemberStreams.call(this, publisherStream, room)});\n\n            return updateSelfStreamsAndRoleAndEnterRoomIfNecessary.call(this, updateSelfOptions.streams, updateSelfOptions.memberRole, activeRoomService, room, updateSelfOptions, callback);\n        }\n\n        return createViewerStreamTokensAndUpdateSelf.call(this, options, publisherStream, room, callback);\n    }\n\n    function createViewerStreamTokensAndUpdateSelf(options, publisherStream, room, callback) {\n        var that = this;\n        var composeWithAdditionalStreams = options.viewerStreamSelectionStrategy === 'high-availability' && room.getObservableType().getValue() === roomEnums.types.channel.name;\n        var additionalStreamIds = [];\n        var handleJoinRoomCallback = callback;\n        var publisherStreamId = Stream.parsePCastStreamIdFromStreamUri(_.get(publisherStream, 'uri', ''));\n        var protocol = that.getPCastExpress().getPCast().getProtocol();\n        var sessionId = protocol ? protocol.getSessionId() : '';\n        var disposables = that._publisherDisposables[publisherStreamId];\n        var disposable;\n\n        if (!_.includes(publisherStream, 'capabilities')) {\n            if (options.streamToken) {\n                var capabilitiesFromStreamToken = getCapabilitiesFromTokenIfAble.call(that, options.streamToken);\n\n                if (!capabilitiesFromStreamToken) {\n                    return callback(new Error('Bad `streamToken`'), {status: 'bad-token'});\n                }\n\n                publisherStream = addStreamInfo(publisherStream, 'capabilities', capabilitiesFromStreamToken.join(','));\n            } else {\n                publisherStream = addStreamInfo(publisherStream, 'capabilities', options.capabilities.join(','));\n            }\n        }\n\n        if (composeWithAdditionalStreams) {\n            var membersWithSameContent = MemberSelector.getSimilarMembers(options.screenName, sessionId, room.getObservableMembers().getValue());\n\n            additionalStreamIds = getValidStreamIds(membersWithSameContent);\n\n            handleJoinRoomCallback = function(error, response) {\n                callback(error, response);\n\n                var roomService = _.get(response, 'roomService', findActiveRoom.call(that, room.getRoomId(), room.getObservableAlias().getValue()));\n\n                if (error || response.status !== 'ok' || disposable || !roomService) {\n                    return;\n                }\n\n                var activeRoom = roomService.getObservableActiveRoom().getValue();\n\n                disposable = activeRoom.getObservableMembers().subscribe(function(members) {\n                    var self = roomService.getSelf();\n                    var selfSessionId = self ? self.getSessionId() : '';\n                    var newMembersWithSameContent = MemberSelector.getSimilarMembers(options.screenName, selfSessionId, members);\n                    var newAdditionalStreamIds = getValidStreamIds(newMembersWithSameContent);\n                    var areTheSame = newAdditionalStreamIds.length === additionalStreamIds.length && _.reduce(newAdditionalStreamIds, function(areAllPreviousTheSame, streamId) {\n                        return areAllPreviousTheSame ? _.includes(additionalStreamIds, streamId) : areAllPreviousTheSame;\n                    }, true);\n                    var selfStreams = self ? self.getObservableStreams().getValue() : [];\n                    var publishedSelfStream = _.find(selfStreams, function(stream) {\n                        return stream.getPCastStreamId() === publisherStreamId;\n                    });\n\n                    if (!publishedSelfStream) {\n                        disposable.dispose();\n                        disposable = null;\n\n                        return;\n                    }\n\n                    if (areTheSame) {\n                        return;\n                    }\n\n                    that._logger.debug('Members with similar content to stream [%s] have changed. Generating new wildcard viewer token', publisherStreamId);\n\n                    disposable.dispose();\n                    disposable = null;\n\n                    createViewerStreamTokensAndUpdateSelf.call(that, options, publisherStream, activeRoom, function ignoreSuccess(error, response) {\n                        if (error || response.status !== 'ok') {\n                            callback(error, response);\n                        }\n                    });\n                });\n\n                if (disposables) {\n                    disposables.add(disposable);\n                }\n            };\n        }\n\n        return generateAllStreamTokensAndCreateStream.call(this, options.capabilities, publisherStreamId, additionalStreamIds, publisherStream, function(error, response) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (response.status !== 'ok') {\n                return callback(null, response);\n            }\n\n            var activeRoomService = findActiveRoom.call(that, room.getRoomId(), room.getObservableAlias().getValue());\n            var updateSelfOptions = _.assign({}, options, {streams: mapNewPublisherStreamToMemberStreams.call(that, publisherStream, room)});\n\n            return updateSelfStreamsAndRoleAndEnterRoomIfNecessary.call(that, updateSelfOptions.streams, updateSelfOptions.memberRole, activeRoomService, room, updateSelfOptions, handleJoinRoomCallback);\n        });\n    }\n\n    function generateAllStreamTokensAndCreateStream(publisherCapabilities, streamId, additionalStreamIds, stream, callback) {\n        var generateStreamTokenRequests = [];\n        var numberOfCompletedRequests = 0;\n        var requestCancelled = false;\n        var disposeOfRequests = function() {\n            _.forEach(generateStreamTokenRequests, function(disposable) {\n                disposable.dispose();\n            });\n        };\n\n        var completedRequestsCallback = function(error, response) {\n            if (requestCancelled) {\n                return;\n            }\n\n            if (error || response.status !== 'ok') {\n                disposeOfRequests();\n\n                requestCancelled = true;\n\n                return callback(error, response);\n            }\n\n            numberOfCompletedRequests++;\n\n            if (numberOfCompletedRequests === generateStreamTokenRequests.length) {\n                callback(null, {status: 'ok'});\n            }\n        };\n\n        this._logger.debug('Creating [real-time] and [broadcast] viewer wildcard stream token for published stream [%s] with [%s] additional streams', streamId, additionalStreamIds.length);\n\n        generateStreamTokenRequests.push(generateWildcardStreamTokenAndAppendToStream.call(this, [], streamId, additionalStreamIds, stream, 'streamToken', completedRequestsCallback));\n        generateStreamTokenRequests.push(generateWildcardStreamTokenAndAppendToStream.call(this, ['broadcast'], streamId, additionalStreamIds, stream, 'streamTokenForBroadcastStream', completedRequestsCallback));\n\n        var streamingTypePublisherCapabilities = _.filter(publisherCapabilities, _.bind(_.includes, null, streamingTypeCapabilities));\n\n        if (streamingTypePublisherCapabilities.length > 0) {\n            this._logger.debug('Creating [%s] viewer wildcard stream token for published stream [%s] with [%s] additional streams', streamingTypePublisherCapabilities, streamId, additionalStreamIds.length);\n\n            generateStreamTokenRequests.push(generateWildcardStreamTokenAndAppendToStream.call(this, streamingTypePublisherCapabilities, streamId, additionalStreamIds, stream, 'streamTokenForLiveStream', completedRequestsCallback));\n        }\n\n        if (_.includes(publisherCapabilities, 'drm')) {\n            this._logger.debug('Creating [drm-open-access] and [drm-hollywood] viewer wildcard stream token for published stream [%s] with [%s] additional streams', streamId, additionalStreamIds.length);\n\n            generateStreamTokenRequests.push(generateWildcardStreamTokenAndAppendToStream.call(this, ['streaming', 'drm-open-access'], streamId, additionalStreamIds, stream, 'streamTokenForLiveStreamWithDrmOpenAccess', completedRequestsCallback));\n            generateStreamTokenRequests.push(generateWildcardStreamTokenAndAppendToStream.call(this, ['streaming', 'drm-hollywood'], streamId, additionalStreamIds, stream, 'streamTokenForLiveStreamWithDrmHollywood', completedRequestsCallback));\n        }\n\n        return disposeOfRequests;\n    }\n\n    function generateWildcardStreamTokenAndAppendToStream(capabilities, streamId, additionalStreamIds, stream, tokenName, callback) {\n        var that = this;\n        var adminApi = that._pcastExpress.getAdminAPI();\n\n        if (!adminApi) {\n            throw new Error('Set \"options.enableWildcardCapability\" to \"false\", or set adminApiProxyClient on initiating room express');\n        }\n\n        return that._pcastExpress.getAdminAPI().createStreamTokenForSubscribing('*', capabilities, streamId, additionalStreamIds, function(error, response) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (response.status !== 'ok') {\n                return callback(null, response);\n            }\n\n            stream = addStreamInfo(stream, tokenName, response.streamToken);\n\n            callback(null, response);\n        });\n    }\n\n    function addStreamInfo(stream, name, value) {\n        var indexOfQueryParam = stream.uri.indexOf('?');\n        var prefix = indexOfQueryParam > -1 ? '&' : '?';\n        var indexOfHashAfterQueryParam = stream.uri.indexOf('#', indexOfQueryParam === -1 ? stream.uri.length : indexOfQueryParam);\n        var uriBeforeHashIfQueryParamPresent = indexOfHashAfterQueryParam === -1 ? stream.uri : stream.uri.substring(0, indexOfHashAfterQueryParam);\n        var uriHash = indexOfHashAfterQueryParam === -1 ? '' : stream.uri.substring(indexOfHashAfterQueryParam);\n\n        stream.uri = uriBeforeHashIfQueryParamPresent + prefix + name + '=' + value + uriHash;\n\n        return stream;\n    }\n\n    function getValidStreamIds(members) {\n        return _.reduce(members, function(streamIds, member) {\n            var stream = _.get(member.getObservableStreams().getValue(), '0');\n            var streamId = stream ? stream.getPCastStreamId() : '';\n\n            if (streamId) {\n                streamIds.push(streamId);\n            }\n\n            return streamIds;\n        }, []);\n    }\n\n    function mapNewPublisherStreamToMemberStreams(publisherStream, room) {\n        var that = this;\n        var activeRoomService = findActiveRoom.call(this, room.getRoomId(), room.getObservableAlias().getValue());\n        var defaultStreams = publisherStream ? [publisherStream] : [];\n\n        if (!activeRoomService) {\n            return defaultStreams;\n        }\n\n        var self = activeRoomService.getSelf();\n\n        if (!self) {\n            return defaultStreams;\n        }\n\n        var selfStreams = _.map(self.getObservableStreams().getValue(), function(selfStream) {\n            return selfStream.toJson();\n        });\n        var publishers = this._roomServicePublishers[room.getRoomId()] || [];\n        var publisherIds = _.map(publishers, function(publisher) {\n            return publisher.getStreamId();\n        });\n\n        if (!selfStreams || selfStreams.length === 0) {\n            return defaultStreams;\n        }\n\n        if (publisherStream) {\n            selfStreams = _.filter(selfStreams, function(stream) {\n                var hasSameUri = stream.uri === publisherStream.uri;\n                var pcastStreamId = Stream.parsePCastStreamIdFromStreamUri(stream.uri);\n                var isPCastStream = !!pcastStreamId;\n                var hasSamePCastStreamId = isPCastStream && pcastStreamId === Stream.parsePCastStreamIdFromStreamUri(publisherStream.uri);\n                var isTheSameWithoutQueryParams = publisherStream.uri.split('?')[0] === stream.uri.split('?')[0];\n                var hasSameType = stream.type === publisherStream.type;\n\n                return (!hasSameUri && !hasSamePCastStreamId && !isTheSameWithoutQueryParams) || !hasSameType;\n            });\n\n            selfStreams.push(publisherStream);\n        }\n\n        return _.filter(selfStreams, function(stream) {\n            return !Stream.parsePCastStreamIdFromStreamUri(stream.uri)\n                || _.includes(publisherIds, Stream.parsePCastStreamIdFromStreamUri(stream.uri) || stream.uri)\n                || _.includes(that._externalPublishers, stream.uri.split('?')[0]);\n        });\n    }\n\n    function updateSelfStreamsAndRole(streams, role, roomService, callback) {\n        var activeRoom = roomService ? roomService.getObservableActiveRoom().getValue() : null;\n\n        if (streams && roomService) {\n            roomService.getSelf().setStreams(streams);\n        }\n\n        if (role && roomService) {\n            roomService.getSelf().getObservableRole().setValue(streams.length === 0 ? memberEnums.roles.audience.name : role);\n        }\n\n        if (activeRoom && roomService.getSelf()) {\n            return updateSelfWithRetry.call(this, roomService.getSelf(), callback);\n        }\n    }\n\n    function updateSelfStreamsAndRoleAndEnterRoomIfNecessary(streams, role, roomService, room, options, callback) {\n        var activeRoomService = findActiveRoom.call(this, room.getRoomId(), room.getObservableAlias().getValue());\n        var activeRoom = roomService ? roomService.getObservableActiveRoom().getValue() : null;\n        var shouldJoinRoom = !activeRoom && !activeRoomService;\n        var that = this;\n\n        if (that._disposed) {\n            return that._logger.warn('Unable to update self after express room service disposal.');\n        }\n\n        if (streams && activeRoomService) {\n            that._logger.debug('Preparing member streams for update in room [%s].', room.getRoomId());\n\n            activeRoomService.getSelf().setStreams(streams);\n        }\n\n        if (role && activeRoomService && activeRoomService.getSelf().getObservableRole().getValue() !== role) {\n            that._logger.debug('Preparing member role for update in room [%s].', room.getRoomId());\n\n            activeRoomService.getSelf().getObservableRole().setValue(role);\n        }\n\n        if (activeRoom && activeRoomService.getSelf()) {\n            return updateSelfWithRetry.call(this, activeRoomService.getSelf(), callback);\n        }\n\n        if (shouldJoinRoom) {\n            that._logger.info('Joining room with member [%s].', room.getRoomId());\n\n            var joinRoomAsPresenterOptions = _.assign({\n                role: role,\n                alias: _.get(options, ['room', 'alias']),\n                roomId: _.get(options, ['room', 'roomId'])\n            }, options);\n\n            joinRoomWithOptions.call(that, joinRoomAsPresenterOptions, function(error, response) {\n                if (error) {\n                    return callback(error);\n                }\n\n                if (response.status !== 'ok' && response.status !== 'already-in-room') {\n                    return callback(null, response);\n                }\n\n                callback(error, response);\n            });\n        }\n    }\n\n    function updateSelfWithRetry(self, callback) {\n        var updateSelfErrors = 0;\n        var that = this;\n        var maxUpdateSelfRetries = 5;\n\n        try {\n            self.commitChanges(function handleUpdateSelf(error, response) {\n                if (error || !response) {\n                    updateSelfErrors++;\n                }\n\n                var roomService = self.getRoomService();\n                var room = roomService ? roomService.getObservableActiveRoom().getValue() : null;\n\n                if (response && response.status === 'ok' || (!room && response.status === 'not-found')) {\n                    updateSelfErrors = 0;\n                    that._isHandlingTrackChange = false;\n\n                    return !callback || callback(null, response);\n                }\n\n                if (response && response.status !== 'ok') {\n                    updateSelfErrors++;\n                }\n\n                if (updateSelfErrors >= maxUpdateSelfRetries) {\n                    that._logger.warn('Unable to update self after [%s] attempts.', maxUpdateSelfRetries);\n\n                    if (_.isNumber(response.lastUpdate)) {\n                        that._logger.warn('Updating self last update from [%s] to [%s] to prevent permanent failure state. Our awareness of self does not match up with the server anymore.',\n                            self.getObservableLastUpdate().getValue(), response.lastUpdate);\n\n                        self.getObservableLastUpdate().setValue(response.lastUpdate);\n                    }\n\n                    that._isHandlingTrackChange = false;\n\n                    return callback(new Error('Unable to update self'));\n                }\n\n                if (updateSelfErrors > 0 && updateSelfErrors < maxUpdateSelfRetries) {\n                    that._logger.info('Unable to update self after [%s] attempts. Retrying.', updateSelfErrors);\n\n                    return self.commitChanges(handleUpdateSelf);\n                }\n            });\n        } catch (error) {\n            callback(error);\n        }\n    }\n\n    function monitorSubsciberOrPublisher(callback, error, response) {\n        if (error) {\n            return callback(error);\n        }\n\n        if (response.retry) {\n            return response.retry();\n        }\n\n        callback(error, response);\n    }\n\n    function getDefaultRoomDescription(type) {\n        switch(type) {\n        case roomEnums.types.channel.name:\n            return 'Room Channel';\n        case roomEnums.types.moderatedChat.name:\n            return 'Moderated Chat';\n        case roomEnums.types.multiPartyChat.name:\n            return 'Multi Party Chat';\n        case roomEnums.types.townHall.name:\n            return 'Town Hall';\n        case roomEnums.types.directChat.name:\n            return 'Direct Chat';\n        default:\n            throw new Error('Unsupported Room Type');\n        }\n    }\n\n    // TODO(dy) Remove backward compatibility when all publisher clients adapt to providing capabilities.\n    function buildCapabilitiesFromPublisherWildcardTokens(uri) {\n        var streamInfo = Stream.getInfoFromStreamUri(uri);\n        var capabilities = [];\n\n        if (streamInfo.streamTokenForLiveStream) {\n            capabilities.push('streaming');\n        }\n\n        return capabilities;\n    }\n\n    function getStreamTokenForFeature(uri, feature) {\n        var streamInfo = Stream.getInfoFromStreamUri(uri);\n\n        switch(feature) {\n        case 'rtmp':\n        case 'hls':\n        case 'dash':\n            return streamInfo.streamTokenForLiveStream;\n        case 'real-time':\n            return streamInfo.streamToken;\n        default:\n            return;\n        }\n    }\n\n    // TODO(dy) Remove backward compatibility when all publisher clients adapt to providing capabilities.\n    function parseStreamTokenFromStreamUri(uri, capabilities) {\n        var streamInfo = Stream.getInfoFromStreamUri(uri);\n        var isStreaming = streamInfo.streamTokenForLiveStream && _.includes(capabilities, 'streaming');\n        var isRtmp = streamInfo.streamTokenForLiveStream && _.includes(capabilities, 'rtmp');\n\n        // Token for both not generated.\n        if (_.includes(capabilities, 'drm-open-access') && _.includes(capabilities, 'drm-hollywood')) {\n            return;\n        }\n\n        if (isStreaming && streamInfo.streamTokenForLiveStreamWithDrmOpenAccess && (_.includes(capabilities, 'drm-open-access') || FeatureDetector.isAndroid())) {\n            return streamInfo.streamTokenForLiveStreamWithDrmOpenAccess;\n        }\n\n        if (isStreaming && streamInfo.streamTokenForLiveStreamWithDrmHollywood && _.includes(capabilities, 'drm-hollywood')) {\n            return streamInfo.streamTokenForLiveStreamWithDrmHollywood;\n        }\n\n        if (isStreaming || isRtmp) {\n            return streamInfo.streamTokenForLiveStream;\n        }\n\n        if (streamInfo.streamTokenForBroadcastStream && _.includes(capabilities, 'broadcast')) {\n            return streamInfo.streamTokenForBroadcastStream;\n        }\n\n        if (!_.includes(capabilities, 'streaming') && !_.includes(capabilities, 'broadcast') && !_.includes(capabilities, 'rtmp')) {\n            return streamInfo.streamToken;\n        }\n    }\n\n    function mapStreamToMemberStream(publisher, type, streamInfo, capabilities, viewerStreamToken, viewerStreamTokenForBroadcastStream, viewerStreamTokenForLiveStream, drmStreamTokens) {\n        var mediaStream = publisher.getStream();\n        var audioTracks = mediaStream ? mediaStream.getAudioTracks() : null;\n        var videoTracks = mediaStream ? mediaStream.getVideoTracks() : null;\n        var audioTrackEnabled = audioTracks.length > 0 && audioTracks[0].enabled;\n        var videoTrackEnabled = videoTracks.length > 0 && videoTracks[0].enabled;\n\n        if (capabilities.includes('audio-only')) {\n            videoTrackEnabled = false;\n        }\n\n        if (capabilities.includes('video-only')) {\n            audioTrackEnabled = false;\n        }\n\n        var publishedStream = {\n            uri: Stream.getPCastPrefix() + publisher.getStreamId(),\n            type: type,\n            audioState: audioTrackEnabled ? trackEnums.states.trackEnabled.name : trackEnums.states.trackDisabled.name,\n            videoState: videoTrackEnabled ? trackEnums.states.trackEnabled.name : trackEnums.states.trackDisabled.name\n        };\n\n        var infoToAppend = _.assign({}, streamInfo, {\n            streamToken: viewerStreamToken,\n            streamTokenForBroadcastStream: viewerStreamTokenForBroadcastStream,\n            streamTokenForLiveStream: viewerStreamTokenForLiveStream\n        });\n\n        if (!viewerStreamToken) {\n            delete infoToAppend.streamToken;\n        }\n\n        if (!viewerStreamTokenForBroadcastStream) {\n            delete infoToAppend.streamTokenForBroadcastStream;\n        }\n\n        if (!viewerStreamTokenForLiveStream) {\n            delete infoToAppend.streamTokenForLiveStream;\n        }\n\n        if (drmStreamTokens) {\n            assert.isArray(drmStreamTokens, 'drmStreamTokens');\n\n            infoToAppend.streamTokenForLiveStreamWithDrmOpenAccess = drmStreamTokens[0];\n            infoToAppend.streamTokenForLiveStreamWithDrmHollywood = drmStreamTokens[1];\n        }\n\n        var queryParamString = _.reduce(infoToAppend, function(queryParamString, currentValue, currentKey) {\n            var currentPrefix = queryParamString ? '&' : '?';\n\n            return queryParamString + currentPrefix + currentKey + '=' + currentValue;\n        }, '');\n\n        if (queryParamString.length > 0) {\n            publishedStream.uri = publishedStream.uri + queryParamString;\n        }\n\n        publishedStream = addStreamInfo(publishedStream, 'capabilities', capabilities.join(','));\n\n        return publishedStream;\n    }\n\n    function listenForTrackStateChange(publisher, room, callbackWithPublisher) {\n        var that = this;\n        var stream = publisher.getStream();\n\n        if (!stream) {\n            return;\n        }\n\n        var tracks = stream.getTracks();\n\n        _.forEach(tracks, function(track) {\n            var handleStateChange = function handleStateChange() {\n                that._isHandlingTrackChange = true;\n\n                var state = track.enabled ? trackEnums.states.trackEnabled.name : trackEnums.states.trackDisabled.name;\n                var activeRoomService = findActiveRoom.call(that, room.getRoomId());\n\n                if (!activeRoomService || !activeRoomService.getSelf()) {\n                    return;\n                }\n\n                var selfStreams = activeRoomService.getSelf().getObservableStreams().getValue();\n                var memberStream = _.find(selfStreams, function(selfStream) {\n                    return selfStream.getPCastStreamId() === publisher.getStreamId();\n                });\n                var self = getSelfAssociatedWithStream.call(that, memberStream);\n\n                if (!memberStream) {\n                    return that._logger.warn('[%s] [%s] Unable to update member state change after track state change [%s]. Member stream no longer exists on member model.', stream.id, track.id, track.enabled);\n                }\n\n                that._logger.info('[%s] [%s] Track state changed to [%s], updating room member stream state [%s]', stream.id, track.id, track.enabled, state);\n\n                if (track.kind === 'video') {\n                    memberStream.getObservableVideoState().setValue(state);\n                } else {\n                    memberStream.getObservableAudioState().setValue(state);\n                }\n\n                if (self) {\n                    updateSelfWithRetry.call(that, self, callbackWithPublisher);\n                }\n            };\n\n            var handleStateChangeIfPossible = function handleStateChangeIfPossible() {\n                if (that._handleStateChangeTimeOut) {\n                    clearTimeout(that._handleStateChangeTimeOut);\n                    that._handleStateChangeTimeOut = null;\n                }\n\n                if (!that._isHandlingTrackChange) {\n                    handleStateChange();\n\n                    return;\n                }\n\n                that._handleStateChangeTimeOut = setTimeout(function() {\n                    handleStateChangeIfPossible();\n                });\n            };\n\n            track.updateState = function(enabled) {\n                this.enabled = enabled;\n                handleStateChangeIfPossible();\n            };\n        });\n    }\n\n    function getSelfAssociatedWithStream(memberStream) {\n        var roomService = _.find(this._activeRoomServices, function(roomService) {\n            var self = roomService.getSelf();\n            var selfStreams = self ? self.getObservableStreams().getValue() : [];\n\n            return _.find(selfStreams, function(selfStream) {\n                return memberStream === selfStream;\n            });\n        });\n\n        return roomService ? roomService.getSelf() : null;\n    }\n\n    return RoomExpress;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function(_, assert) {\n    'use strict';\n\n    var mostRecentStrategy = 'most-recent';\n    var highAvailabilityStrategy = 'high-availability';\n    var defaultBannedFailureCount = 100;\n    var defaultBanMemberOnCapacityFailureCount = 5;\n\n    function MemberSelector(selectionStrategy, logger, options) {\n        if (selectionStrategy) {\n            assert.isStringNotEmpty(selectionStrategy, 'selectionStrategy');\n        }\n\n        assert.isObject(logger, 'logger');\n\n        this._selectionStrategy = selectionStrategy || mostRecentStrategy;\n        this._logger = logger;\n        this._failureCountForBanningAMember = _.get(options, ['failureCountForBanningAMember'], defaultBannedFailureCount);\n        this._banMemberOnCapacityFailureCount = _.get(options, ['banMemberOnCapacityFailureCount'], defaultBanMemberOnCapacityFailureCount);\n\n        this.reset();\n    }\n\n    MemberSelector.prototype.getNext = function getNext(members) {\n        this._logger.info('Select member from [%s]', members);\n\n        var newSelectedMember = getNextMember.call(this, members);\n\n        if (!newSelectedMember) {\n            this._logger.info('Unable to select new member from [%s]', members);\n        } else {\n            this._logger.info('Selecting new member [%s]/[%s]', newSelectedMember.getSessionId(), newSelectedMember.getObservableScreenName().getValue());\n        }\n\n        this._lastSelectedMember = newSelectedMember;\n\n        return newSelectedMember;\n    };\n\n    MemberSelector.prototype.getStrategy = function() {\n        return this._selectionStrategy;\n    };\n\n    MemberSelector.prototype.markFailed = function(options) {\n        if (!this._lastSelectedMember) {\n            this._logger.warn('Marking failed member but there was no recent selected member');\n\n            return;\n        }\n\n        var memberKey = getMemberKey(this._lastSelectedMember);\n\n        if (_.get(options, ['failedDueToCapacity'], false)) {\n            var capacityFailureCount = _.get(this._capacityFailureCounts, [memberKey], 0);\n\n            capacityFailureCount++;\n\n            _.set(this._capacityFailureCounts, [memberKey], capacityFailureCount);\n\n            if (capacityFailureCount >= this._banMemberOnCapacityFailureCount) {\n                this._logger.info('Disabling member [%s] that has exceeded threshold due to [%s] capacity failures', memberKey, capacityFailureCount);\n\n                return this.markDead();\n            }\n        }\n\n        var failureCount = _.get(this._failureCounts, [memberKey], 0);\n        failureCount++;\n\n        this._logger.info('Failure count for member [%s] is now [%s]', memberKey, failureCount);\n\n        _.set(this._failureCounts, [memberKey], failureCount);\n\n        if (failureCount >= this._failureCountForBanningAMember) {\n            this._logger.info('Disabling member [%s] that has exceeded threshold due to [%s] failures', memberKey, failureCount);\n\n            return this.markDead();\n        }\n\n        this._lastSelectedMember = null;\n    };\n\n    MemberSelector.prototype.markDead = function() {\n        if (!this._lastSelectedMember) {\n            this._logger.warn('Marking dead member but there was no recent selected member');\n\n            return;\n        }\n\n        var memberKey = getMemberKey(this._lastSelectedMember);\n\n        this._logger.info('Member [%s] is now permanently removed', memberKey);\n\n        _.set(this._deadMembers, [memberKey], true);\n        this._lastSelectedMember = null;\n    };\n\n    MemberSelector.prototype.getNumberOfMembersWithFailures = function() {\n        return _.keys(this._failureCounts).length;\n    };\n\n    MemberSelector.prototype.reset = function() {\n        this._lastSelectedMember = null;\n        this._failureCounts = {};\n        this._capacityFailureCounts = {};\n        this._deadMembers = {};\n    };\n\n    MemberSelector.prototype.dispose = function dispose() {\n        this.reset();\n    };\n\n    MemberSelector.getSimilarMembers = function(screenName, optionalSessionId, members) {\n        var otherMembers = _.filter(members, function(member) {\n            return member.getObservableScreenName().getValue() !== screenName && (!optionalSessionId || member.getSessionId() !== optionalSessionId);\n        });\n        var primaryMembers = _.filter(otherMembers, isPrimary);\n        var alternateMembers = _.filter(otherMembers, isAlternate);\n\n        if (isPrimaryName(screenName)) {\n            return primaryMembers || alternateMembers || otherMembers;\n        }\n\n        if (isAlternateName(screenName)) {\n            return alternateMembers || primaryMembers || otherMembers;\n        }\n\n        return otherMembers || primaryMembers || alternateMembers;\n    };\n\n    function getMemberKey(member) {\n        if (!member) {\n            return '';\n        }\n\n        return member.getSessionId() + member.getObservableScreenName().getValue();\n    }\n\n    function getNextMember(members) {\n        var that = this;\n\n        switch (this._selectionStrategy) {\n        case mostRecentStrategy:\n            var activeMembers = _.reduce(members, function(activeMembers, member) {\n                var memberKey = getMemberKey(member);\n                var isDead = _.get(that._deadMembers, [memberKey], false);\n\n                if (!isDead) {\n                    activeMembers.push(member);\n                }\n\n                return activeMembers;\n            }, []);\n\n            return getMostRecentMember(activeMembers);\n        case highAvailabilityStrategy:\n            if (this._lastSelectedMember && _.includes(members, this._lastSelectedMember)) {\n                return this._lastSelectedMember;\n            }\n\n            var selectedMember = undefined;\n            var minFailureCount = Number.MAX_VALUE;\n\n            _.forEach(members, function(member) {\n                var memberKey = getMemberKey(member);\n                var isDead = _.get(that._deadMembers, [memberKey], false);\n\n                if (isDead) {\n                    return;\n                }\n\n                var failureCount = _.get(that._failureCounts, [member], 0);\n\n                if (failureCount < minFailureCount) {\n                    minFailureCount = failureCount;\n                    selectedMember = member;\n                } else if (failureCount === minFailureCount) {\n                    if (!selectedMember) {\n                        selectedMember = member;\n                    } else if (isPrimary(member)) {\n                        if (!isPrimary(selectedMember)) {\n                            selectedMember = member;\n                        }\n                    } else if (isAlternate(member)) {\n                        if (!isPrimary(selectedMember) && !isAlternate(selectedMember)) {\n                            selectedMember = member;\n                        }\n                    }\n                }\n            });\n\n            return selectedMember;\n        default:\n            throw new Error('Invalid Selection Strategy');\n        }\n    }\n\n    function getMostRecentMember(members) {\n        return _.reduce(members, function(mostRecentMember, member) {\n            if (!mostRecentMember) {\n                return member;\n            }\n\n            return mostRecentMember.getLastUpdate() > member.getLastUpdate() ? mostRecentMember : member;\n        });\n    }\n\n    function isPrimary(member) {\n        var screenName = member.getObservableScreenName().getValue();\n\n        return isPrimaryName(screenName);\n    }\n\n    function isAlternate(member) {\n        var screenName = member.getObservableScreenName().getValue();\n\n        return isAlternateName(screenName);\n    }\n\n    function isPrimaryName(name) {\n        var primary = /primary/i;\n\n        return primary.test(name);\n    }\n\n    function isAlternateName(name) {\n        var alternate = /alternate/i;\n\n        return alternate.test(name);\n    }\n\n    return MemberSelector;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function(_, assert) {\n    'use strict';\n\n    function Channel(room) {\n        assert.isObject(room, 'room');\n\n        this._room = room;\n    }\n\n    Channel.prototype.getChannelId = function getChannelId() {\n        return this._room.getRoomId.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservableAlias = function getObservableAlias() {\n        return this._room.getObservableAlias.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservableName = function getObservableName() {\n        return this._room.getObservableName.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservableDescription = function getObservableDescription() {\n        return this._room.getObservableDescription.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservableType = function getObservableType() {\n        return this._room.getObservableType.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservableMembers = function getObservableMembers() {\n        return this._room.getObservableMembers.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservableBridgeId = function getObservableBridgeId() {\n        return this._room.getObservableBridgeId.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservablePin = function getObservablePin() {\n        return this._room.getObservablePin.apply(this._room, arguments);\n    };\n\n    Channel.prototype.toString = function toString() {\n        return this._room.toString.apply(this._room, arguments);\n    };\n\n    Channel.prototype.toJson = function toJson() {\n        return {\n            channelId: this._room.getRoomId(),\n            alias: this._room.getObservableAlias().getValue(),\n            name: this._room.getObservableName().getValue(),\n            description: this._room.getObservableDescription().getValue(),\n            type: this._room.getObservableType().getValue(),\n            pin: this._room.getObservablePin().getValue(),\n            bridgeId: this._room.getObservableBridgeId().getValue()\n        };\n    };\n\n    Channel.prototype.commitChanges = function commitChanges() {\n        return this._room.commitChanges.apply(this._room, arguments);\n    };\n\n    Channel.prototype.reload = function reload() {\n        return this._room.reload.apply(this._room, arguments);\n    };\n\n    Channel.prototype._update = function update() {\n        return this._room._update.apply(this._room, arguments);\n    };\n\n    Channel.prototype._addMembers = function addMembers() {\n        return this._room._addMembers.apply(this._room, arguments);\n    };\n\n    Channel.prototype._removeMembers = function removeMembers() {\n        return this._room._removeMembers.apply(this._room, arguments);\n    };\n\n    Channel.prototype._updateMembers = function updateMembers() {\n        return this._room._updateMembers.apply(this._room, arguments);\n    };\n\n    return Channel;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine('phenix-web-sdk', [\n    'phenix-rtc',\n    'phenix-web-logging',\n    './sdk/PCast',\n    './sdk/room/RoomService',\n    './sdk/audio/AudioSpeakerDetector',\n    './sdk/bandwidth/BandwidthMonitor',\n    './sdk/userMedia/UserMediaResolver',\n    './sdk/express/PCastExpress',\n    './sdk/express/RoomExpress',\n    './sdk/express/ChannelExpress',\n    './sdk/AdminApiProxyClient'\n], function(rtc, logging, PCast, RoomService, AudioSpeakerDetector, BandwidthMonitor, UserMediaResolver, PCastExpress, RoomExpress, ChannelExpress, AdminApiProxyClient) {\n    'use strict';\n\n    rtc.global.PhenixPCast = PCast;\n\n    return {\n        express: {\n            PCastExpress: PCastExpress,\n            RoomExpress: RoomExpress,\n            ChannelExpress: ChannelExpress\n        },\n        lowLevel: {\n            PCast: PCast,\n            RoomService: RoomService\n        },\n        media: {\n            AudioSpeakerDetector: AudioSpeakerDetector,\n            UserMediaResolver: UserMediaResolver\n        },\n        net: {AdminApiProxyClient: AdminApiProxyClient},\n        utils: {\n            BandwidthMonitor: BandwidthMonitor,\n            logging: logging,\n            rtc: rtc\n        },\n\n        // TODO(dy) remove deprecated. Use above\n        AudioSpeakerDetector: AudioSpeakerDetector,\n        BandwidthMonitor: BandwidthMonitor,\n        logging: logging,\n        PCast: PCast,\n        RoomService: RoomService,\n        RTC: rtc,\n        UserMediaResolver: UserMediaResolver\n    };\n});","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\nvar adapterFactory = require('./adapter_factory.js');\nmodule.exports = adapterFactory({window: global.window});\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\n// Shimming starts here.\nmodule.exports = function(dependencies, opts) {\n  var window = dependencies && dependencies.window;\n\n  var options = {\n    shimChrome: true,\n    shimFirefox: true,\n    shimEdge: true,\n    shimSafari: true,\n  };\n\n  for (var key in opts) {\n    if (hasOwnProperty.call(opts, key)) {\n      options[key] = opts[key];\n    }\n  }\n\n  // Utils.\n  var utils = require('./utils');\n  var logging = utils.log;\n  var browserDetails = utils.detectBrowser(window);\n\n  // Export to the adapter global object visible in the browser.\n  var adapter = {\n    browserDetails: browserDetails,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Uncomment the line below if you want logging to occur, including logging\n  // for the switch statement below. Can also be turned on in the browser via\n  // adapter.disableLog(false), but then logging from the switch statement below\n  // will not appear.\n  // require('./utils').disableLog(false);\n\n  // Browser shims.\n  var chromeShim = require('./chrome/chrome_shim') || null;\n  var edgeShim = require('./edge/edge_shim') || null;\n  var firefoxShim = require('./firefox/firefox_shim') || null;\n  var safariShim = require('./safari/safari_shim') || null;\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      utils.shimCreateObjectURL(window);\n      chromeShim.shimSourceObject(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      firefoxShim.shimGetUserMedia(window);\n      utils.shimCreateObjectURL(window);\n      firefoxShim.shimSourceObject(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window);\n      utils.shimCreateObjectURL(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n      // shim window.URL.createObjectURL Safari (technical preview)\n      utils.shimCreateObjectURL(window);\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimGetUserMedia(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n};\n","\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\nvar chromeShim = {\n  shimMediaStream: function(window) {\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\n  },\n\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n          }\n          this.addEventListener('track', this._ontrack = f);\n        }\n      });\n      var origSetRemoteDescription =\n          window.RTCPeerConnection.prototype.setRemoteDescription;\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n        var pc = this;\n        if (!pc._ontrackpoly) {\n          pc._ontrackpoly = function(e) {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', function(te) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track.id === te.track.id;\n                });\n              } else {\n                receiver = {track: te.track};\n              }\n\n              var event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(function(track) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track.id === track.id;\n                });\n              } else {\n                receiver = {track: track};\n              }\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n          };\n          pc.addEventListener('addstream', pc._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n    }\n  },\n\n  shimGetSendersWithDtmf: function(window) {\n    // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        !('getSenders' in window.RTCPeerConnection.prototype) &&\n        'createDTMFSender' in window.RTCPeerConnection.prototype) {\n      var shimSenderWithDtmf = function(pc, track) {\n        return {\n          track: track,\n          get dtmf() {\n            if (this._dtmf === undefined) {\n              if (track.kind === 'audio') {\n                this._dtmf = pc.createDTMFSender(track);\n              } else {\n                this._dtmf = null;\n              }\n            }\n            return this._dtmf;\n          },\n          _pc: pc\n        };\n      };\n\n      // augment addTrack when getSenders is not available.\n      if (!window.RTCPeerConnection.prototype.getSenders) {\n        window.RTCPeerConnection.prototype.getSenders = function() {\n          this._senders = this._senders || [];\n          return this._senders.slice(); // return a copy of the internal state.\n        };\n        var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n        window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n          var pc = this;\n          var sender = origAddTrack.apply(pc, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(pc, track);\n            pc._senders.push(sender);\n          }\n          return sender;\n        };\n\n        var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n        window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n          var pc = this;\n          origRemoveTrack.apply(pc, arguments);\n          var idx = pc._senders.indexOf(sender);\n          if (idx !== -1) {\n            pc._senders.splice(idx, 1);\n          }\n        };\n      }\n      var origAddStream = window.RTCPeerConnection.prototype.addStream;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origAddStream.apply(pc, [stream]);\n        stream.getTracks().forEach(function(track) {\n          pc._senders.push(shimSenderWithDtmf(pc, track));\n        });\n      };\n\n      var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origRemoveStream.apply(pc, [(pc._streams[stream.id] || stream)]);\n\n        stream.getTracks().forEach(function(track) {\n          var sender = pc._senders.find(function(s) {\n            return s.track === track;\n          });\n          if (sender) {\n            pc._senders.splice(pc._senders.indexOf(sender), 1); // remove sender\n          }\n        });\n      };\n    } else if (typeof window === 'object' && window.RTCPeerConnection &&\n               'getSenders' in window.RTCPeerConnection.prototype &&\n               'createDTMFSender' in window.RTCPeerConnection.prototype &&\n               window.RTCRtpSender &&\n               !('dtmf' in window.RTCRtpSender.prototype)) {\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        var pc = this;\n        var senders = origGetSenders.apply(pc, []);\n        senders.forEach(function(sender) {\n          sender._pc = pc;\n        });\n        return senders;\n      };\n\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = this._pc.createDTMFSender(this.track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n  },\n\n  shimSourceObject: function(window) {\n    var URL = window && window.URL;\n\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this._srcObject;\n          },\n          set: function(stream) {\n            var self = this;\n            // Use _srcObject as a private property for this shim\n            this._srcObject = stream;\n            if (this.src) {\n              URL.revokeObjectURL(this.src);\n            }\n\n            if (!stream) {\n              this.src = '';\n              return undefined;\n            }\n            this.src = URL.createObjectURL(stream);\n            // We need to recreate the blob url when a track is added or\n            // removed. Doing it manually since we want to avoid a recursion.\n            stream.addEventListener('addtrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n            stream.addEventListener('removetrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n          }\n        });\n      }\n    }\n  },\n\n  shimAddTrackRemoveTrack: function(window) {\n    // shim addTrack and removeTrack.\n    if (window.RTCPeerConnection.prototype.addTrack) {\n      return;\n    }\n\n    // also shim pc.getLocalStreams when addTrack is shimmed\n    // to return the original streams.\n    var origGetLocalStreams = window.RTCPeerConnection.prototype\n        .getLocalStreams;\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      var self = this;\n      var nativeStreams = origGetLocalStreams.apply(this);\n      self._reverseStreams = self._reverseStreams || {};\n      return nativeStreams.map(function(stream) {\n        return self._reverseStreams[stream.id];\n      });\n    };\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      stream.getTracks().forEach(function(track) {\n        var alreadyExists = pc.getSenders().find(function(s) {\n          return s.track === track;\n        });\n        if (alreadyExists) {\n          throw new DOMException('Track already exists.',\n              'InvalidAccessError');\n        }\n      });\n      // Add identity mapping for consistency with addTrack.\n      // Unless this is being used with a stream from addTrack.\n      if (!pc._reverseStreams[stream.id]) {\n        var newStream = new window.MediaStream(stream.getTracks());\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        stream = newStream;\n      }\n      origAddStream.apply(pc, [stream]);\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      origRemoveStream.apply(pc, [(pc._streams[stream.id] || stream)]);\n      delete pc._reverseStreams[(pc._streams[stream.id] ?\n          pc._streams[stream.id].id : stream.id)];\n      delete pc._streams[stream.id];\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      var streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(function(t) {\n            return t === track;\n          })) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      var alreadyExists = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n      var oldStream = pc._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n        pc.dispatchEvent(new Event('negotiationneeded'));\n      } else {\n        var newStream = new window.MediaStream([track]);\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        pc.addStream(newStream);\n      }\n      return pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n    };\n\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      var isLocal = sender._pc === pc;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      pc._streams = pc._streams || {};\n      var stream;\n      Object.keys(pc._streams).forEach(function(streamid) {\n        var hasTrack = pc._streams[streamid].getTracks().find(function(track) {\n          return sender.track === track;\n        });\n        if (hasTrack) {\n          stream = pc._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          pc.removeStream(stream);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        pc.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        // Translate iceTransportPolicy to iceTransports,\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\n        // this was fixed in M56 along with unprefixing RTCPeerConnection.\n        logging('PeerConnection');\n        if (pcConfig && pcConfig.iceTransportPolicy) {\n          pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n        }\n\n        return new window.webkitRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.webkitRTCPeerConnection.prototype;\n      // wrap static methods. Currently just generateCertificate.\n      if (window.webkitRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.webkitRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n    } else {\n      // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n      var OrigPeerConnection = window.RTCPeerConnection;\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (pcConfig && pcConfig.iceServers) {\n          var newIceServers = [];\n          for (var i = 0; i < pcConfig.iceServers.length; i++) {\n            var server = pcConfig.iceServers[i];\n            if (!server.hasOwnProperty('urls') &&\n                server.hasOwnProperty('url')) {\n              utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n              server = JSON.parse(JSON.stringify(server));\n              server.urls = server.url;\n              newIceServers.push(server);\n            } else {\n              newIceServers.push(pcConfig.iceServers[i]);\n            }\n          }\n          pcConfig.iceServers = newIceServers;\n        }\n        return new OrigPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n      // wrap static methods. Currently just generateCertificate.\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get: function() {\n          return OrigPeerConnection.generateCertificate;\n        }\n      });\n    }\n\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(selector,\n        successCallback, errorCallback) {\n      var self = this;\n      var args = arguments;\n\n      // If selector is a function then we are in the old style stats so just\n      // pass back the original getStats format to avoid breaking old users.\n      if (arguments.length > 0 && typeof selector === 'function') {\n        return origGetStats.apply(this, arguments);\n      }\n\n      // When spec-style getStats is supported, return those when called with\n      // either no arguments or the selector argument is null.\n      if (origGetStats.length === 0 && (arguments.length === 0 ||\n          typeof arguments[0] !== 'function')) {\n        return origGetStats.apply(this, []);\n      }\n\n      var fixChromeStats_ = function(response) {\n        var standardReport = {};\n        var reports = response.result();\n        reports.forEach(function(report) {\n          var standardStats = {\n            id: report.id,\n            timestamp: report.timestamp,\n            type: {\n              localcandidate: 'local-candidate',\n              remotecandidate: 'remote-candidate'\n            }[report.type] || report.type\n          };\n          report.names().forEach(function(name) {\n            standardStats[name] = report.stat(name);\n          });\n          standardReport[standardStats.id] = standardStats;\n        });\n\n        return standardReport;\n      };\n\n      // shim getStats with maplike support\n      var makeMapStats = function(stats) {\n        return new Map(Object.keys(stats).map(function(key) {\n          return [key, stats[key]];\n        }));\n      };\n\n      if (arguments.length >= 2) {\n        var successCallbackWrapper_ = function(response) {\n          args[1](makeMapStats(fixChromeStats_(response)));\n        };\n\n        return origGetStats.apply(this, [successCallbackWrapper_,\n          arguments[0]]);\n      }\n\n      // promise-support\n      return new Promise(function(resolve, reject) {\n        origGetStats.apply(self, [\n          function(response) {\n            resolve(makeMapStats(fixChromeStats_(response)));\n          }, reject]);\n      }).then(successCallback, errorCallback);\n    };\n\n    // add promise support -- natively available in Chrome 51\n    if (browserDetails.version < 51) {\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n          .forEach(function(method) {\n            var nativeMethod = window.RTCPeerConnection.prototype[method];\n            window.RTCPeerConnection.prototype[method] = function() {\n              var args = arguments;\n              var self = this;\n              var promise = new Promise(function(resolve, reject) {\n                nativeMethod.apply(self, [args[0], resolve, reject]);\n              });\n              if (args.length < 2) {\n                return promise;\n              }\n              return promise.then(function() {\n                args[1].apply(null, []);\n              },\n              function(err) {\n                if (args.length >= 3) {\n                  args[2].apply(null, [err]);\n                }\n              });\n            };\n          });\n    }\n\n    // promise support for createOffer and createAnswer. Available (without\n    // bugs) since M52: crbug/619289\n    if (browserDetails.version < 52) {\n      ['createOffer', 'createAnswer'].forEach(function(method) {\n        var nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          var self = this;\n          if (arguments.length < 1 || (arguments.length === 1 &&\n              typeof arguments[0] === 'object')) {\n            var opts = arguments.length === 1 ? arguments[0] : undefined;\n            return new Promise(function(resolve, reject) {\n              nativeMethod.apply(self, [resolve, reject, opts]);\n            });\n          }\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n    }\n\n    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  }\n};\n\n\n// Expose public methods.\nmodule.exports = {\n  shimMediaStream: chromeShim.shimMediaStream,\n  shimOnTrack: chromeShim.shimOnTrack,\n  shimAddTrackRemoveTrack: chromeShim.shimAddTrackRemoveTrack,\n  shimGetSendersWithDtmf: chromeShim.shimGetSendersWithDtmf,\n  shimSourceObject: chromeShim.shimSourceObject,\n  shimPeerConnection: chromeShim.shimPeerConnection,\n  shimGetUserMedia: require('./getusermedia')\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n\n  var constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function(key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function(mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  var shimConstraints_ = function(constraints, func) {\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      var remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      var face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      var getSupportedFacingModeLies = browserDetails.version < 61;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        var matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(function(devices) {\n            devices = devices.filter(function(d) {\n              return d.kind === 'videoinput';\n            });\n            var dev = devices.find(function(d) {\n              return matches.some(function(match) {\n                return d.label.toLowerCase().indexOf(match) !== -1;\n              });\n            });\n            if (!dev && devices.length && matches.indexOf('back') !== -1) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  var shimError_ = function(e) {\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        InvalidStateError: 'NotReadableError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotReadableError',\n        MediaDeviceKillSwitchOn: 'NotReadableError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraintName,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, function(c) {\n      navigator.webkitGetUserMedia(c, onSuccess, function(e) {\n        onError(shimError_(e));\n      });\n    });\n  };\n\n  navigator.getUserMedia = getUserMedia_;\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      navigator.getUserMedia(constraints, resolve, reject);\n    });\n  };\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {\n      getUserMedia: getUserMediaPromise_,\n      enumerateDevices: function() {\n        return new Promise(function(resolve) {\n          var kinds = {audio: 'audioinput', video: 'videoinput'};\n          return window.MediaStreamTrack.getSources(function(devices) {\n            resolve(devices.map(function(device) {\n              return {label: device.label,\n                kind: kinds[device.kind],\n                deviceId: device.id,\n                groupId: ''};\n            }));\n          });\n        });\n      },\n      getSupportedConstraints: function() {\n        return {\n          deviceId: true, echoCancellation: true, facingMode: true,\n          frameRate: true, height: true, width: true\n        };\n      }\n    };\n  }\n\n  // A shim for getUserMedia method on the mediaDevices object.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (!navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return getUserMediaPromise_(constraints);\n    };\n  } else {\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, function(c) {\n        return origGetUserMedia(c).then(function(stream) {\n          if (c.audio && !stream.getAudioTracks().length ||\n              c.video && !stream.getVideoTracks().length) {\n            stream.getTracks().forEach(function(track) {\n              track.stop();\n            });\n            throw new DOMException('', 'NotFoundError');\n          }\n          return stream;\n        }, function(e) {\n          return Promise.reject(shimError_(e));\n        });\n      });\n    };\n  }\n\n  // Dummy devicechange event methods.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n    navigator.mediaDevices.addEventListener = function() {\n      logging('Dummy mediaDevices.addEventListener called.');\n    };\n  }\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n    navigator.mediaDevices.removeEventListener = function() {\n      logging('Dummy mediaDevices.removeEventListener called.');\n    };\n  }\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar shimRTCPeerConnection = require('./rtcpeerconnection_shim');\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (window.RTCIceGatherer) {\n      // ORTC defines an RTCIceCandidate object but no constructor.\n      // Not implemented in Edge.\n      if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = function(args) {\n          return args;\n        };\n      }\n      // ORTC does not have a session description object but\n      // other browsers (i.e. Chrome) that will support both PC and ORTC\n      // in the future might have this defined already.\n      if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = function(args) {\n          return args;\n        };\n      }\n      // this adds an additional event listener to MediaStrackTrack that signals\n      // when a tracks enabled property was changed. Workaround for a bug in\n      // addStream, see below. No longer required in 15025+\n      if (browserDetails.version < 15025) {\n        var origMSTEnabled = Object.getOwnPropertyDescriptor(\n            window.MediaStreamTrack.prototype, 'enabled');\n        Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n          set: function(value) {\n            origMSTEnabled.set.call(this, value);\n            var ev = new Event('enabled');\n            ev.enabled = value;\n            this.dispatchEvent(ev);\n          }\n        });\n      }\n    }\n\n    // ORTC defines the DTMF sender a bit different.\n    // https://github.com/w3c/ortc/issues/714\n    if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = new window.RTCDtmfSender(this);\n            } else if (this.track.kind === 'video') {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n\n    window.RTCPeerConnection =\n        shimRTCPeerConnection(window, browserDetails.version);\n  },\n  shimReplaceTrack: function(window) {\n    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n    if (window.RTCRtpSender &&\n        !('replaceTrack' in window.RTCRtpSender.prototype)) {\n      window.RTCRtpSender.prototype.replaceTrack =\n          window.RTCRtpSender.prototype.setTrack;\n    }\n  }\n};\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\n// sort tracks such that they follow an a-v-a-v...\n// pattern.\nfunction sortTracks(tracks) {\n  var audioTracks = tracks.filter(function(track) {\n    return track.kind === 'audio';\n  });\n  var videoTracks = tracks.filter(function(track) {\n    return track.kind === 'video';\n  });\n  tracks = [];\n  while (audioTracks.length || videoTracks.length) {\n    if (audioTracks.length) {\n      tracks.push(audioTracks.shift());\n    }\n    if (videoTracks.length) {\n      tracks.push(videoTracks.shift());\n    }\n  }\n  return tracks;\n}\n\n// Edge does not like\n// 1) stun:\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n    return false;\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  var RTCPeerConnection = function(config) {\n    var self = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          self[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.needNegotiation = false;\n\n    this.onicecandidate = null;\n    this.onaddstream = null;\n    this.ontrack = null;\n    this.onremovestream = null;\n    this.onsignalingstatechange = null;\n    this.oniceconnectionstatechange = null;\n    this.onicegatheringstatechange = null;\n    this.onnegotiationneeded = null;\n    this.ondatachannel = null;\n    this.canTrickleIceCandidates = null;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n    this.getLocalStreams = function() {\n      return self.localStreams;\n    };\n    this.getRemoteStreams = function() {\n      return self.remoteStreams;\n    };\n\n    this.localDescription = new window.RTCSessionDescription({\n      type: '',\n      sdp: ''\n    });\n    this.remoteDescription = new window.RTCSessionDescription({\n      type: '',\n      sdp: ''\n    });\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    this.iceOptions = {\n      gatherPolicy: 'all',\n      iceServers: []\n    };\n    if (config && config.iceTransportPolicy) {\n      switch (config.iceTransportPolicy) {\n        case 'all':\n        case 'relay':\n          this.iceOptions.gatherPolicy = config.iceTransportPolicy;\n          break;\n        default:\n          // don't set iceTransportPolicy.\n          break;\n      }\n    }\n    this.usingBundle = config && config.bundlePolicy === 'max-bundle';\n\n    if (config && config.iceServers) {\n      this.iceOptions.iceServers = filterIceServers(config.iceServers,\n          edgeVersion);\n    }\n    this._config = config || {};\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    // since the iceGatherer is currently created in createOffer but we\n    // must not emit candidates until after setLocalDescription we buffer\n    // them in this array.\n    this._localIceCandidatesBuffer = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this.dispatchEvent(event);\n    if (this.onicegatheringstatechange !== null) {\n      this.onicegatheringstatechange(event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitBufferedCandidates = function() {\n    var self = this;\n    var sections = SDPUtils.splitSections(self.localDescription.sdp);\n    // FIXME: need to apply ice candidates in a way which is async but\n    // in-order\n    this._localIceCandidatesBuffer.forEach(function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      if (end) {\n        for (var j = 1; j < sections.length; j++) {\n          if (sections[j].indexOf('\\r\\na=end-of-candidates\\r\\n') === -1) {\n            sections[j] += 'a=end-of-candidates\\r\\n';\n          }\n        }\n      } else {\n        sections[event.candidate.sdpMLineIndex + 1] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      }\n      self.localDescription.sdp = sections.join('');\n      self.dispatchEvent(event);\n      if (self.onicecandidate !== null) {\n        self.onicecandidate(event);\n      }\n      if (!event.candidate && self.iceGatheringState !== 'complete') {\n        var complete = self.transceivers.every(function(transceiver) {\n          return transceiver.iceGatherer &&\n              transceiver.iceGatherer.state === 'completed';\n        });\n        if (complete && self.iceGatheringStateChange !== 'complete') {\n          self.iceGatheringState = 'complete';\n          self._emitGatheringStateChange();\n        }\n      }\n    });\n    this._localIceCandidatesBuffer = [];\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  // internal helper to create a transceiver object.\n  // (whih is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    this.transceivers.push(transceiver);\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n\n    this._maybeFireNegotiationNeeded();\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var self = this;\n    if (edgeVersion >= 15025) {\n      this.localStreams.push(stream);\n      stream.getTracks().forEach(function(track) {\n        self.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        self.addTrack(track, clonedStream);\n      });\n      this.localStreams.push(clonedStream);\n    }\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var idx = this.localStreams.indexOf(stream);\n    if (idx > -1) {\n      this.localStreams.splice(idx, 1);\n      this._maybeFireNegotiationNeeded();\n    }\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n  // Create ICE gatherer and hook it up.\n  RTCPeerConnection.prototype._createIceGatherer = function(mid,\n      sdpMLineIndex) {\n    var self = this;\n    var iceGatherer = new window.RTCIceGatherer(self.iceOptions);\n    iceGatherer.onlocalcandidate = function(evt) {\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      var end = !cand || Object.keys(cand).length === 0;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === undefined) {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        event.candidate.candidate = SDPUtils.writeCandidate(cand);\n      }\n\n      // update local description.\n      var sections = SDPUtils.splitSections(self.localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex + 1] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex + 1] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      self.localDescription.sdp = sections.join('');\n      var transceivers = self._pendingOffer ? self._pendingOffer :\n          self.transceivers;\n      var complete = transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      // Emit candidate if localDescription is set.\n      // Also emits null candidate when all gatherers are complete.\n      switch (self.iceGatheringState) {\n        case 'new':\n          if (!end) {\n            self._localIceCandidatesBuffer.push(event);\n          }\n          if (end && complete) {\n            self._localIceCandidatesBuffer.push(\n                new Event('icecandidate'));\n          }\n          break;\n        case 'gathering':\n          self._emitBufferedCandidates();\n          if (!end) {\n            self.dispatchEvent(event);\n            if (self.onicecandidate !== null) {\n              self.onicecandidate(event);\n            }\n          }\n          if (complete) {\n            self.dispatchEvent(new Event('icecandidate'));\n            if (self.onicecandidate !== null) {\n              self.onicecandidate(new Event('icecandidate'));\n            }\n            self.iceGatheringState = 'complete';\n            self._emitGatheringStateChange();\n          }\n          break;\n        case 'complete':\n          // should not happen... currently!\n          break;\n        default: // no-op.\n          break;\n      }\n    };\n    return iceGatherer;\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var self = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      self._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      self._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      self._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      params.encodings = transceiver.recvEncodingParameters;\n      params.rtcp = {\n        cname: transceiver.rtcpParameters.cname,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var self = this;\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, this.signalingState)) {\n      var e = new Error('Can not set local ' + description.type +\n          ' in state ' + this.signalingState);\n      e.name = 'InvalidStateError';\n      if (arguments.length > 2 && typeof arguments[2] === 'function') {\n        window.setTimeout(arguments[2], 0, e);\n      }\n      return Promise.reject(e);\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // FIXME: What was the purpose of this empty if statement?\n      // if (!this._pendingOffer) {\n      // } else {\n      if (this._pendingOffer) {\n        // VERY limited support for SDP munging. Limited to:\n        // * changing the order of codecs\n        sections = SDPUtils.splitSections(description.sdp);\n        sessionpart = sections.shift();\n        sections.forEach(function(mediaSection, sdpMLineIndex) {\n          var caps = SDPUtils.parseRtpParameters(mediaSection);\n          self._pendingOffer[sdpMLineIndex].localCapabilities = caps;\n        });\n        this.transceivers = this._pendingOffer;\n        delete this._pendingOffer;\n      }\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(self.remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = self.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        var rejected = SDPUtils.isRejected(mediaSection);\n\n        if (!rejected && !transceiver.isDatachannel) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!self.usingBundle || sdpMLineIndex === 0) {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                isIceLite ? 'controlling' : 'controlled');\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          self._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    this.localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    switch (description.type) {\n      case 'offer':\n        this._updateSignalingState('have-local-offer');\n        break;\n      case 'answer':\n        this._updateSignalingState('stable');\n        break;\n      default:\n        throw new TypeError('unsupported type \"' + description.type +\n            '\"');\n    }\n\n    // If a success callback was provided, emit ICE candidates after it\n    // has been executed. Otherwise, emit callback after the Promise is\n    // resolved.\n    var hasCallback = arguments.length > 1 &&\n      typeof arguments[1] === 'function';\n    if (hasCallback) {\n      var cb = arguments[1];\n      window.setTimeout(function() {\n        cb();\n        if (self.iceGatheringState === 'new') {\n          self.iceGatheringState = 'gathering';\n          self._emitGatheringStateChange();\n        }\n        self._emitBufferedCandidates();\n      }, 0);\n    }\n    var p = Promise.resolve();\n    p.then(function() {\n      if (!hasCallback) {\n        if (self.iceGatheringState === 'new') {\n          self.iceGatheringState = 'gathering';\n          self._emitGatheringStateChange();\n        }\n        // Usually candidates will be emitted earlier.\n        window.setTimeout(self._emitBufferedCandidates.bind(self), 500);\n      }\n    });\n    return p;\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var self = this;\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, this.signalingState)) {\n      var e = new Error('Can not set remote ' + description.type +\n          ' in state ' + this.signalingState);\n      e.name = 'InvalidStateError';\n      if (arguments.length > 2 && typeof arguments[2] === 'function') {\n        window.setTimeout(arguments[2], 0, e);\n      }\n      return Promise.reject(e);\n    }\n\n    var streams = {};\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    this.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      this.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      this.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      var rejected = SDPUtils.isRejected(mediaSection);\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (kind === 'application' && protocol === 'DTLS/SCTP') {\n        self.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          isDatachannel: true\n        };\n        return;\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === '1' || cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          self.transceivers[sdpMLineIndex]) {\n        self._disposeIceAndDtlsTransports(sdpMLineIndex);\n        self.transceivers[sdpMLineIndex].iceGatherer =\n            self.transceivers[0].iceGatherer;\n        self.transceivers[sdpMLineIndex].iceTransport =\n            self.transceivers[0].iceTransport;\n        self.transceivers[sdpMLineIndex].dtlsTransport =\n            self.transceivers[0].dtlsTransport;\n        if (self.transceivers[sdpMLineIndex].rtpSender) {\n          self.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              self.transceivers[0].dtlsTransport);\n        }\n        if (self.transceivers[sdpMLineIndex].rtpReceiver) {\n          self.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              self.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = self.transceivers[sdpMLineIndex] ||\n            self._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = usingBundle && sdpMLineIndex > 0 ?\n              self.transceivers[0].iceGatherer :\n              self._createIceGatherer(mid, sdpMLineIndex);\n        }\n\n        if (isComplete && cands.length &&\n            (!usingBundle || sdpMLineIndex === 0)) {\n          transceiver.iceTransport.setRemoteCandidates(cands);\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          rtpReceiver = new window.RTCRtpReceiver(transceiver.dtlsTransport,\n              kind);\n\n          track = rtpReceiver.track;\n          // FIXME: does not work with Plan B.\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n              Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                get: function() {\n                  return remoteMsid.stream;\n                }\n              });\n            }\n            Object.defineProperty(track, 'id', {\n              get: function() {\n                return remoteMsid.track;\n              }\n            });\n            streams[remoteMsid.stream].addTrack(track);\n            receiverList.push([track, rtpReceiver,\n              streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            streams.default.addTrack(track);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        self._transceive(self.transceivers[sdpMLineIndex],\n            false,\n            direction === 'sendrecv' || direction === 'sendonly');\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = self.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        self.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        self.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        self.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if ((isIceLite || isComplete) && cands.length) {\n            iceTransport.setRemoteCandidates(cands);\n          }\n          iceTransport.start(iceGatherer, remoteIceParameters,\n              'controlling');\n          dtlsTransport.start(remoteDtlsParameters);\n        }\n\n        self._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            streams[remoteMsid.stream].addTrack(track);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            streams.default.addTrack(track);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    this.remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    switch (description.type) {\n      case 'offer':\n        this._updateSignalingState('have-remote-offer');\n        break;\n      case 'answer':\n        this._updateSignalingState('stable');\n        break;\n      default:\n        throw new TypeError('unsupported type \"' + description.type +\n            '\"');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        self.remoteStreams.push(stream);\n        var event = new Event('addstream');\n        event.stream = stream;\n        self.dispatchEvent(event);\n        if (self.onaddstream !== null) {\n          window.setTimeout(function() {\n            self.onaddstream(event);\n          }, 0);\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          var trackEvent = new Event('track');\n          trackEvent.track = track;\n          trackEvent.receiver = receiver;\n          trackEvent.streams = [stream];\n          self.dispatchEvent(trackEvent);\n          if (self.ontrack !== null) {\n            window.setTimeout(function() {\n              self.ontrack(trackEvent);\n            }, 0);\n          }\n        });\n      }\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(self && self.transceivers)) {\n        return;\n      }\n      self.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    if (arguments.length > 1 && typeof arguments[1] === 'function') {\n      window.setTimeout(arguments[1], 0);\n    }\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this.dispatchEvent(event);\n    if (this.onsignalingstatechange !== null) {\n      this.onsignalingstatechange(event);\n    }\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var self = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (self.needNegotiation === false) {\n        return;\n      }\n      self.needNegotiation = false;\n      var event = new Event('negotiationneeded');\n      self.dispatchEvent(event);\n      if (self.onnegotiationneeded !== null) {\n        self.onnegotiationneeded(event);\n      }\n    }, 0);\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var self = this;\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      states[transceiver.iceTransport.state]++;\n      states[transceiver.dtlsTransport.state]++;\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0 || states.checking > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0 || states.completed > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== self.iceConnectionState) {\n      self.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this.dispatchEvent(event);\n      if (this.oniceconnectionstatechange !== null) {\n        this.oniceconnectionstatechange(event);\n      }\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var self = this;\n    if (this._pendingOffer) {\n      throw new Error('createOffer called while there is a pending offer.');\n    }\n    var offerOptions;\n    if (arguments.length === 1 && typeof arguments[0] !== 'function') {\n      offerOptions = arguments[0];\n    } else if (arguments.length === 3) {\n      offerOptions = arguments[2];\n    }\n\n    var numAudioTracks = this.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = this.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        this._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        this._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n    // reorder tracks\n    var transceivers = sortTracks(this.transceivers);\n\n    var sdp = SDPUtils.writeSessionBoilerplate(this._sdpSessionId);\n    transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = self.usingBundle && sdpMLineIndex > 0 ?\n            transceivers[0].iceGatherer :\n            self._createIceGatherer(mid, sdpMLineIndex);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video') {\n          sendEncodingParameters[0].rtx = {\n            ssrc: (2 * sdpMLineIndex + 1) * 1001 + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n          transceiver.dtlsTransport,\n          kind\n        );\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (this._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += SDPUtils.writeMediaSection(transceiver,\n          transceiver.localCapabilities, 'offer', transceiver.stream);\n      sdp += 'a=rtcp-rsize\\r\\n';\n    });\n\n    this._pendingOffer = transceivers;\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    if (arguments.length && typeof arguments[0] === 'function') {\n      window.setTimeout(arguments[0], 0, desc);\n    }\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var sdp = SDPUtils.writeSessionBoilerplate(this._sdpSessionId);\n    if (this.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + this.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    this.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (transceiver.isDatachannel) {\n        sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n' +\n            'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video') {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: (2 * sdpMLineIndex + 2) * 1001 + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += SDPUtils.writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    if (arguments.length && typeof arguments[0] === 'function') {\n      window.setTimeout(arguments[0], 0, desc);\n    }\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    if (!candidate) {\n      for (var j = 0; j < this.transceivers.length; j++) {\n        this.transceivers[j].iceTransport.addRemoteCandidate({});\n        if (this.usingBundle) {\n          return Promise.resolve();\n        }\n      }\n    } else {\n      var mLineIndex = candidate.sdpMLineIndex;\n      if (candidate.sdpMid) {\n        for (var i = 0; i < this.transceivers.length; i++) {\n          if (this.transceivers[i].mid === candidate.sdpMid) {\n            mLineIndex = i;\n            break;\n          }\n        }\n      }\n      var transceiver = this.transceivers[mLineIndex];\n      if (transceiver) {\n        var cand = Object.keys(candidate.candidate).length > 0 ?\n            SDPUtils.parseCandidate(candidate.candidate) : {};\n        // Ignore Chrome's invalid candidates since Edge does not like them.\n        if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n          return Promise.resolve();\n        }\n        // Ignore RTCP candidates, we assume RTCP-MUX.\n        if (cand.component &&\n            !(cand.component === '1' || cand.component === 1)) {\n          return Promise.resolve();\n        }\n        transceiver.iceTransport.addRemoteCandidate(cand);\n\n        // update the remoteDescription.\n        var sections = SDPUtils.splitSections(this.remoteDescription.sdp);\n        sections[mLineIndex + 1] += (cand.type ? candidate.candidate.trim()\n            : 'a=end-of-candidates') + '\\r\\n';\n        this.remoteDescription.sdp = sections.join('');\n      }\n    }\n    if (arguments.length > 1 && typeof arguments[1] === 'function') {\n      window.setTimeout(arguments[1], 0);\n    }\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.getStats = function() {\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n        'dtlsTransport'].forEach(function(method) {\n          if (transceiver[method]) {\n            promises.push(transceiver[method].getStats());\n          }\n        });\n    });\n    var cb = arguments.length > 1 && typeof arguments[1] === 'function' &&\n        arguments[1];\n    var fixStatsType = function(stat) {\n      return {\n        inboundrtp: 'inbound-rtp',\n        outboundrtp: 'outbound-rtp',\n        candidatepair: 'candidate-pair',\n        localcandidate: 'local-candidate',\n        remotecandidate: 'remote-candidate'\n      }[stat.type] || stat.type;\n    };\n    return new Promise(function(resolve) {\n      // shim getStats with maplike support\n      var results = new Map();\n      Promise.all(promises).then(function(res) {\n        res.forEach(function(result) {\n          Object.keys(result).forEach(function(id) {\n            result[id].type = fixStatsType(result[id]);\n            results.set(id, result[id]);\n          });\n        });\n        if (cb) {\n          window.setTimeout(cb, 0, results);\n        }\n        resolve(results);\n      });\n    });\n  };\n  return RTCPeerConnection;\n};\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES paramters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var navigator = window && window.navigator;\n\n  var shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(function(e) {\n      return Promise.reject(shimError_(e));\n    });\n  };\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\n\nvar firefoxShim = {\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n            this.removeEventListener('addstream', this._ontrackpoly);\n          }\n          this.addEventListener('track', this._ontrack = f);\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\n            e.stream.getTracks().forEach(function(track) {\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = {track: track};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            }.bind(this));\n          }.bind(this));\n        }\n      });\n    }\n  },\n\n  shimSourceObject: function(window) {\n    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this.mozSrcObject;\n          },\n          set: function(stream) {\n            this.mozSrcObject = stream;\n          }\n        });\n      }\n    }\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (typeof window !== 'object' || !(window.RTCPeerConnection ||\n        window.mozRTCPeerConnection)) {\n      return; // probably media.peerconnection.enabled=false in about:config\n    }\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (browserDetails.version < 38) {\n          // .urls is not supported in FF < 38.\n          // create RTCIceServers with a single url.\n          if (pcConfig && pcConfig.iceServers) {\n            var newIceServers = [];\n            for (var i = 0; i < pcConfig.iceServers.length; i++) {\n              var server = pcConfig.iceServers[i];\n              if (server.hasOwnProperty('urls')) {\n                for (var j = 0; j < server.urls.length; j++) {\n                  var newServer = {\n                    url: server.urls[j]\n                  };\n                  if (server.urls[j].indexOf('turn') === 0) {\n                    newServer.username = server.username;\n                    newServer.credential = server.credential;\n                  }\n                  newIceServers.push(newServer);\n                }\n              } else {\n                newIceServers.push(pcConfig.iceServers[i]);\n              }\n            }\n            pcConfig.iceServers = newIceServers;\n          }\n        }\n        return new window.mozRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.mozRTCPeerConnection.prototype;\n\n      // wrap static methods. Currently just generateCertificate.\n      if (window.mozRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.mozRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n\n      window.RTCSessionDescription = window.mozRTCSessionDescription;\n      window.RTCIceCandidate = window.mozRTCIceCandidate;\n    }\n\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n\n    // shim getStats with maplike support\n    var makeMapStats = function(stats) {\n      var map = new Map();\n      Object.keys(stats).forEach(function(key) {\n        map.set(key, stats[key]);\n        map[key] = stats[key];\n      });\n      return map;\n    };\n\n    var modernStatsTypes = {\n      inboundrtp: 'inbound-rtp',\n      outboundrtp: 'outbound-rtp',\n      candidatepair: 'candidate-pair',\n      localcandidate: 'local-candidate',\n      remotecandidate: 'remote-candidate'\n    };\n\n    var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(\n      selector,\n      onSucc,\n      onErr\n    ) {\n      return nativeGetStats.apply(this, [selector || null])\n        .then(function(stats) {\n          if (browserDetails.version < 48) {\n            stats = makeMapStats(stats);\n          }\n          if (browserDetails.version < 53 && !onSucc) {\n            // Shim only promise getStats with spec-hyphens in type names\n            // Leave callback version alone; misc old uses of forEach before Map\n            try {\n              stats.forEach(function(stat) {\n                stat.type = modernStatsTypes[stat.type] || stat.type;\n              });\n            } catch (e) {\n              if (e.name !== 'TypeError') {\n                throw e;\n              }\n              // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n              stats.forEach(function(stat, i) {\n                stats.set(i, Object.assign({}, stat, {\n                  type: modernStatsTypes[stat.type] || stat.type\n                }));\n              });\n            }\n          }\n          return stats;\n        })\n        .then(onSucc, onErr);\n    };\n  }\n};\n\n// Expose public methods.\nmodule.exports = {\n  shimOnTrack: firefoxShim.shimOnTrack,\n  shimSourceObject: firefoxShim.shimSourceObject,\n  shimPeerConnection: firefoxShim.shimPeerConnection,\n  shimGetUserMedia: require('./getusermedia')\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n  var MediaStreamTrack = window && window.MediaStreamTrack;\n\n  var shimError_ = function(e) {\n    return {\n      name: {\n        InternalError: 'NotReadableError',\n        NotSupportedError: 'TypeError',\n        PermissionDeniedError: 'NotAllowedError',\n        SecurityError: 'NotAllowedError'\n      }[e.name] || e.name,\n      message: {\n        'The operation is insecure.': 'The request is not allowed by the ' +\n        'user agent or the platform in the current context.'\n      }[e.message] || e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  // getUserMedia constraints shim.\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    var constraintsToFF37_ = function(c) {\n      if (typeof c !== 'object' || c.require) {\n        return c;\n      }\n      var require = [];\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = c[key] = (typeof c[key] === 'object') ?\n            c[key] : {ideal: c[key]};\n        if (r.min !== undefined ||\n            r.max !== undefined || r.exact !== undefined) {\n          require.push(key);\n        }\n        if (r.exact !== undefined) {\n          if (typeof r.exact === 'number') {\n            r. min = r.max = r.exact;\n          } else {\n            c[key] = r.exact;\n          }\n          delete r.exact;\n        }\n        if (r.ideal !== undefined) {\n          c.advanced = c.advanced || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[key] = {min: r.ideal, max: r.ideal};\n          } else {\n            oc[key] = r.ideal;\n          }\n          c.advanced.push(oc);\n          delete r.ideal;\n          if (!Object.keys(r).length) {\n            delete c[key];\n          }\n        }\n      });\n      if (require.length) {\n        c.require = require;\n      }\n      return c;\n    };\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (browserDetails.version < 38) {\n      logging('spec: ' + JSON.stringify(constraints));\n      if (constraints.audio) {\n        constraints.audio = constraintsToFF37_(constraints.audio);\n      }\n      if (constraints.video) {\n        constraints.video = constraintsToFF37_(constraints.video);\n      }\n      logging('ff37: ' + JSON.stringify(constraints));\n    }\n    return navigator.mozGetUserMedia(constraints, onSuccess, function(e) {\n      onError(shimError_(e));\n    });\n  };\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      getUserMedia_(constraints, resolve, reject);\n    });\n  };\n\n  // Shim for mediaDevices on older versions.\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: getUserMediaPromise_,\n      addEventListener: function() { },\n      removeEventListener: function() { }\n    };\n  }\n  navigator.mediaDevices.enumerateDevices =\n      navigator.mediaDevices.enumerateDevices || function() {\n        return new Promise(function(resolve) {\n          var infos = [\n            {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n            {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n          ];\n          resolve(infos);\n        });\n      };\n\n  if (browserDetails.version < 41) {\n    // Work around http://bugzil.la/1169665\n    var orgEnumerateDevices =\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n    navigator.mediaDevices.enumerateDevices = function() {\n      return orgEnumerateDevices().then(undefined, function(e) {\n        if (e.name === 'NotFoundError') {\n          return [];\n        }\n        throw e;\n      });\n    };\n  }\n  if (browserDetails.version < 49) {\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      return origGetUserMedia(c).then(function(stream) {\n        // Work around https://bugzil.la/802326\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(function(track) {\n            track.stop();\n          });\n          throw new DOMException('The object can not be found here.',\n                                 'NotFoundError');\n        }\n        return stream;\n      }, function(e) {\n        return Promise.reject(shimError_(e));\n      });\n    };\n  }\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    var remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        var obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    if (browserDetails.version < 44) {\n      return getUserMedia_(constraints, onSuccess, onError);\n    }\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nvar utils = require('../utils');\n\nvar safariShim = {\n  // TODO: DrAlex, should be here, double check against LayoutTests\n\n  // TODO: once the back-end for the mac port is done, add.\n  // TODO: check for webkitGTK+\n  // shimPeerConnection: function() { },\n\n  shimLocalStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getLocalStreams = function() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n    }\n    if (!('getStreamById' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getStreamById = function(id) {\n        var result = null;\n        if (this._localStreams) {\n          this._localStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        if (this._remoteStreams) {\n          this._remoteStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        return result;\n      };\n    }\n    if (!('addStream' in window.RTCPeerConnection.prototype)) {\n      var _addTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        if (this._localStreams.indexOf(stream) === -1) {\n          this._localStreams.push(stream);\n        }\n        var self = this;\n        stream.getTracks().forEach(function(track) {\n          _addTrack.call(self, track, stream);\n        });\n      };\n\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n        if (stream) {\n          if (!this._localStreams) {\n            this._localStreams = [stream];\n          } else if (this._localStreams.indexOf(stream) === -1) {\n            this._localStreams.push(stream);\n          }\n        }\n        _addTrack.call(this, track, stream);\n      };\n    }\n    if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        var index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        var self = this;\n        var tracks = stream.getTracks();\n        this.getSenders().forEach(function(sender) {\n          if (tracks.indexOf(sender.track) !== -1) {\n            self.removeTrack(sender);\n          }\n        });\n      };\n    }\n  },\n  shimRemoteStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getRemoteStreams = function() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n    }\n    if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n        get: function() {\n          return this._onaddstream;\n        },\n        set: function(f) {\n          if (this._onaddstream) {\n            this.removeEventListener('addstream', this._onaddstream);\n            this.removeEventListener('track', this._onaddstreampoly);\n          }\n          this.addEventListener('addstream', this._onaddstream = f);\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            var stream = e.streams[0];\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.indexOf(stream) >= 0) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            var event = new Event('addstream');\n            event.stream = e.streams[0];\n            this.dispatchEvent(event);\n          }.bind(this));\n        }\n      });\n    }\n  },\n  shimCallbacksAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    var prototype = window.RTCPeerConnection.prototype;\n    var createOffer = prototype.createOffer;\n    var createAnswer = prototype.createAnswer;\n    var setLocalDescription = prototype.setLocalDescription;\n    var setRemoteDescription = prototype.setRemoteDescription;\n    var addIceCandidate = prototype.addIceCandidate;\n\n    prototype.createOffer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    prototype.createAnswer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    var withCallback = function(description, successCallback, failureCallback) {\n      var promise = setLocalDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setLocalDescription = withCallback;\n\n    withCallback = function(description, successCallback, failureCallback) {\n      var promise = setRemoteDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setRemoteDescription = withCallback;\n\n    withCallback = function(candidate, successCallback, failureCallback) {\n      var promise = addIceCandidate.apply(this, [candidate]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.addIceCandidate = withCallback;\n  },\n  shimGetUserMedia: function(window) {\n    var navigator = window && window.navigator;\n\n    if (!navigator.getUserMedia) {\n      if (navigator.webkitGetUserMedia) {\n        navigator.getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\n      } else if (navigator.mediaDevices &&\n          navigator.mediaDevices.getUserMedia) {\n        navigator.getUserMedia = function(constraints, cb, errcb) {\n          navigator.mediaDevices.getUserMedia(constraints)\n          .then(cb, errcb);\n        }.bind(navigator);\n      }\n    }\n  },\n  shimRTCIceServerUrls: function(window) {\n    // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n    var OrigPeerConnection = window.RTCPeerConnection;\n    window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        var newIceServers = [];\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\n          var server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n    window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n    // wrap static methods. Currently just generateCertificate.\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get: function() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n};\n\n// Expose public methods.\nmodule.exports = {\n  shimCallbacksAPI: safariShim.shimCallbacksAPI,\n  shimLocalStreamsAPI: safariShim.shimLocalStreamsAPI,\n  shimRemoteStreamsAPI: safariShim.shimRemoteStreamsAPI,\n  shimGetUserMedia: safariShim.shimGetUserMedia,\n  shimRTCIceServerUrls: safariShim.shimRTCIceServerUrls\n  // TODO\n  // shimPeerConnection: safariShim.shimPeerConnection\n};\n","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-global',\n    './logging.json'\n], function(_, assert, global, logging) {\n    'use strict';\n\n    var defaultCategory = 'websdk';\n    var start = global['__phenixPageLoadTime'] || global['__pageLoadTime'] || _.now();\n    var defaultEnvironment = 'production' || '?';\n    var sdkVersion = '2022-04-13T15:08:08Z' || '?';\n    var releaseVersion = '2022.0.2';\n\n    function Logger() {\n        this._appenders = [];\n        this._userId = null;\n        this._sessionId = null;\n        this._environment = defaultEnvironment;\n        this._applicationVersion = sdkVersion;\n    }\n\n    Logger.prototype.trace = function trace(/* formatStr, [parameter], ...*/) {\n        return log.call(this, arguments, {level: logging.level.TRACE});\n    };\n\n    Logger.prototype.debug = function debug(/* formatStr, [parameter], ...*/) {\n        return log.call(this, arguments, {level: logging.level.DEBUG});\n    };\n\n    Logger.prototype.info = function info(/* formatStr, [parameter], ...*/) {\n        return log.call(this, arguments, {level: logging.level.INFO});\n    };\n\n    Logger.prototype.warn = function warn(/* formatStr, [parameter], ...*/) {\n        return log.call(this, arguments, {level: logging.level.WARN});\n    };\n\n    Logger.prototype.error = function error(/* formatStr, [parameter], ...*/) {\n        return log.call(this, arguments, {level: logging.level.ERROR});\n    };\n\n    Logger.prototype.fatal = function fatal(/* formatStr, [parameter], ...*/) {\n        return log.call(this, arguments, {level: logging.level.FATAL});\n    };\n\n    Logger.prototype.addAppender = function addAppender(appender) {\n        assert.isObject(appender, 'appender');\n        assert.isFunction(appender.log, 'appender.log');\n\n        this._appenders.push(appender);\n    };\n\n    Logger.prototype.getAppenders = function getAppenders() {\n        return this._appenders;\n    };\n\n    Logger.prototype.getUserId = function getUserId() {\n        return this._userId;\n    };\n\n    Logger.prototype.setUserId = function setUserId(userId) {\n        this._userId = userId;\n    };\n\n    Logger.prototype.getEnvironment = function getEnvironment() {\n        return this._environment;\n    };\n\n    Logger.prototype.setEnvironment = function setEnvironment(environment) {\n        this._environment = environment;\n    };\n\n    Logger.prototype.getApplicationVersion = function getApplicationVersion() {\n        return this._applicationVersion;\n    };\n\n    Logger.prototype.setApplicationVersion = function setApplicationVersion(version) {\n        this._applicationVersion = version;\n    };\n\n    Logger.prototype.getObservableSessionId = function getObservableSessionId() {\n        return this._observableSessionId;\n    };\n\n    Logger.prototype.setObservableSessionId = function setObservableSessionId(observableSessionId) {\n        this._observableSessionId = observableSessionId;\n\n        if (this._sessionIdSubscription) {\n            this._sessionIdSubscription.dispose();\n        }\n\n        if (observableSessionId) {\n            assert.isObject(observableSessionId, 'observableSessionId');\n\n            this._sessionIdSubscription = this._observableSessionId.subscribe(_.bind(onSessionIdChange, this), {initial: 'notify'});\n        }\n    };\n\n    function onSessionIdChange(sessionId) {\n        this._sessionId = sessionId;\n\n        if (!sessionId) {\n            this.info('Websdk version [%s] ([%s]), user agent [%s]', sdkVersion, releaseVersion, navigator.userAgent);\n        } else {\n            this.info('Session started on websdk version [%s] ([%s]), user agent [%s]', sdkVersion, releaseVersion, navigator.userAgent);\n        }\n    }\n\n    function log(messages, context) {\n        var now = _.now();\n        var since = (now - start) / 1000;\n        var level = convertLevel(context.level);\n        var category = context.name || defaultCategory;\n        var that = this;\n\n        _.forEach(this._appenders, function(appender) {\n            try {\n                appender.log(since, level, category, stringify(Array.prototype.slice.call(messages)), that._sessionId, that._userId, that._environment, that._applicationVersion, context);\n            } catch (e) { } // eslint-disable-line no-empty\n        });\n    }\n\n    function convertLevel(jsLoggerLevel) {\n        switch (jsLoggerLevel) {\n        case logging.level.TRACE:\n            return 'Trace';\n        case logging.level.DEBUG:\n            return 'Debug';\n        case logging.level.INFO:\n            return 'Info';\n        case logging.level.WARN:\n            return 'Warn';\n        case logging.level.ERROR:\n            return 'Error';\n        case logging.level.FATAL:\n            return 'Fatal';\n        default:\n            throw new Error('Unsupported Logging Level ' + jsLoggerLevel);\n        }\n    }\n\n    var stringify = function stringify(args) {\n        if (args.length === 0) {\n            return;\n        }\n\n        var newArgs = [];\n        var errorStacks = [];\n\n        _.forEach(args, function(arg) {\n            newArgs.push(_.toString(arg));\n\n            if (arg instanceof Error) {\n                errorStacks.push(arg.stack);\n            }\n        });\n\n        return format(newArgs.concat(errorStacks));\n    };\n\n    var format = function format(args) {\n        var fmt = args[0];\n        var idx = 0;\n\n        while (fmt.indexOf && args.length > 1 && idx >= 0) {\n            idx = fmt.indexOf('%', idx);\n\n            if (idx > 0) {\n                var type = fmt.substring(idx + 1, idx + 2);\n\n                switch (type) {\n                case '%':\n                    // Escaped '%%' turns into '%'\n                    fmt = fmt.substring(0, idx) + fmt.substring(idx + 1);\n                    idx++;\n\n                    break;\n                case 's':\n                case 'd':\n                    // Replace '%d' or '%s' with the argument\n                    args[0] = fmt = fmt.substring(0, idx) + args[1] + fmt.substring(idx + 2);\n                    args.splice(1, 1);\n\n                    break;\n                default:\n                    return args;\n                }\n            }\n        }\n\n        return args;\n    };\n\n    return Logger;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([], function() {\n    'use strict';\n\n    var getGlobal = function getGlobal() {\n        if (typeof window !== \"undefined\") { // eslint-disable-line no-restricted-globals\n            return window; // eslint-disable-line no-restricted-globals\n        }\n\n        if (typeof global !== \"undefined\") {\n            return global; // eslint-disable-line no-undef\n        }\n\n        if (typeof self !== \"undefined\"){ // eslint-disable-line no-restricted-globals\n            return self; // eslint-disable-line no-restricted-globals\n        }\n\n        return {};\n    };\n\n    return getGlobal;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    './logging.json'\n], function(_, assert, logging) {\n    'use strict';\n\n    function ConsoleAppender() {\n        this._minLevel = logging.level.TRACE;\n    }\n\n    ConsoleAppender.prototype.setThreshold = function setThreshold(level) {\n        assert.isNumber(level, 'level');\n\n        this._minLevel = level;\n    };\n\n    ConsoleAppender.prototype.getThreshold = function getThreshold() {\n        return this._minLevel;\n    };\n\n    ConsoleAppender.prototype.log = function(since, level, category, messages, sessionId, userId, environment, version, context) {\n        if (context.level < this._minLevel) {\n            return;\n        }\n\n        messages[0] = since + ' [' + category + '] ' + level + ' ' + messages[0];\n\n        if (context.level > logging.level.INFO) {\n            logError(messages);\n        } else {\n            log(messages);\n        }\n    };\n\n    var log = function(args) {\n        console.log.apply(console, args);\n    } || function() { };\n\n    var logError = function(args) {\n        console.error.apply(console, args);\n    } || log;\n\n    return ConsoleAppender;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    './Observable'\n], function(_, assert, Observable) {\n    'use strict';\n\n    function ObservableArray(initialValues, beforeChange) {\n        var valuesToSet = initialValues;\n\n        if (valuesToSet === undefined || valuesToSet === null) {\n            valuesToSet = [];\n        }\n\n        assert.isArray(valuesToSet, 'valuesToSet');\n\n        this.observableArray = new Observable(valuesToSet, beforeChange);\n    }\n\n    ObservableArray.prototype.getValue = function getValue() {\n        return this.observableArray.getValue();\n    };\n\n    ObservableArray.prototype.setValue = function setValue(values) {\n        if (values === undefined || values === null) {\n            values = [];\n        }\n\n        if (values !== undefined) {\n            assert.isArray(values, 'values');\n        }\n\n        return this.observableArray.setValue(values);\n    };\n\n    ObservableArray.prototype.subscribe = function subscribe(callback, options) {\n        return this.observableArray.subscribe(callback, options);\n    };\n\n    ObservableArray.prototype.push = function push(value) {\n        var array = this.observableArray.getValue();\n        array.push(value);\n\n        this.observableArray.setValue(array);\n    };\n\n    ObservableArray.prototype.pop = function pop() {\n        var array = this.observableArray.getValue();\n        var value = array.pop();\n\n        this.observableArray.setValue(array);\n\n        return value;\n    };\n\n    ObservableArray.prototype.remove = function remove(valueOrFunction) {\n        var array = this.observableArray.getValue();\n\n        var filterFunction = function(value) {\n            return _.isFunction(valueOrFunction) ? valueOrFunction(value) : value === valueOrFunction;\n        };\n\n        var valuesToRemove = _.filter(array, filterFunction);\n\n        if (valuesToRemove.length > 0) {\n            this.observableArray.setValue(_.remove(array, filterFunction));\n        }\n\n        return valuesToRemove;\n    };\n\n    ObservableArray.prototype.removeAll = function removeAll() {\n        var array = this.observableArray.getValue();\n\n        this.observableArray.setValue([]);\n\n        return array;\n    };\n\n    ObservableArray.prototype.extend = function extend(options) {\n        this.observableArray.extend(options);\n\n        return this;\n    };\n\n    return ObservableArray;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function(_, assert) {\n    'use strict';\n\n    function ObservableMonitor(observable) {\n        assert.isObject(observable, 'observable');\n\n        this._observable = observable;\n        this._listenerSubscription = null;\n        this._isEnabled = false;\n    }\n\n    ObservableMonitor.prototype.start = function start(checkForChanges, timeout) {\n        this._isEnabled = true;\n\n        this._listenerSubscription = this._observable.subscribe(_.noop, {\n            listenForChanges: {\n                callback: checkForChanges,\n                timeout: timeout || 500\n            }\n        });\n    };\n\n    ObservableMonitor.prototype.stop = function stop() {\n        this._isEnabled = false;\n\n        if (this._listenerSubscription) {\n            this._listenerSubscription.dispose();\n        }\n\n        this._listenerSubscription = null;\n    };\n\n    ObservableMonitor.prototype.isEnabled = function isEnabled() {\n        return this._isEnabled;\n    };\n\n    return ObservableMonitor;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-logging',\n    '../environment',\n    './telemetryAppenderFactory'\n], function(_, assert, logging, environment, telemetryAppenderFactory) {\n    'use strict';\n\n    function PCastLoggerFactory() {\n\n    }\n\n    PCastLoggerFactory.prototype.createPCastLogger = function createPCastLogger(baseUri, disableConsole, loggingLevel) {\n        if (baseUri) {\n            assert.isStringNotEmpty(baseUri, 'baseUri');\n        }\n\n        var logger = new logging.Logger();\n        var env = environment.getEnvironmentFromUrl(baseUri);\n        var telemetryAppender = telemetryAppenderFactory.getAppender(baseUri);\n\n        logger.setEnvironment(env);\n\n        if (loggingLevel) {\n            telemetryAppender.setThreshold(loggingLevel);\n        } else {\n            telemetryAppender.setThreshold(logging.level.INFO);\n        }\n\n        if (!disableConsole) {\n            logger.addAppender(new logging.ConsoleAppender());\n        }\n\n        logger.addAppender(telemetryAppender);\n\n        logger.isPCastLogger = true;\n\n        return logger;\n    };\n\n    return new PCastLoggerFactory();\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    '../environment',\n    './TelemetryAppender'\n], function(_, assert, environment, TelemetryAppender) {\n    function TelemetryAppenderFactory() {\n        this._telemetryAppenders = {};\n    }\n\n    TelemetryAppenderFactory.prototype.getAppender = function getAppender(pcastBaseUri) {\n        var env = environment.getEnvironmentFromUrl(pcastBaseUri || '');\n        var telemetryServerUrl = environment.getTelemetryServerUri(pcastBaseUri);\n\n        if (!this._telemetryAppenders[env]) {\n            this._telemetryAppenders[env] = createNewAppender.call(this, telemetryServerUrl);\n        }\n\n        return this._telemetryAppenders[env];\n    };\n\n    function createNewAppender(uri) {\n        var appender = new TelemetryAppender(uri);\n\n        if (!uri) {\n            appender.setEnabled(false);\n        }\n\n        return appender;\n    }\n\n    return new TelemetryAppenderFactory();\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-rtc',\n    'phenix-web-logging',\n    'phenix-web-proto',\n    '../protocol/telemetryProto.json'\n], function(_, assert, rtc, logging, proto, telemetryProto) {\n    var loggingUrl = '/logs';\n\n    function TelemetryAppender(uri) {\n        assert.isString(uri, 'uri');\n\n        this._domain = typeof location === 'object' ? location.hostname : rtc.browser + '-' + rtc.browserVersion + '-unknown';\n        this._minLevel = logging.level.TRACE;\n        this._isEnabled = true;\n        this._browser = (rtc.browser || 'Browser') + '/' + (rtc.browserVersion || '?');\n        this._mostRecentRuntime = 0;\n        this._batchHttpProtocol = new proto.BatchHttpProto(uri + loggingUrl, [telemetryProto], 'telemetry.StoreLogRecords', {\n            maxAttempts: 3,\n            maxBufferedRecords: 1000,\n            maxBatchSize: 512\n        });\n\n        this._batchHttpProtocol.on('capacity', _.bind(onCapacity, this));\n    }\n\n    TelemetryAppender.prototype.setThreshold = function setThreshold(level) {\n        assert.isNumber(level, 'level');\n\n        this._minLevel = level;\n    };\n\n    TelemetryAppender.prototype.getThreshold = function getThreshold() {\n        return this._minLevel;\n    };\n\n    TelemetryAppender.prototype.isEnabled = function isEnabled() {\n        return this._isEnabled;\n    };\n\n    TelemetryAppender.prototype.setEnabled = function setEnabled(enabled) {\n        assert.isBoolean(enabled, 'enabled');\n\n        this._isEnabled = enabled;\n    };\n\n    TelemetryAppender.prototype.log = function log(since, level, category, messages, sessionId, userId, environment, version, context) {\n        if (context.level < this._minLevel || !this._isEnabled) {\n            return;\n        }\n\n        assert.isArray(messages, 'messages');\n\n        this._mostRecentRuntime = since;\n        this._mostRecentSessionId = sessionId;\n        this._mostRecentUserId = userId;\n        this._mostRecentVersion = version;\n        this._mostRecentEnvironment = environment;\n\n        addMessagesToRecords.call(this, level, category, messages);\n    };\n\n    function addMessagesToRecords(level, category, messages) {\n        this._batchHttpProtocol.addRecord({\n            level: level,\n            timestamp: _.isoString(),\n            category: category,\n            message: messages.join(' '),\n            source: this._browser,\n            fullQualifiedName: this._domain,\n            sessionId: this._mostRecentSessionId,\n            userId: this._mostRecentUserId,\n            environment: this._mostRecentEnvironment,\n            version: this._mostRecentVersion,\n            runtime: this._mostRecentRuntime\n        });\n    }\n\n    function onCapacity(deleteRecords) {\n        this._batchHttpProtocol.addRecordToBeginning({\n            level: 'Warn',\n            timestamp: _.isoString(),\n            category: 'websdk/telemetryLogger',\n            message: 'Deleted ' + deleteRecords + ' records',\n            source: this._browser,\n            fullQualifiedName: this._domain,\n            sessionId: this._mostRecentSessionId,\n            userId: this._mostRecentUserId,\n            environment: this._mostRecentEnvironment,\n            version: this._mostRecentVersion,\n            runtime: this._mostRecentRuntime\n        });\n    }\n\n    return TelemetryAppender;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-reconnecting-websocket',\n    './MQService'\n], function(_, assert, event, ReconnectingWebSocket, MQService) {\n    'use strict';\n\n    function MQWebSocket(uri, logger, protocols, apiVersion) {\n        assert.isStringNotEmpty(uri, 'uri');\n        assert.isObject(logger, 'logger');\n        assert.isArray(protocols, 'protocols');\n\n        // TODO (DY) Don't dispose of event listeners on disconnect event\n        this._uri = uri;\n        this._logger = logger;\n        this._logger.info('Connecting to [%s]', uri);\n\n        this._webSocket = new ReconnectingWebSocket(this._uri, this._logger);\n        this._mqService = new MQService(this._logger, _.bind(sendMessage, this), _.bind(setOnMessage, this), protocols, apiVersion);\n        this._namedEvents = new event.NamedEvents();\n\n        this._webSocket.onconnected = _.bind(onConnected, this);\n        this._webSocket.onreconnecting = _.bind(onReconnecting, this);\n        this._webSocket.onreconnected = _.bind(onReconnected, this);\n        this._webSocket.ondisconnected = _.bind(onDisconnected, this);\n        this._webSocket.onerror = _.bind(onError, this);\n\n        this._disconnected = false;\n    }\n\n    MQWebSocket.prototype.onEvent = function(eventName, handler) {\n        this._namedEvents.listen(eventName, handler);\n\n        return this._mqService.onEvent(eventName, handler);\n    };\n\n    MQWebSocket.prototype.onRequest = function(requestName, handler) {\n        return this._mqService.onRequest(requestName, handler);\n    };\n\n    MQWebSocket.prototype.sendRequest = function sendRequest(type, message, callback, settings) {\n        return this._mqService.sendRequest(type, message, callback, settings);\n    };\n\n    MQWebSocket.prototype.sendResponse = function sendResponse(requestId, type, message, callback) {\n        return this._mqService.sendResponse(requestId, type, message, callback);\n    };\n\n    MQWebSocket.prototype.disconnect = function() {\n        this._disconnected = true;\n\n        return this._webSocket.disconnect();\n    };\n\n    MQWebSocket.prototype.disposeOfPendingRequests = function disposeOfPendingRequests() {\n        this._logger.info('Disposing of pending MQ WebSocket requests');\n\n        return this._mqService.disposeOfRequests();\n    };\n\n    MQWebSocket.prototype.getApiVersion = function getApiVersion() {\n        return this._mqService.getApiVersion();\n    };\n\n    MQWebSocket.prototype.toString = function() {\n        return 'MQWebSocket[' + this._webSocket.toString() + ']';\n    };\n\n    function triggerEvent(eventName, args) {\n        this._namedEvents.fire(eventName, args, this);\n    }\n\n    function onReconnecting(evt) { // eslint-disable-line no-unused-vars\n        triggerEvent.call(this, 'reconnecting');\n    }\n\n    function onConnected(evt) { // eslint-disable-line no-unused-vars\n        triggerEvent.call(this, 'connected');\n    }\n\n    function onReconnected(evt) { // eslint-disable-line no-unused-vars\n        triggerEvent.call(this, 'reconnected');\n    }\n\n    function onDisconnected(evt) {\n        triggerEvent.call(this, 'disconnected', [evt.code, evt.reason]);\n\n        if (this._disconnected) {\n            this._namedEvents.dispose();\n            this._mqService.dispose();\n        }\n    }\n\n    function onError(evt) {\n        triggerEvent.call(this, 'error', [evt.data]);\n    }\n\n    function setOnMessage(callback) {\n        this._webSocket.onmessage = callback;\n    }\n\n    function sendMessage(message) {\n        if (this._webSocket) {\n            this._webSocket.send(message);\n        }\n    }\n\n    return MQWebSocket;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './ReconnectingWebSocket'\n], function(ReconnectingWebSocket) {\n    'use strict';\n\n    return ReconnectingWebSocket;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-network-connection-monitor'\n], function(_, assert, networkConnectionMonitor) {\n    'use strict';\n\n    var networkDisconnectHysteresisInterval = 15000;\n    var waitForDisconnectEventTimeout = 1000;\n    var defaultReconnectBackoffInterval = 1000;\n    var defaultMaxReconnectAttempts = 4;\n    var closeReasons = {\n        byebye: {\n            code: 1000,\n            reason: 'byebye',\n            desc: 'Client closed'\n        },\n        backoffLimitReached: {\n            code: 4000,\n            reason: 'backoff-limit-reached',\n            desc: 'Reached the limit in terms of the number of reconnects'\n        },\n        networkDisconnect: {\n            code: 4001,\n            reason: 'network-disconnect',\n            desc: 'Network connection monitor determined loss to internet connectivity'\n        },\n        reconnecting: {\n            code: 4002,\n            reason: 'reconnecting',\n            desc: 'Closing WebSocket in order to attempt to establish another connection'\n        }\n    };\n    var readyStates = {\n        connecting: {\n            code: 0,\n            state: 'CONNECTING',\n            desc: 'The connection is not yet open'\n        },\n        open: {\n            code: 1,\n            state: 'OPEN',\n            desc: 'The connection is open and ready to communicate'\n        },\n        closing: {\n            code: 2,\n            state: 'CLOSING',\n            desc: 'The connection is in the process of closing'\n        },\n        closed: {\n            code: 3,\n            state: 'CLOSED',\n            desc: 'The connection is closed or could not be opened'\n        }\n    };\n\n    function ReconnectingWebSocket(uri, logger, maxReconnectAttempts, reconnectBackoffInterval) {\n        assert.isStringNotEmpty(uri, 'uri');\n        assert.isObject(logger, 'logger');\n\n        if (!_.isNullOrUndefined(maxReconnectAttempts)) {\n            assert.isNumber(maxReconnectAttempts, 'maxReconnectAttempts');\n        } else {\n            maxReconnectAttempts = defaultMaxReconnectAttempts;\n        }\n\n        this._uri = uri;\n        this._logger = logger;\n        this._maxReconnectAttempts = maxReconnectAttempts;\n        this._reconnectBackoffInterval = reconnectBackoffInterval || defaultReconnectBackoffInterval;\n        this._hasAttemptedReconnect = false;\n        this._stopped = false;\n        this._queuedMessages = [];\n        this._connectionState = 'connecting';\n\n        this._logger.info('Connecting WebSocket to [%s]', uri);\n\n        this._webSocket = createWebSocket.call(this, onOpen, onClose);\n\n        var that = this;\n        this._disconnectTimeoutId = null;\n\n        this._networkConnectionMonitorDisposable = networkConnectionMonitor.listenForNetworkChange(function(isOnline) {\n            if (isOnline) {\n                if (_.isNumber(that._disconnectTimeoutId)) {\n                    clearTimeout(that._disconnectTimeoutId);\n                    that._disconnectTimeoutId = null;\n                }\n\n                return onNetworkReconnect.call(that);\n            }\n\n            if (_.isNumber(that._disconnectTimeoutId)) {\n                return;\n            }\n\n            onReconnecting.call(that);\n\n            that._disconnectTimeoutId = setTimeout(function() {\n                return onNetworkDisconnect.call(that);\n            }, networkDisconnectHysteresisInterval);\n        }, 0);\n    }\n\n    ReconnectingWebSocket.prototype.onmessage = null;\n    ReconnectingWebSocket.prototype.onconnected = null;\n    ReconnectingWebSocket.prototype.onreconnecting = null;\n    ReconnectingWebSocket.prototype.onreconnected = null;\n    ReconnectingWebSocket.prototype.ondisconnected = null;\n    ReconnectingWebSocket.prototype.onerror = null;\n\n    ReconnectingWebSocket.prototype.send = function(message) {\n        // TODO (DCY) Figure out how to resolve network switches\n        if (!networkConnectionMonitor.isOnline() && false) { // eslint-disable-line no-constant-condition\n            this._logger.info('Network offline. Waiting for reconnect to send message.');\n\n            return this._queuedMessages.push(message);\n        }\n\n        return this._webSocket.send(message);\n    };\n\n    ReconnectingWebSocket.prototype.reconnect = function(attempt) {\n        this._webSocket.onclose = null;\n        this._webSocket.onerror = null;\n        this._hasAttemptedReconnect = true;\n\n        var that = this;\n        var backoffTimeout;\n\n        if (!_.isNumber(attempt)) {\n            attempt = 1;\n        }\n\n        if (this._stopped) {\n            return this._logger.info('Client has stopped WebSocket after [%s] reconnect attempts', attempt - 1);\n        }\n\n        if (attempt > this._maxReconnectAttempts) {\n            this._logger.warn('Unable to reconnect WebSocket after [%s] attempts', this._maxReconnectAttempts);\n\n            return closeWebSocketOrTriggerDisconnectEvent.call(this, closeReasons.backoffLimitReached);\n        }\n\n        closeWebSocketOrTriggerDisconnectEvent.call(this, closeReasons.reconnecting);\n\n        try {\n            this._webSocket = createWebSocket.call(that, function onOpenEvent() {\n                if (backoffTimeout) {\n                    clearTimeout(backoffTimeout);\n                }\n\n                that._hasAttemptedReconnect = false;\n                that._webSocket.onclose = _.bind(onClose, that);\n\n                return onReconnect.call(that);\n            }, function onCloseEvent() {\n                if (attempt + 1 > that._maxReconnectAttempts) {\n                    if (backoffTimeout) {\n                        clearTimeout(backoffTimeout);\n                    }\n\n                    reconnectIfNotOpen.call(that, attempt);\n                }\n            });\n        } catch(e) {\n            this._logger.warn('Unable to create WebSocket connection [%s]', e);\n            // Swallow error - we will alert client of failure after timeouts.\n        }\n\n        backoffTimeout = reconnectWithBackoff.call(this, attempt);\n    };\n\n    ReconnectingWebSocket.prototype.disconnect = function() {\n        this._networkConnectionMonitorDisposable.dispose();\n        this._stopped = true;\n\n        if (_.isNumber(this._disconnectTimeoutId)) {\n            clearTimeout(this._disconnectTimeoutId);\n            this._disconnectTimeoutId = null;\n        }\n\n        return this._webSocket.close(closeReasons.byebye.code, closeReasons.byebye.reason);\n    };\n\n    ReconnectingWebSocket.prototype.toString = function() {\n        return 'ReconnectedWebSocket[' + this._uri + ',' + this._webSocket.readyState + ']';\n    };\n\n    function closeWebSocketOrTriggerDisconnectEvent(evt) {\n        if (this._webSocket.readyState === readyStates.closed.code) {\n            return onClose.call(this, evt);\n        }\n\n        return this._webSocket.close(evt.code, evt.reason);\n    }\n\n    function createWebSocket(onOpenCallback, onCloseCallback) {\n        var webSocket = new WebSocket(this._uri);\n\n        webSocket.onopen = _.bind(onOpenCallback, this);\n        webSocket.onclose = _.bind(onCloseCallback, this);\n        webSocket.onmessage = _.bind(onMessage, this);\n        webSocket.onerror = _.bind(onError, this);\n\n        return webSocket;\n    }\n\n    function reconnectWithBackoff(attempt) {\n        var that = this;\n\n        return setTimeout(function() {\n            reconnectIfNotOpen.call(that, attempt);\n        }, attempt * attempt * this._reconnectBackoffInterval);\n    }\n\n    function reconnectIfNotOpen(attempt) {\n        if (this._webSocket.readyState === readyStates.open.code) {\n            return;\n        }\n\n        this.reconnect(attempt + 1);\n    }\n\n    function onClose(evt) {\n        switch (evt.code) {\n        case closeReasons.reconnecting.code:\n            return;\n        case closeReasons.byebye.code:\n        case closeReasons.backoffLimitReached.code:\n        case closeReasons.networkDisconnect.code:\n            return onDisconnect.call(this, evt);\n        default:\n            if (this._hasAttemptedReconnect) {\n                return;\n            }\n\n            onReconnecting.call(this, evt);\n\n            this._logger.info('Attempting to re-establish socket connection after disconnect event with code [%s] and reason [%s]', evt.code, evt.reason);\n\n            return this.reconnect();\n        }\n    }\n\n    function onReconnecting(evt) {\n        this._logger.info('WebSocket is reconnecting');\n\n        this._connectionState = 'reconnecting';\n\n        if (this.onreconnecting) {\n            this.onreconnecting(evt);\n        }\n    }\n\n    function onOpen(evt) {\n        this._logger.info('WebSocket Connected');\n\n        sendAllQueuedMessages.call(this);\n\n        this._connectionState = 'connected';\n\n        if (this.onconnected) {\n            this.onconnected(evt);\n        }\n    }\n\n    function onReconnect(evt) {\n        this._logger.info('Successfully reconnected to WebSocket');\n\n        this._connectionState = 'reconnected';\n\n        if (this.onreconnected) {\n            this.onreconnected(evt);\n        }\n    }\n\n    function onDisconnect(evt) {\n        this._logger.info('WebSocket Disconnected [%s]: [%s]', evt.code, evt.reason);\n\n        this._connectionState = 'disconnected';\n\n        if (this.ondisconnected) {\n            this.ondisconnected(evt);\n        }\n    }\n\n    function onError(evt) {\n        this._logger.error('An error occurred on the WebSocket connection [%s]', evt.data || evt);\n\n        if (this.onerror) {\n            this.onerror(evt);\n        }\n    }\n\n    function onMessage(evt) {\n        this._logger.debug('>> [%s]', evt.data);\n\n        if (this.onmessage) {\n            this.onmessage(evt);\n        }\n    }\n\n    function onNetworkReconnect() {\n        var that = this;\n\n        setTimeout(function() {\n            if (that._stopped) {\n                return that._logger.info('Unable to go back online after network reconnect. Client has stopped WebSocket.');\n            }\n\n            if (that._webSocket.readyState !== readyStates.open.code) {\n                that._logger.info('Network Reconnected. Attempting to reconnect WebSocket.');\n\n                return that.reconnect();\n            }\n\n            if (that._didGoOfflineDueToDisconnect) {\n                that._logger.info('Network Reconnected with WebSocket status of [%s].', readyStates.open.state);\n\n                return onOpen.call(that);\n            }\n\n            if (that._connectionState !== 'online' || this._connectionState !== 'reconnected') {\n                onReconnect.call(that);\n            }\n\n            that._logger.info('Network Reconnected.');\n        }, waitForDisconnectEventTimeout);\n    }\n\n    function onNetworkDisconnect() {\n        this._logger.warn('Network not reconnected after [%s]. Going Offline and disconnecting WebSocket connection.', networkDisconnectHysteresisInterval);\n\n        this._didGoOfflineDueToDisconnect = true;\n\n        // Don't close the WebSocket.\n        onDisconnect.call(this, closeReasons.networkDisconnect);\n    }\n\n    function sendAllQueuedMessages() {\n        var numberOfMessagesToSend = this._queuedMessages.length;\n\n        if (numberOfMessagesToSend === 0) {\n            return;\n        }\n\n        this._logger.info('Sending [%s] queued messages', numberOfMessagesToSend);\n\n        while (numberOfMessagesToSend > 0) {\n            numberOfMessagesToSend--;\n\n            var message = this._queuedMessages.shift();\n\n            this.send(message);\n        }\n    }\n\n    return ReconnectingWebSocket;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-global',\n    'phenix-web-event',\n    'phenix-web-observable',\n    'phenix-web-disposable'\n], function(_, global, event, observable, disposable) {\n    'use strict';\n\n    function NetworkConnectionMonitor() {\n        // Support non-browser environments\n        var isOnline = typeof navigator !== 'undefined' ? navigator.onLine : true;\n\n        this._onlineObservable = (new observable.Observable(isOnline)).extend({timeout: 0});\n        this._namedEvents = new event.NamedEvents();\n\n        _.addEventListener(global, 'online', _.bind(this._namedEvents.fire, this._namedEvents, 'online', []));\n        _.addEventListener(global, 'offline', _.bind(this._namedEvents.fire, this._namedEvents, 'offline', []));\n        _.addEventListener(global, 'unload', _.bind(this._namedEvents.dispose, this._namedEvents));\n\n        this._namedEvents.listen('online', _.bind(this._onlineObservable.setValue, this._onlineObservable, true));\n        this._namedEvents.listen('offline', _.bind(this._onlineObservable.setValue, this._onlineObservable, false));\n    }\n\n    NetworkConnectionMonitor.prototype.listenForNetworkChange = function listenForOffline(callback, hysteresisTimeout) {\n        var disposables = new disposable.DisposableList();\n        var onOnline = _.bind(handleOnline, this, callback);\n        var onOffline = _.bind(handleOfflineWithHysteresis, this, callback, hysteresisTimeout);\n\n        disposables.add(this._namedEvents.listen('online', onOnline));\n        disposables.add(this._namedEvents.listen('offline', onOffline));\n\n        return disposables;\n    };\n\n    NetworkConnectionMonitor.prototype.isOnline = function isOnline() {\n        return this._onlineObservable.getValue();\n    };\n\n    function handleOfflineWithHysteresis(callback, hysteresisTimeout) {\n        var that = this;\n\n        this._onlineObservable.setValue(false);\n\n        if (!_.isNumber(hysteresisTimeout)) {\n            return callback(false);\n        }\n\n        that.offlineTimeout = setTimeout(function() {\n            if (!callback || that._onlineObservable.getValue()) {\n                return;\n            }\n\n            callback(false);\n        }, hysteresisTimeout);\n    }\n\n    function handleOnline(callback) {\n        this._onlineObservable.setValue(true);\n\n        if (callback) {\n            callback(true);\n        }\n    }\n\n    return new NetworkConnectionMonitor();\n});","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light'\n], function(_) {\n    'use strict';\n\n    function Schema(proto) {\n        this._rawProtoJson = proto;\n        this._parsedProto = {};\n        this._enums = {};\n\n        // First define all messages and enums\n        mapProto.call(this, this._rawProtoJson, this._parsedProto);\n        // Then define all fields and link types to messages or enums\n        mapFields.call(this, this._rawProtoJson, this._parsedProto);\n    }\n\n    Schema.prototype.read = function read(type, pbf, end) {\n        if (!this._parsedProto.messages[type]) {\n            throw new Error('Unsupported proto type [' + type + ']');\n        }\n\n        return readFieldWithParent.call(this, this._parsedProto, type, pbf, end);\n    };\n\n    Schema.prototype.write = function write(type, obj, pbf) {\n        if (!this._parsedProto.messages[type]) {\n            throw new Error('Unsupported proto type [' + type + ']');\n        }\n\n        return writeFieldWithParent.call(this, this._parsedProto, type, obj, pbf);\n    };\n\n    function readFieldWithParent(parent, type, pbf, end) {\n        var that = this;\n        var response = buildDefaultObject(parent.messages[type]);\n\n        return pbf.readFields(function(fieldId, result, pbfResult) {\n            if (!parent.messages[type].fieldIds[fieldId]) {\n                return;\n            }\n\n            var field = parent.messages[type].fields[fieldId];\n\n            if (field.rule === 'repeated') {\n                result[field.name].push(readField.call(that, parent.messages[type], type, fieldId, pbfResult));\n            } else {\n                result[field.name] = readField.call(that, parent.messages[type], type, fieldId, pbfResult);\n            }\n        }, response, end);\n    }\n\n    function writeFieldWithParent(parent, type, obj, pbf) {\n        var that = this;\n        var message = parent.messages[type];\n\n        _.forEach(_.keys(message.fields), function(fieldId) {\n            return writeField.call(that, parent, type, parseInt(fieldId), obj, pbf);\n        });\n    }\n\n    function writeField(parent, type, fieldId, obj, pbf, index) {\n        var that = this;\n        var message = parent.messages[type];\n        var field = message.fields[fieldId];\n        var value = obj[field.name];\n\n        if (!_.isUndefined(index)) {\n            value = value[index];\n        }\n\n        if (field.defaultValue === value || _.isUndefined(value)) {\n            return;\n        }\n\n        if (_.isArray(value)) {\n            if (field.rule !== 'repeated') {\n                throw new Error('Invalid type. Array is not valid with rule [' + field.rule + ']');\n            }\n\n            return _.forEach(value, function(item, idx) {\n                writeField.call(that, parent, type, fieldId, obj, pbf, idx);\n            });\n        }\n\n        if (_.isObject(field.schema) && _.isObject(value)) {\n            return pbf.writeMessage(fieldId, _.bind(writeFieldWithParent, this, field.schema.parent, field.type), value);\n        }\n\n        var valueToWrite = _.isUndefined(value) ? field.defaultValue : value;\n\n        // Enum\n        if (_.isObject(field.schema) && !field.schema.fields) {\n            var enumId = _.isNumber(value) ? value : _.get(field.schema, [valueToWrite, 'id']);\n\n            return pbf.writeVarintField(fieldId, enumId);\n        }\n\n        switch (field.type) {\n        case 'string':\n            return pbf.writeStringField(fieldId, valueToWrite);\n        case 'float':\n            return pbf.writeFloatField(fieldId, valueToWrite);\n        case 'double':\n            return pbf.writeDoubleField(fieldId, valueToWrite);\n        case 'bool':\n            return pbf.writeBooleanField(fieldId, valueToWrite);\n        case 'enum':\n        case 'uint32':\n        case 'uint64':\n        case 'int32':\n        case 'int64':\n            return pbf.writeVarintField(fieldId, valueToWrite);\n        case 'sint32':\n        case 'sint64':\n            return pbf.writeSVarintField(fieldId, valueToWrite);\n        case 'fixed32':\n            return pbf.writeFixed32Field(fieldId, valueToWrite);\n        case 'fixed64':\n            return pbf.writeFixed64Field(fieldId, valueToWrite);\n        case 'sfixed32':\n            return pbf.writeSFixed32Field(fieldId, valueToWrite);\n        case 'sfixed64':\n            return pbf.writeSFixed64Field(fieldId, valueToWrite);\n        case 'bytes':\n            return pbf.writeBytesField(fieldId, valueToWrite);\n        default:\n            throw new Error('Unexpected type: ' + field.type);\n        }\n    }\n\n    Schema.prototype.getDefaults = function getDefaults() {\n\n    };\n\n    function mapProto(proto, parent) {\n        if (_.get(proto, ['messages', 'length'], 0) > 0) {\n            mapMessages.call(this, proto.messages, parent);\n        }\n\n        if (_.get(proto, ['enums', 'length'], 0) > 0) {\n            mapEnums.call(this, proto.enums, parent);\n        }\n    }\n\n    function mapFields(proto, parent) {\n        var that = this;\n\n        _.forEach(proto.messages, function(message) {\n            parent.messages[message.name].fields = _.reduce(message.fields, _.bind(mapField, this, parent.messages[message.name]), {});\n\n            if (message.messages) {\n                mapFields.call(that, message, parent.messages[message.name]);\n            }\n        });\n    }\n\n    function mapMessages(messages, parent) {\n        var that = this;\n\n        parent.messages = _.reduce(messages, function(parsedMessages, message) {\n            if (parent[message.name]) {\n                return;\n            }\n\n            var fieldIds = _.reduce(message.fields, function(candidateIds, field) {\n                candidateIds[field.id] = true;\n\n                return candidateIds;\n            }, {});\n\n            parsedMessages[message.name] = {\n                parent: parent,\n                type: message.name,\n                fieldIds: fieldIds\n            };\n\n            mapProto.call(that, message, parsedMessages[message.name]);\n\n            return parsedMessages;\n        }, {});\n    }\n\n    function mapEnums(enumsProto, parent) {\n        parent.enums = _.reduce(enumsProto, function(enums, enumProto) {\n            enums[enumProto.name] = _.reduce(enumProto.values, function(values, value) {\n                values[value.name] = value;\n\n                return values;\n            }, {});\n\n            return enums;\n        }, {});\n    }\n\n    function mapField(parent, fieldObject, field) {\n        // TODO(dy) add oneof property validation\n\n        fieldObject[field.id] = {\n            rule: field.rule,\n            type: field.type,\n            name: field.name,\n            schema: mapType.call(this, field.type, parent),\n            defaultValue: getDefaultValue(field.rule, field.type, _.get(field, ['options', 'default']))\n        };\n\n        return fieldObject;\n    }\n\n    function mapType(type, parent) {\n        if (_.get(parent, ['messages', type])) {\n            return parent.messages[type];\n        }\n\n        if (_.get(parent, ['enums', type])) {\n            return parent.enums[type];\n        }\n\n        if (parent.parent) {\n            return mapType(type, parent.parent);\n        }\n\n        return type;\n    }\n\n    function readField(message, type, fieldId, pbf) {\n        var signed = type === 'int32' || type === 'int64' ? 'true' : '';\n        var field = message.fields[fieldId];\n\n        if (_.isObject(field.schema)) {\n            // Field schema is a message\n            if (field.schema.fields) {\n                return readFieldWithParent.call(this, field.schema.parent, field.type, pbf, pbf.readVarint() + pbf.pos);\n            }\n\n            var enumId = pbf.readVarint(signed);\n            var enumName = _.getEnumName(field.schema, enumId);\n\n            if (_.isNullOrUndefined(enumName)) {\n                throw new Error('Unsupported enum id [' + enumId + '] for field [' + field.name + '] on message [' + message.type + ']');\n            }\n\n            // Field schema is an Enum\n            return enumName;\n        }\n\n        switch (field.type) {\n        case 'string':\n            return pbf.readString(signed);\n        case 'float':\n            return pbf.readFloat(signed);\n        case 'double':\n            return pbf.readDouble(signed);\n        case 'bool':\n            return pbf.readBoolean(signed);\n        case 'enum':\n            return pbf.readVarint(signed);\n        case 'uint32':\n        case 'uint64':\n        case 'int32':\n        case 'int64':\n            return pbf.readVarint(signed);\n        case 'sint32':\n        case 'sint64':\n            return pbf.readSVarint(signed);\n        case 'fixed32':\n            return pbf.readFixed32(signed);\n        case 'fixed64':\n            return pbf.readFixed64(signed);\n        case 'sfixed32':\n            return pbf.readSFixed32(signed);\n        case 'sfixed64':\n            return pbf.readSFixed64(signed);\n        case 'bytes':\n            return pbf.readBytes(signed);\n        default:\n            throw new Error('Unexpected type: ' + field.type);\n        }\n    }\n\n    function getDefaultValue(rule, type, optionalDefaultValue) {\n        if (rule === 'repeated') {\n            return [];\n        }\n\n        switch (type) {\n        case 'float':\n        case 'double':\n        case 'uint32':\n        case 'uint64':\n        case 'int32':\n        case 'int64':\n        case 'sint32':\n        case 'sint64':\n        case 'fixed32':\n        case 'fixed64':\n        case 'sfixed32':\n        case 'sfixed64':\n        case 'string':\n        case 'enum':\n        case 'bool':\n        case 'long':\n        default:\n            return _.isUndefined(optionalDefaultValue) ? null : optionalDefaultValue;\n        }\n    }\n\n    function buildDefaultObject(message) {\n        return _.reduce(message.fields, function(defaultObject, field) {\n            defaultObject[field.name] = _.clone(field.defaultValue);\n\n            return defaultObject;\n        }, {});\n    }\n\n    return Schema;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function() {\n    'use strict';\n\n    var mqProto = {\n        \"package\": \"mq\",\n        \"messages\": [\n            {\n                \"name\": \"Message\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"MessageType\",\n                        \"name\": \"messageType\",\n                        \"id\": 7,\n                        \"options\": {\"default\": \"Request\"}\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"requestId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"type\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"encoding\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"bytes\",\n                        \"name\": \"payload\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"double\",\n                        \"name\": \"wallTime\",\n                        \"id\": 6\n                    }\n                ],\n                \"enums\": [\n                    {\n                        \"name\": \"MessageType\",\n                        \"values\": [\n                            {\n                                \"name\": \"Request\",\n                                \"id\": 0\n                            },\n                            {\n                                \"name\": \"Response\",\n                                \"id\": 1\n                            },\n                            {\n                                \"name\": \"Event\",\n                                \"id\": 2\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"Error\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"PingPong\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"originTimestamp\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint64\",\n                        \"name\": \"count\",\n                        \"id\": 2\n                    }\n                ]\n            }\n        ]\n    };\n\n    return mqProto;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-global',\n    'lxiv'\n], function(_, assert, global, lxiv) {\n    'use strict';\n\n    function StringBuilder() {\n        this._tempCharCodes = [];\n        this._builtString = '';\n    }\n\n    StringBuilder.prototype.push = function push() {\n        if ((this._tempCharCodes.length + arguments.length) > 1024) {\n            this._builtString += String.fromCharCode.apply(String, this._tempCharCodes);\n            this._tempCharCodes.length = 0;\n        }\n\n        Array.prototype.push.apply(this._tempCharCodes, arguments);\n    };\n\n    StringBuilder.prototype.build = function push() {\n        return this._builtString + String.fromCharCode.apply(String, this._tempCharCodes);\n    };\n\n    function stringSource(stringValue) {\n        var index = 0;\n\n        return function() {\n            return index < stringValue.length ? stringValue.charCodeAt(index++) : null;\n        };\n    }\n\n    return {\n        toString: function(byteArray) {\n            var begin = 0;\n            var end = byteArray.length;\n            var stringBuilder = new StringBuilder();\n\n            lxiv.encode(function() {\n                return begin < end ? byteArray[begin++] : null;\n            }, _.bind(stringBuilder.push, stringBuilder));\n\n            return stringBuilder.build();\n        },\n\n        toByteArray: function(data) {\n            assert.isString(data, 'data');\n\n            var tempArray = [];\n\n            lxiv.decode(stringSource(data), function(b) {\n                tempArray.push(b);\n            });\n\n            return new global.Uint8Array(tempArray);\n        }\n    };\n});","/*\r\n Copyright 2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\nmodule.exports = require(\"./dist/lxiv.js\");\r\n","/*\r\n Copyright 2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license lxiv (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/lxiv for details\r\n */\r\n(function() {\r\n\r\n    /**\r\n     * lxiv namespace.\r\n     * @type {!Object.<string,*>}\r\n     * @exports lxiv\r\n     */\r\n    var lxiv = {};\r\n\r\n    /**\r\n     * Character codes for output.\r\n     * @type {!Array.<number>}\r\n     * @inner\r\n     */\r\n    var aout = [\r\n        65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\r\n        81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102,\r\n        103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118,\r\n        119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47\r\n    ];\r\n\r\n    /**\r\n     * Character codes for input.\r\n     * @type {!Array.<number>}\r\n     * @inner\r\n     */\r\n    var ain = [];\r\n    for (var i=0, k=aout.length; i<k; ++i)\r\n        ain[aout[i]] = i;\r\n\r\n    /**\r\n     * Encodes bytes to base64 char codes.\r\n     * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if\r\n     *  there are no more bytes left.\r\n     * @param {!function(number)} dst Characters destination as a function successively called with each encoded char\r\n     *  code.\r\n     * @expose\r\n     */\r\n    lxiv.encode = function(src, dst) {\r\n        var b, t;\r\n        while ((b = src()) !== null) {\r\n            dst(aout[(b>>2)&0x3f]);\r\n            t = (b&0x3)<<4;\r\n            if ((b = src()) !== null) {\r\n                t |= (b>>4)&0xf;\r\n                dst(aout[(t|((b>>4)&0xf))&0x3f]);\r\n                t = (b&0xf)<<2;\r\n                if ((b = src()) !== null)\r\n                    dst(aout[(t|((b>>6)&0x3))&0x3f]),\r\n                    dst(aout[b&0x3f]);\r\n                else\r\n                    dst(aout[t&0x3f]),\r\n                    dst(61);\r\n            } else\r\n                dst(aout[t&0x3f]),\r\n                dst(61),\r\n                dst(61);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Decodes base64 char codes to bytes.\r\n     * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n     *  `null` if there are no more characters left.\r\n     * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n     * @throws {Error} If a character code is invalid\r\n     * @expose\r\n     */\r\n    lxiv.decode = function(src, dst) {\r\n        var c, t1, t2;\r\n        function fail(c) {\r\n            throw Error(\"Illegal character code: \"+c);\r\n        }\r\n        while ((c = src()) !== null) {\r\n            t1 = ain[c];\r\n            if (typeof t1 === 'undefined') fail(c);\r\n            if ((c = src()) !== null) {\r\n                t2 = ain[c];\r\n                if (typeof t2 === 'undefined') fail(c);\r\n                dst((t1<<2)>>>0|(t2&0x30)>>4);\r\n                if ((c = src()) !== null) {\r\n                    t1 = ain[c];\r\n                    if (typeof t1 === 'undefined')\r\n                        if (c === 61) break; else fail(c);\r\n                    dst(((t2&0xf)<<4)>>>0|(t1&0x3c)>>2);\r\n                    if ((c = src()) !== null) {\r\n                        t2 = ain[c];\r\n                        if (typeof t2 === 'undefined')\r\n                            if (c === 61) break; else fail(c);\r\n                        dst(((t1&0x3)<<6)>>>0|t2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Tests if a string is valid base64.\r\n     * @param {string} str String to test\r\n     * @returns {boolean} `true` if valid, otherwise `false`\r\n     * @expose\r\n     */\r\n    lxiv.test = function(str) {\r\n        return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str);\r\n    };\r\n\r\n    /* CommonJS */ if (typeof module !== 'undefined' && module[\"exports\"])\r\n        module[\"exports\"] = lxiv;\r\n    /* AMD */ else if (typeof define !== 'undefined' && define[\"amd\"])\r\n        define(function() { return lxiv; });\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"lxiv\"] = lxiv;\r\n\r\n})();\r\n","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-batch-http',\n    './MQProtocol',\n    './Binary'\n], function(_, assert, BatchHttp, MQProtocol, Binary) {\n    'use strict';\n\n    function BatchHttpProtocol(uri, protocols, type, options, apiVersion) {\n        assert.isStringNotEmpty(uri, 'uri');\n        assert.isArray(protocols, 'protocols');\n        assert.isStringNotEmpty(type, 'type');\n        assert.isObject(options, 'options');\n\n        var bufferedHttpOptions = _.assign({}, options || {}, {contentType: 'application/protobuf'});\n        var mqProtocol = new MQProtocol(protocols, apiVersion);\n\n        return new BatchHttp(uri, bufferedHttpOptions, _.bind(prepareRequest, this, mqProtocol, type), _.bind(prepareResponse, this, mqProtocol, type));\n    }\n\n    function prepareRequest(mqProtocol, type, data) {\n        return Binary.toString(mqProtocol.encode(type, data));\n    }\n\n    function prepareResponse(mqProtocol, type, data) {\n        return mqProtocol.decode(type + 'Response', Binary.toByteArray(data));\n    }\n\n    return BatchHttpProtocol;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './BatchHttp'\n], function(BatchHttp) {\n    'use strict';\n\n    return BatchHttp;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-global',\n    'phenix-web-network-connection-monitor',\n    'phenix-web-http',\n    'phenix-web-observable',\n    'phenix-web-disposable'\n], function(_, assert, event, global, networkConnectionMonitor, http, observable, disposable) {\n    var networkDisconnectHysteresisInterval = 0;\n    var events = {\n        capacity: 'capacity',\n        error: 'error',\n        response: 'response'\n    };\n    var localStoreKeyPrefix = '__phenixBatchHttpMessages';\n    // Use a global cache so we only need to check once\n    var localStorageSupported = null;\n\n    function BatchHttp(uri, options, serializeRequest, deserializeResponse) {\n        assert.isStringNotEmpty(uri, 'uri');\n\n        options = options || {};\n\n        assert.isObject(options, 'options');\n\n        if (options.requestType) {\n            assert.isStringNotEmpty(options.requestType, 'options.requestType');\n        }\n\n        if (options.maxAttempts) {\n            assert.isNumber(options.maxAttempts, 'options.maxAttempts');\n        }\n\n        if (options.maxBufferedRecords) {\n            assert.isNumber(options.maxBufferedRecords, 'options.maxBufferedRecords');\n        }\n\n        if (options.maxBatchSize) {\n            assert.isNumber(options.maxBatchSize, 'options.maxBatchSize');\n        }\n\n        if (options.contentType) {\n            assert.isStringNotEmpty(options.contentType, 'options.maxBatchSize');\n        }\n\n        if (serializeRequest) {\n            assert.isFunction(serializeRequest, 'serializeRequest');\n        }\n\n        if (deserializeResponse) {\n            assert.isFunction(deserializeResponse, 'deserializeResponse');\n        }\n\n        this._localStoreKey = localStoreKeyPrefix + '|' + uri;\n        this._requestType = options.requestType || 'POST';\n        this._requestTimeout = options.requestTimeout || 30000;\n        this._maxAttempts = options.maxAttempts || 5;\n        this._maxBufferedRecords = options.maxBufferedRecords || 1000;\n        this._maxBatchSize = options.maxBatchSize || 100;\n        this._contentType = options.contentType || 'application/json';\n        this._serializeRequest = serializeRequest;\n        this._deserializeResponse = deserializeResponse;\n        this._uri = uri;\n        this._records = getStoredMessages.call(this) || [];\n        this._isEnabled = true;\n        this._namedEvents = new event.NamedEvents();\n        this._canSendRequestObservable = new observable.Observable(true);\n        this._disposables = new disposable.DisposableList();\n        this._pending = false;\n        this._unloadTriggered = false;\n        this._localStorageEnabled = localStorageSupported === null ? localStorageSupported = isLocalStorageSupported.call(this) : localStorageSupported;\n\n        this._disposables.add(this._canSendRequestObservable.subscribe(_.bind(sendMessagesIfAble, this)));\n        this._disposables.add(startNetworkConnectionMonitor.call(this));\n        this._disposables.add(this._namedEvents);\n\n        setStoredMessages.call(this, []);\n\n        sendMessagesIfAble.call(this);\n\n        var that = this;\n\n        _.addEventListener(global, 'beforeunload', function() {\n            appendStoredMessages.call(that, that._records);\n\n            that._unloadTriggered = true;\n\n            that._records = [];\n        });\n    }\n\n    BatchHttp.prototype.on = function on(eventName, callback) {\n        assert.isStringNotEmpty(eventName, 'eventName');\n        assert.isFunction(callback, 'callback');\n\n        return this._namedEvents.listen(eventName, callback);\n    };\n\n    BatchHttp.prototype.addRecord = function(record) {\n        if (this._unloadTriggered) {\n            appendStoredMessages.call(this, [record]);\n\n            return;\n        }\n\n        this._records.push(record);\n\n        sendMessagesIfAble.call(this);\n        deleteRecordsIfAtCapacity.call(this);\n    };\n\n    BatchHttp.prototype.addRecordToBeginning = function(record) {\n        this._records.unshift(record);\n\n        sendMessagesIfAble.call(this);\n        deleteRecordsIfAtCapacity.call(this);\n    };\n\n    BatchHttp.prototype.dispose = function dispose() {\n        this._records = [];\n\n        this._disposables.dispose();\n    };\n\n    function deleteRecordsIfAtCapacity() {\n        if (this._records.length > this._maxBufferedRecords) {\n            var deleteRecords = this._records.length - (this._maxBufferedRecords / 2);\n\n            this._records = this._records.slice(deleteRecords);\n\n            this._namedEvents.fireAsync(events.capacity, [null, {numberOfDeletedRecords: deleteRecords}]);\n        }\n    }\n\n    function sendMessagesIfAble() {\n        if (!this._canSendRequestObservable.getValue() || this._records.length === 0) {\n            return;\n        }\n\n        setStatus.call(this, true);\n\n        var storeRecords = {records: _.take(this._records, this._maxBatchSize)};\n\n        this._records = this._records.slice(this._maxBatchSize);\n\n        var that = this;\n\n        try {\n            sendHttpRequest.call(this, this._uri, storeRecords, function onTimeout() {\n                setTimeout(function waitForDisconnectTimeout() {\n                    that._records = that._records.concat(storeRecords.records);\n\n                    setStatus.call(that, false);\n                }, networkDisconnectHysteresisInterval);\n            });\n        } catch (e) {\n            setTimeout(function() {\n                setStatus.call(that, false);\n\n                return that._namedEvents.fire(events.error, [e]);\n            }, networkDisconnectHysteresisInterval);\n        }\n    }\n\n    function startNetworkConnectionMonitor() {\n        var that = this;\n\n        function onNetworkStatusChange() {\n            setStatus.call(that, that._pending);\n        }\n\n        return networkConnectionMonitor.listenForNetworkChange(onNetworkStatusChange);\n    }\n\n    function sendHttpRequest(url, dataToSend, onTimeout) {\n        var that = this;\n\n        var data = this._serializeRequest ? this._serializeRequest(_.assign({}, dataToSend)) : dataToSend;\n\n        function handleResponse(error, response) {\n            if (error) {\n                if (error.message === 'timeout' && !isAtMaxRecords.call(that)) {\n                    return onTimeout();\n                }\n\n                setStatus.call(that, false);\n\n                return that._namedEvents.fire(events.error, [error]);\n            }\n\n            setStatus.call(that, false);\n\n            var parsedResponse = that._deserializeResponse ? that._deserializeResponse(response.data) : response.data;\n\n            return that._namedEvents.fire(events.response, [parsedResponse]);\n        }\n\n        switch (this._requestType) {\n        case 'POST':\n            return http.postWithRetry(url, data, {\n                timeout: this._requestTimeout,\n                contentType: this._contentType,\n                retryOptions: {\n                    maxAttempts: this._maxAttempts,\n                    additionalRetryErrorCodes: [0]\n                }\n            }, handleResponse);\n        default:\n            throw new Error('Invalid request type');\n        }\n    }\n\n    function isAtMaxRecords() {\n        return this._records.length >= this._maxBufferedRecords;\n    }\n\n    function setStatus(pending) {\n        this._pending = pending;\n\n        this._canSendRequestObservable.setValue(!pending && networkConnectionMonitor.isOnline());\n    }\n\n    var getStoredMessages = function getStoredMessages() {\n        if (!this._localStorageEnabled) {\n            return [];\n        }\n\n        try {\n            var storedMessages = global.localStorage.getItem(this._localStoreKey);\n\n            if (storedMessages) {\n                return JSON.parse(storedMessages);\n            }\n        } catch (e) {\n            console.log('Failed to read local storage [' + e.message + ']');\n        }\n\n        return [];\n    };\n\n    var appendStoredMessages = function appendStoredMessages(messages) {\n        if (!this._localStorageEnabled || !messages || messages.length === 0) {\n            return;\n        }\n\n        var messagesToStore = getStoredMessages.call(this).concat(messages);\n\n        setStoredMessages.call(this, messagesToStore);\n    };\n\n    var setStoredMessages = function setStoredMessages(messages) {\n        if (!this._localStorageEnabled || !messages) {\n            return;\n        }\n\n        try {\n            var json = JSON.stringify(messages);\n\n            global.localStorage.setItem(this._localStoreKey, json);\n        } catch (e) {\n            console.log('Failed to store data in local storage [' + e.message + ']');\n        }\n    };\n\n    var isLocalStorageSupported = function isLocalStorageSupported() {\n        try {\n            if (!global.localStorage){\n                console.log('Local storage not available');\n\n                return false;\n            }\n\n            var key = '__is_local_storage_supported__';\n\n            global.localStorage.setItem(key, key);\n\n            var value = global.localStorage.getItem(key);\n\n            global.localStorage.removeItem(key);\n\n            if (value !== key) {\n                console.log('Local storage is passively blocked');\n            }\n\n            return value === key;\n        } catch (e) {\n            console.log('Local storage is blocked');\n\n            return false;\n        }\n    };\n\n    return BatchHttp;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-disposable'\n], function(_, assert, disposable) {\n    'use strict';\n\n    var requestMethods = {\n        'get': 'GET',\n        'post': 'POST',\n        'put': 'PUT',\n        'delete': 'DELETE' // Delete is reserved\n    };\n    var defaultTimeout = 5000;\n    var defaultMaxAttempts = 1;\n    var defaultBackoff = 2;\n    var defaultRetryDelay = 1500;\n    var errorCodes = {\n        clientAborted: {\n            id: 4000,\n            name: 'Aborted by Client'\n        }\n    };\n\n    function Http() {\n\n    }\n\n    Http.prototype.get = function get(url, settings, callback) {\n        settings = settings || {};\n\n        validateSettings(settings);\n\n        var requestUrl = appendQueryParameters(settings.queryParameters || {}, url);\n        var xhr = getAndOpenVendorSpecificXmlHttpMethod(requestMethods.get, requestUrl, callback);\n        var handleResponse = _.bind(appendResponseTimeAndContinue, this, _.now(), callback);\n\n        if (!xhr) {\n            return callback(getUnsupportedError());\n        }\n\n        if (settings.mimeType) {\n            xhr.overrideMimeType(settings.mimeType);\n        }\n\n        if (settings.responseType) {\n            xhr.responseType = settings.responseType;\n        }\n\n        appendDataTypeHeaders(xhr, settings);\n\n        xhr.addEventListener('readystatechange', _.bind(handleReadyStateChange, this, xhr, settings, handleResponse));\n\n        xhr.timeout = settings.timeout || defaultTimeout;\n\n        xhr.send();\n    };\n\n    Http.prototype.post = function postWithRetry(url, data, settings, callback) {\n        return methodWithData.call(this, requestMethods.post, url, data, settings, callback);\n    };\n\n    Http.prototype.put = function postWithRetry(url, data, settings, callback) {\n        return methodWithData.call(this, requestMethods.put, url, data, settings, callback);\n    };\n\n    Http.prototype.delete = function postWithRetry(url, data, settings, callback) {\n        return methodWithData.call(this, requestMethods.delete, url, data, settings, callback);\n    };\n\n    Http.prototype.getWithRetry = function getWithRetry(url, settings, callback) {\n        var methodWithoutCallback = _.bind(this.get, this, url, settings);\n        var requestState = {\n            startTime: _.now(),\n            isDisposed: false\n        };\n\n        return handleMethodWithRetry.call(this, url, settings, methodWithoutCallback, requestState, callback);\n    };\n\n    Http.prototype.postWithRetry = function postWithRetry(url, data, settings, callback) {\n        return methodRetryWithData.call(this, this.post, url, data, settings, callback);\n    };\n\n    Http.prototype.putWithRetry = function postWithRetry(url, data, settings, callback) {\n        return methodRetryWithData.call(this, this.put, url, data, settings, callback);\n    };\n\n    Http.prototype.deleteWithRetry = function postWithRetry(url, data, settings, callback) {\n        return methodRetryWithData.call(this, this.delete, url, data, settings, callback);\n    };\n\n    function methodWithData(method, url, data, settings, callback) {\n        settings = settings || {};\n\n        validateSettings(settings);\n\n        var requestUrl = appendQueryParameters(settings.queryParameters || {}, url);\n        var xhr = getAndOpenVendorSpecificXmlHttpMethod(method, requestUrl, callback);\n        var handleResponse = _.bind(appendResponseTimeAndContinue, this, _.now(), callback);\n\n        if (!xhr) {\n            return callback(getUnsupportedError());\n        }\n\n        if (settings.responseType) {\n            xhr.responseType = settings.responseType;\n        }\n\n        appendDataTypeHeaders(xhr, settings);\n\n        xhr.addEventListener('readystatechange', _.bind(handleReadyStateChange, this, xhr, settings, handleResponse));\n\n        xhr.timeout = settings.timeout || 15000;\n\n        xhr.send(data);\n    }\n\n    function methodRetryWithData(method, url, data, settings, callback) {\n        var methodWithoutCallback = _.bind(method, this, url, data, settings);\n        var requestState = {\n            startTime: _.now(),\n            isDisposed: false\n        };\n\n        return handleMethodWithRetry.call(this, url, settings, methodWithoutCallback, requestState, callback);\n    }\n\n    function validateSettings(settings) {\n        assert.isObject(settings, 'settings');\n\n        if (settings.queryParameters) {\n            assert.isObject(settings.queryParameters, 'settings.queryParameters');\n        }\n\n        if (settings.mimeType) {\n            assert.stringNotEmpty(settings.mimeType, 'settings.mimeType');\n        }\n\n        if (settings.accept) {\n            assert.stringNotEmpty(settings.accept, 'settings.accept');\n        }\n\n        if (settings.contentType) {\n            assert.stringNotEmpty(settings.contentType, 'settings.contentType');\n        }\n\n        if (settings.responseType) {\n            assert.stringNotEmpty(settings.responseType, 'settings.responseType');\n        }\n\n        if (!_.isNullOrUndefined(settings.timeout)) {\n            assert.isNumber(settings.timeout, 'settings.timeout');\n        }\n    }\n\n    function appendQueryParameters(queryParameters, url) {\n        var indexOfHash = url.lastIndexOf('#');\n        var indexOfQuerySeparator = url.indexOf('?');\n        var serializedJsonAsQueryString = _.reduce(queryParameters, function(paramString, value, key) {\n            paramString += !paramString ? '' : '&';\n\n            return paramString + key.toString() + '=' + value.toString();\n        }, '');\n        var hashString = indexOfHash === -1 ? '' : url.substring(indexOfHash + 1);\n        var queryString = indexOfQuerySeparator === -1 ? '' : url.substring(indexOfQuerySeparator + 1, hashString ? indexOfHash : url.length);\n        var concatenatedQueryString = serializedJsonAsQueryString + (queryString ? ('&' + queryString) : '');\n        var urlBeforeQueryAndHash = url.replace('?' + queryString, '').replace('#' + hashString, '');\n\n        url = urlBeforeQueryAndHash;\n\n        if (concatenatedQueryString) {\n            url += '?' + concatenatedQueryString;\n        }\n\n        if (hashString) {\n            url += '#' + hashString;\n        }\n\n        return url;\n    }\n\n    function getAndOpenVendorSpecificXmlHttpMethod(requestMethod, requestUrl) {\n        var xhr = new XMLHttpRequest();\n\n        if ('withCredentials' in xhr) {\n            // Most browsers.\n            xhr.open(requestMethod, requestUrl, true);\n        } else if (typeof XDomainRequest !== 'undefined') {\n            // IE8 & IE9\n            xhr = new XDomainRequest();\n            xhr.open(requestMethod, requestUrl);\n        } else {\n            return;\n        }\n\n        return xhr;\n    }\n\n    function getUnsupportedError() {\n        // CORS not supported.\n        var err = new Error('unsupported');\n\n        err.code = 'unsupported';\n\n        return err;\n    }\n\n    function appendDataTypeHeaders(xhr, settings) {\n        var contentType = settings.contentType || 'application/json';\n        var accept = settings.accept || contentType;\n\n        var headers = _.assign({}, {\n            'Content-Type': contentType,\n            'Accept': accept\n        }, _.get(settings, ['headers'], {}));\n\n        _.forOwn(headers, function(headerValue, headerName) {\n            xhr.setRequestHeader(headerName, headerValue);\n        });\n    }\n\n    function handleReadyStateChange(xhr, options, callback) {\n        if (xhr.readyState === 4 /* DONE */) {\n            if (xhr.status === 200) {\n                var responseHeaders = getXhrResponseHeaders(xhr);\n                var response = {\n                    data: xhr.response || xhr.responseText,\n                    headers: responseHeaders,\n                    rawXhr: xhr\n                };\n\n                callback(null, response);\n            } else {\n                var err = new Error(xhr.status === 0 ? 'timeout' : 'Status=[' + xhr.status + ']');\n                var additionalRetryErrorCodes = _.get(options, ['retryOptions', 'additionalRetryErrorCodes'], []);\n\n                _.forEach(additionalRetryErrorCodes, function(code) {\n                    assert.isNumber(code, 'additionalRetryErrorCode');\n                });\n\n                err.code = xhr.status;\n\n                if ((xhr.status >= 500 && xhr.status < 600) || _.includes(additionalRetryErrorCodes, xhr.status)) {\n                    err.retryable = true;\n                }\n\n                callback(err);\n            }\n        }\n    }\n\n    function getXhrResponseHeaders(xhr) {\n        var responseHeadersString = xhr.getAllResponseHeaders();\n\n        return _.reduce(responseHeadersString.trim().split(/[\\r\\n]+/), function(headers, header) {\n            var parts = header.split(': ');\n            var headerName = parts.shift();\n            var headerValue = parts.join(': ');\n\n            if (headerName) {\n                headers[headerName] = headerValue;\n            }\n\n            return headers;\n        }, {});\n    }\n\n    function appendResponseTimeAndContinue(startTime, callback, error, response) {\n        if (response) {\n            _.set(response, ['stats', 'successResponseTime'], _.now() - startTime);\n        }\n\n        callback(error, response);\n    }\n\n    function appendTotalResponseTimeAndContinue(startTime, attempts, callback, error, response) {\n        if (response) {\n            _.set(response, ['stats', 'totalResponseTimeForAllAttempts'], _.now() - startTime);\n            _.set(response, ['stats', 'attempts'], attempts);\n        }\n\n        callback(error, response);\n    }\n\n    function handleMethodWithRetry(url, options, methodWithoutCallback, requestState, callback, attempt) {\n        attempt = attempt || 1;\n\n        var that = this;\n        var initalRequestDelay = _.get(options, ['delay'], null);\n        var retryDelay = _.get(options, ['retryOptions', 'delay'], defaultRetryDelay);\n        var backoff = _.get(options, ['retryOptions', 'backoff'], defaultBackoff);\n        var maxAttempts = _.get(options, ['retryOptions', 'maxAttempts'], defaultMaxAttempts);\n        var requestDelay = attempt > 1 ? retryDelay * Math.pow(attempt, backoff) : initalRequestDelay;\n\n        var retryIfFailed = function(error, response) {\n            if (requestState.isDisposed) {\n                return callback(getErrorByEnum(errorCodes.clientAborted));\n            }\n\n            if (error && error.retryable && attempt < maxAttempts) {\n                return handleMethodWithRetry.call(that, url, options, methodWithoutCallback, requestState, callback, attempt + 1);\n            }\n\n            return appendTotalResponseTimeAndContinue.call(that, requestState.startTime, attempt, callback, error, response);\n        };\n\n        var disposableRequest = new disposable.Disposable(function() {\n            if (_.isNumber(requestState.mostRecentTimeout)) {\n                clearTimeout(requestState.mostRecentTimeout);\n            }\n\n            requestState.isDisposed = true;\n        });\n\n        if (!_.isNumber(initalRequestDelay) && attempt === 1 || _.get(options, ['retryOptions', 'sync'], false)) {\n            methodWithoutCallback.call(that, retryIfFailed);\n\n            return disposableRequest;\n        }\n\n        delayedRequest.call(that, url, options, methodWithoutCallback, requestState, requestDelay, retryIfFailed);\n\n        return disposableRequest;\n    }\n\n    function delayedRequest(url, options, methodWithoutCallback, requestState, delay, callback) {\n        var that = this;\n\n        requestState.mostRecentTimeout = setTimeout(function() {\n            if (requestState.isDisposed) {\n                return callback(getErrorByEnum(errorCodes.clientAborted));\n            }\n\n            methodWithoutCallback.call(that, callback);\n        }, delay);\n    }\n\n    function getErrorByEnum(codeEnum) {\n        var errorWithEnum = new Error(codeEnum.name);\n\n        errorWithEnum.code = codeEnum.id;\n\n        return errorWithEnum;\n    }\n\n    return new Http();\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-assert',\n    'phenix-web-global'\n], function(assert, global) {\n    'use strict';\n\n    return {\n        toString: function(byteArray) {\n            var begin = 0;\n            var end = byteArray.length;\n            var chars = [];\n            var parts = [];\n\n            if (begin === end) {\n                return \"\";\n            }\n\n            while (begin < end) {\n                chars.push(byteArray[begin++]);\n\n                if (chars.length >= 1024) {\n                    parts.push(String.fromCharCode.apply(String, chars));\n                    chars = [];\n                }\n            }\n\n            return parts.join('') + String.fromCharCode.apply(String, chars);\n        },\n\n        toByteArray: function(data) {\n            assert.isString(data, 'data');\n\n            var i = 0;\n            var charCode;\n            var byteArray = new global.Uint8Array(data.length);\n\n            while (i < data.length) {\n                charCode = data.charCodeAt(i);\n\n                if (charCode > 0xff) {\n                    throw RangeError(\"illegal char code: \" + charCode);\n                }\n\n                byteArray[i++] = charCode;\n            }\n\n            return byteArray;\n        }\n    };\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-disposable'\n], function(_, assert, event, disposable) {\n    'use strict';\n\n    var defaultDocumentFocusIntervalTimeout = 3000;\n\n    function ApplicationActivityDetector() {\n        this._namedEvents = new event.NamedEvents();\n        this._timeOfLastTabFocusChange = _.now();\n        this._disposables = new disposable.DisposableList();\n        this._isForeground = true;\n\n        this._disposables.add(this._namedEvents);\n\n        detectTabFocusChange.call(this);\n    }\n\n    ApplicationActivityDetector.prototype.isForeground = function() {\n        return this._isForeground;\n    };\n\n    ApplicationActivityDetector.prototype.getTimeSinceLastChange = function() {\n        return _.now() - this._timeOfLastTabFocusChange;\n    };\n\n    ApplicationActivityDetector.prototype.onForeground = function isEnabled(callback) {\n        assert.isFunction(callback, 'callback');\n\n        return this._namedEvents.listen('foreground', callback);\n    };\n\n    ApplicationActivityDetector.prototype.onBackground = function setEnabled(callback) {\n        assert.isFunction(callback, 'callback');\n\n        return this._namedEvents.listen('background', callback);\n    };\n\n    function detectTabFocusChange() {\n        if (canDetectDirectly()) {\n            return detectTabFocusChangeDirectly.call(this);\n        }\n\n        detectTabFocusChangeIndirectly.call(this);\n    }\n\n    function canDetectDirectly() {\n        return typeof chrome !== 'undefined' && chrome.extension && chrome.extension.onRequest; // eslint-disable-line no-undef\n    }\n\n    function detectTabFocusChangeDirectly() {\n        if (!canDetectDirectly()) {\n            return;\n        }\n\n        var that = this;\n\n        chrome.extension.onRequest.addListener(function(request, sender, sendResponse) { // eslint-disable-line no-undef\n            if(request === \"is_selected\") {\n                chrome.tabs.getSelected(null, function(tab){ // eslint-disable-line no-undef\n                    var isForeground = tab.id === sender.tab.id;\n\n                    setFocusState.call(that, isForeground);\n\n                    if(isForeground) {\n                        sendResponse(true);\n                    } else {\n                        sendResponse(false);\n                    }\n                });\n            }\n        });\n    }\n\n    function detectTabFocusChangeIndirectly() {\n        var hidden;\n        var visibilityChange;\n        var that = this;\n\n        if (typeof document !== \"object\") {\n            return;\n        }\n\n        if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n            visibilityChange = \"msvisibilitychange\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n            visibilityChange = \"webkitvisibilitychange\";\n        } else if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support\n            hidden = \"hidden\";\n            visibilityChange = \"visibilitychange\";\n        }\n\n        function handleVisibilityChange() {\n            var isForeground = !document[hidden];\n\n            setFocusState.call(that, isForeground);\n        }\n\n        if (typeof document.addEventListener !== \"undefined\" && typeof document[hidden] !== \"undefined\") {\n            _.addEventListener(document, visibilityChange, handleVisibilityChange, false);\n\n            that._disposables.add(new disposable.Disposable(function() {\n                _.removeEventListener(document, visibilityChange, handleVisibilityChange, false);\n            }));\n        } else {\n            listenForDocumentFocus.call(that);\n        }\n    }\n\n    function listenForDocumentFocus() {\n        var that = this;\n\n        that._documentFocusInterval = setInterval(function() {\n            var isForeground = document.hasFocus();\n\n            setFocusState.call(that, isForeground);\n        }, defaultDocumentFocusIntervalTimeout);\n\n        that._disposables.add(new disposable.Disposable(function() {\n            if (_.isNumber(that._documentFocusInterval)) {\n                clearInterval(that._documentFocusInterval);\n            }\n\n            that._documentFocusInterval = null;\n        }));\n    }\n\n    function setFocusState(isForeground) {\n        assert.isBoolean(isForeground, 'isForeground');\n\n        if (this._isForeground === isForeground) {\n            return;\n        }\n\n        if (isForeground) {\n            this._isForeground = true;\n\n            return triggerFocusChange.call(this, 'foreground');\n        }\n\n        this._isForeground = false;\n\n        return triggerFocusChange.call(this, 'background');\n    }\n\n    function triggerFocusChange(state) {\n        var currentTime = _.now();\n        var timeElapsedOfLastState = currentTime - this._timeOfLastTabFocusChange;\n\n        this._timeOfLastTabFocusChange = currentTime;\n        this._namedEvents.fire(state, [timeElapsedOfLastState]);\n    }\n\n    return ApplicationActivityDetector;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-rtc'\n], function(rtc) {\n    'use strict';\n\n    function AudioContext() {\n        this.init();\n    }\n\n    AudioContext.prototype.init = function init() {\n        if (!rtc.global.AudioContext && !rtc.global.webkitAudioContext) {\n            throw new Error('Browser does not support AudioContext');\n        }\n\n        this._audioContext = new (rtc.global.AudioContext || rtc.global.webkitAudioContext)();\n    };\n\n    AudioContext.prototype.getNativeAudioContext = function getNativeAudioContext() {\n        return this._audioContext;\n    };\n\n    AudioContext.prototype.toString = function toString() {\n        return 'AudioContext';\n    };\n\n    return AudioContext;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-proto',\n    'phenix-rtc',\n    './protocol/pcastProto.json',\n    './protocol/chatProto.json'\n], function(_, assert, observable, proto, phenixRTC, pcastProto, chatProto) {\n    'use strict';\n\n    var apiVersion = 5;\n\n    function PCastProtocol(uri, deviceId, version, logger) {\n        assert.isStringNotEmpty(uri, 'uri');\n        assert.isString(deviceId, 'deviceId');\n        assert.isStringNotEmpty(version, 'version');\n        assert.isObject(logger, 'logger');\n\n        this._deviceId = deviceId;\n        this._version = version;\n        this._logger = logger;\n        this._mqWebSocket = new proto.MQWebSocket(uri, this._logger, [pcastProto, chatProto], apiVersion);\n        this._observableSessionId = new observable.Observable(null).extend({rateLimit: 0});\n    }\n\n    PCastProtocol.prototype.onEvent = function(eventName, handler) {\n        return this._mqWebSocket.onEvent(eventName, handler);\n    };\n\n    PCastProtocol.prototype.disconnect = function() {\n        this._observableSessionId.setValue(null);\n\n        return this._mqWebSocket.disconnect();\n    };\n\n    PCastProtocol.prototype.authenticate = function(authToken, callback) {\n        assert.isStringNotEmpty(authToken, 'authToken');\n        assert.isFunction(callback, 'callback');\n\n        var authenticate = {\n            apiVersion: this._mqWebSocket.getApiVersion(),\n            clientVersion: this._version,\n            deviceId: this._deviceId,\n            platform: phenixRTC.browser,\n            platformVersion: phenixRTC.browserVersion.toString(),\n            authenticationToken: authToken\n        };\n\n        if (this.getSessionId()) {\n            authenticate.sessionId = this.getSessionId();\n        }\n\n        var that = this;\n\n        return this._mqWebSocket.sendRequest('pcast.Authenticate', authenticate, function(error, response) {\n            if (response) {\n                var previousSessionId = that._observableSessionId.getValue();\n\n                if (previousSessionId && previousSessionId !== response.sessionId) {\n                    that._mqWebSocket.disposeOfPendingRequests();\n                }\n\n                that._observableSessionId.setValue(response.sessionId);\n            }\n\n            return callback(error, response);\n        });\n    };\n\n    PCastProtocol.prototype.getSessionId = function() {\n        return this._observableSessionId.getValue();\n    };\n\n    PCastProtocol.prototype.getObservableSessionId = function() {\n        return this._observableSessionId;\n    };\n\n    PCastProtocol.prototype.bye = function(reason, callback) {\n        assert.isStringNotEmpty(reason, 'reason');\n        assert.isFunction(callback, 'callback');\n\n        var bye = {\n            sessionId: this.getSessionId(),\n            reason: reason\n        };\n\n        return this._mqWebSocket.sendRequest('pcast.Bye', bye, callback);\n    };\n\n    PCastProtocol.prototype.setupStream = function(streamType, streamToken, options, rtt, callback) {\n        assert.isStringNotEmpty(streamType, 'streamType');\n        assert.isStringNotEmpty(streamToken, 'streamToken');\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        var browser = phenixRTC.browser || 'UnknownBrowser';\n        var browserWithVersion = browser + '-' + (phenixRTC.browserVersion || 0);\n        var rttString = 'rtt[http]=' + rtt;\n        var setupStream = {\n            streamToken: streamToken,\n            createStream: {\n                sessionId: this.getSessionId(),\n                options: ['data-quality-notifications', rttString],\n                connectUri: options.connectUri,\n                connectOptions: options.connectOptions || [],\n                tags: options.tags || [],\n                userAgent: _.get(phenixRTC, ['global', 'navigator', 'userAgent'], browserWithVersion)\n            }\n        };\n\n        if (options.originStreamId) {\n            setupStream.createStream.originStreamId = options.originStreamId;\n        }\n\n        if (options.negotiate) {\n            setupStream.createStream.createOfferDescription = {\n                streamId: '',\n                options: [streamType, browser, browserWithVersion],\n                apiVersion: this._mqWebSocket.getApiVersion()\n            };\n\n            if (typeof screen !== 'undefined') {\n                setupStream.createStream.createOfferDescription.options.push('screen=' + screen.width + 'x' + screen.height);\n            }\n        }\n\n        if (options.receiveAudio === false) {\n            setupStream.createStream.options.push('no-audio');\n        }\n\n        if (options.receiveVideo === false) {\n            setupStream.createStream.options.push('no-video');\n        }\n\n        return this._mqWebSocket.sendRequest('pcast.SetupStream', setupStream, callback);\n    };\n\n    PCastProtocol.prototype.setAnswerDescription = function(streamId, sdp, callback) {\n        assert.isStringNotEmpty(streamId, 'streamId');\n        assert.isStringNotEmpty(sdp, 'sdp');\n        assert.isFunction(callback, 'callback');\n\n        var setRemoteDescription = {\n            streamId: streamId,\n            sessionDescription: {\n                type: 'Answer',\n                sdp: sdp\n            },\n            apiVersion: this._mqWebSocket.getApiVersion()\n        };\n\n        return this._mqWebSocket.sendRequest('pcast.SetRemoteDescription', setRemoteDescription, callback);\n    };\n\n    PCastProtocol.prototype.addIceCandidates = function(streamId, candidates, options, callback) {\n        assert.isStringNotEmpty(streamId, 'streamId');\n        assert.isArray(candidates, 'candidates');\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        var sanitizedCandidates = _.map(candidates, function(candidate, index) {\n            assert.isStringNotEmpty(candidate.candidate, 'candidate[' + index + '].candidate');\n            assert.isNumber(candidate.sdpMLineIndex, 'candidate[' + index + '].sdpMLineIndex');\n            assert.isStringNotEmpty(candidate.sdpMid, 'candidate[' + index + '].sdpMid');\n\n            return {\n                candidate: candidate.candidate,\n                sdpMLineIndex: candidate.sdpMLineIndex,\n                sdpMid: candidate.sdpMid\n            };\n        });\n\n        var addIceCandidates = {\n            streamId: streamId,\n            candidates: sanitizedCandidates,\n            options: options,\n            apiVersion: this._mqWebSocket.getApiVersion()\n        };\n\n        return this._mqWebSocket.sendRequest('pcast.AddIceCandidates', addIceCandidates, callback);\n    };\n\n    PCastProtocol.prototype.updateStreamState = function(streamId, signalingState, iceGatheringState, iceConnectionState, callback) {\n        assert.isStringNotEmpty(streamId, 'streamId');\n        assert.isStringNotEmpty(signalingState, 'signalingState');\n        assert.isStringNotEmpty(iceGatheringState, 'iceGatheringState');\n        assert.isStringNotEmpty(iceConnectionState, 'iceConnectionState');\n        assert.isFunction(callback, 'callback');\n\n        var updateStreamState = {\n            streamId: streamId,\n            signalingState: signalingState,\n            iceGatheringState: iceGatheringState,\n            iceConnectionState: iceConnectionState,\n            apiVersion: this._mqWebSocket.getApiVersion()\n        };\n\n        return this._mqWebSocket.sendRequest('pcast.UpdateStreamState', updateStreamState, callback);\n    };\n\n    PCastProtocol.prototype.destroyStream = function(streamId, reason, callback) {\n        assert.isStringNotEmpty(streamId, 'streamId');\n        assert.isString(reason, 'reason');\n        assert.isFunction(callback, 'callback');\n\n        var destroyStream = {\n            streamId: streamId,\n            reason: reason\n        };\n\n        return this._mqWebSocket.sendRequest('pcast.DestroyStream', destroyStream, callback);\n    };\n\n    PCastProtocol.prototype.getRoomInfo = function(roomId, alias, callback) {\n        if (roomId) {\n            assert.isString(roomId, 'roomId');\n        } else {\n            assert.isString(alias, 'alias');\n        }\n\n        assert.isFunction(callback, 'callback');\n\n        var getRoomInfo = {\n            roomId: roomId,\n            alias: alias,\n            sessionId: this.getSessionId()\n        };\n\n        return this._mqWebSocket.sendRequest('chat.GetRoomInfo', getRoomInfo, callback);\n    };\n\n    PCastProtocol.prototype.createRoom = function(room, callback) {\n        assert.isObject(room, 'room');\n        assert.isStringNotEmpty(room.name, 'room.name');\n        assert.isStringNotEmpty(room.type, 'room.type');\n        assert.isStringNotEmpty(room.description, 'room.description');\n        assert.isFunction(callback, 'callback');\n\n        var createRoom = {\n            sessionId: this.getSessionId(),\n            room: room\n        };\n\n        return this._mqWebSocket.sendRequest('chat.CreateRoom', createRoom, callback);\n    };\n\n    PCastProtocol.prototype.enterRoom = function(roomId, alias, member, options, timestamp, callback) {\n        if (roomId) {\n            assert.isString(roomId, 'roomId');\n        } else {\n            assert.isString(alias, 'alias');\n        }\n\n        assert.isObject(member, 'member');\n        assert.isNumber(timestamp, 'timestamp');\n        assert.isArray(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        var joinRoom = {\n            roomId: roomId,\n            alias: alias,\n            sessionId: this.getSessionId(),\n            member: member,\n            options: options,\n            timestamp: timestamp\n        };\n\n        return this._mqWebSocket.sendRequest('chat.JoinRoom', joinRoom, callback);\n    };\n\n    PCastProtocol.prototype.leaveRoom = function(roomId, timestamp, callback) {\n        assert.isString(roomId, 'roomId');\n        assert.isNumber(timestamp, 'timestamp');\n        assert.isFunction(callback, 'callback');\n\n        var leaveRoom = {\n            roomId: roomId,\n            sessionId: this.getSessionId(),\n            timestamp: timestamp\n        };\n\n        return this._mqWebSocket.sendRequest('chat.LeaveRoom', leaveRoom, callback);\n    };\n\n    PCastProtocol.prototype.updateMember = function(roomId, member, timestamp, callback) {\n        assert.isStringNotEmpty(roomId, 'roomId');\n        assert.isObject(member, 'member');\n        assert.isNumber(timestamp, 'timestamp');\n        assert.isFunction(callback, 'callback');\n\n        member.updateStreams = Object.prototype.hasOwnProperty.call(member, 'streams');\n\n        var updateMember = {\n            sessionId: this.getSessionId(),\n            roomId: roomId,\n            member: member,\n            timestamp: timestamp\n        };\n\n        return this._mqWebSocket.sendRequest('chat.UpdateMember', updateMember, callback);\n    };\n\n    PCastProtocol.prototype.updateRoom = function(room, timestamp, callback) {\n        assert.isObject(room, 'room');\n        assert.isNumber(timestamp, 'timestamp');\n        assert.isFunction(callback, 'callback');\n\n        var updateRoom = {\n            sessionId: this.getSessionId(),\n            room: room,\n            timestamp: timestamp\n        };\n\n        return this._mqWebSocket.sendRequest('chat.UpdateRoom', updateRoom, callback);\n    };\n\n    PCastProtocol.prototype.sendMessageToRoom = function(roomId, chatMessage, callback) {\n        assert.isStringNotEmpty(roomId, 'roomId');\n        assert.isObject(chatMessage, 'chatMessage');\n\n        var sendMessage = {\n            roomId: roomId,\n            chatMessage: chatMessage\n        };\n\n        return this._mqWebSocket.sendRequest('chat.SendMessageToRoom', sendMessage, callback);\n    };\n\n    PCastProtocol.prototype.subscribeToRoomConversation = function(sessionId, roomId, batchSize, callback) {\n        assert.isStringNotEmpty(sessionId, 'sessionId');\n        assert.isStringNotEmpty(roomId, 'roomId');\n        assert.isNumber(batchSize, 'batchSize');\n\n        var fetchRoomConversation = {\n            sessionId: sessionId,\n            roomId: roomId,\n            limit: batchSize,\n            options: ['Subscribe']\n        };\n\n        return this._mqWebSocket.sendRequest('chat.FetchRoomConversation', fetchRoomConversation, callback);\n    };\n\n    PCastProtocol.prototype.getMessages = function(sessionId, roomId, batchSize, afterMessageId, beforeMessageId, callback) {\n        assert.isStringNotEmpty(sessionId, 'sessionId');\n        assert.isStringNotEmpty(roomId, 'roomId');\n\n        if (!beforeMessageId || !afterMessageId) {\n            assert.isNumber(batchSize, 'batchSize');\n        }\n\n        var fetchRoomConversation = {\n            sessionId: sessionId,\n            roomId: roomId,\n            limit: batchSize || 0,\n            options: []\n        };\n\n        if (beforeMessageId) {\n            assert.isStringNotEmpty(beforeMessageId, 'beforeMessageId');\n\n            fetchRoomConversation.beforeMessageId = beforeMessageId;\n        }\n\n        if (afterMessageId) {\n            assert.isStringNotEmpty(afterMessageId, 'afterMessageId');\n\n            fetchRoomConversation.afterMessageId = afterMessageId;\n        }\n\n        return this._mqWebSocket.sendRequest('chat.FetchRoomConversation', fetchRoomConversation, callback);\n    };\n\n    PCastProtocol.prototype.toString = function() {\n        return 'PCastProtocol[' + this._mqWebSocket.toString() + ']';\n    };\n\n    return PCastProtocol;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n], function() {\n    'use strict';\n\n    var pcastProto = {\n        \"package\": \"pcast\",\n        \"options\": {\"optimize_for\": \"LITE_RUNTIME\"},\n        \"messages\": [\n            {\n                \"name\": \"Authenticate\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 9,\n                        \"options\": {\"default\": 0}\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"clientVersion\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"device\",\n                        \"id\": 12\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"deviceId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"manufacturer\",\n                        \"id\": 13\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"platform\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"platformVersion\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"authenticationToken\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"connectionId\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"connectionRouteKey\",\n                        \"id\": 10\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"remoteAddress\",\n                        \"id\": 11\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 7\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 8\n                    }\n                ]\n            },\n            {\n                \"name\": \"AuthenticateResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"redirect\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"roles\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"Bye\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"ByeResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"SessionDescription\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"Type\",\n                        \"name\": \"type\",\n                        \"id\": 1,\n                        \"options\": {\"default\": \"Offer\"}\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sdp\",\n                        \"id\": 2\n                    }\n                ],\n                \"enums\": [\n                    {\n                        \"name\": \"Type\",\n                        \"values\": [\n                            {\n                                \"name\": \"Offer\",\n                                \"id\": 0\n                            },\n                            {\n                                \"name\": \"Answer\",\n                                \"id\": 1\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateStream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"originStreamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"originStreamIds\",\n                        \"id\": 10\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"connectUri\",\n                        \"id\": 8\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"connectOptions\",\n                        \"id\": 9\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"userAgent\",\n                        \"id\": 11\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"SetRemoteDescription\",\n                        \"name\": \"setRemoteDescription\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"CreateOfferDescription\",\n                        \"name\": \"createOfferDescription\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"CreateAnswerDescription\",\n                        \"name\": \"createAnswerDescription\",\n                        \"id\": 7\n                    }\n                ]\n            },\n            {\n                \"name\": \"IceServer\",\n                \"fields\": [\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"urls\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"username\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"credential\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"RtcConfiguration\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"BundlePolicy\",\n                        \"name\": \"bundlePolicy\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"iceCandidatePoolSize\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"IceServer\",\n                        \"name\": \"iceServers\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"IceTransportPolicy\",\n                        \"name\": \"iceTransportPolicy\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"peerIdentity\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"RtcpMuxPolicy\",\n                        \"name\": \"rtcpMuxPolicy\",\n                        \"id\": 7\n                    }\n                ],\n                \"enums\": [\n                    {\n                        \"name\": \"BundlePolicy\",\n                        \"values\": [\n                            {\n                                \"name\": \"BundlePolicyBalanced\",\n                                \"id\": 1\n                            },\n                            {\n                                \"name\": \"BundlePolicyMaxCompat\",\n                                \"id\": 2\n                            },\n                            {\n                                \"name\": \"BundlePolicyMaxBundle\",\n                                \"id\": 3\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"IceTransportPolicy\",\n                        \"values\": [\n                            {\n                                \"name\": \"IceTransportPolicyAll\",\n                                \"id\": 1\n                            },\n                            {\n                                \"name\": \"IceTransportPolicyPublic\",\n                                \"id\": 2\n                            },\n                            {\n                                \"name\": \"IceTransportPolicyRelay\",\n                                \"id\": 3\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"RtcpMuxPolicy\",\n                        \"values\": [\n                            {\n                                \"name\": \"RtcpMuxPolicyNegotiate\",\n                                \"id\": 1\n                            },\n                            {\n                                \"name\": \"RtcpMuxPolicyRequire\",\n                                \"id\": 2\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateStreamResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"instanceRouteKey\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"streamUris\",\n                        \"id\": 8\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"RtcConfiguration\",\n                        \"name\": \"rtcConfiguration\",\n                        \"id\": 9\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"SetRemoteDescriptionResponse\",\n                        \"name\": \"setRemoteDescriptionResponse\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"CreateOfferDescriptionResponse\",\n                        \"name\": \"createOfferDescriptionResponse\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"CreateAnswerDescriptionResponse\",\n                        \"name\": \"createAnswerDescriptionResponse\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 7\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint64\",\n                        \"name\": \"offset\",\n                        \"id\": 10,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetLocalDescription\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"SessionDescription\",\n                        \"name\": \"sessionDescription\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 3,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetLocalDescriptionResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetRemoteDescription\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"SessionDescription\",\n                        \"name\": \"sessionDescription\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 3,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetRemoteDescriptionResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"SessionDescription\",\n                        \"name\": \"sessionDescription\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateOfferDescription\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 3,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateOfferDescriptionResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"SessionDescription\",\n                        \"name\": \"sessionDescription\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateAnswerDescription\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 3,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateAnswerDescriptionResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"SessionDescription\",\n                        \"name\": \"sessionDescription\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"IceCandidate\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"candidate\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint32\",\n                        \"name\": \"sdpMLineIndex\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sdpMid\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"AddIceCandidates\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"IceCandidate\",\n                        \"name\": \"candidates\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 4,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"AddIceCandidatesResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"UpdateStreamState\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"signalingState\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"iceGatheringState\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"iceConnectionState\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 5,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"UpdateStreamStateResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"DestroyStream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"DestroyStreamResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"ConnectionDisconnected\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"connectionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint32\",\n                        \"name\": \"reasonCode\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"description\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"ConnectionDisconnectedResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamStarted\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SourceStreamStarted\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"capabilities\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamEnded\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"continuationId\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"routeKey\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"SourceStreamEnded\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"capabilities\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 5\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamEndedResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"continuationId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"routeKey\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamIdle\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamArchived\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"startTime\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"uri\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SessionEnded\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"float\",\n                        \"name\": \"duration\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"ResourceIdle\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"routeKey\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"ResourceIdleResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamPlaylist\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"PlaylistType\",\n                        \"name\": \"playlistType\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"uri\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"bool\",\n                        \"name\": \"isVariant\",\n                        \"id\": 5,\n                        \"options\": {\"default\": true}\n                    }\n                ],\n                \"enums\": [\n                    {\n                        \"name\": \"PlaylistType\",\n                        \"values\": [\n                            {\n                                \"name\": \"Live\",\n                                \"id\": 0\n                            },\n                            {\n                                \"name\": \"OnDemand\",\n                                \"id\": 1\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamRtmp\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"uri\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint32\",\n                        \"name\": \"height\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint32\",\n                        \"name\": \"bitrate\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"SendEventToClient\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"connectionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"type\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"bytes\",\n                        \"name\": \"payload\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SendEventToClientResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"SendRequestToClient\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"connectionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"type\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"bytes\",\n                        \"name\": \"payload\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SendRequestToClientResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"type\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"bytes\",\n                        \"name\": \"payload\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetupStream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamToken\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"CreateStream\",\n                        \"name\": \"createStream\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetupStreamResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"CreateStreamResponse\",\n                        \"name\": \"createStreamResponse\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetupPlaylistStream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamToken\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"PlaylistStreamManifest\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"manifest\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"bool\",\n                        \"name\": \"isProtectedContent\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"drmToken\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetupPlaylistStreamResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"PlaylistStreamManifest\",\n                        \"name\": \"manifests\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint64\",\n                        \"name\": \"offset\",\n                        \"id\": 3,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamDataQuality\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"DataQualityStatus\",\n                        \"name\": \"status\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"DataQualityReason\",\n                        \"name\": \"reason\",\n                        \"id\": 5\n                    }\n                ],\n                \"enums\": [\n                    {\n                        \"name\": \"DataQualityStatus\",\n                        \"values\": [\n                            {\n                                \"name\": \"NoData\",\n                                \"id\": 0\n                            },\n                            {\n                                \"name\": \"AudioOnly\",\n                                \"id\": 1\n                            },\n                            {\n                                \"name\": \"All\",\n                                \"id\": 2\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"DataQualityReason\",\n                        \"values\": [\n                            {\n                                \"name\": \"None\",\n                                \"id\": 0\n                            },\n                            {\n                                \"name\": \"UploadLimited\",\n                                \"id\": 1\n                            },\n                            {\n                                \"name\": \"DownloadLimited\",\n                                \"id\": 2\n                            },\n                            {\n                                \"name\": \"PublisherLimited\",\n                                \"id\": 3\n                            },\n                            {\n                                \"name\": \"NetworkLimited\",\n                                \"id\": 4\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamDataQualityResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"CallbackEvent\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 1,\n                        \"options\": {\"default\": 0}\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"entity\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"what\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"data\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 5\n                    }\n                ]\n            },\n            {\n                \"name\": \"Uri\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"protocol\",\n                        \"id\": 1,\n                        \"options\": {\"default\": \"http\"}\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"host\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"port\",\n                        \"id\": 3,\n                        \"options\": {\"default\": 80}\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"method\",\n                        \"id\": 4,\n                        \"options\": {\"default\": \"POST\"}\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"path\",\n                        \"id\": 5,\n                        \"options\": {\"default\": \"/\"}\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetApplicationCallback\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"Uri\",\n                        \"name\": \"callback\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetApplicationCallbackResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"endpoint\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"IssueAuthenticationToken\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"capabilities\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"IssueAuthenticationTokenResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"authenticationToken\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"IssueStreamToken\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"originStreamId\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"alternateOriginStreamIds\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"capabilities\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"bool\",\n                        \"name\": \"permissive\",\n                        \"id\": 7,\n                        \"options\": {\"default\": false}\n                    }\n                ]\n            },\n            {\n                \"name\": \"IssueStreamTokenResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamToken\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"IssueDrmToken\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"originStreamId\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"capabilities\",\n                        \"id\": 5\n                    }\n                ]\n            },\n            {\n                \"name\": \"IssueDrmTokenResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"drmToken\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"TerminateStream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 3,\n                        \"oneof\": \"streamOrToken\"\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamToken\",\n                        \"id\": 5,\n                        \"oneof\": \"streamOrToken\"\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 4\n                    }\n                ],\n                \"oneofs\": {\n                    \"streamOrToken\": [\n                        3,\n                        5\n                    ]\n                }\n            },\n            {\n                \"name\": \"TerminateStreamResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"DeleteStream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 3,\n                        \"oneof\": \"streamOrToken\"\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamToken\",\n                        \"id\": 5,\n                        \"oneof\": \"streamOrToken\"\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 4\n                    }\n                ],\n                \"oneofs\": {\n                    \"streamOrToken\": [\n                        3,\n                        5\n                    ]\n                }\n            },\n            {\n                \"name\": \"DeleteStreamResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"Stream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"ListStreams\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"start\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint32\",\n                        \"name\": \"length\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 5\n                    }\n                ]\n            },\n            {\n                \"name\": \"ListStreamsResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"start\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"length\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Stream\",\n                        \"name\": \"streams\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"GetPlaylistUris\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"GetPlaylistUrisResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Playlist\",\n                        \"name\": \"playlists\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"StreamMetadata\",\n                        \"name\": \"streamInfo\",\n                        \"id\": 3\n                    }\n                ],\n                \"messages\": [\n                    {\n                        \"name\": \"PlaylistMetadata\",\n                        \"fields\": [\n                            {\n                                \"rule\": \"optional\",\n                                \"type\": \"uint32\",\n                                \"name\": \"bitrate\",\n                                \"id\": 1\n                            },\n                            {\n                                \"rule\": \"optional\",\n                                \"type\": \"uint32\",\n                                \"name\": \"height\",\n                                \"id\": 2\n                            },\n                            {\n                                \"rule\": \"optional\",\n                                \"type\": \"float\",\n                                \"name\": \"framesPerSecond\",\n                                \"id\": 3\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"StreamMetadata\",\n                        \"fields\": [\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"string\",\n                                \"name\": \"startTime\",\n                                \"id\": 1\n                            },\n                            {\n                                \"rule\": \"optional\",\n                                \"type\": \"string\",\n                                \"name\": \"endTime\",\n                                \"id\": 2\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Playlist\",\n                        \"fields\": [\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"string\",\n                                \"name\": \"name\",\n                                \"id\": 1\n                            },\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"PlaylistType\",\n                                \"name\": \"type\",\n                                \"id\": 2\n                            },\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"string\",\n                                \"name\": \"uri\",\n                                \"id\": 3\n                            },\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"bool\",\n                                \"name\": \"isVariant\",\n                                \"id\": 4\n                            },\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"bool\",\n                                \"name\": \"isProtected\",\n                                \"id\": 5\n                            },\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"PlaylistMetadata\",\n                                \"name\": \"info\",\n                                \"id\": 6\n                            }\n                        ]\n                    }\n                ],\n                \"enums\": [\n                    {\n                        \"name\": \"PlaylistType\",\n                        \"values\": [\n                            {\n                                \"name\": \"Hls\",\n                                \"id\": 0\n                            },\n                            {\n                                \"name\": \"Dash\",\n                                \"id\": 1\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    };\n\n    return pcastProto;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n], function() {\n    'use strict';\n\n    var chatProto = {\n        \"package\": \"chat\",\n        \"options\": {\"optimize_for\": \"LITE_RUNTIME\"},\n        \"messages\": [\n            {\n                \"name\": \"Room\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"alias\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"name\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"description\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"RoomType\",\n                        \"name\": \"type\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"bridgeId\",\n                        \"id\": 7\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"pin\",\n                        \"id\": 8\n                    }\n                ]\n            },\n            {\n                \"name\": \"Stream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"StreamType\",\n                        \"name\": \"type\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"uri\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"TrackState\",\n                        \"name\": \"audioState\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"TrackState\",\n                        \"name\": \"videoState\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"Member\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"screenName\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"MemberRole\",\n                        \"name\": \"role\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Stream\",\n                        \"name\": \"streams\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"MemberState\",\n                        \"name\": \"state\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"lastUpdate\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"MemberUpdate\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"screenName\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"MemberRole\",\n                        \"name\": \"role\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"bool\",\n                        \"name\": \"updateStreams\",\n                        \"id\": 7,\n                        \"options\": {\"default\": false}\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Stream\",\n                        \"name\": \"streams\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"MemberState\",\n                        \"name\": \"state\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"lastUpdate\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"ChatUser\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"screenName\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"MemberRole\",\n                        \"name\": \"role\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"lastUpdate\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"ChatMessage\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"messageId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"ChatUser\",\n                        \"name\": \"from\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"message\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateRoom\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"Room\",\n                        \"name\": \"room\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateRoomResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"Room\",\n                        \"name\": \"room\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"JoinRoom\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"alias\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"Member\",\n                        \"name\": \"member\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"JoinRoomResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"Room\",\n                        \"name\": \"room\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Member\",\n                        \"name\": \"members\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"Member\",\n                        \"name\": \"self\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"UpdateRoom\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"Room\",\n                        \"name\": \"room\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"UpdateRoomResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"UpdateMember\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"MemberUpdate\",\n                        \"name\": \"member\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"UpdateMemberResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint64\",\n                        \"name\": \"lastUpdate\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"LeaveRoom\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"LeaveRoomResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"DestroyRoom\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"DestroyRoomResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"GetRoomInfo\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"alias\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"GetRoomInfoResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"Room\",\n                        \"name\": \"room\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Member\",\n                        \"name\": \"members\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"RoomEvent\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"RoomEventType\",\n                        \"name\": \"eventType\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Member\",\n                        \"name\": \"members\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"Room\",\n                        \"name\": \"room\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 7\n                    }\n                ]\n            },\n            {\n                \"name\": \"SendMessageToRoom\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"ChatMessage\",\n                        \"name\": \"chatMessage\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"SendMessageToRoomResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"FetchRoomConversation\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"afterMessageId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"beforeMessageId\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint32\",\n                        \"name\": \"limit\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"RoomConversationOption\",\n                        \"name\": \"options\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"FetchRoomConversationResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"ChatMessage\",\n                        \"name\": \"chatMessages\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"RoomConversationEvent\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"RoomConversationEventType\",\n                        \"name\": \"eventType\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"ChatMessage\",\n                        \"name\": \"chatMessages\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"RoomBridgeIdle\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"bridgeId\",\n                        \"id\": 2\n                    }\n                ]\n            }\n        ],\n        \"enums\": [\n            {\n                \"name\": \"RoomType\",\n                \"values\": [\n                    {\n                        \"name\": \"DirectChat\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"MultiPartyChat\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"ModeratedChat\",\n                        \"id\": 2\n                    },\n                    {\n                        \"name\": \"TownHall\",\n                        \"id\": 3\n                    },\n                    {\n                        \"name\": \"Channel\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"MemberRole\",\n                \"values\": [\n                    {\n                        \"name\": \"Participant\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"Moderator\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"Presenter\",\n                        \"id\": 2\n                    },\n                    {\n                        \"name\": \"Audience\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"MemberState\",\n                \"values\": [\n                    {\n                        \"name\": \"Active\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"Passive\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"HandRaised\",\n                        \"id\": 2\n                    },\n                    {\n                        \"name\": \"Inactive\",\n                        \"id\": 3\n                    },\n                    {\n                        \"name\": \"Offline\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"RoomEventType\",\n                \"values\": [\n                    {\n                        \"name\": \"MemberJoined\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"MemberLeft\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"MemberUpdated\",\n                        \"id\": 2\n                    },\n                    {\n                        \"name\": \"RoomUpdated\",\n                        \"id\": 3\n                    },\n                    {\n                        \"name\": \"RoomEnded\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"TrackState\",\n                \"values\": [\n                    {\n                        \"name\": \"TrackEnabled\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"TrackDisabled\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"TrackEnded\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamType\",\n                \"values\": [\n                    {\n                        \"name\": \"User\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"Presentation\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"Audio\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"RoomConversationOption\",\n                \"values\": [\n                    {\n                        \"name\": \"Subscribe\",\n                        \"id\": 0\n                    }\n                ]\n            },\n            {\n                \"name\": \"RoomConversationEventType\",\n                \"values\": [\n                    {\n                        \"name\": \"Message\",\n                        \"id\": 0\n                    }\n                ]\n            }\n        ]\n    };\n\n    return chatProto;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-assert',\n    'phenix-web-lodash-light',\n    'phenix-web-disposable',\n    'phenix-web-closest-endpoint-resolver'\n], function(assert, _, disposable, ClosestEndPointResolver) {\n    'use strict';\n\n    function PCastEndPoint(version, baseUri, logger, sessionTelemetry) {\n        assert.isStringNotEmpty(version, 'version');\n        assert.isStringNotEmpty(baseUri, 'baseUri');\n        assert.isObject(logger, 'logger');\n\n        this._version = version;\n        this._baseUri = baseUri;\n        this._logger = logger;\n        this._disposables = new disposable.DisposableList();\n        this._sessionTelemetry = sessionTelemetry;\n    }\n\n    PCastEndPoint.DefaultPCastUri = 'https://pcast.phenixrts.com';\n\n    PCastEndPoint.prototype.getBaseUri = function() {\n        return this._baseUri;\n    };\n\n    PCastEndPoint.prototype.resolveUri = function(callback /* (error, {uri, roundTripTime}) */) {\n        return resolveUri.call(this, this._baseUri, callback);\n    };\n\n    PCastEndPoint.prototype.dispose = function() {\n        this._disposables.dispose();\n    };\n\n    PCastEndPoint.prototype.toString = function() {\n        return 'PCastEndPoint[' + this._baseUri + ']';\n    };\n\n    function resolveUri(baseUri, callback /* (error, {uri, roundTripTime}) */) {\n        var isWss = baseUri.lastIndexOf('wss:', 0) === 0;\n        var isWs = baseUri.lastIndexOf('ws:', 0) === 0;\n        var isHttps = baseUri.lastIndexOf('https:', 0) === 0;\n        var isHttp = baseUri.lastIndexOf('http:', 0) === 0;\n\n        if (isWss || isWs) {\n            // WS - Specific web socket end point\n            callback(undefined, {\n                uri: baseUri + '/ws',\n                roundTripTime: 0\n            });\n        } else if (isHttps || isHttp) {\n            // HTTP - Resolve closest end point\n            var that = this;\n\n            getEndpoints.call(that, baseUri, function(err, endPoints) {\n                if (err) {\n                    return callback(err);\n                }\n\n                var closestEndPointResolver = new ClosestEndPointResolver({\n                    logger: that._logger,\n                    version: that._version\n                }, callback, function(err, response) {\n                    if (err) {\n                        if (err.code === 503) {\n                            that._logger.debug('The end point [%s] is temporarily disabled', _.get(response, ['endPoint']));\n                        } else {\n                            that._logger.warn('An error occurred in resolving an endpoint [%s]', _.get(response, ['endPoint']), err);\n                        }\n\n                        return;\n                    }\n\n                    var isHttpsEndPoint = response.endPoint.lastIndexOf('https:', 0) === 0;\n\n                    that._sessionTelemetry.recordMetric('RoundTripTime', {uint64: response.time}, null, {\n                        resource: response.endPoint,\n                        kind: isHttpsEndPoint ? 'https' : 'http'\n                    });\n                });\n\n                closestEndPointResolver.resolveAll(endPoints);\n\n                that._disposables.add(closestEndPointResolver);\n            });\n        } else {\n            // Not supported\n            callback(new Error('Uri not supported [' + baseUri + ']'));\n        }\n    }\n\n    function getEndpoints(baseUri, callback) {\n        var version = '2022-04-13T15:08:08Z';\n        var requestUrl = baseUri + '/pcast/endPoints?version=' + version + '&_=' + _.now();\n        var xhr = getAndOpenVendorSpecificXmlHttpMethod('GET', requestUrl);\n\n        xhr.addEventListener('readystatechange', _.bind(handleReadyStateChange, this, xhr, function(err, response) {\n            if (err) {\n                return callback(new Error('Failed to resolve an end point', err));\n            }\n\n            var endPoints = response.data.split(',');\n\n            if (endPoints.length < 1) {\n                callback(new Error('Failed to discover end points'));\n            }\n\n            callback(undefined, endPoints);\n        }));\n        xhr.timeout = 15000;\n        xhr.send(null);\n    }\n\n    function getAndOpenVendorSpecificXmlHttpMethod(requestMethod, requestUrl) {\n        var xhr = new XMLHttpRequest();\n\n        if ('withCredentials' in xhr) {\n            // Most browsers.\n            xhr.open(requestMethod, requestUrl, true);\n        } else if (typeof XDomainRequest !== 'undefined') {\n            // IE8 & IE9\n            // eslint-disable-next-line no-undef\n            xhr = new XDomainRequest();\n            xhr.open(requestMethod, requestUrl);\n        } else {\n            return;\n        }\n\n        return xhr;\n    }\n\n    function handleReadyStateChange(xhr, callback) {\n        if (xhr.readyState === 4 /* DONE */) {\n            if (xhr.status === 200) {\n                var responseHeaders = getXhrResponseHeaders(xhr);\n                var response = {\n                    data: xhr.response || xhr.responseText,\n                    headers: responseHeaders,\n                    rawXhr: xhr\n                };\n\n                callback(null, response);\n            } else {\n                var err = new Error(xhr.status === 0 ? 'timeout' : 'Status=[' + xhr.status + ']');\n\n                err.code = xhr.status;\n\n                callback(err);\n            }\n        }\n    }\n\n    function getXhrResponseHeaders(xhr) {\n        var responseHeadersString = xhr.getAllResponseHeaders();\n\n        return _.reduce(responseHeadersString.trim().split(/[\\r\\n]+/), function(headers, header) {\n            var parts = header.split(': ');\n            var headerName = parts.shift();\n            var headerValue = parts.join(': ');\n\n            if (headerName) {\n                headers[headerName] = headerValue;\n            }\n\n            return headers;\n        }, {});\n    }\n\n    return PCastEndPoint;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './ClosestEndPointResolver'\n], function(ClosestEndPointResolver) {\n    return ClosestEndPointResolver;\n});","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-disposable'\n], function(_, assert, disposable) {\n    'use strict';\n\n    function ClosestEndPointResolver(options, onClosestEndpointFound, onAnEndpointResolved) {\n        assert.isObject(options, 'options');\n        assert.isObject(options.logger, 'options.logger');\n        assert.isStringNotEmpty(options.version, 'options.version');\n        assert.isFunction(onClosestEndpointFound, 'onClosestEndpointFound');\n\n        if (onAnEndpointResolved) {\n            assert.isFunction(onAnEndpointResolved, 'onAnEndpointResolved');\n        }\n\n        this._logger = options.logger;\n        this._version = options.version;\n        this._onClosestEndpointFound = onClosestEndpointFound;\n        this._onAnEndpointResolved = onAnEndpointResolved;\n        this._disposables = new disposable.DisposableList();\n        this._done = false;\n    }\n\n    ClosestEndPointResolver.prototype.isResolved = function isResolved() {\n        return this._done;\n    };\n\n    ClosestEndPointResolver.prototype.dispose = function dispose() {\n        this._disposables.dispose();\n    };\n\n    ClosestEndPointResolver.prototype.completeCallback = function completeCallback(endPoint, time, data) {\n        if (this.isResolved()) {\n            return;\n        }\n\n        this._done = true;\n\n        return this._onClosestEndpointFound(null, {\n            uri: data,\n            roundTripTime: time,\n            endPoint: endPoint\n        });\n    };\n\n    ClosestEndPointResolver.prototype.resolveAll = function resolveAll(endPoints) {\n        for (var i = 0; i < endPoints.length; i++) {\n            this.resolve(endPoints[i]);\n        }\n    };\n\n    ClosestEndPointResolver.prototype.resolve = function resolve(endPoint) {\n        var that = this;\n\n        that._logger.info('Checking end point [%s]', endPoint);\n\n        var version = that._version;\n        var requestUrl = endPoint + '?version=' + version + '&_=' + _.now();\n        var xhr = getAndOpenVendorSpecificXmlHttpMethod('GET', requestUrl);\n\n        xhr.addEventListener('readystatechange', _.bind(handleReadyStateChange, this, xhr, function(err, response) {\n            var time = _.get(response, ['stats', 'successResponseTime'], 0);\n\n            if (that._onAnEndpointResolved) {\n                if (err) {\n                    that._onAnEndpointResolved(err, {endPoint: endPoint});\n                } else {\n                    that._onAnEndpointResolved(null, {\n                        time: time,\n                        endPoint: endPoint\n                    });\n                }\n            }\n\n            if (err) {\n                if (err.code === 503) {\n                    that._logger.info('End point [%s] is temporarily unavailable', endPoint);\n                } else {\n                    that._logger.warn('Unable to resolve end point [%s] with [%s]', endPoint, err);\n                }\n\n                return;\n            } else if (that.isResolved()) {\n                return;\n            }\n\n            return that.completeCallback(endPoint, time, response.data);\n        }));\n        xhr.timeout = 15000;\n        xhr.send(null);\n    };\n\n    function getAndOpenVendorSpecificXmlHttpMethod(requestMethod, requestUrl) {\n        var xhr = new XMLHttpRequest();\n\n        if ('withCredentials' in xhr) {\n            // Most browsers.\n            xhr.open(requestMethod, requestUrl, true);\n        } else if (typeof XDomainRequest !== 'undefined') {\n            // IE8 & IE9\n            // eslint-disable-next-line no-undef\n            xhr = new XDomainRequest();\n            xhr.open(requestMethod, requestUrl);\n        } else {\n            return;\n        }\n\n        return xhr;\n    }\n\n    function handleReadyStateChange(xhr, callback) {\n        if (xhr.readyState === 4 /* DONE */) {\n            if (xhr.status === 200) {\n                var responseHeaders = getXhrResponseHeaders(xhr);\n                var response = {\n                    data: xhr.response || xhr.responseText,\n                    headers: responseHeaders,\n                    rawXhr: xhr\n                };\n\n                callback(null, response);\n            } else {\n                var err = new Error(xhr.status === 0 ? 'timeout' : 'Status=[' + xhr.status + ']');\n\n                err.code = xhr.status;\n\n                callback(err);\n            }\n        }\n    }\n\n    function getXhrResponseHeaders(xhr) {\n        var responseHeadersString = xhr.getAllResponseHeaders();\n\n        return _.reduce(responseHeadersString.trim().split(/[\\r\\n]+/), function(headers, header) {\n            var parts = header.split(': ');\n            var headerName = parts.shift();\n            var headerValue = parts.join(': ');\n\n            if (headerName) {\n                headers[headerName] = headerValue;\n            }\n\n            return headers;\n        }, {});\n    }\n\n    return ClosestEndPointResolver;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    '../environment',\n    './MetricsTransmitter'\n], function(_, assert, environment, MetricsTransmitter) {\n    function MetricsTransmitterFactory() {\n        this._metricsTransmitters = {};\n    }\n\n    MetricsTransmitterFactory.prototype.createMetricsTransmitter = function createMetricsTransmitter(pcastBaseUri) {\n        var env = environment.getEnvironmentFromUrl(pcastBaseUri || '');\n\n        var telemetryServerUrl = environment.getTelemetryServerUri(pcastBaseUri);\n\n        if (!this._metricsTransmitters[env]) {\n            this._metricsTransmitters[env] = createNewTransmitter.call(this, telemetryServerUrl, env);\n        }\n\n        return this._metricsTransmitters[env];\n    };\n\n    function createNewTransmitter(uri, env) {\n        var transmitter = new MetricsTransmitter(uri, env);\n\n        if (!uri) {\n            transmitter.setEnabled(false);\n        }\n\n        return transmitter;\n    }\n\n    return new MetricsTransmitterFactory();\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-proto',\n    'phenix-rtc',\n    '../protocol/telemetryProto.json'\n], function(_, assert, proto, rtc, telemetryProto) {\n    var metricsUrl = '/metrics';\n\n    function MetricsTransmitter(uri, environment) {\n        assert.isString(uri, 'uri');\n\n        this._domain = typeof location === 'object' ? location.hostname : rtc.browser + '-' + rtc.browserVersion + '-unknown';\n        this._isEnabled = true;\n        this._browser = (rtc.browser || 'Browser') + '/' + (rtc.browserVersion || '?');\n        this._batchHttpProtocol = new proto.BatchHttpProto(uri + metricsUrl, [telemetryProto], 'telemetry.SubmitMetricRecords', {\n            maxAttempts: 3,\n            maxBufferedRecords: 1000,\n            maxBatchSize: 512\n        });\n\n        this._mostRecentEnvironment = environment;\n\n        this._batchHttpProtocol.on('capacity', _.bind(onCapacity, this));\n    }\n\n    MetricsTransmitter.prototype.isEnabled = function isEnabled() {\n        return this._isEnabled;\n    };\n\n    MetricsTransmitter.prototype.setEnabled = function setEnabled(enabled) {\n        assert.isBoolean(enabled, 'enabled');\n\n        this._isEnabled = enabled;\n    };\n\n    MetricsTransmitter.prototype.submitMetric = function submit(metric, since, sessionId, streamId, version, value) {\n        if (!this._isEnabled) {\n            return;\n        }\n\n        assert.isStringNotEmpty(metric, 'metric');\n        assert.isObject(value, 'value');\n\n        this._mostRecentRuntime = since;\n        this._mostRecentSessionId = sessionId;\n        this._mostRecentStreamId = streamId;\n        this._mostRecentVersion = version;\n\n        addMetricToRecords.call(this, metric, value);\n    };\n\n    function addMetricToRecords(metric, value) {\n        var record = _.assign({}, value, {\n            metric: metric,\n            timestamp: _.isoString(),\n            sessionId: this._mostRecentSessionId,\n            streamId: this._mostRecentStreamId,\n            source: this._browser,\n            fullQualifiedName: this._domain,\n            environment: this._mostRecentEnvironment,\n            version: this._mostRecentVersion,\n            runtime: this._mostRecentRuntime\n        });\n\n        this._batchHttpProtocol.addRecord(record);\n    }\n\n    function onCapacity(deleteRecords) {\n        this._batchHttpProtocol.addRecordToBeginning({\n            metric: 'MetricDropped',\n            value: {uint64: deleteRecords},\n            timestamp: _.isoString(),\n            sessionId: this._mostRecentSessionId,\n            streamId: this._mostRecentStreamId,\n            source: this._browser,\n            fullQualifiedName: this._domain,\n            environment: this._mostRecentEnvironment,\n            version: this._mostRecentVersion,\n            runtime: this._mostRecentRuntime\n        });\n    }\n\n    return MetricsTransmitter;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-disposable',\n    'phenix-rtc'\n], function(_, assert, disposable, phenixRTC) {\n    'use strict';\n\n    var start = phenixRTC.global['__phenixPageLoadTime'] || phenixRTC.global['__pageLoadTime'] || _.now();\n    var sdkVersion = '2022-04-13T15:08:08Z' || '?';\n\n    function StreamTelemetry(sessionId, logger, metricsTransmitter) {\n        assert.isStringNotEmpty(sessionId, 'sessionId');\n\n        this._version = sdkVersion;\n        this._sessionId = sessionId;\n        this._properties = {};\n        this._logger = logger;\n        this._metricsTransmitter = metricsTransmitter;\n        this._start = _.now();\n        this._disposables = new disposable.DisposableList();\n        this._dimensionsTrackedVideos = [];\n        this._rebufferingTrackedVideos = [];\n        this._playTrackedVideos = [];\n        this._timeOfFirstFrame = null;\n\n        logMetric.call(this, 'Stream initializing');\n    }\n\n    StreamTelemetry.prototype.setProperty = function(name, value) {\n        assert.isStringNotEmpty(name, 'name');\n        assert.isStringNotEmpty(value, 'value');\n\n        this._properties[name] = value;\n    };\n\n    StreamTelemetry.prototype.recordMetric = function(metric, value, previousValue, additionalProperties) {\n        assert.isStringNotEmpty(metric, 'metric');\n\n        var record = _.assign({}, {\n            metric: metric,\n            elapsed: this.elapsed(),\n            value: value,\n            previousValue: previousValue\n        }, additionalProperties || {});\n\n        recordMetricRecord.call(this, record, since());\n    };\n\n    StreamTelemetry.prototype.setStreamId = function(streamId) {\n        assert.isStringNotEmpty(streamId, 'streamId');\n\n        if (this._streamId) {\n            throw new Error('Stream ID can only be set once.');\n        }\n\n        this._streamId = streamId;\n\n        var now = _.now();\n\n        recordMetricRecord.call(this, {\n            metric: 'Initialized',\n            elapsed: this.elapsed() - now + this._start // Adjust for delay to get the stream ID\n        }, since() - (now - this._start) / 1000); // Adjust for delay to get the stream ID);\n    };\n\n    StreamTelemetry.prototype.setStartOffset = function(startOffset) {\n        assert.isNumber(startOffset, 'startOffset');\n\n        if (this._startOffset) {\n            throw new Error('Start offset can only be set once.');\n        }\n\n        this._startOffset = startOffset;\n\n        this.recordMetric('Offset', {uint64: startOffset});\n    };\n\n    StreamTelemetry.prototype.getStartOffset = function() {\n        return this._startOffset;\n    };\n\n    StreamTelemetry.prototype.elapsed = function() {\n        var now = _.now();\n\n        return now - this._start;\n    };\n\n    StreamTelemetry.prototype.stop = function() {\n        this._disposables.dispose();\n\n        this.recordMetric('Stopped');\n\n        logMetric.call(this, 'Stream stopped');\n    };\n\n    StreamTelemetry.prototype.recordTimeToFirstFrame = function(video) {\n        var that = this;\n        var startRecordingFirstFrame = _.now();\n\n        // Only record first time to first frame regardless of number of times called\n        var listenForFirstFrame = function() {\n            if (that._timeOfFirstFrame) {\n                return;\n            }\n\n            that._timeOfFirstFrame = _.now() - startRecordingFirstFrame;\n\n            that.recordMetric('TimeToFirstFrame', {uint64: that._timeOfFirstFrame});\n            logMetric.call(that, 'First frame [%s]', that._timeOfFirstFrame);\n\n            timeToFirstFrameListenerDisposable.dispose();\n        };\n\n        _.addEventListener(video, 'loadeddata', listenForFirstFrame);\n        _.addEventListener(video, 'loadedmetadata', listenForFirstFrame);\n\n        var timeToFirstFrameListenerDisposable = new disposable.Disposable(function() {\n            _.removeEventListener(video, 'loadeddata', listenForFirstFrame);\n            _.removeEventListener(video, 'loadedmetadata', listenForFirstFrame);\n        });\n\n        // Ensure TTFF is not recorded if stop is called before first frame\n        this._disposables.add(timeToFirstFrameListenerDisposable);\n\n        return timeToFirstFrameListenerDisposable;\n    };\n\n    // TODO(dy) Add logging for bit rate changes using PC.getStats\n    StreamTelemetry.prototype.recordVideoResolutionChanges = function(renderer, video) {\n        var that = this;\n        var lastResolution = {\n            width: video.videoWidth,\n            height: video.videoHeight\n        };\n        var hasListenedToVideo = _.find(this._dimensionsTrackedVideos, function(trackedVideo) {\n            return trackedVideo === video;\n        });\n\n        if (hasListenedToVideo) {\n            return new disposable.Disposable(_.noop);\n        }\n\n        this._dimensionsTrackedVideos.push(video);\n\n        var dimensionChangeDisposable = renderer.addVideoDisplayDimensionsChangedCallback(function(renderer, dimensions) {\n            if (lastResolution.width === dimensions.width && lastResolution.height === dimensions.height) {\n                return;\n            }\n\n            that.recordMetric('ResolutionChanged', {string: dimensions.width + 'x' + dimensions.height}, {string: lastResolution.width + 'x' + lastResolution.height});\n\n            lastResolution = {\n                width: dimensions.width,\n                height: dimensions.height\n            };\n\n            logMetric.call(that, 'Resolution changed: width [%s] height [%s]', dimensions.width, dimensions.height);\n        });\n\n        this._disposables.add(dimensionChangeDisposable);\n\n        return dimensionChangeDisposable;\n    };\n\n    StreamTelemetry.prototype.recordRebuffering = function(video) {\n        var that = this;\n        var videoStalled;\n        var lastProgress;\n        var hasListenedToVideo = _.find(this._rebufferingTrackedVideos, function(trackedVideo) {\n            return trackedVideo === video;\n        });\n\n        if (hasListenedToVideo) {\n            return new disposable.Disposable(_.noop);\n        }\n\n        this._rebufferingTrackedVideos.push(video);\n\n        var listenForStall = function() {\n            if (videoStalled) {\n                return;\n            }\n\n            that.recordMetric('Stalled');\n\n            videoStalled = _.now();\n\n            logMetric.call(that, '[buffering] Stream has stalled');\n        };\n\n        var listenForContinuation = function(event) {\n            var bufferLength = video.buffered.length;\n            var hasNotProgressedSinceLastProgressEvent = event.type === 'playing'\n                                                        || bufferLength > 0 ? (event.type === 'progress'\n                                                        || event.type === 'timeupdate')\n                                                        && video.buffered.end(bufferLength - 1) === lastProgress : true;\n\n            if (!videoStalled || (!bufferLength && phenixRTC.browser !== 'Edge') || hasNotProgressedSinceLastProgressEvent) {\n                return;\n            }\n\n            if (event.type === 'progress') {\n                lastProgress = video.buffered.end(bufferLength - 1);\n            }\n\n            var timeSinceStop = _.now() - videoStalled;\n\n            that.recordMetric('Buffering', {uint64: timeSinceStop});\n\n            logMetric.call(that, '[buffering] Stream has recovered from stall after [%s] milliseconds', timeSinceStop);\n\n            videoStalled = null;\n        };\n\n        _.addEventListener(video, 'stalled', listenForStall);\n        _.addEventListener(video, 'pause', listenForStall);\n        _.addEventListener(video, 'suspend', listenForStall);\n        _.addEventListener(video, 'play', listenForContinuation);\n        _.addEventListener(video, 'playing', listenForContinuation);\n        _.addEventListener(video, 'progress', listenForContinuation);\n        _.addEventListener(video, 'timeupdate', listenForContinuation);\n\n        var rebufferingDisposable = new disposable.Disposable(function() {\n            _.removeEventListener(video, 'stalled', listenForStall);\n            _.removeEventListener(video, 'pause', listenForStall);\n            _.removeEventListener(video, 'suspend', listenForStall);\n            _.removeEventListener(video, 'play', listenForContinuation);\n            _.removeEventListener(video, 'playing', listenForContinuation);\n            _.removeEventListener(video, 'progress', listenForContinuation);\n            _.removeEventListener(video, 'timeupdate', listenForContinuation);\n        });\n\n        this._disposables.add(rebufferingDisposable);\n\n        return rebufferingDisposable;\n    };\n\n    StreamTelemetry.prototype.recordVideoPlayingAndPausing = function(video) {\n        var that = this;\n        var hasListenedToVideo = _.find(this._playTrackedVideos, function(trackedVideo) {\n            return trackedVideo === video;\n        });\n\n        if (hasListenedToVideo) {\n            return new disposable.Disposable(_.noop);\n        }\n\n        this._playTrackedVideos.push(video);\n\n        var listenForPlayChange = function() {\n            if (video.paused) {\n                that.recordMetric('Playing', {boolean: false});\n            } else {\n                that.recordMetric('Playing', {boolean: true});\n            }\n        };\n\n        _.addEventListener(video, 'pause', listenForPlayChange);\n        _.addEventListener(video, 'playing', listenForPlayChange);\n\n        var playingDisposable = new disposable.Disposable(function() {\n            _.removeEventListener(video, 'pause', listenForPlayChange);\n            _.removeEventListener(video, 'playing', listenForPlayChange);\n        });\n\n        this._disposables.add(playingDisposable);\n\n        return playingDisposable;\n    };\n\n    function logMetric() {\n        var args = Array.prototype.slice.call(arguments);\n\n        if (args.length === 0) {\n            throw new Error('Invalid logging arguments.');\n        }\n\n        var streamTelemetryPrepend = '[%s] [StreamTelemetry] [%s] ';\n        var message = streamTelemetryPrepend + args[0];\n        var loggingArguments = args.slice(1);\n        var telemetryArguments = [message, this._streamId, _.now() - this._start].concat(loggingArguments);\n\n        this._logger.debug.apply(this._logger, telemetryArguments);\n    }\n\n    function since() {\n        var now = _.now();\n\n        return (now - start) / 1000;\n    }\n\n    function recordMetricRecord(record, since) {\n        assert.isStringNotEmpty(record.metric, 'record.metric');\n\n        var annotatedRecord = _.assign({}, this._properties, record);\n\n        this._metricsTransmitter.submitMetric(record.metric, since, this._sessionId, this._streamId, this._version, annotatedRecord);\n    }\n\n    return StreamTelemetry;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-disposable',\n    'phenix-web-application-activity-detector',\n    './NetworkMonitor',\n    'phenix-rtc'\n], function(_, assert, disposable, applicationActivityDetector, NetworkMonitor, phenixRTC) {\n    'use strict';\n\n    var start = phenixRTC.global['__phenixPageLoadTime'] || phenixRTC.global['__pageLoadTime'] || _.now();\n    var sdkVersion = '2022-04-13T15:08:08Z' || '?';\n\n    function SessionTelemetry(logger, metricsTransmitter) {\n        this._version = sdkVersion;\n        this._sessionId = null;\n        this._properties = {\n            resource: 'session',\n            kind: 'event'\n        };\n        this._logger = logger;\n        this._metricsTransmitter = metricsTransmitter;\n        this._networkMonitor = new NetworkMonitor(this._logger);\n        this._start = _.now();\n        this._disposables = new disposable.DisposableList();\n        this._records = [];\n\n        this._disposables.add(applicationActivityDetector.onBackground(_.bind(recordForegroundChange, this, false)));\n        this._disposables.add(applicationActivityDetector.onForeground(_.bind(recordForegroundChange, this, true)));\n\n        if (!this._networkMonitor.isSupported()) {\n            return;\n        }\n\n        this._disposables.add(this._networkMonitor.onNetworkChange(_.bind(logNetworkStatsChange, this)));\n        this._disposables.add(this._networkMonitor);\n\n        recordNetworkTypeState.call(this);\n        recordNetworkDownlinkThroughputCapacity.call(this);\n        recordNetworkRTT.call(this);\n    }\n\n    SessionTelemetry.prototype.setSessionId = function(sessionId) {\n        if (!sessionId && this._sessionId) {\n            recordMetricRecord.call(this, {\n                metric: 'Stopped',\n                elapsed: this.elapsed()\n            }, since());\n        }\n\n        this._sessionId = sessionId;\n\n        if (sessionId) {\n            recordMetricRecord.call(this, {\n                metric: 'Initialized',\n                elapsed: this.elapsed()\n            }, since());\n            recordAllMetrics.call(this);\n            recordForegroundState.call(this);\n\n            if (this._networkMonitor.isSupported()) {\n                recordNetworkTypeState.call(this);\n                recordNetworkDownlinkThroughputCapacity.call(this);\n                recordNetworkRTT.call(this);\n            }\n        }\n    };\n\n    SessionTelemetry.prototype.setProperty = function(name, value) {\n        assert.isStringNotEmpty(name, 'name');\n        assert.isStringNotEmpty(value, 'value');\n\n        this._properties[name] = value;\n    };\n\n    SessionTelemetry.prototype.recordMetric = function(metric, value, previousValue, additionalProperties) {\n        assert.isStringNotEmpty(metric, 'metric');\n\n        var record = _.assign({}, {\n            metric: metric,\n            elapsed: this.elapsed(),\n            value: value,\n            previousValue: previousValue\n        }, additionalProperties || {});\n\n        recordMetricRecord.call(this, record, since());\n    };\n\n    SessionTelemetry.prototype.elapsed = function() {\n        var now = _.now();\n\n        return now - this._start;\n    };\n\n    SessionTelemetry.prototype.dispose = function() {\n        this._disposables.dispose();\n\n        this.recordMetric('Stopped');\n\n        logMetric.call(this, 'Session telemetry stopped');\n    };\n\n    function recordForegroundState() {\n        var isForeground = applicationActivityDetector.isForeground();\n        var timeSinceLastChange = applicationActivityDetector.getTimeSinceLastChange();\n        var metric = isForeground ? 'ApplicationForeground' : 'ApplicationBackground';\n\n        this.recordMetric(metric, {uint64: timeSinceLastChange});\n\n        logMetric.call(this, 'Session has started in the [%s] after [%s] ms', isForeground ? 'foreground' : 'background', timeSinceLastChange);\n    }\n\n    function recordForegroundChange(isForeground, timeSinceLastChange) {\n        var metric = isForeground ? 'ApplicationForeground' : 'ApplicationBackground';\n\n        this.recordMetric(metric, {uint64: timeSinceLastChange});\n\n        logMetric.call(this, 'Application has gone into the [%s] after [%s] ms', isForeground ? 'foreground' : 'background', timeSinceLastChange);\n    }\n\n    function recordNetworkTypeState() {\n        var type = this._networkMonitor.getEffectiveType();\n\n        this.recordMetric('NetworkType', {string: type}, null, {resource: phenixRTC.browser});\n\n        logMetric.call(this, '[%s] has started with Network effective type of [%s]', this._sessionId ? 'Session' : 'Application', type);\n    }\n\n    function recordNetworkTypeChange(newType, previousType) {\n        var newNetworkType = newType || this._networkMonitor.getEffectiveType();\n        var previousNetworkType = previousType;\n\n        this.recordMetric('NetworkType', {string: newNetworkType}, {string: previousNetworkType}, {resource: phenixRTC.browser});\n\n        logMetric.call(this, 'Network effective type has changed to [%s] from [%s]', newNetworkType, previousNetworkType || 'New');\n    }\n\n    function recordNetworkRTT(newValue, oldValue) {\n        var newRTT = newValue || this._networkMonitor.getRoundTripTime();\n        var oldRTT = oldValue || -1;\n\n        this.recordMetric('RoundTripTime', {uint32: newRTT}, {uint32: oldRTT}, {resource: phenixRTC.browser});\n\n        if (_.isNullOrUndefined(oldValue)) {\n            return logMetric.call(this, 'Network RTT [%s]', newRTT);\n        }\n\n        logMetric.call(this, 'Network RTT changed to [%s] from [%s]', newRTT, oldRTT);\n    }\n\n    function recordNetworkDownlinkThroughputCapacity(newValue, oldValue) {\n        var newCapacity = newValue || this._networkMonitor.getDownlinkThroughputCapacity();\n        var oldCapacity = oldValue || -1;\n\n        this.recordMetric('DownlinkThroughputCapacity', {float: newCapacity}, {float: oldCapacity}, {resource: phenixRTC.browser});\n\n        if (_.isNullOrUndefined(oldValue)) {\n            return logMetric.call(this, 'Network downlink throughput capacity [%s]', newCapacity);\n        }\n\n        logMetric.call(this, 'Network downlink throughput capacity changed to [%s] from [%s]', newCapacity, oldCapacity);\n    }\n\n    function logNetworkStatsChange(newStats, oldStats) {\n        if (oldStats.downlinkThroughputCapacity !== newStats.downlinkThroughputCapacity) {\n            recordNetworkDownlinkThroughputCapacity.call(this, newStats.downlinkThroughputCapacity, oldStats.downlinkThroughputCapacity);\n        }\n\n        if (oldStats.rtt !== newStats.rtt) {\n            recordNetworkRTT.call(this, newStats.rtt, oldStats.rtt);\n        }\n\n        if (oldStats.effectiveType !== newStats.effectiveType) {\n            recordNetworkTypeChange.call(this, newStats.effectiveType, oldStats.effectiveType);\n        }\n    }\n\n    function logMetric() {\n        var args = Array.prototype.slice.call(arguments);\n\n        if (args.length === 0) {\n            throw new Error('Invalid logging arguments.');\n        }\n\n        var sessionTelemetryPrepend = '[%s] [SessionTelemetry] [%s] ';\n        var message = sessionTelemetryPrepend + args[0];\n        var loggingArguments = args.slice(1);\n        var telemetryArguments = [message, this._sessionId, _.now() - this._start].concat(loggingArguments);\n\n        this._logger.info.apply(this._logger, telemetryArguments);\n    }\n\n    function since() {\n        var now = _.now();\n\n        return (now - start) / 1000;\n    }\n\n    function recordMetricRecord(record, since) {\n        assert.isStringNotEmpty(record.metric, 'record.metric');\n\n        if (!this._sessionId) {\n            return this._records.push({\n                record: record,\n                since: since\n            });\n        }\n\n        var annotatedRecord = _.assign({}, this._properties, record);\n\n        this._metricsTransmitter.submitMetric(record.metric, since, this._sessionId, null, this._version, annotatedRecord);\n    }\n\n    function recordAllMetrics() {\n        if (!this._sessionId) {\n            return;\n        }\n\n        var that = this;\n        var numberOfRecordsToPush = this._records.length;\n\n        while (numberOfRecordsToPush > 0) {\n            var records = this._records.splice(numberOfRecordsToPush - 1, 1);\n\n            if (records.length === 1) {\n                recordMetricRecord.call(that, records[0].record, records[0].since);\n            }\n\n            numberOfRecordsToPush--;\n        }\n    }\n\n    return SessionTelemetry;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-disposable',\n    'phenix-rtc'\n], function(_, assert, event, disposable, rtc) {\n    function NetworkMonitor(logger) {\n        assert.isObject(logger, 'logger');\n\n        this._logger = logger;\n        this._namedEvents = new event.NamedEvents();\n        this._disposables = new disposable.DisposableList();\n\n        this._disposables.add(this._namedEvents);\n\n        if (!this.isSupported()) {\n            return this._logger.info('Network monitor is not supported.');\n        }\n\n        this._lastNetworkStats = getStats.call(this);\n\n        detectNetworkTypeChange.call(this);\n    }\n\n    NetworkMonitor.prototype.isSupported = function() {\n        return rtc.global.navigator && rtc.global.navigator.connection;\n    };\n\n    NetworkMonitor.prototype.getDownlinkThroughputCapacity = function() {\n        if (!this.isSupported()) {\n            return -1;\n        }\n\n        return rtc.global.navigator.connection.downlink || rtc.global.navigator.connection.downlinkMax;\n    };\n\n    NetworkMonitor.prototype.getEffectiveType = function() {\n        if (!this.isSupported()) {\n            return 'Unknown';\n        }\n\n        return rtc.global.navigator.connection.effectiveType || rtc.global.navigator.connection.type;\n    };\n\n    NetworkMonitor.prototype.getRoundTripTime = function() {\n        if (!this.isSupported()) {\n            return -1;\n        }\n\n        return rtc.global.navigator.connection.rtt || rtc.global.navigator.connection.type;\n    };\n\n    NetworkMonitor.prototype.onNetworkChange = function(callback) {\n        if (!this.isSupported()) {\n            return;\n        }\n\n        assert.isFunction(callback, 'callback');\n\n        return this._namedEvents.listen('NetworkChange', callback);\n    };\n\n    NetworkMonitor.prototype.dispose = function() {\n        this._disposables.dispose();\n    };\n\n    function getStats() {\n        return {\n            downlinkThroughputCapacity: this.getDownlinkThroughputCapacity(),\n            effectiveType: this.getEffectiveType(),\n            rtt: this.getRoundTripTime()\n        };\n    }\n\n    function detectNetworkTypeChange() {\n        var that = this;\n\n        navigator.connection.addEventListener('change', function() {\n            that._namedEvents.fireAsync('NetworkChange', [getStats.call(that), that._lastNetworkStats]);\n\n            that._lastNetworkStats = getStats.call(that);\n        });\n    }\n\n    return NetworkMonitor;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    './stream.json'\n], function(_, assert, streamEnums) {\n    'use strict';\n\n    function StreamWrapper(type, stream, logger) {\n        assert.isStringNotEmpty(type, 'type');\n        assert.isObject(stream, 'stream');\n        assert.isObject(logger, 'logger');\n\n        this._type = type;\n        this._stream = stream;\n        this._logger = logger;\n        this._onPlayerEnd = null;\n\n        var that = this;\n\n        this._stream.on(streamEnums.streamEvents.playerEnded.name, function(reason) {\n            that._logger.info('[%s] [%s] player ended.', that._stream.getStreamId(), that._type);\n\n            that._playerEnded = true;\n\n            if (that._onPlayerEnd) {\n                return that._onPlayerEnd();\n            }\n\n            that.streamEndedCallback(StreamWrapper.getStreamEndedStatus(reason), reason);\n        });\n    }\n\n    StreamWrapper.prototype.toString = function() {\n        return 'Stream[' + (this._stream ? this._stream.getStreamId() : '') + ']';\n    };\n\n    StreamWrapper.prototype.on = function(name, callback) {\n        return this._stream.on(name, callback);\n    };\n\n    // TODO(DY) Remove once 'on' is implemented on all Phenix Stream objects\n    StreamWrapper.prototype.streamErrorCallback = function(errorSource, error) {\n        if (!_.isFunction(this._stream.streamErrorCallback)) {\n            this._logger.error('[%s] [%s] stream error event [%s]', this._stream.getStreamId(), this._type, error);\n        } else {\n            this._logger.debug('[%s] [%s] stream error event [%s]', this._stream.getStreamId(), this._type, error);\n            this._stream.streamErrorCallback(this._stream, errorSource, error);\n        }\n    };\n\n    StreamWrapper.prototype.streamEndedCallback = function(status, reason, waitForPlayerEnd) {\n        var renderer = this._stream.getRenderer();\n\n        if (this._isStreamEnded) {\n            return;\n        }\n\n        if (waitForPlayerEnd && !this._onPlayerEnd && this._stream.isActive() && renderer && !this._playerEnded) {\n            this._onPlayerEnd = _.bind(this.streamEndedCallback, this, status, reason);\n\n            this._logger.info('[%s] [%s] stream ended. Waiting for end of player.', this._stream.getStreamId(), this._type);\n\n            if (renderer) {\n                renderer.stop(reason, waitForPlayerEnd);\n            }\n\n            return;\n        }\n\n        this._isStreamEnded = true;\n\n        if (_.isFunction(this._stream.streamEndedCallback)) {\n            this._stream.streamEndedCallback(this._stream, status, reason);\n        }\n\n        this._stream.stop(reason);\n\n        if (renderer) {\n            renderer.stop(reason, waitForPlayerEnd);\n        }\n    };\n\n    StreamWrapper.prototype.dataQualityChangedCallback = function(status, reason) {\n        var renderer = this._stream.getRenderer();\n\n        if (!renderer) {\n            return;\n        }\n\n        if (_.isFunction(renderer.dataQualityChangedCallback)) {\n            renderer.dataQualityChangedCallback(renderer, status, reason);\n        }\n    };\n\n    StreamWrapper.prototype.getPhenixMediaStream = function() {\n        return this._stream;\n    };\n\n    StreamWrapper.getStreamEndedStatus = function getStreamEndedStatus(value) {\n        switch (value) {\n        case '':\n        case 'none':\n        case 'ended':\n            return 'ended';\n        case 'server-error':\n        case 'session-error':\n        case 'not-ready':\n        case 'error':\n        case 'died':\n            return 'failed';\n        case 'censored':\n            return 'censored';\n        case 'maintenance':\n            return 'maintenance';\n        case 'capacity':\n            return 'capacity';\n        case 'app-background':\n            return 'app-background';\n        case 'egress-failed':\n            return 'egress-failed';\n        case 'egress-setup-failed':\n            return 'egress-setup-failed';\n        case 'overload':\n            return 'overload';\n        default:\n            return 'custom';\n        }\n    };\n\n    return StreamWrapper;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-http',\n    'phenix-web-disposable',\n    'phenix-rtc',\n    '../DimensionsChangedMonitor',\n    './stream.json'\n], function(_, assert, event, http, disposable, rtc, DimensionsChangedMonitor, streamEnums) {\n    'use strict';\n\n    var widevineServiceCertificate = null;\n    var defaultBandwidthEstimateForPlayback = 2000000; // 2Mbps will select 720p by default\n\n    function ShakaRenderer(streamId, uri, streamTelemetry, options, shaka, logger) {\n        this._logger = logger;\n        this._streamId = streamId;\n        this._manifestUri = encodeURI(uri).replace(/[#]/g, '%23');\n        this._streamTelemetry = streamTelemetry;\n        this._options = options;\n        this._renderer = null;\n        this._element = null;\n        this._dimensionsChangedMonitor = new DimensionsChangedMonitor(logger);\n        this._lastProgress = {\n            time: 0,\n            buffered: null,\n            averageLength: 0,\n            count: 0\n        };\n        this._namedEvents = new event.NamedEvents();\n        this._disposables = new disposable.DisposableList();\n        this._shaka = shaka;\n\n        this._onStalled = _.bind(stalled, this);\n        this._onProgress = _.bind(onProgress, this);\n        this._onEnded = _.bind(ended, this);\n    }\n\n    ShakaRenderer.prototype.on = function(name, callback) {\n        return this._namedEvents.listen(name, callback);\n    };\n\n    ShakaRenderer.prototype.start = function(elementToAttachTo) {\n        var that = this;\n\n        that._player = new this._shaka.Player(elementToAttachTo);\n\n        this._disposables.add(this._streamTelemetry.recordTimeToFirstFrame(elementToAttachTo));\n        this._disposables.add(this._streamTelemetry.recordRebuffering(elementToAttachTo));\n        this._disposables.add(this._streamTelemetry.recordVideoResolutionChanges(this, elementToAttachTo));\n\n        var playerConfig = {\n            abr: {defaultBandwidthEstimate: defaultBandwidthEstimateForPlayback},\n            manifest: {retryParameters: {timeout: 10000}},\n            streaming: {\n                rebufferingGoal: 2,\n                bufferingGoal: 10,\n                bufferBehind: 30,\n                retryParameters: {\n                    timeout: 10000,\n                    maxAttempts: 10,\n                    backoffFactor: 1.1\n                }\n            }\n        };\n\n        if (this._options.isDrmProtectedContent) {\n            checkBrowserSupportForWidevineDRM.call(that);\n            unwrapLicenseResponse.call(that, that._player);\n            addDrmSpecificsToPlayerConfig.call(that, playerConfig, that._options, function(err, updatedPlayerConfig) {\n                if (!err) {\n                    loadPlayer(updatedPlayerConfig);\n                } else {\n                    that._logger.error('Failed to add DRM configuration to shaka player', err);\n\n                    throw err;\n                }\n            });\n        } else {\n            loadPlayer(playerConfig);\n        }\n\n        function loadPlayer(config) {\n            that._player.configure(config);\n\n            if (that._options.receiveAudio === false) {\n                elementToAttachTo.muted = true;\n            }\n\n            _.addEventListener(that._player, 'error', function(e) {\n                that._namedEvents.fire(streamEnums.rendererEvents.error.name, ['player', e]);\n            });\n\n            _.addEventListener(elementToAttachTo, 'stalled', that._onStalled, false);\n            _.addEventListener(elementToAttachTo, 'pause', that._onStalled, false);\n            _.addEventListener(elementToAttachTo, 'suspend', that._onStalled, false);\n            _.addEventListener(elementToAttachTo, 'progress', that._onProgress, false);\n            _.addEventListener(elementToAttachTo, 'ended', that._onEnded, false);\n\n            that._player.load(that._manifestUri).then(function() {\n                that._logger.info('[%s] DASH live stream has been loaded', that._streamId);\n\n                if (_.isFunction(elementToAttachTo.play)) {\n                    elementToAttachTo.play();\n                }\n            }).catch(function(e) {\n                that._logger.error('[%s] Error while loading DASH live stream [%s]', that._streamId, e.code, e);\n\n                that._namedEvents.fire(streamEnums.rendererEvents.error.name, ['shaka', e]);\n            });\n\n            if (!that._options.capabilities.includes('audio-only')) {\n                that._dimensionsChangedMonitor.start(this, elementToAttachTo);\n            }\n\n            that._element = elementToAttachTo;\n        }\n\n        return elementToAttachTo;\n    };\n\n    ShakaRenderer.prototype.stop = function(reason, waitForLastChunk) {\n        var that = this;\n\n        if (that._waitingForFinalization) {\n            return;\n        }\n\n        if (waitForLastChunk) {\n            return that._waitForLastChunk = true;\n        }\n\n        this._dimensionsChangedMonitor.stop();\n\n        this._disposables.dispose();\n\n        if (this._player) {\n            var finalizeStreamEnded = function finalizeStreamEnded() {\n                var reason = '';\n\n                if (that._element) {\n                    _.removeEventListener(that._element, 'stalled', that._onStalled, false);\n                    _.removeEventListener(that._element, 'pause', that._onStalled, false);\n                    _.removeEventListener(that._element, 'suspend', that._onStalled, false);\n                    _.removeEventListener(that._element, 'progress', that._onProgress, false);\n                    _.removeEventListener(that._element, 'ended', that._onEnded, false);\n\n                    if (rtc.browser === 'Edge') {\n                        that._element.src = '';\n                    }\n                }\n\n                that._namedEvents.fire(streamEnums.rendererEvents.ended.name, [reason]);\n\n                that._player = null;\n                that._element = null;\n            };\n\n            var destroyIgnored = that._player.destroy()\n                .then(function() {\n                    that._logger.info('[%s] Shaka live stream player has been destroyed', that._streamId);\n                }).then(function() {\n                    finalizeStreamEnded();\n                }).catch(function(e) {\n                    that._logger.error('[%s] Error while destroying shaka live stream player [%s]', that._streamId, e.code, e);\n\n                    finalizeStreamEnded();\n\n                    that._namedEvents.fire(streamEnums.rendererEvents.error.name, ['shaka', e]);\n                });\n\n            that._waitingForFinalization = true;\n        }\n    };\n\n    ShakaRenderer.prototype.getStats = function() {\n        if (!this._player) {\n            return {\n                width: 0,\n                height: 0,\n                currentTime: 0,\n                lag: 0,\n                networkState: streamEnums.networkStates.networkNoSource.id\n            };\n        }\n\n        var stat = _.assign(this._player.getStats(), {\n            currentTime: 0,\n            lag: 0\n        });\n        var currentTime = _.get(this._element, ['currentTime'], 0);\n        var trueCurrentTime = (_.now() - this._options.originStartTime) / 1000;\n        var lag = Math.max(0.0, trueCurrentTime - currentTime);\n\n        if (this._element) {\n            stat.currentTime = currentTime;\n            stat.lag = lag;\n        }\n\n        if (stat.estimatedBandwidth > 0) {\n            stat.networkState = streamEnums.networkStates.networkLoading.id;\n        } else if (stat.playTime > 0) {\n            stat.networkState = streamEnums.networkStates.networkIdle.id;\n        } else if (stat.video) {\n            stat.networkState = streamEnums.networkStates.networkEmpty.id;\n        } else {\n            stat.networkState = streamEnums.networkStates.networkNoSource.id;\n        }\n\n        return stat;\n    };\n\n    ShakaRenderer.prototype.setDataQualityChangedCallback = function(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this.dataQualityChangedCallback = callback;\n    };\n\n    ShakaRenderer.prototype.getPlayer = function() {\n        return this._player;\n    };\n\n    ShakaRenderer.prototype.addVideoDisplayDimensionsChangedCallback = function(callback, options) {\n        return this._dimensionsChangedMonitor.addVideoDisplayDimensionsChangedCallback(callback, options);\n    };\n\n    function onProgress() {\n        this._lastProgress.time = _.now();\n\n        if (this._element.buffered.length === 0) {\n            return this._logger.debug('[%s] Shaka live stream player progress event fired without any buffered content', this._streamId);\n        }\n\n        var bufferedEnd = this._element.buffered.end(this._element.buffered.length - 1);\n\n        if (this._lastProgress.buffered === bufferedEnd) {\n            return;\n        }\n\n        // Start and end times are unreliable for overall length of stream.\n        if (this._lastProgress.buffered !== null) {\n            var oldTimeElapsed = this._lastProgress.averageLength * this._lastProgress.count;\n            var newTimeElapsed = oldTimeElapsed + (bufferedEnd - this._lastProgress.buffered);\n\n            this._lastProgress.count += 1;\n            this._lastProgress.averageLength = newTimeElapsed / this._lastProgress.count;\n        }\n\n        this._lastProgress.buffered = bufferedEnd;\n    }\n\n    function stalled() {\n        var that = this;\n\n        that._logger.info('[%s] Loading Shaka live stream player stream stalled.', that._streamId);\n\n        if (that._lastProgress.time === 0) {\n            return;\n        }\n\n        setTimeout(function() {\n            if (_.now() - that._lastProgress.time > getTimeoutOrMinimum.call(that) && that._waitForLastChunk) {\n                that.stop('ended');\n            }\n        }, getTimeoutOrMinimum.call(that));\n    }\n\n    function getTimeoutOrMinimum() {\n        return this._lastProgress.averageLength * 1.5 < 2000 ? 2000 : this._lastProgress.averageLength * 1.5;\n    }\n\n    function ended() {\n        this._logger.info('[%s] Shaka live stream player ended.', this._streamId);\n    }\n\n    function checkBrowserSupportForWidevineDRM() {\n        var error;\n\n        if (!_.isFunction(Uint8Array)) {\n            error = 'Uint8Array support required for DRM';\n            this._logger.error(error);\n\n            throw new Error(error);\n        }\n\n        if (!_.isFunction(rtc.global.atob)) {\n            error = 'rtc.global.atob support required for DRM';\n            this._logger.error(error);\n\n            throw new Error(error);\n        }\n    }\n\n    function unwrapLicenseResponse(player) {\n        var that = this;\n\n        player.getNetworkingEngine().registerResponseFilter(function(type, response) {\n            // Only manipulate license responses:\n            if (type.toString() === that._shaka.net.NetworkingEngine.RequestType.LICENSE.toString()) {\n                var binaryResponseAsTypedArray = new Uint8Array(response.data);\n                var responseAsString = String.fromCharCode.apply(null, binaryResponseAsTypedArray);\n                var parsedResponse = JSON.parse(responseAsString);\n                var base64License = parsedResponse.license;\n                var decodedLicense = rtc.global.atob(base64License);\n\n                response.data = new Uint8Array(decodedLicense.length);\n\n                for (var i = 0; i < decodedLicense.length; ++i) {\n                    response.data[i] = decodedLicense.charCodeAt(i);\n                }\n\n                if (parsedResponse.trackRestrictions) {\n                    player.configure({restrictions: parsedResponse.trackRestrictions});\n                }\n            }\n        });\n    }\n\n    function addDrmSpecificsToPlayerConfig(playerConfig, options, callback) {\n        if (!playerConfig.drm) {\n            playerConfig.drm = {};\n        }\n\n        if (!playerConfig.drm.advanced) {\n            playerConfig.drm.advanced = {};\n        }\n\n        if (!playerConfig.manifest) {\n            playerConfig.manifest = {};\n        }\n\n        if (!playerConfig.manifest.dash) {\n            playerConfig.manifest.dash = {};\n        }\n\n        // Add browser specific DRM calls here\n        // Currently we support Widevine only\n        addWidevineConfigToPlayerConfig.call(this, playerConfig, options, callback);\n    }\n\n    // ToDo pull into singleton so widevineServiceCertificate stays per browser session\n    function addWidevineConfigToPlayerConfig(playerConfig, options, callback) {\n        playerConfig['manifest']['dash']['customScheme'] = function(element) {\n            if (element.getAttribute('schemeIdUri') === 'com.phenixrts.widevine' || element.getAttribute('schemeIdUri') === 'com.phenixp2p.widevine') {\n                return [{\n                    keySystem: 'com.widevine.alpha',\n                    licenseServerUri: decodeURIComponent(element.getAttribute('widevineLicenseServerUrl'))\n                }];\n            }\n        };\n\n        function addToPlayerconfig(error, serverCertificateResponse) {\n            if (error) {\n                callback(error);\n\n                return;\n            }\n\n            widevineServiceCertificate = serverCertificateResponse.data; // Cache so that we can reuse\n\n            playerConfig.drm.advanced['com.widevine.alpha'] = {\n                'serverCertificate': convertBinaryStringToUint8Array(serverCertificateResponse.data),\n                'persistentStateRequired': true,\n                'distinctiveIdentifierRequired': false\n            };\n\n            callback(null, playerConfig);\n        }\n\n        if (widevineServiceCertificate) {\n            addToPlayerconfig(null, widevineServiceCertificate);\n        } else {\n            http.get(options.widevineServiceCertificateUrl, {mimeType: 'text/plain; charset=x-user-defined'}, addToPlayerconfig);\n        }\n    }\n\n    function convertBinaryStringToUint8Array(bStr) {\n        var len = bStr.length;\n        var u8Array = new Uint8Array(len); // eslint-disable-line no-undef\n\n        for (var i = 0; i < len; i++) {\n            u8Array[i] = bStr.charCodeAt(i);\n        }\n\n        return u8Array;\n    }\n\n    return ShakaRenderer;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-logging',\n    'phenix-web-event',\n    'phenix-web-http',\n    'phenix-web-disposable',\n    'phenix-rtc',\n    '../DimensionsChangedMonitor',\n    './stream.json'\n], function(_, assert, logging, event, http, disposable, rtc, DimensionsChangedMonitor, streamEnums) {\n    'use strict';\n\n    var bandwidthAt720 = 3000000;\n    var timeoutForStallWithoutProgressToRestart = 6000;\n    var minTimeBeforeNextReload = 15000;\n    var originStreamReadyDuration = 6000;\n\n    function PhenixPlayerRenderer(streamId, uri, streamTelemetry, options, webPlayer, logger) {\n        this._logger = logger;\n        this._streamId = streamId;\n        this._manifestUri = encodeURI(uri).replace(/[#]/g, '%23');\n        this._streamTelemetry = streamTelemetry;\n        this._options = options;\n        this._webPlayer = webPlayer;\n        this._renderer = null;\n        this._element = null;\n        this._dimensionsChangedMonitor = new DimensionsChangedMonitor(logger);\n        this._lastProgress = {\n            time: 0,\n            buffered: null,\n            averageLength: 0,\n            count: 0,\n            lastCurrentTime: 0,\n            lastCurrentTimeOccurenceTimestamp: 0\n        };\n        this._namedEvents = new event.NamedEvents();\n        this._disposables = new disposable.DisposableList();\n\n        this._onStalled = _.bind(stalled, this);\n        this._onProgress = _.bind(onProgress, this);\n        this._onEnded = _.bind(ended, this);\n    }\n\n    PhenixPlayerRenderer.isSupported = function() {\n        return this._webPlayer && this._webPlayer.isSupported;\n    };\n\n    PhenixPlayerRenderer.prototype.on = function(name, callback) {\n        return this._namedEvents.listen(name, callback);\n    };\n\n    PhenixPlayerRenderer.prototype.start = function(elementToAttachTo) {\n        var that = this;\n        var loggerAtInfoThreshold = createInfoThresholdLogger(this._logger);\n\n        this._throttledLogger = loggerAtInfoThreshold;\n        this._element = elementToAttachTo;\n\n        this._disposables.add(this._streamTelemetry.recordTimeToFirstFrame(elementToAttachTo));\n        this._disposables.add(this._streamTelemetry.recordRebuffering(elementToAttachTo));\n        this._disposables.add(this._streamTelemetry.recordVideoResolutionChanges(this, elementToAttachTo));\n        this._disposables.add(this._streamTelemetry.recordVideoPlayingAndPausing(elementToAttachTo));\n\n        setupPlayer.call(that);\n\n        if (that._options.receiveAudio === false) {\n            elementToAttachTo.muted = true;\n        }\n\n        _.addEventListener(elementToAttachTo, 'stalled', that._onStalled, false);\n        _.addEventListener(elementToAttachTo, 'pause', that._onStalled, false);\n        _.addEventListener(elementToAttachTo, 'suspend', that._onStalled, false);\n        _.addEventListener(elementToAttachTo, 'progress', that._onProgress, false);\n        _.addEventListener(elementToAttachTo, 'ended', that._onEnded, false);\n\n        if (!this._options.capabilities.includes('audio-only')) {\n            this._dimensionsChangedMonitor.start(this, elementToAttachTo);\n        }\n\n        return elementToAttachTo;\n    };\n\n    PhenixPlayerRenderer.prototype.stop = function(reason, waitForLastChunk) {\n        var that = this;\n\n        if (that._waitingForFinalization) {\n            return;\n        }\n\n        if (waitForLastChunk) {\n            return that._waitForLastChunk = true;\n        }\n\n        this._dimensionsChangedMonitor.stop();\n\n        this._disposables.dispose();\n\n        if (this._player) {\n            var finalizeStreamEnded = function finalizeStreamEnded() {\n                var reason = '';\n\n                if (that._element) {\n                    _.removeEventListener(that._element, 'stalled', that._onStalled, false);\n                    _.removeEventListener(that._element, 'pause', that._onStalled, false);\n                    _.removeEventListener(that._element, 'suspend', that._onStalled, false);\n                    _.removeEventListener(that._element, 'progress', that._onProgress, false);\n                    _.removeEventListener(that._element, 'ended', that._onEnded, false);\n\n                    if (rtc.browser === 'Edge') {\n                        that._element.src = '';\n                    }\n                }\n\n                that._namedEvents.fire(streamEnums.rendererEvents.ended.name, [reason]);\n\n                that._player = null;\n                that._element = null;\n            };\n\n            that._waitingForFinalization = true;\n\n            try {\n                that._player.dispose();\n\n                that._logger.info('[%s] Phenix stream has been destroyed', that._streamId);\n\n                finalizeStreamEnded();\n            } catch (e) {\n                that._logger.error('[%s] Error while destroying Phenix stream player [%s]', that._streamId, e.code, e);\n\n                finalizeStreamEnded();\n\n                that._namedEvents.fire(streamEnums.rendererEvents.error.name, ['phenix-player', e]);\n            }\n        }\n    };\n\n    PhenixPlayerRenderer.prototype.getStats = function() {\n        if (!this._player) {\n            return {\n                width: 0,\n                height: 0,\n                currentTime: 0.0,\n                lag: 0.0,\n                networkState: streamEnums.networkStates.networkNoSource.id\n            };\n        }\n\n        var stat = this._player.getStats();\n        var currentTime = stat.currentTime || this._element.currentTime;\n        var trueCurrentTime = (_.now() - this._options.originStartTime) / 1000;\n\n        if (stat.isNative && stat.deliveryType === 'Hls') {\n            stat.currentTime = trueCurrentTime - stat.lag;\n        }\n\n        if (!stat.isNative) {\n            stat.lag = Math.max(0.0, trueCurrentTime - currentTime);\n        }\n\n        if (stat.estimatedBandwidth > 0) {\n            stat.networkState = streamEnums.networkStates.networkLoading.id;\n        } else if (stat.playTime > 0) {\n            stat.networkState = streamEnums.networkStates.networkIdle.id;\n        } else if (stat.video) {\n            stat.networkState = streamEnums.networkStates.networkEmpty.id;\n        } else {\n            stat.networkState = streamEnums.networkStates.networkNoSource.id;\n        }\n\n        return stat;\n    };\n\n    PhenixPlayerRenderer.prototype.setDataQualityChangedCallback = function(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this.dataQualityChangedCallback = callback;\n    };\n\n    PhenixPlayerRenderer.prototype.getPlayer = function() {\n        return this._player;\n    };\n\n    PhenixPlayerRenderer.prototype.addVideoDisplayDimensionsChangedCallback = function(callback, options) {\n        return this._dimensionsChangedMonitor.addVideoDisplayDimensionsChangedCallback(callback, options);\n    };\n\n    function setupPlayer() {\n        var that = this;\n        var playerOptions = _.assign({bandwidthToStartAt: bandwidthAt720}, that._options);\n\n        if (_.includes(this._manifestUri, '.mpd')) {\n            if (that._options.isDrmProtectedContent) {\n                playerOptions.drm = {\n                    'com.widevine.alpha': {\n                        serverCertificateUrl: that._options.widevineServiceCertificateUrl,\n                        mediaKeySystemConfiguration: {persistentState: 'required'}\n                    },\n                    'com.microsoft.playready': {licenseServerUrl: that._options.playreadyLicenseUrl}\n                };\n            }\n        }\n\n        var webPlayer = new this._webPlayer.WebPlayer(this._throttledLogger, this._element, playerOptions);\n        var timeSinceOriginStreamStart = _.now() - this._options.originStartTime;\n\n        if (timeSinceOriginStreamStart < originStreamReadyDuration && this._options.isDrmProtectedContent && _.includes(this._manifestUri, '.m3u8')) {\n            setTimeout(_.bind(webPlayer.start, webPlayer, that._manifestUri), originStreamReadyDuration);\n        } else {\n            webPlayer.start(that._manifestUri);\n        }\n\n        that._player = webPlayer;\n\n        _.addEventListener(that._player, 'error', _.bind(handleError, that));\n    }\n\n    function handleError(e) {\n        if (canReload.call(this) && e && (e.code === 3 || e.severity === this._webPlayer.errors.severity.RECOVERABLE)) {\n            this._logger.warn('Reloading unhealthy stream after error event [%s]', e);\n\n            return reloadIfAble.call(this);\n        }\n\n        this._namedEvents.fire(streamEnums.rendererEvents.error.name, ['phenix-player', e]);\n    }\n\n    function reload() {\n        this._player.dispose();\n\n        this._player = null;\n\n        this.start(this._element);\n    }\n\n    function reloadIfAble() {\n        if (!canReload.call(this)) {\n            return;\n        }\n\n        this._logger.warn('Reloading unhealthy stream that was active for at least [%s] seconds', minTimeBeforeNextReload / 1000);\n\n        this._lastReloadTime = _.now();\n\n        reload.call(this);\n    }\n\n    function canReload() {\n        var hasElapsedMinTimeSinceLastReload = !this._lastReloadTime || _.now() - this._lastReloadTime > minTimeBeforeNextReload;\n\n        return this._element && !this._waitForLastChunk && this._player && this._element.buffered.length !== 0 && hasElapsedMinTimeSinceLastReload;\n    }\n\n    function onProgress() {\n        this._lastProgress.time = _.now();\n\n        if (this._element.buffered.length === 0) {\n            return this._logger.debug('[%s] Phenix stream player progress event fired without any buffered content', this._streamId);\n        }\n\n        var bufferedEnd = this._element.buffered.end(this._element.buffered.length - 1);\n\n        if (this._lastProgress.buffered === bufferedEnd) {\n            return;\n        }\n\n        // Start and end times are unreliable for overall length of stream.\n        if (this._lastProgress.buffered !== null) {\n            var oldTimeElapsed = this._lastProgress.averageLength * this._lastProgress.count;\n            var newTimeElapsed = oldTimeElapsed + (bufferedEnd - this._lastProgress.buffered);\n            var isStalled = this._lastProgress.lastCurrentTime === this._element.currentTime;\n\n            this._lastProgress.count += 1;\n            this._lastProgress.averageLength = newTimeElapsed / this._lastProgress.count;\n\n            if (!isStalled) {\n                this._lastProgress.lastCurrentTimeOccurenceTimestamp = _.now();\n            }\n\n            var hasExceededStallTimeout = this._lastProgress.lastCurrentTimeOccurenceTimestamp && _.now() - this._lastProgress.lastCurrentTimeOccurenceTimestamp > timeoutForStallWithoutProgressToRestart;\n\n            if (isStalled && hasExceededStallTimeout && this._element && !this._element.paused && canReload.call(this)) {\n                this._logger.warn('Reloading stream after current time has not changed for [%s] seconds due to unregistered stall.', timeoutForStallWithoutProgressToRestart / 1000);\n\n                reloadIfAble.call(this);\n            }\n        }\n\n        this._lastProgress.buffered = bufferedEnd;\n        this._lastProgress.lastCurrentTime = this._element.currentTime;\n    }\n\n    function stalled(event) {\n        var that = this;\n\n        that._logger.info('[%s] Loading Phenix Live stream player stalled caused by [%s] event.', that._streamId, event.type);\n\n        if (that._lastProgress.time === 0 || that._element.paused) {\n            return;\n        }\n\n        var currentVideoTime = that._element.currentTime;\n\n        setTimeout(function() {\n            if (_.now() - that._lastProgress.time > getTimeoutOrMinimum.call(that) && that._waitForLastChunk) {\n                that.stop('ended');\n            }\n        }, getTimeoutOrMinimum.call(that));\n\n        setTimeout(function() {\n            if (that._element && that._element.currentTime === currentVideoTime && !that._element.paused && canReload.call(that)) {\n                that._logger.warn('Reloading stream after being stalled for [%s] seconds', timeoutForStallWithoutProgressToRestart / 1000);\n\n                reloadIfAble.call(that);\n            }\n        }, timeoutForStallWithoutProgressToRestart);\n    }\n\n    function getTimeoutOrMinimum() {\n        return this._lastProgress.averageLength * 1.5 < 2000 ? 2000 : this._lastProgress.averageLength * 1.5;\n    }\n\n    function ended() {\n        this._logger.info('[%s] Phenix stream player ended.', this._streamId);\n    }\n\n    function createInfoThresholdLogger(logger) {\n        var appenders = logger.getAppenders();\n        var throttledLogger = new logging.Logger();\n\n        _.forEach(appenders, function(appender) {\n            if (appender instanceof logging.ConsoleAppender) {\n                appender = new logging.ConsoleAppender();\n\n                appender.setThreshold(logging.level.INFO);\n            }\n\n            throttledLogger.addAppender(appender);\n        });\n\n        throttledLogger.setUserId(logger.getUserId());\n        throttledLogger.setEnvironment(logger.getEnvironment());\n        throttledLogger.setApplicationVersion(logger.getApplicationVersion());\n        throttledLogger.setObservableSessionId(logger.getObservableSessionId());\n\n        return throttledLogger;\n    }\n\n    return PhenixPlayerRenderer;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-logging',\n    'phenix-web-event',\n    'phenix-web-http',\n    'phenix-web-disposable',\n    'phenix-rtc',\n    '../DimensionsChangedMonitor',\n    './stream.json'\n], function(_, assert, logging, event, http, disposable, rtc, DimensionsChangedMonitor, streamEnums) {\n    'use strict';\n\n    var timeoutForStallWithoutProgressToRestart = 6000;\n    var minTimeBeforeNextReload = 15000;\n    var mostRecentSwfFile = 'rtmp-flash-renderer-2019.2.18.swf';\n    var defaultSwfFileSrcs = {\n        local: 'https://local.phenixrts.com/public/rtmp/' + mostRecentSwfFile,\n        staging: 'https://stg.phenixrts.com/public/rtmp/' + mostRecentSwfFile,\n        production: 'https://phenixrts.com/public/rtmp/' + mostRecentSwfFile\n    };\n\n    function FlashRenderer(streamId, streamsInfo, streamTelemetry, options, logger) {\n        assert.isObject(options, 'options');\n\n        if (options.env) {\n            assert.isStringNotEmpty(options.env, 'options.env');\n        }\n\n        var defaultSwfFileSrc = defaultSwfFileSrcs[options.env || 'production'];\n\n        this._logger = logger;\n        this._streamId = streamId;\n        this._streamsInfo = _.map(streamsInfo, function(info) {\n            info.uri = encodeURI(info.uri).replace(/[#]/g, '%23');\n\n            return info;\n        });\n        this._streamTelemetry = streamTelemetry;\n        this._options = options;\n        this._renderer = null;\n        this._phenixVideo = null;\n        this._playerElement = null;\n        this._namedEvents = new event.NamedEvents();\n        this._dimensionsChangedMonitor = new DimensionsChangedMonitor(logger);\n        this._disposables = new disposable.DisposableList();\n\n        this._onStalled = _.bind(stalled, this);\n        this._onEnded = _.bind(ended, this);\n        this._onError = _.bind(handleError, this);\n        this._swfSrc = options.swfSrc || defaultSwfFileSrc;\n    }\n\n    FlashRenderer.isSupported = function() {\n        return detectFlashPlugin();\n    };\n\n    FlashRenderer.prototype.on = function(name, callback) {\n        return this._namedEvents.listen(name, callback);\n    };\n\n    FlashRenderer.prototype.start = function(elementToAttachTo) {\n        var that = this;\n        var options = {\n            streamId: this._streamId,\n            swfSrc: this._swfSrc\n        };\n\n        this._originElement = elementToAttachTo;\n        this._phenixVideo = new rtc.PhenixFlashVideo(elementToAttachTo, this._streamsInfo, options);\n\n        this._phenixVideo.hookUpEvents();\n\n        this._playerElement = this._phenixVideo.getElement();\n\n        this._disposables.add(this._streamTelemetry.recordTimeToFirstFrame(this._originElement));\n        this._disposables.add(this._streamTelemetry.recordRebuffering(this._originElement));\n        this._disposables.add(this._streamTelemetry.recordVideoResolutionChanges(this, this._originElement));\n        this._disposables.add(this._streamTelemetry.recordVideoPlayingAndPausing(this._originElement));\n\n        if (this._playerElement) {\n            this._playerElement.play();\n        }\n\n        _.addEventListener(this._originElement, 'stalled', that._onStalled, false);\n        _.addEventListener(this._originElement, 'pause', that._onStalled, false);\n        _.addEventListener(this._originElement, 'suspend', that._onStalled, false);\n        _.addEventListener(this._originElement, 'ended', that._onEnded, false);\n        _.addEventListener(this._originElement, 'error', that._onError, false);\n\n        return elementToAttachTo;\n    };\n\n    FlashRenderer.prototype.stop = function(reason) {\n        var that = this;\n\n        this._disposables.dispose();\n\n        if (this._phenixVideo) {\n            var finalizeStreamEnded = function finalizeStreamEnded() {\n                if (that._playerElement) {\n                    _.removeEventListener(that._originElement, 'stalled', that._onStalled, false);\n                    _.removeEventListener(that._originElement, 'pause', that._onStalled, false);\n                    _.removeEventListener(that._originElement, 'suspend', that._onStalled, false);\n                    _.removeEventListener(that._originElement, 'ended', that._onEnded, false);\n                    _.removeEventListener(that._originElement, 'error', that._onError, false);\n                }\n\n                that._playerElement = null;\n                that._originElement = null;\n\n                that._namedEvents.fire(streamEnums.rendererEvents.ended.name, [reason]);\n            };\n\n            try {\n                this._phenixVideo.destroy();\n                this._phenixVideo = null;\n\n                finalizeStreamEnded();\n\n                this._logger.info('[%s] Flash player has been destroyed', this._streamId);\n            } catch (e) {\n                that._logger.error('[%s] Error while destroying Flash player [%s]', that._streamId, e.code, e);\n\n                finalizeStreamEnded();\n\n                that._namedEvents.fire(streamEnums.rendererEvents.error.name, ['flash-player', e]);\n            }\n        }\n    };\n\n    FlashRenderer.prototype.getStats = function() {\n        if (!this._playerElement) {\n            return {\n                width: 0,\n                height: 0,\n                currentTime: 0.0,\n                lag: 0.0,\n                networkState: streamEnums.networkStates.networkNoSource.id\n            };\n        }\n\n        var stat = {};\n        var currentTime = this._playerElement.currentTime;\n        var trueCurrentTime = (_.now() - this._options.originStartTime) / 1000;\n\n        stat.lag = Math.max(0.0, trueCurrentTime - currentTime);\n\n        if (stat.estimatedBandwidth > 0) {\n            stat.networkState = streamEnums.networkStates.networkLoading.id;\n        } else if (stat.playTime > 0) {\n            stat.networkState = streamEnums.networkStates.networkIdle.id;\n        } else if (stat.video) {\n            stat.networkState = streamEnums.networkStates.networkEmpty.id;\n        } else {\n            stat.networkState = streamEnums.networkStates.networkNoSource.id;\n        }\n\n        return stat;\n    };\n\n    FlashRenderer.prototype.setDataQualityChangedCallback = function(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this.dataQualityChangedCallback = callback;\n    };\n\n    FlashRenderer.prototype.getPlayer = function() {\n        return this._player;\n    };\n\n    FlashRenderer.prototype.addVideoDisplayDimensionsChangedCallback = function(callback, options) {\n        return this._dimensionsChangedMonitor.addVideoDisplayDimensionsChangedCallback(callback, options);\n    };\n\n    function handleError(e) {\n        this._namedEvents.fire(streamEnums.rendererEvents.error.name, ['flash-player', e]);\n    }\n\n    function reload() {\n        this._phenixVideo.destroy();\n\n        this.start(this._originElement);\n    }\n\n    function reloadIfAble() {\n        if (!canReload.call(this)) {\n            return;\n        }\n\n        this._logger.warn('Reloading unhealthy stream that was active for at least [%s] seconds', minTimeBeforeNextReload / 1000);\n\n        this._lastReloadTime = _.now();\n\n        reload.call(this);\n    }\n\n    function canReload() {\n        var hasElapsedMinTimeSinceLastReload = !this._lastReloadTime || _.now() - this._lastReloadTime > minTimeBeforeNextReload;\n\n        return this._playerElement && !this._waitForLastChunk && this._player && this._playerElement.buffered.length !== 0 && hasElapsedMinTimeSinceLastReload;\n    }\n\n    function stalled(event) {\n        var that = this;\n\n        that._logger.info('[%s] Loading flash player stalled caused by [%s] event.', that._streamId, event.type);\n\n        var currentVideoTime = that._playerElement.currentTime;\n\n        setTimeout(function() {\n            if (that._playerElement && that._playerElement.currentTime === currentVideoTime && !that._playerElement.paused && canReload.call(that)) {\n                that._logger.warn('Reloading stream after being stalled for [%s] seconds', timeoutForStallWithoutProgressToRestart / 1000);\n\n                reloadIfAble.call(that);\n            }\n        }, timeoutForStallWithoutProgressToRestart);\n    }\n\n    function ended() {\n        this._logger.info('[%s] Flash player ended.', this._streamId);\n    }\n\n    var hasFlashPlugin = null;\n\n    function detectFlashPlugin() {\n        var defaultVersion = [10, 0, 0];\n        var pluginName = 'Shockwave Flash';\n        var mimeType = 'application/x-shockwave-flash';\n        var activeX = 'ShockwaveFlash.ShockwaveFlash';\n        var version = [0, 0, 0];\n\n        if (_.isBoolean(hasFlashPlugin)) {\n            return hasFlashPlugin;\n        }\n\n        // Firefox, Webkit, Opera\n        if (_.get(rtc.global.navigator, ['plugins', pluginName])) {\n            var description = rtc.global.navigator.plugins[pluginName].description;\n\n            if (description && _.get(rtc.global.navigator, ['mimeTypes', mimeType, 'enabledPlugin'], false)) {\n                version = description.replace(pluginName, '').replace(/^\\s+/, '').replace(/\\sr/gi, '.').split('.');\n\n                for (var i = 0, total = version.length; i < total; i++) {\n                    version[i] = parseInt(version[i].match(/\\d+/), 10);\n                }\n            }\n            // Internet Explorer / ActiveX\n        } else if (rtc.global.ActiveXObject) {\n            try {\n                var ax = new rtc.global.ActiveXObject(activeX);\n\n                if (ax) {\n                    var versionString = ax.GetVariable(\"$version\") || '';\n                    var versionInfo = _.get(versionString.split(\" \"), [1], version).split(\",\");\n\n                    version = [parseInt(versionInfo[0], 10), parseInt(versionInfo[1], 10), parseInt(versionInfo[2], 10)];\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        }\n\n        hasFlashPlugin = (version[0] > defaultVersion[0] || (version[0] === defaultVersion[0] && version[1] > 0) || (version[0] === defaultVersion[0] && version[1] === 0 && version[2] >= 0));\n\n        return hasFlashPlugin;\n    }\n\n    return FlashRenderer;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-rtc',\n    'phenix-web-disposable',\n    'phenix-web-application-activity-detector',\n    './PeerConnection',\n    './PeerConnectionMonitor',\n    './BitRateMonitor',\n    './PhenixRealTimeRenderer',\n    './FeatureDetector',\n    './stream.json'\n], function(_, assert, event, rtc, disposable, applicationActivityDetector, PeerConnection, PeerConnectionMonitor, BitRateMonitor, PhenixRealTimeRenderer, FeatureDetector, streamEnums) {\n    'use strict';\n\n    var defaultIceConnectionTimeout = 12000;\n\n    function PhenixRealTimeStream(streamId, streamSrc, peerConnection, streamTelemetry, options, logger) {\n        this._streamId = streamId;\n        this._streamSrc = streamSrc;\n        this._peerConnection = peerConnection;\n        this._streamTelemetry = streamTelemetry;\n        this._options = options;\n        this._logger = logger;\n        this._renderers = [];\n        this._dimensionsChangedMonitor = null;\n        this._namedEvents = new event.NamedEvents();\n        this._childrenStreams = [];\n        this._limit = 0;\n        this._backgroundMonitorEventCallback = null;\n        this._disposables = new disposable.DisposableList();\n        this._connected = 0;\n        this._iceConnectionTimeout = _.get(options, ['iceConnectionTimeout'], defaultIceConnectionTimeout);\n\n        this._disposables.add(applicationActivityDetector.onForeground(_.bind(emitPendingBackgroundEvent, this)));\n\n        var bandwidthAttribute = /(b=AS:([0-9]*)[\\n\\r]*)/gi;\n        var bandwithAttribute = bandwidthAttribute.exec(peerConnection.remoteDescription);\n\n        if (bandwithAttribute && bandwithAttribute.length >= 3) {\n            this._limit = bandwithAttribute[2] * 1000;\n        }\n\n        _.addEventListener(peerConnection, 'iceconnectionstatechange', _.bind(onIceConnectionChange, this));\n    }\n\n    PhenixRealTimeStream.prototype.on = function(name, callback) {\n        this._namedEvents.listen(name, callback);\n    };\n\n    PhenixRealTimeStream.prototype.createRenderer = function() {\n        var that = this;\n        var sdp = _.get(this._peerConnection, ['remoteDescription', 'sdp']);\n        var options = Object.assign({}, this._options);\n\n        if (sdp && !this._options.capabilities.includes('audio-only') || !this._options.capabilities.includes('video-only')) {\n            if (!sdp.includes('m=audio')) {\n                options.capabilities.push('video-only');\n            }\n\n            if (!sdp.includes('m=video')) {\n                options.capabilities.push('audio-only');\n            }\n\n            var sdpTracks = sdp.split('m=');\n\n            sdpTracks.forEach(function(track) {\n                if (track.startsWith('audio') && track.includes('a=inactive')) {\n                    options.capabilities.push('video-only');\n                }\n\n                if (track.startsWith('video') && track.includes('a=inactive')) {\n                    options.capabilities.push('audio-only');\n                }\n            });\n        }\n\n        var renderer = new PhenixRealTimeRenderer(this._streamId, this._streamSrc, this._streamTelemetry, options, this._logger);\n\n        renderer.on(streamEnums.rendererEvents.error.name, function(type, error) {\n            that._namedEvents.fire(streamEnums.streamEvents.playerError.name, [type, error]);\n        });\n        renderer.on(streamEnums.rendererEvents.ended.name, function(reason) {\n            that._renderers = _.filter(that._renderers, function(storedRenderer) {\n                return storedRenderer !== renderer;\n            });\n\n            if (that._renderers.length === 0) {\n                that._streamTelemetry.stop();\n                that._namedEvents.fire(streamEnums.streamEvents.playerEnded.name, [reason]);\n            }\n        });\n\n        this._renderers.push(renderer);\n\n        return renderer;\n    };\n\n    PhenixRealTimeStream.prototype.select = function select(trackSelectCallback) {\n        assert.isFunction(trackSelectCallback, 'trackSelectCallback');\n        assert.isFunction(rtc.global.MediaStream, 'rtc.global.MediaStream');\n\n        var tracks = this._streamSrc.getTracks();\n        var streamToAttach = new rtc.global.MediaStream();\n\n        for (var i = 0; i < tracks.length; i++) {\n            if (trackSelectCallback(tracks[i], i)) {\n                streamToAttach.addTrack(tracks[i]);\n            }\n        }\n\n        if (streamToAttach.getTracks().length === 0) {\n            return this._logger.warn('No tracks selected');\n        }\n\n        var that = this;\n        var newMediaStream = new PhenixRealTimeStream(this._streamId, streamToAttach, this._peerConnection, this._streamTelemetry, this._options, this._logger);\n\n        newMediaStream.on(streamEnums.streamEvents.stopped.name, function(reason) {\n            if (isStreamStopped(that._streamSrc)) {\n                that._namedEvents.fire(streamEnums.streamEvents.stopped.name, [reason]);\n            }\n        });\n\n        this._childrenStreams.push(newMediaStream);\n\n        return newMediaStream;\n    };\n\n    PhenixRealTimeStream.prototype.setStreamEndedCallback = function setStreamEndedCallback(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this._streamEndedCallback = callback;\n    };\n\n    PhenixRealTimeStream.prototype.setStreamErrorCallback = function setStreamErrorCallback(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this._streamErrorCallback = callback;\n    };\n\n    PhenixRealTimeStream.prototype.streamEndedCallback = function streamEndedCallback(stream, status, reason) {\n        _.forEach(this._childrenStreams, function(childStream) {\n            childStream.streamEndedCallback(status, reason);\n        });\n\n        if (_.isFunction(this._streamEndedCallback)) {\n            this._streamEndedCallback(this, status, reason);\n        }\n    };\n\n    PhenixRealTimeStream.prototype.streamErrorCallback = function streamErrorCallback(stream, errorSource, error) {\n        _.forEach(this._childrenStreams, function(childStream) {\n            childStream.streamErrorCallback(errorSource, error);\n        });\n\n        if (_.isFunction(this._streamErrorCallback)) {\n            this._streamErrorCallback(stream, errorSource, error);\n        }\n    };\n\n    PhenixRealTimeStream.prototype.stop = function stop(reason) {\n        if (!this.isActive()) {\n            return;\n        }\n\n        this._disposables.dispose();\n\n        stopWebRTCStream(this._streamSrc);\n\n        this._logger.info('[%s] stop [real-time] media stream with reason [%s]', this._streamId, reason);\n\n        this._namedEvents.fire(streamEnums.streamEvents.stopped.name, [reason]);\n\n        this._isStopped = true;\n    };\n\n    PhenixRealTimeStream.prototype.monitor = function monitor(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        var that = this;\n        var monitor = new PeerConnectionMonitor(that._streamId, that._peerConnection, that._logger);\n\n        options.direction = 'inbound';\n\n        monitor.start(options, function activeCallback() {\n            return that.isActive();\n        }, function monitorCallback(error, monitorEvent) {\n            if (error) {\n                that._logger.warn('[%s] Media stream monitor triggered unrecoverable error [%s]', that._streamId, error);\n            }\n\n            if (FeatureDetector.isIOS() && !applicationActivityDetector.isForeground()) {\n                that._logger.info('[%s] Media stream monitor triggered event while app is in the background. Waiting until foreground to trigger event.', that._streamId);\n\n                return that._backgroundMonitorEventCallback = monitorCallback.bind(null, error, monitorEvent);\n            }\n\n            that._logger.warn('[%s] Media stream triggered monitor condition for [%s] [%s]', that._streamId, monitorEvent.type, monitorEvent.reasons);\n\n            return callback(that, 'client-side-failure', monitorEvent);\n        });\n\n        this._monitor = monitor;\n\n        return monitor;\n    };\n\n    PhenixRealTimeStream.prototype.getMonitor = function getMonitor() {\n        return this._monitor;\n    };\n\n    PhenixRealTimeStream.prototype.addBitRateThreshold = function addBitRateThreshold(threshold, callback) {\n        var that = this;\n        var bitRateMonitor = new BitRateMonitor('Media Stream', this._monitor, function getLimit() {\n            return that._limit;\n        });\n\n        return bitRateMonitor.addThreshold(threshold, callback);\n    };\n\n    PhenixRealTimeStream.prototype.getStream = function getStream() {\n        return this._streamSrc;\n    };\n\n    PhenixRealTimeStream.prototype.isActive = function isActive() {\n        return !this._isStopped;\n    };\n\n    PhenixRealTimeStream.prototype.getStreamId = function getStreamId() {\n        return this._streamId;\n    };\n\n    PhenixRealTimeStream.prototype.getStats = function getStats(callback) {\n        assert.isFunction(callback, 'callback');\n\n        if (!this._lastStats) {\n            this._lastStats = {};\n        }\n\n        var that = this;\n\n        return rtc.getStats(this._peerConnection, null, function(stats) {\n            callback(PeerConnection.convertPeerConnectionStats(stats, that._lastStats));\n        });\n    };\n\n    PhenixRealTimeStream.prototype.getRenderer = function getRenderer() {\n        return _.get(this._renderers, [0], null);\n    };\n\n    PhenixRealTimeStream.prototype.toString = function toString() {\n        return 'PhenixRealTimeStream[' + this._streamId + ']';\n    };\n\n    function emitPendingBackgroundEvent() {\n        if (!this._backgroundMonitorEventCallback) {\n            return;\n        }\n\n        var eventCallback = this._backgroundMonitorEventCallback;\n\n        this._backgroundMonitorEventCallback = null;\n\n        eventCallback();\n    }\n\n    function isStreamStopped(stream) {\n        return _.reduce(stream.getTracks(), function(isStopped, track) {\n            return isStopped && isTrackStopped(track);\n        }, true);\n    }\n\n    function isTrackStopped(track) {\n        assert.isObject(track, 'track');\n\n        return track.readyState === 'ended';\n    }\n\n    function stopWebRTCStream(stream) {\n        if (stream && _.isFunction(stream.stop, 'stream.stop')) {\n            stream.stop();\n        }\n\n        _.forEach(stream && stream.getTracks ? stream.getTracks() : [], function(track) {\n            track.stop();\n        });\n    }\n\n    function onIceConnectionChange() {\n        var that = this;\n        var connectionState = this._peerConnection.iceConnectionState;\n\n        switch (connectionState) {\n        case 'checking':\n        case 'connecting':\n            if (this._checkConnectionSuccessTimeoutId) {\n                return;\n            }\n\n            this._connectionStart = _.now();\n            this._checkConnectionSuccessTimeoutId = setTimeout(function() {\n                that._logger.warn('[%s] Stream has not connected within [%s] ms', that._streamId, that._iceConnectionTimeout);\n                that._namedEvents.fire(streamEnums.streamEvents.playerError.name, ['real-time', new Error('connection-timeout')]);\n            }, that._iceConnectionTimeout);\n\n            break;\n        case 'failed':\n            if (this._checkConnectionSuccessTimeoutId) {\n                clearTimeout(this._checkConnectionSuccessTimeoutId);\n\n                this._checkConnectionSuccessTimeoutId = null;\n            }\n\n            this._logger.info('[%s] Stream has failed', that._streamId);\n            this._namedEvents.fire(streamEnums.streamEvents.playerError.name, ['real-time', new Error('connection-failed')]);\n\n            break;\n        case 'closed':\n        case 'disconnected':\n            if (this._checkConnectionSuccessTimeoutId) {\n                that._logger.warn('[%s] Stream closed before it was connected', that._streamId);\n            }\n\n            break;\n        case 'connected':\n            if (this._checkConnectionSuccessTimeoutId) {\n                clearTimeout(this._checkConnectionSuccessTimeoutId);\n\n                this._checkConnectionSuccessTimeoutId = null;\n            }\n\n            this._connected++;\n            this._logger.info('[%s] Ice Connection completed after [%s] ms for [%s] time', this._streamId, _.now() - this._connectionStart, this._connected);\n            this._connectionStart = null;\n\n            break;\n        default:\n            this._logger.info('[%s] Unsupported Ice Connection state [%s]', this._streamId, connectionState);\n\n            break;\n        }\n    }\n\n    return PhenixRealTimeStream;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-http',\n    'phenix-web-disposable',\n    'phenix-rtc',\n    'phenix-web-application-activity-detector',\n    'phenix-web-detect-browser',\n    'phenix-web-global',\n    '../DimensionsChangedMonitor',\n    './stream.json',\n    './FeatureDetector'\n], function(_, assert, event, http, disposable, rtc, applicationActivityDetector, DetectBrowser, global, DimensionsChangedMonitor, streamEnums, FeatureDetector) {\n    'use strict';\n\n    var listenForPauseChangeAfterForegroundInterval = 1000;\n    // Restarts less than 100ms after foregrounding cause subsequent \"pause\" events on the video\n    var restartRendererDelay = 200;\n\n    function PhenixRealTimeRenderer(streamId, streamSrc, streamTelemetry, options, logger) {\n        this._logger = logger;\n        this._streamId = streamId;\n        this._streamSrc = streamSrc;\n        this._streamTelemetry = streamTelemetry;\n        this._options = options;\n        this._renderer = null;\n        this._element = null;\n        this._dimensionsChangedMonitor = new DimensionsChangedMonitor(logger);\n        this._namedEvents = new event.NamedEvents();\n        this._disposables = new disposable.DisposableList();\n        this._browser = (new DetectBrowser(_.get(global, ['navigator', 'userAgent'], ''))).detect();\n        this._wasPlaying = false;\n        this._lastBackgroundingTimestamp = 0;\n        this._lastStalledTimestamp = 0;\n\n        this._disposables.add(applicationActivityDetector.onBackground(_.bind(checkIfWasPlayingWhenGoingToBackground, this)));\n        this._disposables.add(applicationActivityDetector.onForeground(_.bind(resumeWhenEnteringForgeround, this)));\n\n        this._onStalling = _.bind(stalling, this);\n        this._onEnded = _.bind(ended, this);\n    }\n\n    PhenixRealTimeRenderer.prototype.on = function(name, callback) {\n        // TODO(sbi) Remove after users have upgraded to new API\n        if (name === 'userActionRequired') {\n            throw new Error('\"userActionRequired is no longer supported. See https://phenixrts.com/docs/web/#view-a-channel and https://phenixrts.com/docs/web/#channel-viewer');\n        }\n\n        return this._namedEvents.listen(name, callback);\n    };\n\n    PhenixRealTimeRenderer.prototype.start = function(elementToAttachTo) {\n        var that = this;\n        var hasAudioTrack = !!_.find(this._streamSrc.getTracks(), function(track) {\n            return track.kind === 'audio';\n        });\n\n        if (!this._options.canPlaybackAudio) {\n            if (this._options.disableAudioIfNoOutputFound && this._options.forcedAudioDisabled) {\n                this._logger.warn('[%s] Missing audio playback device. Audio has been disabled on stream. Try setting up an audio device and re-subscribe in order to receive audio.', this._streamId);\n            } else if (!this._options.disableAudioIfNoOutputFound && hasAudioTrack) {\n                this._logger.warn('[%s] Missing audio playback device. May experience audio and/or video failure. Try setting up an audio device OR pass the [disableAudioIfNoOutputFound] option when subscribing to disable audio playback when no devices are attached.', this._streamId);\n            }\n        }\n\n        this._element = rtc.attachMediaStream(elementToAttachTo, this._streamSrc, function(e) {\n            if (!e) {\n                that._logger.debug('[%s] Successfully started playing stream.', that._streamId);\n\n                return;\n            }\n\n            if (elementToAttachTo.muted || !hasAudioTrack) {\n                that._logger.warn('[%s] Failed to play muted stream.', that._streamId, e);\n\n                return that._namedEvents.fire(streamEnums.rendererEvents.failedToPlay.name, ['failed-to-play']);\n            }\n\n            if (that._options.disableAutoMuting) {\n                that._logger.warn('[%s] Failed to play unmuted stream.', that._streamId, e);\n\n                return that._namedEvents.fire(streamEnums.rendererEvents.failedToPlay.name, ['failed-to-play-unmuted']);\n            }\n\n            that._logger.debug('[%s] Failed to start playing stream. Auto muting the playback and trying again.', that._streamId);\n            elementToAttachTo.muted = true;\n\n            that._element = rtc.attachMediaStream(elementToAttachTo, that._streamSrc, function(e) {\n                if (e) {\n                    that._logger.warn('[%s] Failed to play even after auto muting.', that._streamId, e);\n\n                    // Restore muted state\n                    elementToAttachTo.muted = false;\n\n                    return that._namedEvents.fire(streamEnums.rendererEvents.failedToPlay.name, ['failed-to-play']);\n                }\n\n                that._logger.info('[%s] Successfully started playing stream after auto muting. User may manually unmute with user triggered action.', that._streamId);\n\n                that._namedEvents.fire(streamEnums.rendererEvents.autoMuted.name, ['retry-play-muted']);\n            });\n        });\n\n        this._disposables.add(this._streamTelemetry.recordTimeToFirstFrame(elementToAttachTo));\n        this._disposables.add(this._streamTelemetry.recordRebuffering(elementToAttachTo));\n        this._disposables.add(this._streamTelemetry.recordVideoResolutionChanges(this, elementToAttachTo));\n        this._disposables.add(this._streamTelemetry.recordVideoPlayingAndPausing(elementToAttachTo));\n\n        if (this._options.receiveAudio === false) {\n            elementToAttachTo.muted = true;\n        }\n\n        _.addEventListener(elementToAttachTo, 'stalled', this._onStalling, false);\n        _.addEventListener(elementToAttachTo, 'pause', this._onStalling, false);\n        _.addEventListener(elementToAttachTo, 'suspend', this._onStalling, false);\n        _.addEventListener(elementToAttachTo, 'ended', this._onEnded, false);\n\n        if (!this._options.capabilities.includes('audio-only')) {\n            this._dimensionsChangedMonitor.start(this, elementToAttachTo);\n        }\n\n        return elementToAttachTo;\n    };\n\n    PhenixRealTimeRenderer.prototype.stop = function(reason) {\n        this._dimensionsChangedMonitor.stop();\n\n        this._disposables.dispose();\n\n        if (this._element) {\n            _.removeEventListener(this._element, 'stalled', this._onStalling, false);\n            _.removeEventListener(this._element, 'pause', this._onStalling, false);\n            _.removeEventListener(this._element, 'suspend', this._onStalling, false);\n            _.removeEventListener(this._element, 'ended', this._onEnded, false);\n\n            if (_.isFunction(this._element.pause)) {\n                this._element.pause();\n            }\n\n            if (this._browser.browser === 'Edge') {\n                this._element.src = '';\n            }\n\n            if (this._element.src) {\n                if (this._browser.browser === 'IE') {\n                    this._element.src = null;\n                } else {\n                    this._element.src = '';\n                }\n            }\n\n            if (this._element.srcObject) {\n                this._element.srcObject = null;\n            }\n\n            this._element = null;\n        }\n\n        this._logger.info('[%s] Phenix real-time renderer has been destroyed', this._streamId);\n\n        this._namedEvents.fire(streamEnums.rendererEvents.ended.name, [reason]);\n    };\n\n    PhenixRealTimeRenderer.prototype.getStats = function() {\n        if (!this._element) {\n            return {\n                width: 0,\n                height: 0,\n                currentTime: 0.0,\n                lag: 0.0,\n                networkState: streamEnums.networkStates.networkNoSource.id\n            };\n        }\n\n        var trueCurrentTime = (_.now() - this._options.originStartTime) / 1000;\n        var lag = this._options.networkLag / 1000; // Check RTC stats instead\n\n        return {\n            width: this._element.videoWidth || this._element.width,\n            height: this._element.videoHeight || this._element.height,\n            currentTime: trueCurrentTime,\n            lag: lag,\n            networkState: this._element.networkState\n        };\n    };\n\n    PhenixRealTimeRenderer.prototype.setDataQualityChangedCallback = function(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this.dataQualityChangedCallback = callback;\n    };\n\n    PhenixRealTimeRenderer.prototype.addVideoDisplayDimensionsChangedCallback = function(callback, options) {\n        return this._dimensionsChangedMonitor.addVideoDisplayDimensionsChangedCallback(callback, options);\n    };\n\n    function stalling(event) {\n        var isLastBackgroundingRecent = (_.now() - this._lastBackgroundingTimestamp) < listenForPauseChangeAfterForegroundInterval;\n\n        if (event.type === 'pause' && isLastBackgroundingRecent) {\n            this._wasPlaying = true;\n        }\n\n        this._lastStalledTimestamp = _.now();\n\n        this._logger.info('[%s] Loading Phenix Real-Time stream player stalling caused by [%s] event.', this._streamId, event.type);\n    }\n\n    function ended() {\n        this._logger.info('[%s] Phenix Real-Time stream ended.', this._streamId);\n    }\n\n    function checkIfWasPlayingWhenGoingToBackground() {\n        if (!this._element) {\n            return;\n        }\n\n        var playing = false;\n        var isLastStallingRecent = _.now() - this._lastStalledTimestamp < listenForPauseChangeAfterForegroundInterval;\n\n        if (_.isBoolean(this._element.playing)) {\n            playing = this._element.playing;\n        } else if (_.isBoolean(this._element.paused)) {\n            playing = !this._element.paused;\n        }\n\n        if (!playing && isLastStallingRecent) {\n            playing = true;\n        }\n\n        this._wasPlaying = playing;\n        this._lastBackgroundingTimestamp = _.now();\n    }\n\n    function resumeWhenEnteringForgeround() {\n        if (!this._element) {\n            return;\n        }\n\n        var that = this;\n\n        this._lastBackgroundingTimestamp = 0;\n        this._lastStalledTimestamp = 0;\n\n        if (!this._wasPlaying) {\n            this._logger.info('[%s] Entering foreground with paused renderer [%s]', this._streamId, this._browser.browser);\n\n            return;\n        }\n\n        this._logger.info('[%s] Resume playing after entering foreground [%s]', this._streamId, this._browser.browser);\n\n        if (this._browser.browser === 'Safari' && FeatureDetector.isIOS()) {\n            // 2020-08-19 Observed on iOS Safari/13\n            var pausing = function pausing() {\n                that._logger.info('Renderer was paused after entering foreground');\n                that._namedEvents.fire(streamEnums.rendererEvents.failedToPlay.name, ['paused-by-background']);\n            };\n\n            _.addEventListener(that._element, 'pause', pausing);\n\n            var timeoutId = setTimeout(function() {\n                _.removeEventListener(that._element, 'pause', pausing);\n            }, listenForPauseChangeAfterForegroundInterval);\n\n            this._disposables.add(new disposable.Disposable(function() {\n                clearTimeout(timeoutId);\n            }));\n\n            // Dispatch to avoid: \"NotAllowedError: The request is not allowed by the user agent or the platform in the current context\"\n            setTimeout(function() {\n                // The first video.play() typically fails with a context error.\n                // Try once so the start logic can properly handle auto muting.\n                that._element.play().catch(function(e) {\n                    that._logger.info('[%s] Unable to resume playback after entering foreground', that._streamId, e);\n                    that._element.src = '';\n\n                    that._logger.info('[%s] (Re)starting renderer', that._streamId);\n                    that.start(that._element);\n                });\n            }, restartRendererDelay);\n        }\n    }\n\n    return PhenixRealTimeRenderer;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    './Room'\n], function(_, assert, observable, Room) {\n    'use strict';\n\n    function ImmutableRoom(roomService, id, alias, name, description, type, members, bridgeId, pin) {\n        this.init(roomService, id, alias, name, description, type, members, bridgeId, pin);\n    }\n\n    ImmutableRoom.prototype.init = function init(roomService, id, alias, name, description, type, members, bridgeId, pin) {\n        this._room = new Room(roomService, id, alias, name, description, type, members, bridgeId, pin);\n\n        makeArrayOrObjectObservablesImmutable(this._room, [roomService]);\n    };\n\n    ImmutableRoom.prototype.getRoomId = function getImmutableRoomId() {\n        return this._room.getRoomId();\n    };\n\n    ImmutableRoom.prototype.getObservableAlias = function getObservableAlias() {\n        return this._room.getObservableAlias();\n    };\n\n    ImmutableRoom.prototype.getObservableName = function getObservableName() {\n        return this._room.getObservableName();\n    };\n\n    ImmutableRoom.prototype.getObservableDescription = function getObservableDescription() {\n        return this._room.getObservableDescription();\n    };\n\n    ImmutableRoom.prototype.getObservableType = function getObservableType() {\n        return this._room.getObservableType();\n    };\n\n    ImmutableRoom.prototype.getObservableMembers = function getObservableMembers() {\n        return this._room.getObservableMembers();\n    };\n\n    ImmutableRoom.prototype.getObservableBridgeId = function getObservableBridgeId() {\n        return this._room.getObservableBridgeId();\n    };\n\n    ImmutableRoom.prototype.getObservablePin = function getObservablePin() {\n        return this._room.getObservablePin();\n    };\n\n    ImmutableRoom.prototype.toString = function toString() {\n        return this._room.toString();\n    };\n\n    ImmutableRoom.prototype.toJson = function toJson() {\n        return this._room.toJson();\n    };\n\n    ImmutableRoom.prototype.commitChanges = throwImmutableError;\n    ImmutableRoom.prototype.reload = throwImmutableError;\n    ImmutableRoom.prototype._update = throwImmutableError;\n    ImmutableRoom.prototype._addMembers = throwImmutableError;\n    ImmutableRoom.prototype._removeMembers = throwImmutableError;\n    ImmutableRoom.prototype._updateMembers = throwImmutableError;\n\n    function throwImmutableError() {\n        throw new Error('ImmutableRoom is Immutable');\n    }\n\n    function throwImmutableSubscribeError() {\n        throw new Error('Unable to subscribe to Immutable [ImmutableRoom]');\n    }\n\n    function makeArrayOrObjectObservablesImmutable(collection, exclude) {\n        if (_.isArray(collection)) {\n            _.forEach(collection, function(value) {\n                wrapObservableAndAnyObservableProperties(value, exclude);\n            });\n        } else if (_.isObject(collection)) {\n            _.forOwn(collection, function(value) {\n                if (_.includes(exclude, value)) {\n                    return;\n                }\n\n                wrapObservableAndAnyObservableProperties(value, exclude);\n            });\n        }\n    }\n\n    function wrapObservableAndAnyObservableProperties(value, exclude) {\n        wrapObservable(value, exclude);\n        makeArrayOrObjectObservablesImmutable(value, exclude);\n    }\n\n    function wrapObservable(value, exclude) {\n        if (value instanceof observable.Observable || value instanceof observable.ObservableArray) {\n            value.setValue = throwImmutableError;\n            value.subscribe = throwImmutableSubscribeError;\n\n            var observableValue = value.getValue();\n\n            makeArrayOrObjectObservablesImmutable(observableValue, exclude);\n        }\n    }\n\n    return ImmutableRoom;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-disposable',\n    './ChatService'\n], function(_, assert, observable, disposable, ChatService) {\n    'use strict';\n\n    var defaultBatchSize = 0;\n    var maxCachedQueueSize = 100;\n\n    function RoomChatService(roomService) {\n        assert.isObject(roomService, 'roomService');\n        assert.isObject(roomService._pcast, 'roomService._pcast');\n\n        this._roomService = roomService;\n\n        this._chatMessages = new observable.ObservableArray([]);\n        this._lastChatMessage = new observable.Observable(null);\n        this._disposables = new disposable.DisposableList();\n        this._chatRoomId = null;\n\n        this.setPCast(roomService._pcast);\n    }\n\n    RoomChatService.prototype.setPCast = function setPCast(pcast) {\n        assert.isObject(pcast, 'pcast');\n        assert.isFunction(pcast.getLogger, 'pcast.getLogger');\n\n        this._pcast = pcast;\n        this._logger = pcast.getLogger();\n\n        if (this._chatService) {\n            this._chatService.setPCast(pcast);\n        } else {\n            this._chatService = new ChatService(pcast);\n        }\n    };\n\n    RoomChatService.prototype.getBatchSize = function getBatchSize() {\n        return this._batchSize;\n    };\n\n    RoomChatService.prototype.start = function start(batchSize) {\n        this._batchSize = batchSize || defaultBatchSize;\n        this._chatService.start();\n\n        setupSubscriptions.call(this);\n        setupMessageSubscription.call(this);\n    };\n\n    RoomChatService.prototype.stop = function stop() {\n        this._chatService.stop();\n\n        disposeOfMessageSubscription.call(this);\n\n        if (this._disposables) {\n            this._disposables.dispose();\n        }\n    };\n\n    RoomChatService.prototype.getObservableChatMessages = function getObservableChatMessages() {\n        return this._chatMessages;\n    };\n\n    RoomChatService.prototype.getObservableLastChatMessage = function getObservableLastChatMessage() {\n        return this._lastChatMessage;\n    };\n\n    RoomChatService.prototype.getObservableChatEnabled = function getObservableChatEnabled() {\n        return this._chatService.getObservableChatEnabled();\n    };\n\n    RoomChatService.prototype.canSendMessage = function canSendMessage() {\n        return this._chatService.canSendMessage();\n    };\n\n    RoomChatService.prototype.sendMessageToRoom = function sendMessageToRoom(message, callback) {\n        var room = this._roomService.getObservableActiveRoom().getValue();\n\n        if (!room) {\n            return callback(new Error('Not in room'), null);\n        }\n\n        var roomId = room.getRoomId();\n        var self = this._roomService._self.getValue();\n\n        if (!self) {\n            return callback(new Error('No record for oneself'), null);\n        }\n\n        var screenName = self.getObservableScreenName().getValue();\n        var role = self.getObservableRole().getValue();\n        var lastUpdate = self.getLastUpdate();\n\n        this._chatService.sendMessageToRoom(roomId, screenName, role, lastUpdate, message, callback);\n    };\n\n    RoomChatService.prototype.getMessages = function getMessages(batchSize, afterMessageId, beforeMessageId, callback) {\n        var room = this._roomService.getObservableActiveRoom().getValue();\n        var roomId = room.getRoomId();\n\n        return this._chatService.getMessages(roomId, batchSize, afterMessageId, beforeMessageId, callback);\n    };\n\n    RoomChatService.prototype.toString = function toString() {\n        return 'RoomChatService';\n    };\n\n    function onRoomChange(room) {\n        if (room && this._chatRoomId === room.getRoomId()) {\n            return;\n        }\n\n        disposeOfMessageSubscription.call(this);\n\n        if (room) {\n            setupMessageSubscription.call(this);\n        }\n    }\n\n    function setupSubscriptions() {\n        var roomSubscription = this._roomService.getObservableActiveRoom().subscribe(_.bind(onRoomChange, this));\n\n        this._disposables.add(roomSubscription);\n    }\n\n    function setupMessageSubscription() {\n        disposeOfMessageSubscription.call(this);\n\n        this._roomChatSubscription = subscribeAndLoadMessages.call(this, this._batchSize);\n    }\n\n    function disposeOfMessageSubscription() {\n        if (this._roomChatSubscription && this._roomChatSubscription.dispose) {\n            this._roomChatSubscription.dispose();\n        }\n    }\n\n    function subscribeAndLoadMessages(batchSize) {\n        var room = this._roomService.getObservableActiveRoom().getValue();\n        var roomId = room.getRoomId();\n\n        this._chatRoomId = roomId;\n\n        var that = this;\n\n        this._chatMessages.setValue([]);\n\n        return this._chatService.subscribeAndLoadMessages(roomId, batchSize, function onReceiveMessages(error, response) {\n            if (error) {\n                throw error;\n            }\n\n            if (response.status !== 'ok') {\n                throw new Error('Unable to subscribe to room chat. Status [' + response.status + ']');\n            }\n\n            var messages = that._chatMessages.getValue();\n\n            _.forEach(response.chatMessages, function addMessage(message) {\n                var insertIdx = messages.length;\n\n                // Find its position in the history\n                while (insertIdx > 0 && message.messageId < _.get(messages, [insertIdx - 1, 'messageId'])) {\n                    insertIdx--;\n                }\n\n                if (insertIdx === 0 && messages.length > 0) {\n                    that._logger.info('[%] Ignoring message [%s]/[%s] prior to current chat history to prevent gaps.',\n                        roomId, message.messageId, message.timestamp);\n\n                    return;\n                }\n\n                if (insertIdx > 0 && _.get(messages, [insertIdx - 1, 'messageId']) === message.messageId) {\n                    that._logger.info('[%] Ignoring duplicate message [%s]/[%s]',\n                        roomId, message.messageId, message.timestamp);\n\n                    return;\n                }\n\n                messages.splice(insertIdx, 0, message);\n\n                that._lastChatMessage.setValue(message);\n            });\n\n            if (messages.length > maxCachedQueueSize) {\n                messages.splice(0, messages.length - maxCachedQueueSize);\n            }\n\n            that._chatMessages.setValue(messages);\n        });\n    }\n\n    return RoomChatService;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-disposable',\n    '../authentication/AuthenticationService'\n], function(_, assert, observable, disposable, AuthenticationService) {\n    'use strict';\n\n    function ChatService(pcast) {\n        assert.isObject(pcast, 'pcast');\n        assert.isFunction(pcast.getLogger, 'pcast.getLogger');\n        assert.isFunction(pcast.getProtocol, 'pcast.getProtocol');\n\n        this._pcast = pcast;\n        this._logger = pcast.getLogger();\n        this._protocol = pcast.getProtocol();\n        this._enabled = new observable.Observable(false);\n\n        assert.isObject(this._logger, 'this._logger');\n        assert.isObject(this._protocol, 'this._protocol');\n\n        this._authenticationService = new AuthenticationService(pcast);\n    }\n\n    ChatService.prototype.setPCast = function setPCast(pcast) {\n        assert.isObject(pcast, 'pcast');\n        assert.isFunction(pcast.getLogger, 'pcast.getLogger');\n        assert.isFunction(pcast.getProtocol, 'pcast.getProtocol');\n\n        this._pcast = pcast;\n        this._logger = pcast.getLogger();\n        this._protocol = pcast.getProtocol();\n\n        this._authenticationService.setPCast(pcast);\n    };\n\n    ChatService.prototype.start = function start() {\n        if (this._enabled.getValue()) {\n            return;\n        }\n\n        this._disposables = new disposable.DisposableList();\n        this._roomMessagesListeners = {};\n\n        this._enabled.setValue(true);\n        setupSubscriptions.call(this);\n\n        var disposeOfConversationHandler = this._protocol.onEvent('chat.RoomConversationEvent', _.bind(onRoomConversationEvent, this));\n\n        this._disposables.add(disposeOfConversationHandler);\n    };\n\n    ChatService.prototype.stop = function stop() {\n        if (!this._enabled.getValue()) {\n            return;\n        }\n\n        this._enabled.setValue(false);\n\n        if (this._disposables) {\n            this._disposables.dispose();\n        }\n    };\n\n    ChatService.prototype.getObservableChatEnabled = function getObservableChatEnabled() {\n        return this._enabled;\n    };\n\n    ChatService.prototype.canSendMessage = function canSendMessage() {\n        return this._authenticationService.checkAuthorized();\n    };\n\n    ChatService.prototype.sendMessageToRoom = function sendMessageToRoom(roomId, screenName, role, lastUpdate, message, callback) {\n        sendMessageRequest.call(this, roomId, screenName, role, lastUpdate, message, callback);\n    };\n\n    ChatService.prototype.subscribeAndLoadMessages = function subscribeAndLoadMessages(roomId, batchSize, onReceiveMessages) {\n        var disposeOfListener = setupChatListener.call(this, roomId, onReceiveMessages);\n\n        subscribeToRoomConversationRequest.call(this, roomId, batchSize);\n\n        return disposeOfListener;\n    };\n\n    ChatService.prototype.getMessages = function getMessages(roomId, batchSize, afterMessageId, beforeMessageId, onReceiveMessages) {\n        getMessagesRequest.call(this, roomId, batchSize, afterMessageId, beforeMessageId, onReceiveMessages);\n    };\n\n    ChatService.prototype.toString = function toString() {\n        return 'ChatService';\n    };\n\n    function setupSubscriptions() {\n        var pcastStatusSubscription = this._authenticationService.getObservableStatus().subscribe(_.bind(onStatusChange, this));\n\n        this._disposables.add(pcastStatusSubscription);\n    }\n\n    function setupChatListener(roomId, onReceiveMessages) {\n        var that = this;\n\n        this._roomMessagesListeners[roomId] = onReceiveMessages;\n\n        var disposeOfHandler = new disposable.Disposable(function() {\n            if (that._roomMessagesListeners[roomId] === onReceiveMessages) {\n                delete that._roomMessagesListeners[roomId];\n            }\n        });\n\n        this._disposables.add(disposeOfHandler);\n\n        return disposeOfHandler;\n    }\n\n    function onRoomConversationEvent(event) {\n        assert.isObject(event, 'event');\n        assert.isStringNotEmpty(event.roomId, 'event.roomId');\n        assert.isStringNotEmpty(event.eventType, 'event.eventType');\n        assert.isArray(event.chatMessages, 'event.chatMessages');\n\n        switch (event.eventType) {\n        case 'Message':\n            this._logger.debug('[%s] Room messages [%s]', event.roomId, event.chatMessages);\n\n            var listener = this._roomMessagesListeners[event.roomId];\n\n            convertTimeFromLongInChatMessages(event.chatMessages);\n\n            if (listener) {\n                listener(null, {\n                    status: 'ok',\n                    chatMessages: event.chatMessages\n                });\n            }\n\n            break;\n        default:\n            this._logger.warn('Unsupported room conversation event [%s]', event.eventType);\n        }\n    }\n\n    function onStatusChange(status) { // eslint-disable-line no-unused-vars\n        // Only reason to redo subscriptions is if sessionId changes, which infers status changed\n    }\n\n    function getMessagesRequest(roomId, batchSize, afterMessageId, beforeMessageId, callback) {\n        assert.isStringNotEmpty(roomId, 'roomId');\n        assert.isFunction(callback, 'callback');\n\n        if (!beforeMessageId || !afterMessageId) {\n            assert.isNumber(batchSize, 'batchSize');\n        }\n\n        if (beforeMessageId) {\n            assert.isStringNotEmpty(beforeMessageId, 'beforeMessageId');\n        }\n\n        if (afterMessageId) {\n            assert.isStringNotEmpty(afterMessageId, 'afterMessageId');\n        }\n\n        assertEnabled.call(this);\n        this._authenticationService.assertAuthorized();\n\n        var sessionId = this._authenticationService.getPCastSessionId();\n\n        this._logger.info('Get messages from room [%s] conversation with batch size of [%s], after [%s], and before [%s]', roomId, batchSize, afterMessageId, beforeMessageId);\n\n        var that = this;\n\n        this._protocol.getMessages(sessionId, roomId, batchSize, afterMessageId, beforeMessageId,\n            function(error, response) {\n                if (error) {\n                    that._logger.error('Get messages from room conversation failed with error [%s]', error);\n\n                    return callback(error, null);\n                }\n\n                var result = {status: response.status};\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('Get messages from room conversation failed with status [%s]', response.status);\n\n                    return callback(null, result);\n                }\n\n                result.chatMessages = response.chatMessages;\n\n                convertTimeFromLongInChatMessages(result.chatMessages);\n\n                callback(null, result);\n            }\n        );\n    }\n\n    function subscribeToRoomConversationRequest(roomId, batchSize) {\n        assert.isStringNotEmpty(roomId, 'roomId');\n        assert.isNumber(batchSize, 'batchSize');\n\n        assertEnabled.call(this);\n        this._authenticationService.assertAuthorized();\n\n        var sessionId = this._authenticationService.getPCastSessionId();\n\n        this._logger.info('Subscribe to room [%s] conversation with batch size of [%s]', roomId, batchSize);\n\n        var that = this;\n\n        this._protocol.subscribeToRoomConversation(sessionId, roomId, batchSize, function(error, response) {\n            var onReceiveMessages = that._roomMessagesListeners[roomId];\n\n            if (!onReceiveMessages) {\n                return that._logger.warn('No subscription callback set for room [%s]', roomId);\n            }\n\n            if (error) {\n                that._logger.error('Subscribe to room conversation failed with error [%s]', error);\n\n                return onReceiveMessages(error, null);\n            }\n\n            var result = {status: response.status};\n\n            if (response.status !== 'ok') {\n                delete that._roomMessagesListeners[roomId];\n\n                that._logger.warn('Subscribe to room conversation failed with status [%s]', response.status);\n\n                return onReceiveMessages(null, result);\n            }\n\n            result.chatMessages = response.chatMessages;\n\n            convertTimeFromLongInChatMessages(result.chatMessages);\n\n            onReceiveMessages(null, result);\n        });\n    }\n\n    function sendMessageRequest(roomId, screenName, role, lastUpdate, message, callback) {\n        assert.isStringNotEmpty(roomId, 'roomId');\n        assert.isStringNotEmpty(screenName, 'screenName');\n        assert.isStringNotEmpty(role, 'role');\n        assert.isNumber(lastUpdate, 'lastUpdate');\n        assert.isStringNotEmpty(message, 'message');\n        assert.isFunction(callback, 'callback');\n\n        assertEnabled.call(this);\n        this._authenticationService.assertAuthorized();\n\n        var sessionId = this._authenticationService.getPCastSessionId();\n\n        var chatMessage = {\n            messageId: '',\n            timestamp: 0,\n            from: {\n                sessionId: sessionId,\n                screenName: screenName,\n                role: role,\n                lastUpdate: lastUpdate\n            },\n            message: message\n        };\n\n        this._logger.info('Send message to room [%s] from [%s]', roomId, screenName);\n\n        var that = this;\n\n        return this._protocol.sendMessageToRoom(roomId, chatMessage, function(error, response) {\n            if (error) {\n                that._logger.error('Send message to room failed with error [%s]', error);\n\n                return callback(error, null);\n            }\n\n            var result = {status: response.status};\n\n            if (response.status !== 'ok') {\n                that._logger.warn('Send message to room failed with status [%s]', response.status);\n            }\n\n            callback(null, result);\n        });\n    }\n\n    function assertEnabled() {\n        if (!this._enabled.getValue()) {\n            throw new Error('ChatService not Enabled. Please start before performing actions.');\n        }\n    }\n\n    function convertTimeFromLongInChatMessages(chatMessages) {\n        _.forEach(chatMessages, function(chatMessage) {\n            convertTimeFromLongInChatMessage(chatMessage);\n        });\n    }\n\n    function convertTimeFromLongInChatMessage(chatMessage) {\n        if (chatMessage.timestamp) {\n            chatMessage.timestamp = _.utc(chatMessage.timestamp);\n        }\n\n        if (chatMessage.from) {\n            chatMessage.from.lastUpdate = _.utc(chatMessage.from.lastUpdate);\n        }\n    }\n\n    return ChatService;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n], function() {\n    'use strict';\n\n    var shakaEnums = {\n        errorSeverity: {\n            recoverable: {\n                id: 1,\n                name: 'RECOVERABLE'\n            },\n            critical: {\n                id: 2,\n                name: 'CRITICAL'\n            }\n        }\n    };\n\n    return shakaEnums;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-disposable',\n    './RoomExpress',\n    '../room/ChannelService',\n    '../room/Channel',\n    './MemberSelector',\n    '../room/Stream',\n    '../room/room.json',\n    '../room/member.json',\n    '../room/stream.json'\n], function(_, assert, observable, disposable, RoomExpress, ChannelService, Channel, MemberSelector, Stream, roomEnums, memberEnums, streamEnums) {\n    'use strict';\n\n    var defaultOptions = {\n        reconnectOptions: {\n            maxOfflineTime: 24 * 60 * 60 * 1000, // 1 day\n            maxReconnectFrequency: 60 * 1000 // 60 seconds\n        }\n    };\n    var backoffIntervalOnCapacity = 5000;\n    var backoffIntervalOnRetry = 100;\n\n    function ChannelExpress(options) {\n        assert.isObject(options, 'options');\n\n        if (options.roomExpress) {\n            assert.isObject(options.roomExpress, 'options.roomExpress');\n        }\n\n        this._channelExpressOptions = _.assign(_.clone(defaultOptions), options);\n\n        this._roomExpress = options.roomExpress || new RoomExpress(this._channelExpressOptions);\n        this._shouldDisposeOfRoomExpress = !options.roomExpress;\n        this._logger = this._roomExpress.getPCastExpress().getPCast().getLogger();\n    }\n\n    ChannelExpress.prototype.dispose = function dispose() {\n        if (this._pcastStatusSubscription) {\n            this._pcastStatusSubscription.dispose();\n            this._pcastStatusSubscription = null;\n        }\n\n        if (this._shouldDisposeOfRoomExpress) {\n            this._roomExpress.dispose();\n        }\n\n        this._logger.info('Disposed channel express instance');\n    };\n\n    ChannelExpress.prototype.getRoomExpress = function getRoomExpress() {\n        return this._roomExpress;\n    };\n\n    ChannelExpress.prototype.getPCastExpress = function getPCastExpress() {\n        return this._roomExpress.getPCastExpress();\n    };\n\n    ChannelExpress.prototype.createChannel = function createChannel(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isObject(options.channel, 'options.channel');\n\n        var createRoomOptions = _.assign({room: options.channel}, options);\n\n        createRoomOptions.room.type = roomEnums.types.channel.name;\n\n        delete createRoomOptions.channel;\n\n        this._roomExpress.createRoom(createRoomOptions, _.bind(wrapResponseWithChannelPrefixesAndContinue, null, callback));\n    };\n\n    ChannelExpress.prototype.joinChannel = function joinChannel(options, joinChannelCallback, subscriberCallback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(joinChannelCallback, 'joinChannelCallback');\n        assert.isFunction(subscriberCallback, 'subscriberCallback');\n\n        if (options.videoElement) {\n            assert.isObject(options.videoElement, 'options.videoElement');\n        }\n\n        if (options.streamSelectionStrategy) {\n            assert.isStringNotEmpty(options.streamSelectionStrategy, 'options.streamSelectionStrategy');\n        }\n\n        var channelOptions = _.assign({\n            type: roomEnums.types.channel.name,\n            role: memberEnums.roles.audience.name\n        }, options);\n        var failureCountForBanningAMember = _.get(options, ['failureCountForBanningAMember']);\n        var banMemberOnCapacityFailureCount = _.get(options, ['banMemberOnCapacityFailureCount']);\n        var memberSelector = new MemberSelector(options.streamSelectionStrategy, this._logger, {\n            failureCountForBanningAMember: failureCountForBanningAMember,\n            banMemberOnCapacityFailureCount: banMemberOnCapacityFailureCount\n        });\n        var lastMediaStream;\n        var lastStreamId;\n        var memberSubscriptions = [];\n        var channelRoomService;\n        var channelId = '';\n        var that = this;\n        var memberSelectionBackoffTimeoutId = null;\n\n        if (channelOptions.channelId) {\n            channelOptions.roomId = channelOptions.channelId;\n        }\n\n        delete channelOptions.channelId;\n\n        var resetListeners = function() {\n            if (memberSelectionBackoffTimeoutId !== null) {\n                that._logger.info('[%s] Clearing member selection backoff interval', channelId);\n\n                clearTimeout(memberSelectionBackoffTimeoutId);\n                memberSelectionBackoffTimeoutId = null;\n            }\n\n            for (var i = 0; i < memberSubscriptions.length; i++) {\n                memberSubscriptions[i].dispose();\n            }\n\n            memberSubscriptions = [];\n        };\n\n        var joinRoomCallback = function(error, response) {\n            var channelResponse = !response || _.assign({}, response);\n\n            if (that._pcastStatusSubscription) {\n                that._pcastStatusSubscription.dispose();\n                that._pcastStatusSubscription = null;\n            }\n\n            if (response && response.roomService) {\n                var leaveRoom = response.roomService.leaveRoom;\n                var room = response.roomService.getObservableActiveRoom().getValue();\n\n                channelRoomService = response.roomService;\n                channelId = room ? room.getRoomId() : '';\n\n                that._logger.info('Joined channel [%s] with [%s] selection strategy', channelId, memberSelector.getStrategy());\n\n                channelResponse.roomService.leaveRoom = function(callback) {\n                    if (lastMediaStream) {\n                        lastMediaStream.stop('leave-channel');\n                    }\n\n                    resetListeners();\n\n                    leaveRoom(callback);\n                };\n            }\n\n            wrapResponseWithChannelPrefixesAndContinue(joinChannelCallback, error, channelResponse);\n        };\n\n        that._roomExpress.joinRoom(channelOptions, joinRoomCallback, function membersChangedCallback(members, streamErrorStatus) {\n            resetListeners();\n\n            that._logger.info('[%s] Members changed with status [%s]. Channel has [%s] active members.', channelId, streamErrorStatus, members.length);\n\n            var evaluateMembers = function() {\n                var presenters = _.filter(members, function(member) {\n                    return member.getObservableRole().getValue() === memberEnums.roles.presenter.name && member.getObservableStreams().getValue().length > 0;\n                });\n                var selectedPresenter = memberSelector.getNext(presenters);\n                var presenterStream = selectedPresenter ? selectedPresenter.getObservableStreams().getValue()[0] : null;\n                var streamId = presenterStream ? presenterStream.getPCastStreamId() : '';\n\n                if (!presenterStream) {\n                    if (presenters.length === 0) {\n                        memberSelector.reset();\n                        lastMediaStream = null;\n                        lastStreamId = null;\n\n                        return subscriberCallback(null, {status: 'no-stream-playing'});\n                    }\n\n                    if (streamErrorStatus) {\n                        that._logger.info('Unable to find a new presenter to replace stream [%s] that ended in channel [%s] with status [%s] and [%s] black-listed members',\n                            lastStreamId, channelId, streamErrorStatus, memberSelector.getNumberOfMembersWithFailures());\n\n                        if (lastStreamId && lastMediaStream && lastMediaStream.isActive()) {\n                            lastMediaStream.stop('presenter-failure');\n                        }\n\n                        return subscriberCallback(null, {status: streamErrorStatus || 'unable-to-recover'});\n                    }\n\n                    return subscriberCallback(null, {status: 'no-stream-playing'});\n                }\n\n                if (!streamId) {\n                    that._logger.info('Channel [%s] presenter has no stream', channelId);\n\n                    return subscriberCallback(null, {status: 'no-stream-playing'});\n                }\n\n                if (lastStreamId && lastMediaStream) {\n                    if (streamId === lastStreamId) {\n                        if (!streamErrorStatus) {\n                            // New member detected but staying on previous stream\n                            return;\n                        }\n\n                        that._logger.info('[%s] Stream [%s] ended with status [%s], retrying',\n                            channelId, lastStreamId, streamErrorStatus);\n                        lastMediaStream.stop('same-presenter-failure');\n                    } else {\n                        that._logger.info('[%s] Stream [%s] ended with status [%s], failing over to stream [%s]',\n                            channelId, lastStreamId, streamErrorStatus, streamId);\n                        lastMediaStream.stop('change-presenter');\n                    }\n                }\n\n                var tryNextMember = function(streamStatus) {\n                    if (memberSelectionBackoffTimeoutId !== null) {\n                        that._logger.warn('[%s] Clearing backoff interval after triggering of another unexpected failure [%s]', channelId, streamStatus);\n\n                        clearTimeout(memberSelectionBackoffTimeoutId);\n                        memberSelectionBackoffTimeoutId = null;\n                    }\n\n                    return memberSelectionBackoffTimeoutId = setTimeout(function() {\n                        memberSelectionBackoffTimeoutId = null;\n\n                        var room = channelRoomService ? channelRoomService.getObservableActiveRoom().getValue() : null;\n\n                        if (!room) {\n                            return; // No longer in room.\n                        }\n\n                        var members = room.getObservableMembers().getValue();\n\n                        return membersChangedCallback(members, streamStatus);\n                    }, streamStatus === 'capacity' ? backoffIntervalOnCapacity : backoffIntervalOnRetry);\n                };\n\n                function monitorChannelSubscriber(mediaStreamId, error, response) {\n                    if (lastStreamId !== mediaStreamId) {\n                        that._logger.info('[%s] Ignore old channel subscriber monitor stream [%s]. Active stream is [%s]', channelId, mediaStreamId, lastStreamId);\n\n                        return;\n                    }\n\n                    if (error) {\n                        return tryNextMember('unable-to-subscribe');\n                    }\n\n                    // Don't continue - Tell client\n                    if (response.reason === 'app-background') {\n                        return subscriberCallback(error, response);\n                    }\n\n                    if (response.retry && memberSelector.getStrategy() !== 'high-availability') {\n                        that._logger.info('Retrying to subscribe to channel [%s] after stream [%s] failed with reason [%s]',\n                            channelId, mediaStreamId, response.status);\n\n                        return response.retry();\n                    }\n\n                    var responseStatus = _.get(response, ['status'], '');\n\n                    if (responseStatus !== 'ok') {\n                        if (response.reason === 'custom' && response.description !== 'client-side-failure') {\n                            return subscriberCallback(error, response);\n                        }\n\n                        switch (responseStatus) {\n                        case 'ended':\n                        case 'origin-ended':\n                        case 'origin-stream-ended':\n                            memberSelector.markDead();\n\n                            break;\n                        default:\n                            memberSelector.markFailed({failedDueToCapacity: responseStatus === 'capacity'});\n\n                            break;\n                        }\n\n                        that._logger.info('[%s] Monitor subscriber reported status [%s]. Trying next member', mediaStreamId, responseStatus);\n\n                        return tryNextMember(responseStatus);\n                    }\n                }\n\n                var subscribeOptions = _.assign({}, {\n                    monitor: {\n                        callback: _.bind(monitorChannelSubscriber, this, streamId),\n                        options: {conditionCountForNotificationThreshold: 8}\n                    }\n                }, options);\n                var hadPreviousStreamReason = streamErrorStatus ? 'recovered-from-failure' : 'stream-override';\n                var successReason = lastStreamId ? hadPreviousStreamReason : 'stream-started';\n\n                lastStreamId = streamId;\n\n                var mediaStreamCallback = function mediaStreamCallback(mediaStreamId, error, response) {\n                    if (lastStreamId !== mediaStreamId) {\n                        that._logger.info('[%s] Ignore old media stream callback for stream [%s]. Active stream is [%s]', channelId, mediaStreamId, lastStreamId);\n\n                        return;\n                    }\n\n                    var responseStatus = _.get(response, ['status'], '');\n\n                    if (responseStatus === 'ok') {\n                        response.reason = successReason;\n                    }\n\n                    if (error || (responseStatus !== 'ok')) {\n                        that._logger.info('[%s] Issue with stream [%s]. Trying next member', mediaStreamId, responseStatus, error);\n\n                        switch (responseStatus) {\n                        case 'unauthorized':\n                        case 'not-found':\n                        case 'ended':\n                        case 'origin-not-found':\n                        case 'origin-ended':\n                        case 'origin-stream-ended':\n                        case 'unsupported-features':\n                            memberSelector.markDead();\n\n                            break;\n                        default:\n                            memberSelector.markFailed({failedDueToCapacity: responseStatus === 'capacity'});\n\n                            break;\n                        }\n\n                        return tryNextMember(responseStatus);\n                    }\n\n                    if (response && response.mediaStream) {\n                        lastMediaStream = response.mediaStream;\n                    } else {\n                        lastStreamId = null;\n                        lastMediaStream = null;\n                    }\n\n                    subscriberCallback(error, response);\n                };\n\n                that._roomExpress.subscribeToMemberStream(presenterStream, subscribeOptions, _.bind(mediaStreamCallback, this, streamId));\n            };\n\n            for (var i = 0; i < members.length; i++) {\n                memberSubscriptions.push(members[i].getObservableScreenName().subscribe(evaluateMembers));\n                memberSubscriptions.push(members[i].getObservableRole().subscribe(evaluateMembers));\n                memberSubscriptions.push(members[i].getObservableStreams().subscribe(evaluateMembers));\n            }\n\n            evaluateMembers();\n        });\n    };\n\n    ChannelExpress.prototype.publishToChannel = function publishToChannel(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        if (options.publishToken && options.capabilities) {\n            this._logger.warn('[%s] Trying to publish with both `publishToken` and `capabilities` set. Only use one of the two options');\n\n            callback(new Error('Publishing with both `publishToken` and `capabilities` defined'), {status: 'conflicting-options'});\n\n            return;\n        }\n\n        if (options.streamToken && options.capabilities) {\n            this._logger.warn('[%s] Trying to publish with both `streamToken` and `capabilities` set. Only use one of the two options');\n\n            callback(new Error('Publishing with both `streamToken` and `capabilities` defined'), {status: 'conflicting-options'});\n\n            return;\n        }\n\n        var channelOptions = _.assign({\n            memberRole: memberEnums.roles.presenter.name,\n            streamType: streamEnums.types.presentation.name,\n            room: options.channel\n        }, options);\n\n        channelOptions.room.type = roomEnums.types.channel.name;\n\n        delete channelOptions.channel;\n\n        this._roomExpress.publishToRoom(channelOptions, _.bind(wrapResponseWithChannelPrefixesAndContinue, null, callback));\n    };\n\n    ChannelExpress.prototype.publishScreenToChannel = function publishScreenToChannel(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        var channelOptions = _.assign({\n            memberRole: memberEnums.roles.presenter.name,\n            streamType: streamEnums.types.presentation.name,\n            room: options.channel\n        }, options);\n\n        channelOptions.room.type = roomEnums.types.channel.name;\n\n        delete channelOptions.channel;\n\n        this._roomExpress.publishScreenToRoom(channelOptions, _.bind(wrapResponseWithChannelPrefixesAndContinue, null, callback));\n    };\n\n    function wrapResponseWithChannelPrefixesAndContinue(callback, error, response) {\n        if (response && _.hasIndexOrKey(response, 'roomService')) {\n            response.channelService = response.roomService ? new ChannelService(response.roomService) : null;\n\n            delete response.roomService;\n        }\n\n        if (response && _.hasIndexOrKey(response, 'room')) {\n            response.channel = response.room ? new Channel(response.room) : null;\n\n            delete response.room;\n        }\n\n        callback(error, response);\n    }\n\n    return ChannelExpress;\n});","/**\n * Copyright 2022 Phenix Real Time Solutions, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    './Channel'\n], function(_, assert, Channel) {\n    'use strict';\n\n    function ChannelService(roomService) {\n        assert.isObject(roomService, 'roomService');\n\n        this._roomService = roomService;\n    }\n\n    ChannelService.prototype.start = function start() {\n        return this._roomService.start.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.getChannelInfo = function getChannelInfo(channelId, alias, callback) {\n        if (channelId) {\n            assert.isStringNotEmpty(channelId, 'channelId');\n        } else {\n            assert.isStringNotEmpty(alias, 'alias');\n        }\n\n        assert.isFunction(callback, 'callback');\n\n        return this._roomService.getRoomInfo(channelId, alias, _.bind(wrapResponseWithChannelPrefixesAndContinue, null, callback));\n    };\n\n    ChannelService.prototype.createChannel = function createChannel(channel, callback) {\n        assert.isObject(channel, 'channel');\n        assert.isStringNotEmpty(channel.name, 'channel.name');\n        assert.isStringNotEmpty(channel.type, 'channel.type');\n        assert.isString(channel.description, 'channel.description');\n        assert.isFunction(callback, 'callback');\n\n        return this._roomService.createRoom(channel, _.bind(wrapResponseWithChannelPrefixesAndContinue, null, callback));\n    };\n\n    ChannelService.prototype.enterChannel = function enterChannel(channelId, alias, callback) {\n        if (channelId) {\n            assert.isStringNotEmpty(channelId, 'roomId');\n        } else {\n            assert.isStringNotEmpty(alias, 'alias');\n        }\n\n        assert.isFunction(callback, 'callback');\n\n        return this._roomService.enterRoom(channelId, alias, _.bind(wrapResponseWithChannelPrefixesAndContinue, null, callback));\n    };\n\n    ChannelService.prototype.leaveChannel = function leaveChannel() {\n        return this._roomService.leaveRoom.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.getChatService = function getChatService() {\n        return this._roomService.getChatService.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.getSelf = function getSelf() {\n        return this._roomService.getSelf.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.getObservableActiveChannel = function getObservableActiveChannel() {\n        return this._roomService.getObservableActiveRoom.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.updateSelf = function updateSelf() {\n        return this._roomService.updateSelf.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.updateMember = function updateMember() {\n        return this._roomService.updateMember.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.updateChannel = function updateChannel() {\n        return this._roomService.updateRoom.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.revertChannelChanges = function revertChannelChanges() {\n        return this._roomService.revertRoomChanges.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.revertMemberChanges = function revertMemberChanges() {\n        return this._roomService.revertMemberChanges.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.isInChannel = function isInChannel() {\n        return this._roomService.isInRoom.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.toString = function toString() {\n        return 'ChannelService';\n    };\n\n    ChannelService.prototype.stop = function stop() {\n        return this._roomService.stop.apply(this._roomService, arguments);\n    };\n\n    function wrapResponseWithChannelPrefixesAndContinue(callback, error, response) {\n        if (response && response.room) {\n            response.channel = new Channel(response.room);\n\n            delete response.room;\n        }\n\n        return callback(error, response);\n    }\n\n    return ChannelService;\n});"],"sourceRoot":""}